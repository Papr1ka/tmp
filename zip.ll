; ModuleID = 'zip.c'
source_filename = "zip.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-redhat-linux-gnu"

%struct.anon = type { i32, ptr }
%struct.mz_stream_s = type { ptr, i32, i64, ptr, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i64, i64 }
%struct.tdefl_compressor = type { ptr, ptr, i32, [2 x i32], i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, ptr, i64, i64, [33025 x i8], [3 x [288 x i16]], [3 x [288 x i16]], [3 x [288 x i8]], [65536 x i8], [32768 x i16], [32768 x i16], [85196 x i8] }
%struct.inflate_state = type { %struct.tinfl_decompressor_tag, i32, i32, i32, i32, i32, [32768 x i8], i32 }
%struct.tinfl_decompressor_tag = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i64, i64, [3 x [1024 x i16]], [576 x i16], [64 x i16], [38 x i16], [288 x i8], [32 x i8], [19 x i8], [4 x i8], [457 x i8] }
%struct.tdefl_output_buffer = type { i64, i64, ptr, i32 }
%struct.mz_zip_archive = type { i64, i64, i32, i32, i32, i32, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mz_zip_internal_state_tag = type { %struct.mz_zip_array, %struct.mz_zip_array, %struct.mz_zip_array, i32, i32, i32, ptr, i64, ptr, i64, i64 }
%struct.mz_zip_array = type { ptr, i64, i64, i32 }
%struct.mz_zip_archive_file_stat = type { i32, i64, i16, i16, i16, i16, i32, i64, i64, i16, i32, i64, i32, i32, i32, i32, [512 x i8], [512 x i8], i64 }
%struct.mz_zip_reader_extract_iter_state = type { ptr, i32, i32, i64, i64, i64, i64, i64, i64, %struct.mz_zip_archive_file_stat, ptr, ptr, i64, %struct.tinfl_decompressor_tag, i32 }
%struct.utimbuf = type { i64, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, ptr }
%struct.mz_zip_writer_add_state = type { ptr, i64, i64 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.zip_t = type { %struct.mz_zip_archive, i32, %struct.zip_entry_t }
%struct.zip_entry_t = type { i64, ptr, i64, i64, i32, i64, [30 x i8], i64, i16, %struct.mz_zip_writer_add_state, %struct.tdefl_compressor, i32, i64 }
%struct.zip_entry_mark_t = type { i64, i32, i64, i64 }
%struct.tdefl_sym_freq = type { i16, i16 }

@mz_crc32.s_crc_table = internal unnamed_addr constant [256 x i32] [i32 0, i32 1996959894, i32 -301047508, i32 -1727442502, i32 124634137, i32 1886057615, i32 -379345611, i32 -1637575261, i32 249268274, i32 2044508324, i32 -522852066, i32 -1747789432, i32 162941995, i32 2125561021, i32 -407360249, i32 -1866523247, i32 498536548, i32 1789927666, i32 -205950648, i32 -2067906082, i32 450548861, i32 1843258603, i32 -187386543, i32 -2083289657, i32 325883990, i32 1684777152, i32 -43845254, i32 -1973040660, i32 335633487, i32 1661365465, i32 -99664541, i32 -1928851979, i32 997073096, i32 1281953886, i32 -715111964, i32 -1570279054, i32 1006888145, i32 1258607687, i32 -770865667, i32 -1526024853, i32 901097722, i32 1119000684, i32 -608450090, i32 -1396901568, i32 853044451, i32 1172266101, i32 -589951537, i32 -1412350631, i32 651767980, i32 1373503546, i32 -925412992, i32 -1076862698, i32 565507253, i32 1454621731, i32 -809855591, i32 -1195530993, i32 671266974, i32 1594198024, i32 -972236366, i32 -1324619484, i32 795835527, i32 1483230225, i32 -1050600021, i32 -1234817731, i32 1994146192, i32 31158534, i32 -1731059524, i32 -271249366, i32 1907459465, i32 112637215, i32 -1614814043, i32 -390540237, i32 2013776290, i32 251722036, i32 -1777751922, i32 -519137256, i32 2137656763, i32 141376813, i32 -1855689577, i32 -429695999, i32 1802195444, i32 476864866, i32 -2056965928, i32 -228458418, i32 1812370925, i32 453092731, i32 -2113342271, i32 -183516073, i32 1706088902, i32 314042704, i32 -1950435094, i32 -54949764, i32 1658658271, i32 366619977, i32 -1932296973, i32 -69972891, i32 1303535960, i32 984961486, i32 -1547960204, i32 -725929758, i32 1256170817, i32 1037604311, i32 -1529756563, i32 -740887301, i32 1131014506, i32 879679996, i32 -1385723834, i32 -631195440, i32 1141124467, i32 855842277, i32 -1442165665, i32 -586318647, i32 1342533948, i32 654459306, i32 -1106571248, i32 -921952122, i32 1466479909, i32 544179635, i32 -1184443383, i32 -832445281, i32 1591671054, i32 702138776, i32 -1328506846, i32 -942167884, i32 1504918807, i32 783551873, i32 -1212326853, i32 -1061524307, i32 -306674912, i32 -1698712650, i32 62317068, i32 1957810842, i32 -355121351, i32 -1647151185, i32 81470997, i32 1943803523, i32 -480048366, i32 -1805370492, i32 225274430, i32 2053790376, i32 -468791541, i32 -1828061283, i32 167816743, i32 2097651377, i32 -267414716, i32 -2029476910, i32 503444072, i32 1762050814, i32 -144550051, i32 -2140837941, i32 426522225, i32 1852507879, i32 -19653770, i32 -1982649376, i32 282753626, i32 1742555852, i32 -105259153, i32 -1900089351, i32 397917763, i32 1622183637, i32 -690576408, i32 -1580100738, i32 953729732, i32 1340076626, i32 -776247311, i32 -1497606297, i32 1068828381, i32 1219638859, i32 -670225446, i32 -1358292148, i32 906185462, i32 1090812512, i32 -547295293, i32 -1469587627, i32 829329135, i32 1181335161, i32 -882789492, i32 -1134132454, i32 628085408, i32 1382605366, i32 -871598187, i32 -1156888829, i32 570562233, i32 1426400815, i32 -977650754, i32 -1296233688, i32 733239954, i32 1555261956, i32 -1026031705, i32 -1244606671, i32 752459403, i32 1541320221, i32 -1687895376, i32 -328994266, i32 1969922972, i32 40735498, i32 -1677130071, i32 -351390145, i32 1913087877, i32 83908371, i32 -1782625662, i32 -491226604, i32 2075208622, i32 213261112, i32 -1831694693, i32 -438977011, i32 2094854071, i32 198958881, i32 -2032938284, i32 -237706686, i32 1759359992, i32 534414190, i32 -2118248755, i32 -155638181, i32 1873836001, i32 414664567, i32 -2012718362, i32 -15766928, i32 1711684554, i32 285281116, i32 -1889165569, i32 -127750551, i32 1634467795, i32 376229701, i32 -1609899400, i32 -686959890, i32 1308918612, i32 956543938, i32 -1486412191, i32 -799009033, i32 1231636301, i32 1047427035, i32 -1362007478, i32 -640263460, i32 1088359270, i32 936918000, i32 -1447252397, i32 -558129467, i32 1202900863, i32 817233897, i32 -1111625188, i32 -893730166, i32 1404277552, i32 615818150, i32 -1160759803, i32 -841546093, i32 1423857449, i32 601450431, i32 -1285129682, i32 -1000256840, i32 1567103746, i32 711928724, i32 -1274298825, i32 -1022587231, i32 1510334235, i32 755167117], align 16
@.str = private unnamed_addr constant [7 x i8] c"11.0.2\00", align 1
@mz_error.s_error_descs = internal unnamed_addr constant [10 x %struct.anon] [%struct.anon { i32 0, ptr @.str.1 }, %struct.anon { i32 1, ptr @.str.2 }, %struct.anon { i32 2, ptr @.str.3 }, %struct.anon { i32 -1, ptr @.str.4 }, %struct.anon { i32 -2, ptr @.str.5 }, %struct.anon { i32 -3, ptr @.str.6 }, %struct.anon { i32 -4, ptr @.str.7 }, %struct.anon { i32 -5, ptr @.str.8 }, %struct.anon { i32 -6, ptr @.str.9 }, %struct.anon { i32 -10000, ptr @.str.10 }], align 16
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"stream end\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"need dictionary\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"file error\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"stream error\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"data error\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"buf error\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"version error\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"parameter error\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"d->m_pPut_buf_func\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"./miniz.h\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_buffer = private unnamed_addr constant [90 x i8] c"tdefl_status tdefl_compress_buffer(tdefl_compressor *, const void *, size_t, tdefl_flush)\00", align 1
@tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes = internal unnamed_addr constant [11 x i32] [i32 0, i32 1, i32 6, i32 32, i32 16, i32 32, i32 128, i32 256, i32 512, i32 768, i32 1500], align 16
@tdefl_write_image_to_png_file_in_memory_ex.chans = internal unnamed_addr constant [5 x i8] c"\00\00\04\02\06", align 1
@__const.tdefl_write_image_to_png_file_in_memory_ex.pnghdr = private unnamed_addr constant [41 x i8] c"\89PNG\0D\0A\1A\0A\00\00\00\0DIHDR\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00IDAT", align 16
@.str.13 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00IEND\AEB`\82\00", align 1
@tinfl_decompress.s_length_base = internal unnamed_addr constant [31 x i16] [i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 13, i16 15, i16 17, i16 19, i16 23, i16 27, i16 31, i16 35, i16 43, i16 51, i16 59, i16 67, i16 83, i16 99, i16 115, i16 131, i16 163, i16 195, i16 227, i16 258, i16 0, i16 0], align 16
@tinfl_decompress.s_length_extra = internal unnamed_addr constant [31 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\02\02\02\02\03\03\03\03\04\04\04\04\05\05\05\05\00\00\00", align 16
@tinfl_decompress.s_dist_base = internal unnamed_addr constant [32 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 7, i16 9, i16 13, i16 17, i16 25, i16 33, i16 49, i16 65, i16 97, i16 129, i16 193, i16 257, i16 385, i16 513, i16 769, i16 1025, i16 1537, i16 2049, i16 3073, i16 4097, i16 6145, i16 8193, i16 12289, i16 16385, i16 24577, i16 0, i16 0], align 16
@tinfl_decompress.s_dist_extra = internal unnamed_addr constant [32 x i8] c"\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\00\00", align 16
@tinfl_decompress.s_min_table_sizes = internal unnamed_addr constant [3 x i16] [i16 257, i16 1, i16 4], align 2
@.str.14 = private unnamed_addr constant [4 x i8] c"\05\05\04\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"\02\03\07\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"\03\03\0B\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"!num_bits\00", align 1
@__PRETTY_FUNCTION__.tinfl_decompress = private unnamed_addr constant [131 x i8] c"tinfl_status tinfl_decompress(tinfl_decompressor *, const mz_uint8 *, size_t *, mz_uint8 *, mz_uint8 *, size_t *, const mz_uint32)\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"r+b\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"w+b\00", align 1
@.str.22 = private unnamed_addr constant [66 x i8] c"(local_dir_header_ofs & (pZip->m_file_offset_alignment - 1)) == 0\00", align 1
@__PRETTY_FUNCTION__.mz_zip_writer_add_mem_ex_v2 = private unnamed_addr constant [202 x i8] c"mz_bool mz_zip_writer_add_mem_ex_v2(mz_zip_archive *, const char *, const void *, size_t, const void *, mz_uint16, mz_uint, mz_uint64, mz_uint32, time_t *, const char *, mz_uint, const char *, mz_uint)\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"bit_flags & MZ_ZIP_LDH_BIT_FLAG_HAS_LOCATOR\00", align 1
@.str.24 = private unnamed_addr constant [66 x i8] c"(cur_archive_file_ofs & (pZip->m_file_offset_alignment - 1)) == 0\00", align 1
@__PRETTY_FUNCTION__.mz_zip_writer_add_read_buf_callback = private unnamed_addr constant [221 x i8] c"mz_bool mz_zip_writer_add_read_buf_callback(mz_zip_archive *, const char *, mz_file_read_func, void *, mz_uint64, const time_t *, const void *, mz_uint16, mz_uint, mz_uint32, const char *, mz_uint, const char *, mz_uint)\00", align 1
@__PRETTY_FUNCTION__.mz_zip_writer_add_from_zip_reader = private unnamed_addr constant [87 x i8] c"mz_bool mz_zip_writer_add_from_zip_reader(mz_zip_archive *, mz_zip_archive *, mz_uint)\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"no error\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"undefined error\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"too many files\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"file too large\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"unsupported method\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"unsupported encryption\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"unsupported feature\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"failed finding central directory\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"not a ZIP archive\00", align 1
@.str.34 = private unnamed_addr constant [39 x i8] c"invalid header or archive is corrupted\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"unsupported multidisk archive\00", align 1
@.str.36 = private unnamed_addr constant [45 x i8] c"decompression failed or archive is corrupted\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"compression failed\00", align 1
@.str.38 = private unnamed_addr constant [29 x i8] c"unexpected decompressed size\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"CRC-32 check failed\00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c"unsupported central directory size\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"allocation failed\00", align 1
@.str.42 = private unnamed_addr constant [17 x i8] c"file open failed\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"file create failed\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"file write failed\00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c"file read failed\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"file close failed\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"file seek failed\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"file stat failed\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"invalid parameter\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"invalid filename\00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"buffer too small\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"file not found\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"archive is too large\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"validation failed\00", align 1
@.str.56 = private unnamed_addr constant [22 x i8] c"write callback failed\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"total errors\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@zip_errlist = internal unnamed_addr constant [33 x ptr] [ptr null, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101], align 16
@.str.59 = private unnamed_addr constant [35 x i8] c"d->m_lookahead_size >= len_to_move\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_normal = private unnamed_addr constant [50 x i8] c"mz_bool tdefl_compress_normal(tdefl_compressor *)\00", align 1
@.str.60 = private unnamed_addr constant [37 x i8] c"max_match_len <= TDEFL_MAX_MATCH_LEN\00", align 1
@__PRETTY_FUNCTION__.tdefl_find_match = private unnamed_addr constant [91 x i8] c"void tdefl_find_match(tdefl_compressor *, mz_uint, mz_uint, mz_uint, mz_uint *, mz_uint *)\00", align 1
@.str.61 = private unnamed_addr constant [94 x i8] c"(match_len >= TDEFL_MIN_MATCH_LEN) && (match_dist >= 1) && (match_dist <= TDEFL_LZ_DICT_SIZE)\00", align 1
@__PRETTY_FUNCTION__.tdefl_record_match = private unnamed_addr constant [62 x i8] c"void tdefl_record_match(tdefl_compressor *, mz_uint, mz_uint)\00", align 1
@s_tdefl_small_dist_sym = internal unnamed_addr constant [512 x i8] calign 16
@s_tdefl_large_dist_sym = internal unnamed_addr constant [128 x i8] c"\00\00\12\13\14\14\15\15\16\16\16\16\17\17\17\17\18\18\18\18\18\18\18\18\19\19\19\19\19\19\19\19\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D", align 16
@s_tdefl_len_sym = internal unnamed_addr constant [256 x i16] [i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 265, i16 266, i16 266, i16 267, i16 267, i16 268, i16 268, i16 269, i16 269, i16 269, i16 269, i16 270, i16 270, i16 270, i16 270, i16 271, i16 271, i16 271, i16 271, i16 272, i16 272, i16 272, i16 272, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 285], align 16
@.str.62 = private unnamed_addr constant [29 x i8] c"!d->m_output_flush_remaining\00", align 1
@__PRETTY_FUNCTION__.tdefl_flush_block = private unnamed_addr constant [47 x i8] c"int tdefl_flush_block(tdefl_compressor *, int)\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"bits <= ((1U << len) - 1U)\00", align 1
@.str.64 = private unnamed_addr constant [40 x i8] c"d->m_pOutput_buf < d->m_pOutput_buf_end\00", align 1
@__PRETTY_FUNCTION__.tdefl_start_dynamic_block = private unnamed_addr constant [51 x i8] c"void tdefl_start_dynamic_block(tdefl_compressor *)\00", align 1
@s_tdefl_packed_code_size_syms_swizzle = internal unnamed_addr constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@.str.65 = private unnamed_addr constant [32 x i8] c"code < TDEFL_MAX_HUFF_SYMBOLS_2\00", align 1
@.str.66 = private unnamed_addr constant [52 x i8] c"d->m_huff_code_sizes[0][s_tdefl_len_sym[match_len]]\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_lz_codes = private unnamed_addr constant [52 x i8] c"mz_bool tdefl_compress_lz_codes(tdefl_compressor *)\00", align 1
@mz_bitmasks = internal unnamed_addr constant [17 x i32] [i32 0, i32 1, i32 3, i32 7, i32 15, i32 31, i32 63, i32 127, i32 255, i32 511, i32 1023, i32 2047, i32 4095, i32 8191, i32 16383, i32 32767, i32 65535], align 16
@s_tdefl_len_extra = internal unnamed_addr constant [256 x i8] calign 16
@s_tdefl_small_dist_extra = internal unnamed_addr constant [512 x i8] calign 16
@s_tdefl_large_dist_extra = internal unnamed_addr constant [128 x i8] c"\00\00\08\08\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D", align 16
@.str.67 = private unnamed_addr constant [29 x i8] c"d->m_huff_code_sizes[1][sym]\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"d->m_huff_code_sizes[0][lit]\00", align 1
@.str.69 = private unnamed_addr constant [23 x i8] c"pArray->m_element_size\00", align 1
@__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity = private unnamed_addr constant [88 x i8] c"mz_bool mz_zip_array_ensure_capacity(mz_zip_archive *, mz_zip_array *, size_t, mz_uint)\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"not initialized\00\00", align 1
@.str.71 = private unnamed_addr constant [20 x i8] c"invalid entry name\00\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"entry not found\00\00", align 1
@.str.73 = private unnamed_addr constant [18 x i8] c"invalid zip mode\00\00", align 1
@.str.74 = private unnamed_addr constant [27 x i8] c"invalid compression level\00\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"no zip 64 support\00\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"memset error\00\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"cannot write data to entry\00\00", align 1
@.str.78 = private unnamed_addr constant [36 x i8] c"cannot initialize tdefl compressor\00\00", align 1
@.str.79 = private unnamed_addr constant [15 x i8] c"invalid index\00\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"header not found\00\00", align 1
@.str.81 = private unnamed_addr constant [27 x i8] c"cannot flush tdefl buffer\00\00", align 1
@.str.82 = private unnamed_addr constant [27 x i8] c"cannot write entry header\00\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"cannot create entry header\00\00", align 1
@.str.84 = private unnamed_addr constant [29 x i8] c"cannot write to central dir\00\00", align 1
@.str.85 = private unnamed_addr constant [18 x i8] c"cannot open file\00\00", align 1
@.str.86 = private unnamed_addr constant [20 x i8] c"invalid entry type\00\00", align 1
@.str.87 = private unnamed_addr constant [44 x i8] c"extracting data using no memory allocation\00\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c"file not found\00\00", align 1
@.str.89 = private unnamed_addr constant [15 x i8] c"no permission\00\00", align 1
@.str.90 = private unnamed_addr constant [15 x i8] c"out of memory\00\00", align 1
@.str.91 = private unnamed_addr constant [26 x i8] c"invalid zip archive name\00\00", align 1
@.str.92 = private unnamed_addr constant [16 x i8] c"make dir error\00\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"symlink error\00\00", align 1
@.str.94 = private unnamed_addr constant [21 x i8] c"close archive error\00\00", align 1
@.str.95 = private unnamed_addr constant [25 x i8] c"capacity size too small\00\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"fseek error\00\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"fread error\00\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"fwrite error\00\00", align 1
@.str.99 = private unnamed_addr constant [26 x i8] c"cannot initialize reader\00\00", align 1
@.str.100 = private unnamed_addr constant [26 x i8] c"cannot initialize writer\00\00", align 1
@.str.101 = private unnamed_addr constant [38 x i8] c"cannot initialize writer from reader\00\00", align 1
@.str.102 = private unnamed_addr constant [70 x i8] c"(zip->entry.header_offset & (pzip->m_file_offset_alignment - 1)) == 0\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"zip.c\00", align 1
@__PRETTY_FUNCTION__._zip_entry_open = private unnamed_addr constant [55 x i8] c"int _zip_entry_open(struct zip_t *, const char *, int)\00", align 1
@switch.table.mz_zip_get_error_string = private unnamed_addr constant [33 x ptr] [ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57], align 8

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @mz_adler32(i64 noundef %0, ptr noundef readonly %1, i64 noundef %2) local_unnamed_addr #0 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %151, label %5

5:                                                ; preds = %3
  %6 = lshr i64 %0, 16
  %7 = trunc i64 %6 to i32
  %8 = trunc i64 %0 to i32
  %9 = and i32 %8, 65535
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %145, label %11

11:                                               ; preds = %5
  %12 = urem i64 %2, 5552
  br label %13

13:                                               ; preds = %11, %137
  %14 = phi i64 [ 5552, %137 ], [ %12, %11 ]
  %15 = phi i32 [ %142, %137 ], [ %7, %11 ]
  %16 = phi i32 [ %141, %137 ], [ %9, %11 ]
  %17 = phi i64 [ %143, %137 ], [ %2, %11 ]
  %18 = phi ptr [ %138, %137 ], [ %1, %11 ]
  %19 = icmp ugt i64 %14, 7
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = trunc i64 %14 to i32
  br label %58

22:                                               ; preds = %58, %13
  %23 = phi ptr [ %18, %13 ], [ %103, %58 ]
  %24 = phi i32 [ 0, %13 ], [ %102, %58 ]
  %25 = phi i32 [ %16, %13 ], [ %100, %58 ]
  %26 = phi i32 [ %15, %13 ], [ %101, %58 ]
  %27 = zext i32 %24 to i64
  %28 = icmp ugt i64 %14, %27
  br i1 %28, label %29, label %137

29:                                               ; preds = %22
  %30 = sub nsw i64 %14, %27
  %31 = sub nsw i64 %14, %27
  %32 = xor i64 %27, -1
  %33 = add nsw i64 %14, %32
  %34 = and i64 %31, 3
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %50, label %36

36:                                               ; preds = %29, %36
  %37 = phi i64 [ %47, %36 ], [ %27, %29 ]
  %38 = phi i32 [ %46, %36 ], [ %26, %29 ]
  %39 = phi i32 [ %45, %36 ], [ %25, %29 ]
  %40 = phi ptr [ %42, %36 ], [ %23, %29 ]
  %41 = phi i64 [ %48, %36 ], [ 0, %29 ]
  %42 = getelementptr inbounds i8, ptr %40, i64 1
  %43 = load i8, ptr %40, align 1, !tbaa !3
  %44 = zext i8 %43 to i32
  %45 = add i32 %39, %44
  %46 = add i32 %45, %38
  %47 = add nuw nsw i64 %37, 1
  %48 = add i64 %41, 1
  %49 = icmp eq i64 %48, %34
  br i1 %49, label %50, label %36, !llvm.loop !6

50:                                               ; preds = %36, %29
  %51 = phi i32 [ undef, %29 ], [ %45, %36 ]
  %52 = phi i32 [ undef, %29 ], [ %46, %36 ]
  %53 = phi i64 [ %27, %29 ], [ %47, %36 ]
  %54 = phi i32 [ %26, %29 ], [ %46, %36 ]
  %55 = phi i32 [ %25, %29 ], [ %45, %36 ]
  %56 = phi ptr [ %23, %29 ], [ %42, %36 ]
  %57 = icmp ult i64 %33, 3
  br i1 %57, label %133, label %106

58:                                               ; preds = %20, %58
  %59 = phi i32 [ %101, %58 ], [ %15, %20 ]
  %60 = phi i32 [ %100, %58 ], [ %16, %20 ]
  %61 = phi i32 [ %102, %58 ], [ 0, %20 ]
  %62 = phi ptr [ %103, %58 ], [ %18, %20 ]
  %63 = load i8, ptr %62, align 1, !tbaa !3
  %64 = zext i8 %63 to i32
  %65 = add i32 %60, %64
  %66 = add i32 %65, %59
  %67 = getelementptr inbounds i8, ptr %62, i64 1
  %68 = load i8, ptr %67, align 1, !tbaa !3
  %69 = zext i8 %68 to i32
  %70 = add i32 %65, %69
  %71 = add i32 %66, %70
  %72 = getelementptr inbounds i8, ptr %62, i64 2
  %73 = load i8, ptr %72, align 1, !tbaa !3
  %74 = zext i8 %73 to i32
  %75 = add i32 %70, %74
  %76 = add i32 %71, %75
  %77 = getelementptr inbounds i8, ptr %62, i64 3
  %78 = load i8, ptr %77, align 1, !tbaa !3
  %79 = zext i8 %78 to i32
  %80 = add i32 %75, %79
  %81 = add i32 %76, %80
  %82 = getelementptr inbounds i8, ptr %62, i64 4
  %83 = load i8, ptr %82, align 1, !tbaa !3
  %84 = zext i8 %83 to i32
  %85 = add i32 %80, %84
  %86 = add i32 %81, %85
  %87 = getelementptr inbounds i8, ptr %62, i64 5
  %88 = load i8, ptr %87, align 1, !tbaa !3
  %89 = zext i8 %88 to i32
  %90 = add i32 %85, %89
  %91 = add i32 %86, %90
  %92 = getelementptr inbounds i8, ptr %62, i64 6
  %93 = load i8, ptr %92, align 1, !tbaa !3
  %94 = zext i8 %93 to i32
  %95 = add i32 %90, %94
  %96 = add i32 %91, %95
  %97 = getelementptr inbounds i8, ptr %62, i64 7
  %98 = load i8, ptr %97, align 1, !tbaa !3
  %99 = zext i8 %98 to i32
  %100 = add i32 %95, %99
  %101 = add i32 %96, %100
  %102 = add nuw i32 %61, 8
  %103 = getelementptr inbounds i8, ptr %62, i64 8
  %104 = or i32 %102, 7
  %105 = icmp ult i32 %104, %21
  br i1 %105, label %58, label %22, !llvm.loop !8

106:                                              ; preds = %50, %106
  %107 = phi i64 [ %131, %106 ], [ %53, %50 ]
  %108 = phi i32 [ %130, %106 ], [ %54, %50 ]
  %109 = phi i32 [ %129, %106 ], [ %55, %50 ]
  %110 = phi ptr [ %126, %106 ], [ %56, %50 ]
  %111 = getelementptr inbounds i8, ptr %110, i64 1
  %112 = load i8, ptr %110, align 1, !tbaa !3
  %113 = zext i8 %112 to i32
  %114 = add i32 %109, %113
  %115 = add i32 %114, %108
  %116 = getelementptr inbounds i8, ptr %110, i64 2
  %117 = load i8, ptr %111, align 1, !tbaa !3
  %118 = zext i8 %117 to i32
  %119 = add i32 %114, %118
  %120 = add i32 %119, %115
  %121 = getelementptr inbounds i8, ptr %110, i64 3
  %122 = load i8, ptr %116, align 1, !tbaa !3
  %123 = zext i8 %122 to i32
  %124 = add i32 %119, %123
  %125 = add i32 %124, %120
  %126 = getelementptr inbounds i8, ptr %110, i64 4
  %127 = load i8, ptr %121, align 1, !tbaa !3
  %128 = zext i8 %127 to i32
  %129 = add i32 %124, %128
  %130 = add i32 %129, %125
  %131 = add nuw nsw i64 %107, 4
  %132 = icmp eq i64 %131, %14
  br i1 %132, label %133, label %106, !llvm.loop !10

133:                                              ; preds = %106, %50
  %134 = phi i32 [ %51, %50 ], [ %129, %106 ]
  %135 = phi i32 [ %52, %50 ], [ %130, %106 ]
  %136 = getelementptr i8, ptr %23, i64 %30
  br label %137

137:                                              ; preds = %133, %22
  %138 = phi ptr [ %23, %22 ], [ %136, %133 ]
  %139 = phi i32 [ %25, %22 ], [ %134, %133 ]
  %140 = phi i32 [ %26, %22 ], [ %135, %133 ]
  %141 = urem i32 %139, 65521
  %142 = urem i32 %140, 65521
  %143 = sub i64 %17, %14
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %13, !llvm.loop !11

145:                                              ; preds = %137, %5
  %146 = phi i32 [ %9, %5 ], [ %141, %137 ]
  %147 = phi i32 [ %7, %5 ], [ %142, %137 ]
  %148 = shl i32 %147, 16
  %149 = or i32 %148, %146
  %150 = zext i32 %149 to i64
  br label %151

151:                                              ; preds = %3, %145
  %152 = phi i64 [ %150, %145 ], [ 1, %3 ]
  ret i64 %152
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @mz_crc32(i64 noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) local_unnamed_addr #0 {
  %4 = trunc i64 %0 to i32
  %5 = xor i32 %4, -1
  %6 = icmp ugt i64 %2, 3
  br i1 %6, label %32, label %7

7:                                                ; preds = %32, %3
  %8 = phi i64 [ %2, %3 ], [ %72, %32 ]
  %9 = phi i32 [ %5, %3 ], [ %70, %32 ]
  %10 = phi ptr [ %1, %3 ], [ %71, %32 ]
  %11 = icmp eq i64 %8, 0
  br i1 %11, label %98, label %12

12:                                               ; preds = %7
  %13 = and i64 %8, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = lshr i32 %9, 8
  %17 = load i8, ptr %10, align 1, !tbaa !3
  %18 = trunc i32 %9 to i8
  %19 = xor i8 %17, %18
  %20 = zext i8 %19 to i64
  %21 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !12
  %23 = xor i32 %22, %16
  %24 = getelementptr inbounds i8, ptr %10, i64 1
  %25 = add i64 %8, -1
  br label %26

26:                                               ; preds = %15, %12
  %27 = phi i32 [ undef, %12 ], [ %23, %15 ]
  %28 = phi ptr [ %10, %12 ], [ %24, %15 ]
  %29 = phi i32 [ %9, %12 ], [ %23, %15 ]
  %30 = phi i64 [ %8, %12 ], [ %25, %15 ]
  %31 = icmp eq i64 %8, 1
  br i1 %31, label %98, label %74

32:                                               ; preds = %3, %32
  %33 = phi ptr [ %71, %32 ], [ %1, %3 ]
  %34 = phi i32 [ %70, %32 ], [ %5, %3 ]
  %35 = phi i64 [ %72, %32 ], [ %2, %3 ]
  %36 = lshr i32 %34, 8
  %37 = load i8, ptr %33, align 1, !tbaa !3
  %38 = trunc i32 %34 to i8
  %39 = xor i8 %37, %38
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !12
  %43 = xor i32 %42, %36
  %44 = lshr i32 %43, 8
  %45 = getelementptr inbounds i8, ptr %33, i64 1
  %46 = load i8, ptr %45, align 1, !tbaa !3
  %47 = trunc i32 %43 to i8
  %48 = xor i8 %46, %47
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !12
  %52 = xor i32 %44, %51
  %53 = lshr i32 %52, 8
  %54 = getelementptr inbounds i8, ptr %33, i64 2
  %55 = load i8, ptr %54, align 1, !tbaa !3
  %56 = trunc i32 %52 to i8
  %57 = xor i8 %55, %56
  %58 = zext i8 %57 to i64
  %59 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !12
  %61 = xor i32 %53, %60
  %62 = lshr i32 %61, 8
  %63 = getelementptr inbounds i8, ptr %33, i64 3
  %64 = load i8, ptr %63, align 1, !tbaa !3
  %65 = trunc i32 %61 to i8
  %66 = xor i8 %64, %65
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %67
  %69 = load i32, ptr %68, align 4, !tbaa !12
  %70 = xor i32 %62, %69
  %71 = getelementptr inbounds i8, ptr %33, i64 4
  %72 = add i64 %35, -4
  %73 = icmp ugt i64 %72, 3
  br i1 %73, label %32, label %7, !llvm.loop !14

74:                                               ; preds = %26, %74
  %75 = phi ptr [ %95, %74 ], [ %28, %26 ]
  %76 = phi i32 [ %94, %74 ], [ %29, %26 ]
  %77 = phi i64 [ %96, %74 ], [ %30, %26 ]
  %78 = lshr i32 %76, 8
  %79 = load i8, ptr %75, align 1, !tbaa !3
  %80 = trunc i32 %76 to i8
  %81 = xor i8 %79, %80
  %82 = zext i8 %81 to i64
  %83 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %82
  %84 = load i32, ptr %83, align 4, !tbaa !12
  %85 = xor i32 %84, %78
  %86 = getelementptr inbounds i8, ptr %75, i64 1
  %87 = lshr i32 %85, 8
  %88 = load i8, ptr %86, align 1, !tbaa !3
  %89 = trunc i32 %85 to i8
  %90 = xor i8 %88, %89
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %91
  %93 = load i32, ptr %92, align 4, !tbaa !12
  %94 = xor i32 %93, %87
  %95 = getelementptr inbounds i8, ptr %75, i64 2
  %96 = add i64 %77, -2
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %74, !llvm.loop !15

98:                                               ; preds = %26, %74, %7
  %99 = phi i32 [ %9, %7 ], [ %27, %26 ], [ %94, %74 ]
  %100 = xor i32 %99, -1
  %101 = zext i32 %100 to i64
  ret i64 %101
}

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local void @mz_free(ptr nocapture noundef %0) local_unnamed_addr #2 {
  tail call void @free(ptr noundef %0) #38
  ret void
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare dso_local void @free(ptr allocptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn memory(inaccessiblemem: readwrite) uwtable
define dso_local noalias ptr @miniz_def_alloc_func(ptr nocapture readnone %0, i64 noundef %1, i64 noundef %2) #4 {
  %4 = mul i64 %2, %1
  %5 = tail call noalias ptr @malloc(i64 noundef %4) #39
  ret ptr %5
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare dso_local noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local void @miniz_def_free_func(ptr nocapture readnone %0, ptr nocapture noundef %1) #2 {
  tail call void @free(ptr noundef %1) #38
  ret void
}

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local noalias ptr @miniz_def_realloc_func(ptr nocapture readnone %0, ptr nocapture noundef %1, i64 noundef %2, i64 noundef %3) #2 {
  %5 = mul i64 %3, %2
  %6 = tail call ptr @realloc(ptr noundef %1, i64 noundef %5) #40
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite)
declare dso_local noalias noundef ptr @realloc(ptr allocptr nocapture noundef, i64 noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local nonnull ptr @mz_version() local_unnamed_addr #7 {
  ret ptr @.str
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_deflateInit(ptr noundef %0, i32 noundef %1) local_unnamed_addr #8 {
  %3 = tail call i32 @mz_deflateInit2(ptr noundef %0, i32 noundef %1, i32 noundef 8, i32 noundef 15, i32 noundef 9, i32 noundef 0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_deflateInit2(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #8 {
  %7 = icmp sgt i32 %1, -1
  %8 = tail call i32 @llvm.smin.i32(i32 %1, i32 10)
  %9 = select i1 %7, i32 %8, i32 6
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [11 x i32], ptr @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %10
  %12 = load i32, ptr %11, align 4, !tbaa !12
  %13 = icmp slt i32 %1, 4
  %14 = select i1 %13, i32 16384, i32 0
  %15 = or i32 %12, %14
  %16 = icmp sgt i32 %3, 0
  %17 = or i32 %15, 4096
  %18 = select i1 %16, i32 %17, i32 %15
  %19 = icmp eq i32 %1, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %6
  %21 = or i32 %18, 524288
  br label %31

22:                                               ; preds = %6
  switch i32 %5, label %31 [
    i32 1, label %23
    i32 2, label %25
    i32 4, label %27
    i32 3, label %29
  ]

23:                                               ; preds = %22
  %24 = or i32 %18, 131072
  br label %31

25:                                               ; preds = %22
  %26 = and i32 %18, -4096
  br label %31

27:                                               ; preds = %22
  %28 = or i32 %18, 262144
  br label %31

29:                                               ; preds = %22
  %30 = or i32 %18, 65536
  br label %31

31:                                               ; preds = %20, %22, %23, %25, %27, %29
  %32 = phi i32 [ %24, %23 ], [ %26, %25 ], [ %28, %27 ], [ %30, %29 ], [ %21, %20 ], [ %18, %22 ]
  %33 = or i32 %32, 8192
  %34 = icmp eq ptr %0, null
  br i1 %34, label %108, label %35

35:                                               ; preds = %31
  %36 = icmp ne i32 %2, 8
  %37 = add i32 %4, -10
  %38 = icmp ult i32 %37, -9
  %39 = or i1 %36, %38
  br i1 %39, label %108, label %40

40:                                               ; preds = %35
  switch i32 %3, label %108 [
    i32 15, label %41
    i32 -15, label %41
  ]

41:                                               ; preds = %40, %40
  %42 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 11
  store i32 0, ptr %42, align 8, !tbaa !16
  %43 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 12
  store i64 1, ptr %43, align 8, !tbaa !20
  %44 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 13
  store i64 0, ptr %44, align 8, !tbaa !21
  %45 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 2
  store i64 0, ptr %45, align 8, !tbaa !22
  %46 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 5
  %47 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %46, i8 0, i64 16, i1 false)
  %48 = load ptr, ptr %47, align 8, !tbaa !23
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %41
  store ptr @miniz_def_alloc_func, ptr %47, align 8, !tbaa !23
  br label %51

51:                                               ; preds = %50, %41
  %52 = phi ptr [ @miniz_def_alloc_func, %50 ], [ %48, %41 ]
  %53 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 9
  %54 = load ptr, ptr %53, align 8, !tbaa !24
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  store ptr @miniz_def_free_func, ptr %53, align 8, !tbaa !24
  br label %57

57:                                               ; preds = %56, %51
  %58 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 10
  %59 = load ptr, ptr %58, align 8, !tbaa !25
  %60 = tail call ptr %52(ptr noundef %59, i64 noundef 1, i64 noundef 319352) #38
  %61 = icmp eq ptr %60, null
  br i1 %61, label %108, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 7
  store ptr %60, ptr %63, align 8, !tbaa !26
  %64 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %60, i8 0, i64 16, i1 false)
  store i32 %33, ptr %64, align 8, !tbaa !27
  %65 = and i32 %32, 4095
  %66 = trunc i32 %65 to i16
  %67 = add nuw nsw i16 %66, 2
  %68 = udiv i16 %67, 3
  %69 = add nuw nsw i16 %68, 1
  %70 = zext i16 %69 to i32
  %71 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 3
  store i32 %70, ptr %71, align 4, !tbaa !12
  %72 = lshr i32 %32, 14
  %73 = and i32 %72, 1
  %74 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 4
  store i32 %73, ptr %74, align 4, !tbaa !29
  %75 = lshr i32 %65, 2
  %76 = trunc i32 %75 to i16
  %77 = add nuw nsw i16 %76, 2
  %78 = udiv i16 %77, 3
  %79 = add nuw nsw i16 %78, 1
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 3, i64 1
  store i32 %80, ptr %81, align 4, !tbaa !12
  %82 = and i32 %32, 32768
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %62
  %85 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 41
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(65536) %85, i8 0, i64 65536, i1 false)
  br label %86

86:                                               ; preds = %84, %62
  %87 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 14
  %88 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 21
  %89 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 39
  %90 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 39, i64 1
  %91 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %87, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %88, i8 0, i64 20, i1 false)
  store ptr %90, ptr %91, align 8, !tbaa !30
  %92 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 10
  store ptr %89, ptr %92, align 8, !tbaa !31
  store i8 0, ptr %89, align 1, !tbaa !3
  %93 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 13
  store i32 8, ptr %93, align 8, !tbaa !32
  %94 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 42
  %95 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 11
  store ptr %94, ptr %95, align 8, !tbaa !33
  %96 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 12
  store ptr %94, ptr %96, align 8, !tbaa !34
  %97 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 26
  store i32 0, ptr %97, align 4, !tbaa !35
  %98 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 20
  store i32 0, ptr %98, align 4, !tbaa !36
  %99 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 19
  store i32 0, ptr %99, align 8, !tbaa !37
  %100 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 18
  store i32 0, ptr %100, align 4, !tbaa !38
  %101 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 5
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, ptr %101, align 8, !tbaa !12
  %102 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 27
  %103 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 32
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %102, i8 0, i64 36, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %103, i8 0, i64 24, i1 false)
  br i1 %83, label %104, label %106

104:                                              ; preds = %86
  %105 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 35
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(33025) %105, i8 0, i64 33025, i1 false)
  br label %106

106:                                              ; preds = %86, %104
  %107 = getelementptr inbounds %struct.tdefl_compressor, ptr %60, i64 0, i32 36
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(640) %107, i8 0, i64 640, i1 false)
  br label %108

108:                                              ; preds = %57, %35, %40, %31, %106
  %109 = phi i32 [ 0, %106 ], [ -2, %31 ], [ -10000, %40 ], [ -10000, %35 ], [ -4, %57 ]
  ret i32 %109
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none) uwtable
define dso_local i32 @tdefl_create_comp_flags_from_zip_params(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 {
  %4 = icmp sgt i32 %0, -1
  %5 = tail call i32 @llvm.smin.i32(i32 %0, i32 10)
  %6 = select i1 %4, i32 %5, i32 6
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [11 x i32], ptr @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !12
  %10 = icmp slt i32 %0, 4
  %11 = select i1 %10, i32 16384, i32 0
  %12 = or i32 %9, %11
  %13 = icmp sgt i32 %1, 0
  %14 = or i32 %12, 4096
  %15 = select i1 %13, i32 %14, i32 %12
  %16 = icmp eq i32 %0, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = or i32 %15, 524288
  br label %28

19:                                               ; preds = %3
  switch i32 %2, label %28 [
    i32 1, label %20
    i32 2, label %22
    i32 4, label %24
    i32 3, label %26
  ]

20:                                               ; preds = %19
  %21 = or i32 %15, 131072
  br label %28

22:                                               ; preds = %19
  %23 = and i32 %15, -4096
  br label %28

24:                                               ; preds = %19
  %25 = or i32 %15, 262144
  br label %28

26:                                               ; preds = %19
  %27 = or i32 %15, 65536
  br label %28

28:                                               ; preds = %19, %20, %24, %26, %22, %17
  %29 = phi i32 [ %21, %20 ], [ %23, %22 ], [ %25, %24 ], [ %27, %26 ], [ %18, %17 ], [ %15, %19 ]
  ret i32 %29
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local i32 @tdefl_init(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #10 {
  store ptr %1, ptr %0, align 8, !tbaa !39
  %5 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 1
  store ptr %2, ptr %5, align 8, !tbaa !40
  %6 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 2
  store i32 %3, ptr %6, align 8, !tbaa !27
  %7 = and i32 %3, 4095
  %8 = trunc i32 %7 to i16
  %9 = add nuw nsw i16 %8, 2
  %10 = udiv i16 %9, 3
  %11 = add nuw nsw i16 %10, 1
  %12 = zext i16 %11 to i32
  %13 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 3
  store i32 %12, ptr %13, align 4, !tbaa !12
  %14 = lshr i32 %3, 14
  %15 = and i32 %14, 1
  %16 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 4
  store i32 %15, ptr %16, align 4, !tbaa !29
  %17 = lshr i32 %7, 2
  %18 = trunc i32 %17 to i16
  %19 = add nuw nsw i16 %18, 2
  %20 = udiv i16 %19, 3
  %21 = add nuw nsw i16 %20, 1
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 3, i64 1
  store i32 %22, ptr %23, align 4, !tbaa !12
  %24 = and i32 %3, 32768
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 41
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(65536) %27, i8 0, i64 65536, i1 false)
  br label %28

28:                                               ; preds = %26, %4
  %29 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 14
  %30 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 21
  %31 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 39
  %32 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 39, i64 1
  %33 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %29, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %30, i8 0, i64 20, i1 false)
  store ptr %32, ptr %33, align 8, !tbaa !30
  %34 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 10
  store ptr %31, ptr %34, align 8, !tbaa !31
  store i8 0, ptr %31, align 1, !tbaa !3
  %35 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 13
  store i32 8, ptr %35, align 8, !tbaa !32
  %36 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 42
  %37 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  store ptr %36, ptr %37, align 8, !tbaa !33
  %38 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  store ptr %36, ptr %38, align 8, !tbaa !34
  %39 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 26
  store i32 0, ptr %39, align 4, !tbaa !35
  %40 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 20
  store i32 0, ptr %40, align 4, !tbaa !36
  %41 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 19
  store i32 0, ptr %41, align 8, !tbaa !37
  %42 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 18
  store i32 0, ptr %42, align 4, !tbaa !38
  %43 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 5
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, ptr %43, align 8, !tbaa !12
  %44 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 27
  %45 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 32
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %44, i8 0, i64 36, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %45, i8 0, i64 24, i1 false)
  br i1 %25, label %46, label %48

46:                                               ; preds = %28
  %47 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(33025) %47, i8 0, i64 33025, i1 false)
  br label %48

48:                                               ; preds = %46, %28
  %49 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(640) %49, i8 0, i64 640, i1 false)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_deflateEnd(ptr noundef %0) local_unnamed_addr #8 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 7
  %5 = load ptr, ptr %4, align 8, !tbaa !26
  %6 = icmp eq ptr %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 9
  %9 = load ptr, ptr %8, align 8, !tbaa !24
  %10 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 10
  %11 = load ptr, ptr %10, align 8, !tbaa !25
  tail call void %9(ptr noundef %11, ptr noundef nonnull %5) #38
  store ptr null, ptr %4, align 8, !tbaa !26
  br label %12

12:                                               ; preds = %3, %7, %1
  %13 = phi i32 [ -2, %1 ], [ 0, %7 ], [ 0, %3 ]
  ret i32 %13
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @mz_deflateReset(ptr noundef %0) local_unnamed_addr #11 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %63, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 7
  %5 = load ptr, ptr %4, align 8, !tbaa !26
  %6 = icmp eq ptr %5, null
  br i1 %6, label %63, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 8
  %9 = load ptr, ptr %8, align 8, !tbaa !23
  %10 = icmp eq ptr %9, null
  br i1 %10, label %63, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 9
  %13 = load ptr, ptr %12, align 8, !tbaa !24
  %14 = icmp eq ptr %13, null
  br i1 %14, label %63, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 5
  store i64 0, ptr %16, align 8, !tbaa !41
  %17 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 2
  store i64 0, ptr %17, align 8, !tbaa !22
  %18 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 2
  %19 = load i32, ptr %18, align 8, !tbaa !27
  %20 = and i32 %19, 4095
  %21 = trunc i32 %20 to i16
  %22 = add nuw nsw i16 %21, 2
  %23 = udiv i16 %22, 3
  %24 = add nuw nsw i16 %23, 1
  %25 = zext i16 %24 to i32
  %26 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  store i32 %25, ptr %26, align 4, !tbaa !12
  %27 = lshr i32 %19, 14
  %28 = and i32 %27, 1
  %29 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 4
  store i32 %28, ptr %29, align 4, !tbaa !29
  %30 = lshr i32 %20, 2
  %31 = trunc i32 %30 to i16
  %32 = add nuw nsw i16 %31, 2
  %33 = udiv i16 %32, 3
  %34 = add nuw nsw i16 %33, 1
  %35 = zext i16 %34 to i32
  %36 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 3, i64 1
  store i32 %35, ptr %36, align 4, !tbaa !12
  %37 = and i32 %19, 32768
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %15
  %40 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 41
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(65536) %40, i8 0, i64 65536, i1 false)
  br label %41

41:                                               ; preds = %39, %15
  %42 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 14
  %43 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 21
  %44 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 39
  %45 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 39, i64 1
  %46 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %42, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %43, i8 0, i64 20, i1 false)
  store ptr %45, ptr %46, align 8, !tbaa !30
  %47 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 10
  store ptr %44, ptr %47, align 8, !tbaa !31
  store i8 0, ptr %44, align 1, !tbaa !3
  %48 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 13
  store i32 8, ptr %48, align 8, !tbaa !32
  %49 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 42
  %50 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 11
  store ptr %49, ptr %50, align 8, !tbaa !33
  %51 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 12
  store ptr %49, ptr %51, align 8, !tbaa !34
  %52 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 26
  store i32 0, ptr %52, align 4, !tbaa !35
  %53 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 20
  store i32 0, ptr %53, align 4, !tbaa !36
  %54 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 19
  store i32 0, ptr %54, align 8, !tbaa !37
  %55 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 18
  store i32 0, ptr %55, align 4, !tbaa !38
  %56 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 5
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, ptr %56, align 8, !tbaa !12
  %57 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 27
  %58 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 32
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %57, i8 0, i64 36, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %58, i8 0, i64 24, i1 false)
  br i1 %38, label %59, label %61

59:                                               ; preds = %41
  %60 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 35
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(33025) %60, i8 0, i64 33025, i1 false)
  br label %61

61:                                               ; preds = %41, %59
  %62 = getelementptr inbounds %struct.tdefl_compressor, ptr %5, i64 0, i32 36
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(640) %62, i8 0, i64 640, i1 false)
  br label %63

63:                                               ; preds = %1, %3, %7, %11, %61
  %64 = phi i32 [ 0, %61 ], [ -2, %11 ], [ -2, %7 ], [ -2, %3 ], [ -2, %1 ]
  ret i32 %64
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_deflate(ptr noundef %0, i32 noundef %1) local_unnamed_addr #8 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #38
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #38
  %5 = icmp eq ptr %0, null
  br i1 %5, label %85, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !26
  %9 = icmp eq ptr %8, null
  %10 = icmp ugt i32 %1, 4
  %11 = or i1 %10, %9
  br i1 %11, label %85, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !42
  %15 = icmp eq ptr %14, null
  br i1 %15, label %85, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 4
  %18 = load i32, ptr %17, align 8, !tbaa !43
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %85, label %20

20:                                               ; preds = %16
  %21 = icmp eq i32 %1, 1
  %22 = select i1 %21, i32 2, i32 %1
  %23 = getelementptr inbounds %struct.tdefl_compressor, ptr %8, i64 0, i32 26
  %24 = load i32, ptr %23, align 4, !tbaa !35
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = icmp eq i32 %22, 4
  %28 = select i1 %27, i32 1, i32 -5
  br label %85

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 2
  %31 = load i64, ptr %30, align 8, !tbaa !22
  %32 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 5
  %33 = load i64, ptr %32, align 8, !tbaa !41
  %34 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 1
  %35 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 12
  %36 = icmp ne i32 %22, 4
  %37 = load i32, ptr %34, align 8, !tbaa !44
  %38 = load ptr, ptr %0, align 8, !tbaa !45
  br label %39

39:                                               ; preds = %75, %29
  %40 = phi ptr [ %64, %75 ], [ %14, %29 ]
  %41 = phi ptr [ %51, %75 ], [ %38, %29 ]
  %42 = phi ptr [ %57, %75 ], [ %8, %29 ]
  %43 = phi i32 [ %67, %75 ], [ %18, %29 ]
  %44 = phi i32 [ %54, %75 ], [ %37, %29 ]
  %45 = zext i32 %44 to i64
  store i64 %45, ptr %3, align 8, !tbaa !46
  %46 = zext i32 %43 to i64
  store i64 %46, ptr %4, align 8, !tbaa !46
  %47 = call i32 @tdefl_compress(ptr noundef nonnull %42, ptr noundef %41, ptr noundef nonnull %3, ptr noundef %40, ptr noundef nonnull %4, i32 noundef %22)
  %48 = load i64, ptr %3, align 8, !tbaa !46
  %49 = load ptr, ptr %0, align 8, !tbaa !45
  %50 = and i64 %48, 4294967295
  %51 = getelementptr inbounds i8, ptr %49, i64 %50
  store ptr %51, ptr %0, align 8, !tbaa !45
  %52 = trunc i64 %48 to i32
  %53 = load i32, ptr %34, align 8, !tbaa !44
  %54 = sub i32 %53, %52
  store i32 %54, ptr %34, align 8, !tbaa !44
  %55 = load i64, ptr %30, align 8, !tbaa !22
  %56 = add i64 %55, %50
  store i64 %56, ptr %30, align 8, !tbaa !22
  %57 = load ptr, ptr %7, align 8, !tbaa !26
  %58 = getelementptr inbounds %struct.tdefl_compressor, ptr %57, i64 0, i32 5
  %59 = load i32, ptr %58, align 8, !tbaa !47
  %60 = zext i32 %59 to i64
  store i64 %60, ptr %35, align 8, !tbaa !20
  %61 = load i64, ptr %4, align 8, !tbaa !46
  %62 = load ptr, ptr %13, align 8, !tbaa !42
  %63 = and i64 %61, 4294967295
  %64 = getelementptr inbounds i8, ptr %62, i64 %63
  store ptr %64, ptr %13, align 8, !tbaa !42
  %65 = trunc i64 %61 to i32
  %66 = load i32, ptr %17, align 8, !tbaa !43
  %67 = sub i32 %66, %65
  store i32 %67, ptr %17, align 8, !tbaa !43
  %68 = load i64, ptr %32, align 8, !tbaa !41
  %69 = add i64 %68, %63
  store i64 %69, ptr %32, align 8, !tbaa !41
  %70 = icmp slt i32 %47, 0
  br i1 %70, label %85, label %71

71:                                               ; preds = %39
  %72 = icmp eq i32 %47, 1
  br i1 %72, label %85, label %73

73:                                               ; preds = %71
  %74 = icmp eq i32 %66, %65
  br i1 %74, label %85, label %75

75:                                               ; preds = %73
  %76 = icmp eq i32 %53, %52
  %77 = and i1 %36, %76
  br i1 %77, label %78, label %39

78:                                               ; preds = %75
  %79 = icmp eq i32 %22, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %78
  %81 = icmp eq i64 %56, %31
  %82 = icmp eq i64 %69, %33
  %83 = select i1 %81, i1 %82, i1 false
  %84 = select i1 %83, i32 -5, i32 0
  br label %85

85:                                               ; preds = %73, %71, %39, %80, %78, %16, %2, %6, %12, %26
  %86 = phi i32 [ %28, %26 ], [ -2, %12 ], [ -2, %6 ], [ -2, %2 ], [ -5, %16 ], [ 0, %78 ], [ %84, %80 ], [ -2, %39 ], [ 1, %71 ], [ 0, %73 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #38
  ret i32 %86
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tdefl_compress(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5) local_unnamed_addr #8 {
  %7 = icmp eq ptr %0, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %6
  %9 = icmp eq ptr %2, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %8
  store i64 0, ptr %2, align 8, !tbaa !46
  br label %11

11:                                               ; preds = %10, %8
  %12 = icmp eq ptr %4, null
  br i1 %12, label %150, label %13

13:                                               ; preds = %11
  store i64 0, ptr %4, align 8, !tbaa !46
  br label %150

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 27
  store ptr %1, ptr %15, align 8, !tbaa !48
  %16 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 29
  store ptr %2, ptr %16, align 8, !tbaa !49
  %17 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 28
  store ptr %3, ptr %17, align 8, !tbaa !50
  %18 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 30
  store ptr %4, ptr %18, align 8, !tbaa !51
  %19 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 32
  store ptr %1, ptr %19, align 8, !tbaa !52
  %20 = icmp eq ptr %2, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %14
  %22 = load i64, ptr %2, align 8, !tbaa !46
  br label %23

23:                                               ; preds = %14, %21
  %24 = phi i64 [ %22, %21 ], [ 0, %14 ]
  %25 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 33
  store i64 %24, ptr %25, align 8, !tbaa !53
  %26 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 34
  store i64 0, ptr %26, align 8, !tbaa !54
  %27 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 31
  store i32 %5, ptr %27, align 8, !tbaa !55
  %28 = load ptr, ptr %0, align 8, !tbaa !39
  %29 = icmp eq ptr %28, null
  %30 = icmp ne ptr %3, null
  %31 = icmp ne ptr %4, null
  %32 = or i1 %30, %31
  %33 = xor i1 %32, %29
  br i1 %33, label %55, label %34

34:                                               ; preds = %23
  %35 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 26
  %36 = load i32, ptr %35, align 4, !tbaa !35
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %55

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 25
  %40 = load i32, ptr %39, align 8, !tbaa !56
  %41 = icmp ne i32 %40, 0
  %42 = icmp ne i32 %5, 4
  %43 = and i1 %42, %41
  br i1 %43, label %55, label %44

44:                                               ; preds = %38
  br i1 %20, label %50, label %45

45:                                               ; preds = %44
  %46 = load i64, ptr %2, align 8, !tbaa !46
  %47 = icmp eq i64 %46, 0
  %48 = icmp ne ptr %1, null
  %49 = or i1 %48, %47
  br i1 %49, label %50, label %56

50:                                               ; preds = %45, %44
  br i1 %31, label %51, label %61

51:                                               ; preds = %50
  %52 = load i64, ptr %4, align 8, !tbaa !46
  %53 = icmp eq i64 %52, 0
  %54 = or i1 %30, %53
  br i1 %54, label %61, label %55

55:                                               ; preds = %51, %38, %34, %23
  br i1 %20, label %57, label %56

56:                                               ; preds = %45, %55
  store i64 0, ptr %2, align 8, !tbaa !46
  br label %57

57:                                               ; preds = %56, %55
  br i1 %31, label %58, label %59

58:                                               ; preds = %57
  store i64 0, ptr %4, align 8, !tbaa !46
  br label %59

59:                                               ; preds = %58, %57
  %60 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 26
  store i32 -2, ptr %60, align 4, !tbaa !35
  br label %150

61:                                               ; preds = %51, %50
  %62 = icmp eq i32 %5, 4
  %63 = zext i1 %62 to i32
  %64 = or i32 %40, %63
  store i32 %64, ptr %39, align 8, !tbaa !56
  %65 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 22
  %66 = load i32, ptr %65, align 4, !tbaa !57
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 23
  %70 = load i32, ptr %69, align 8, !tbaa !58
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %104, label %72

72:                                               ; preds = %68, %61
  br i1 %20, label %74, label %73

73:                                               ; preds = %72
  store i64 0, ptr %2, align 8, !tbaa !46
  br label %74

74:                                               ; preds = %73, %72
  %75 = icmp eq ptr %4, null
  br i1 %75, label %96, label %76

76:                                               ; preds = %74
  %77 = load i64, ptr %4, align 8, !tbaa !46
  %78 = load i64, ptr %26, align 8, !tbaa !54
  %79 = sub i64 %77, %78
  %80 = zext i32 %66 to i64
  %81 = tail call i64 @llvm.umin.i64(i64 %79, i64 %80)
  %82 = getelementptr inbounds i8, ptr %3, i64 %78
  %83 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 42
  %84 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 21
  %85 = load i32, ptr %84, align 8, !tbaa !59
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i8, ptr %83, i64 %86
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %82, ptr nonnull align 1 %87, i64 %81, i1 false)
  %88 = trunc i64 %81 to i32
  %89 = load i32, ptr %84, align 8, !tbaa !59
  %90 = add i32 %89, %88
  store i32 %90, ptr %84, align 8, !tbaa !59
  %91 = load i32, ptr %65, align 4, !tbaa !57
  %92 = sub i32 %91, %88
  store i32 %92, ptr %65, align 4, !tbaa !57
  %93 = load i64, ptr %26, align 8, !tbaa !54
  %94 = add i64 %93, %81
  store i64 %94, ptr %26, align 8, !tbaa !54
  %95 = load ptr, ptr %18, align 8, !tbaa !51
  store i64 %94, ptr %95, align 8, !tbaa !46
  br label %96

96:                                               ; preds = %76, %74
  %97 = phi i32 [ %92, %76 ], [ %66, %74 ]
  %98 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 23
  %99 = load i32, ptr %98, align 8, !tbaa !58
  %100 = icmp ne i32 %99, 0
  %101 = icmp eq i32 %97, 0
  %102 = select i1 %100, i1 %101, i1 false
  %103 = zext i1 %102 to i32
  store i32 %103, ptr %35, align 4, !tbaa !35
  br label %150

104:                                              ; preds = %68
  %105 = tail call fastcc i32 @tdefl_compress_normal(ptr noundef nonnull %0)
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %104
  %108 = load i32, ptr %35, align 4, !tbaa !35
  br label %150

109:                                              ; preds = %104
  %110 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 2
  %111 = load i32, ptr %110, align 8, !tbaa !27
  %112 = and i32 %111, 12288
  %113 = icmp ne i32 %112, 0
  %114 = icmp ne ptr %1, null
  %115 = and i1 %114, %113
  br i1 %115, label %116, label %126

116:                                              ; preds = %109
  %117 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 5
  %118 = load i32, ptr %117, align 8, !tbaa !47
  %119 = zext i32 %118 to i64
  %120 = load ptr, ptr %19, align 8, !tbaa !52
  %121 = ptrtoint ptr %120 to i64
  %122 = ptrtoint ptr %1 to i64
  %123 = sub i64 %121, %122
  %124 = tail call i64 @mz_adler32(i64 noundef %119, ptr noundef nonnull %1, i64 noundef %123)
  %125 = trunc i64 %124 to i32
  store i32 %125, ptr %117, align 8, !tbaa !47
  br label %126

126:                                              ; preds = %116, %109
  %127 = icmp eq i32 %5, 0
  br i1 %127, label %148, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 7
  %130 = load i32, ptr %129, align 8, !tbaa !60
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %148

132:                                              ; preds = %128
  %133 = load i64, ptr %25, align 8, !tbaa !53
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %148

135:                                              ; preds = %132
  %136 = load i32, ptr %65, align 4, !tbaa !57
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %148

138:                                              ; preds = %135
  %139 = tail call fastcc i32 @tdefl_flush_block(ptr noundef nonnull %0, i32 noundef %5)
  %140 = icmp slt i32 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = load i32, ptr %35, align 4, !tbaa !35
  br label %150

143:                                              ; preds = %138
  store i32 %63, ptr %69, align 8, !tbaa !58
  %144 = icmp eq i32 %5, 3
  br i1 %144, label %145, label %148

145:                                              ; preds = %143
  %146 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 40
  %147 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 8
  store i32 0, ptr %147, align 4, !tbaa !61
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(131072) %146, i8 0, i64 131072, i1 false)
  br label %148

148:                                              ; preds = %143, %145, %135, %132, %128, %126
  %149 = tail call fastcc i32 @tdefl_flush_output_buffer(ptr noundef nonnull %0)
  store i32 %149, ptr %35, align 4, !tbaa !35
  br label %150

150:                                              ; preds = %11, %13, %148, %141, %107, %96, %59
  %151 = phi i32 [ -2, %59 ], [ %103, %96 ], [ %149, %148 ], [ %142, %141 ], [ %108, %107 ], [ -2, %13 ], [ -2, %11 ]
  ret i32 %151
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i32 @tdefl_get_adler32(ptr nocapture noundef readonly %0) local_unnamed_addr #12 {
  %2 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 5
  %3 = load i32, ptr %2, align 8, !tbaa !47
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local i64 @mz_deflateBound(ptr nocapture noundef readnone %0, i64 noundef %1) local_unnamed_addr #7 {
  %3 = mul i64 %1, 110
  %4 = udiv i64 %3, 100
  %5 = add nuw nsw i64 %4, 128
  %6 = udiv i64 %1, 31744
  %7 = mul nuw nsw i64 %6, 5
  %8 = add i64 %1, 133
  %9 = add i64 %8, %7
  %10 = tail call i64 @llvm.umax.i64(i64 %5, i64 %9)
  ret i64 %10
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_compress2(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.mz_stream_s, align 8
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %8) #38
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %9, i8 0, i64 104, i1 false)
  %10 = load i64, ptr %1, align 8, !tbaa !46
  %11 = or i64 %10, %3
  %12 = icmp ugt i64 %11, 4294967295
  br i1 %12, label %101, label %13

13:                                               ; preds = %5
  store ptr %2, ptr %8, align 8, !tbaa !45
  %14 = trunc i64 %3 to i32
  %15 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 1
  store i32 %14, ptr %15, align 8, !tbaa !44
  %16 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 3
  store ptr %0, ptr %16, align 8, !tbaa !42
  %17 = trunc i64 %10 to i32
  %18 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 4
  store i32 %17, ptr %18, align 8, !tbaa !43
  %19 = call i32 @mz_deflateInit2(ptr noundef nonnull %8, i32 noundef %4, i32 noundef 8, i32 noundef 15, i32 noundef 9, i32 noundef 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %101

21:                                               ; preds = %13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #38
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #38
  %22 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #38
  br label %101

26:                                               ; preds = %21
  %27 = load ptr, ptr %16, align 8, !tbaa !42
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #38
  br label %85

30:                                               ; preds = %26
  %31 = load i32, ptr %18, align 8, !tbaa !43
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %82, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.tdefl_compressor, ptr %23, i64 0, i32 26
  %35 = load i32, ptr %34, align 4, !tbaa !35
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 5
  %39 = load i64, ptr %38, align 8, !tbaa !41
  br label %94

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 2
  %42 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 5
  %43 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 12
  %44 = load i32, ptr %15, align 8, !tbaa !44
  %45 = load ptr, ptr %8, align 8, !tbaa !45
  br label %46

46:                                               ; preds = %80, %40
  %47 = phi ptr [ %27, %40 ], [ %71, %80 ]
  %48 = phi ptr [ %45, %40 ], [ %58, %80 ]
  %49 = phi ptr [ %23, %40 ], [ %64, %80 ]
  %50 = phi i32 [ %31, %40 ], [ %74, %80 ]
  %51 = phi i32 [ %44, %40 ], [ %61, %80 ]
  %52 = zext i32 %51 to i64
  store i64 %52, ptr %6, align 8, !tbaa !46
  %53 = zext i32 %50 to i64
  store i64 %53, ptr %7, align 8, !tbaa !46
  %54 = call i32 @tdefl_compress(ptr noundef nonnull %49, ptr noundef %48, ptr noundef nonnull %6, ptr noundef %47, ptr noundef nonnull %7, i32 noundef 4)
  %55 = load i64, ptr %6, align 8, !tbaa !46
  %56 = load ptr, ptr %8, align 8, !tbaa !45
  %57 = and i64 %55, 4294967295
  %58 = getelementptr inbounds i8, ptr %56, i64 %57
  store ptr %58, ptr %8, align 8, !tbaa !45
  %59 = trunc i64 %55 to i32
  %60 = load i32, ptr %15, align 8, !tbaa !44
  %61 = sub i32 %60, %59
  store i32 %61, ptr %15, align 8, !tbaa !44
  %62 = load i64, ptr %41, align 8, !tbaa !22
  %63 = add i64 %62, %57
  store i64 %63, ptr %41, align 8, !tbaa !22
  %64 = load ptr, ptr %22, align 8, !tbaa !26
  %65 = getelementptr inbounds %struct.tdefl_compressor, ptr %64, i64 0, i32 5
  %66 = load i32, ptr %65, align 8, !tbaa !47
  %67 = zext i32 %66 to i64
  store i64 %67, ptr %43, align 8, !tbaa !20
  %68 = load i64, ptr %7, align 8, !tbaa !46
  %69 = load ptr, ptr %16, align 8, !tbaa !42
  %70 = and i64 %68, 4294967295
  %71 = getelementptr inbounds i8, ptr %69, i64 %70
  store ptr %71, ptr %16, align 8, !tbaa !42
  %72 = trunc i64 %68 to i32
  %73 = load i32, ptr %18, align 8, !tbaa !43
  %74 = sub i32 %73, %72
  store i32 %74, ptr %18, align 8, !tbaa !43
  %75 = load i64, ptr %42, align 8, !tbaa !41
  %76 = add i64 %75, %70
  store i64 %76, ptr %42, align 8, !tbaa !41
  %77 = icmp slt i32 %54, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %46
  %79 = icmp eq i32 %54, 1
  br i1 %79, label %94, label %80

80:                                               ; preds = %78
  %81 = icmp eq i32 %73, %72
  br i1 %81, label %82, label %46

82:                                               ; preds = %46, %80, %30
  %83 = phi ptr [ %23, %30 ], [ %64, %80 ], [ %64, %46 ]
  %84 = phi i32 [ -5, %30 ], [ -2, %46 ], [ 0, %80 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #38
  br label %85

85:                                               ; preds = %29, %82
  %86 = phi i32 [ -2, %29 ], [ %84, %82 ]
  %87 = phi ptr [ %23, %29 ], [ %83, %82 ]
  %88 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 9
  %89 = load ptr, ptr %88, align 8, !tbaa !24
  %90 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 10
  %91 = load ptr, ptr %90, align 8, !tbaa !25
  call void %89(ptr noundef %91, ptr noundef nonnull %87) #38
  %92 = icmp eq i32 %86, 0
  %93 = select i1 %92, i32 -5, i32 %86
  br label %101

94:                                               ; preds = %78, %37
  %95 = phi ptr [ %23, %37 ], [ %64, %78 ]
  %96 = phi i64 [ %39, %37 ], [ %76, %78 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #38
  store i64 %96, ptr %1, align 8, !tbaa !46
  %97 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 9
  %98 = load ptr, ptr %97, align 8, !tbaa !24
  %99 = getelementptr inbounds %struct.mz_stream_s, ptr %8, i64 0, i32 10
  %100 = load ptr, ptr %99, align 8, !tbaa !25
  call void %98(ptr noundef %100, ptr noundef nonnull %95) #38
  br label %101

101:                                              ; preds = %85, %94, %25, %13, %5
  %102 = phi i32 [ -10000, %5 ], [ %19, %13 ], [ -2, %25 ], [ 0, %94 ], [ %93, %85 ]
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %8) #38
  ret i32 %102
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_compress(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, i64 noundef %3) local_unnamed_addr #8 {
  %5 = tail call i32 @mz_compress2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef -1)
  ret i32 %5
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none) uwtable
define dso_local i64 @mz_compressBound(i64 noundef %0) local_unnamed_addr #9 {
  %2 = mul i64 %0, 110
  %3 = udiv i64 %2, 100
  %4 = add nuw nsw i64 %3, 128
  %5 = udiv i64 %0, 31744
  %6 = mul nuw nsw i64 %5, 5
  %7 = add i64 %0, 133
  %8 = add i64 %7, %6
  %9 = tail call i64 @llvm.umax.i64(i64 %4, i64 %8)
  ret i64 %9
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_inflateInit2(ptr noundef %0, i32 noundef %1) local_unnamed_addr #8 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  switch i32 %1, label %30 [
    i32 15, label %5
    i32 -15, label %5
  ]

5:                                                ; preds = %4, %4
  %6 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 11
  store i32 0, ptr %6, align 8, !tbaa !16
  %7 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 12
  %8 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 2
  store i64 0, ptr %8, align 8, !tbaa !22
  %9 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 5
  %10 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  %11 = load ptr, ptr %10, align 8, !tbaa !23
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  store ptr @miniz_def_alloc_func, ptr %10, align 8, !tbaa !23
  br label %14

14:                                               ; preds = %13, %5
  %15 = phi ptr [ @miniz_def_alloc_func, %13 ], [ %11, %5 ]
  %16 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 9
  %17 = load ptr, ptr %16, align 8, !tbaa !24
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store ptr @miniz_def_free_func, ptr %16, align 8, !tbaa !24
  br label %20

20:                                               ; preds = %19, %14
  %21 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 10
  %22 = load ptr, ptr %21, align 8, !tbaa !25
  %23 = tail call ptr %15(ptr noundef %22, i64 noundef 1, i64 noundef 41168) #38
  %24 = icmp eq ptr %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 7
  store ptr %23, ptr %26, align 8, !tbaa !26
  store i32 0, ptr %23, align 8, !tbaa !62
  %27 = getelementptr inbounds %struct.inflate_state, ptr %23, i64 0, i32 1
  %28 = getelementptr inbounds %struct.inflate_state, ptr %23, i64 0, i32 7
  store i32 1, ptr %28, align 4, !tbaa !65
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, ptr %27, align 8, !tbaa !12
  %29 = getelementptr inbounds %struct.inflate_state, ptr %23, i64 0, i32 5
  store i32 %1, ptr %29, align 8, !tbaa !66
  br label %30

30:                                               ; preds = %20, %4, %2, %25
  %31 = phi i32 [ 0, %25 ], [ -2, %2 ], [ -10000, %4 ], [ -4, %20 ]
  ret i32 %31
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_inflateInit(ptr noundef %0) local_unnamed_addr #8 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %28, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 11
  store i32 0, ptr %4, align 8, !tbaa !16
  %5 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 12
  %6 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 2
  store i64 0, ptr %6, align 8, !tbaa !22
  %7 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 5
  %8 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  %9 = load ptr, ptr %8, align 8, !tbaa !23
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  store ptr @miniz_def_alloc_func, ptr %8, align 8, !tbaa !23
  br label %12

12:                                               ; preds = %11, %3
  %13 = phi ptr [ @miniz_def_alloc_func, %11 ], [ %9, %3 ]
  %14 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !24
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  store ptr @miniz_def_free_func, ptr %14, align 8, !tbaa !24
  br label %18

18:                                               ; preds = %17, %12
  %19 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 10
  %20 = load ptr, ptr %19, align 8, !tbaa !25
  %21 = tail call ptr %13(ptr noundef %20, i64 noundef 1, i64 noundef 41168) #38
  %22 = icmp eq ptr %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 7
  store ptr %21, ptr %24, align 8, !tbaa !26
  store i32 0, ptr %21, align 8, !tbaa !62
  %25 = getelementptr inbounds %struct.inflate_state, ptr %21, i64 0, i32 1
  %26 = getelementptr inbounds %struct.inflate_state, ptr %21, i64 0, i32 7
  store i32 1, ptr %26, align 4, !tbaa !65
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, ptr %25, align 8, !tbaa !12
  %27 = getelementptr inbounds %struct.inflate_state, ptr %21, i64 0, i32 5
  store i32 15, ptr %27, align 8, !tbaa !66
  br label %28

28:                                               ; preds = %1, %18, %23
  %29 = phi i32 [ 0, %23 ], [ -2, %1 ], [ -4, %18 ]
  ret i32 %29
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @mz_inflateReset(ptr noundef %0) local_unnamed_addr #14 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 11
  store i32 0, ptr %4, align 8, !tbaa !16
  %5 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 12
  %6 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 2
  store i64 0, ptr %6, align 8, !tbaa !22
  %7 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 5
  %8 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i64 16, i1 false)
  %9 = load ptr, ptr %8, align 8, !tbaa !26
  store i32 0, ptr %9, align 8, !tbaa !62
  %10 = getelementptr inbounds %struct.inflate_state, ptr %9, i64 0, i32 1
  %11 = getelementptr inbounds %struct.inflate_state, ptr %9, i64 0, i32 7
  store i32 1, ptr %11, align 4, !tbaa !65
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, ptr %10, align 8, !tbaa !12
  br label %12

12:                                               ; preds = %1, %3
  %13 = phi i32 [ 0, %3 ], [ -2, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_inflate(ptr noundef %0, i32 noundef %1) local_unnamed_addr #8 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #38
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #38
  %5 = icmp eq ptr %0, null
  br i1 %5, label %189, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !26
  %9 = icmp eq ptr %8, null
  br i1 %9, label %189, label %10

10:                                               ; preds = %6
  %11 = icmp eq i32 %1, 1
  %12 = select i1 %11, i32 2, i32 %1
  %13 = icmp ne i32 %12, 4
  switch i32 %12, label %189 [
    i32 4, label %14
    i32 2, label %14
    i32 0, label %14
  ]

14:                                               ; preds = %10, %10, %10
  %15 = getelementptr inbounds %struct.inflate_state, ptr %8, i64 0, i32 5
  %16 = load i32, ptr %15, align 8, !tbaa !66
  %17 = icmp sgt i32 %16, 0
  %18 = select i1 %17, i32 9, i32 8
  %19 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 1
  %20 = load i32, ptr %19, align 8, !tbaa !44
  %21 = getelementptr inbounds %struct.inflate_state, ptr %8, i64 0, i32 3
  %22 = load i32, ptr %21, align 8, !tbaa !67
  store i32 0, ptr %21, align 8, !tbaa !67
  %23 = getelementptr inbounds %struct.inflate_state, ptr %8, i64 0, i32 7
  %24 = load i32, ptr %23, align 4, !tbaa !65
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %189, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %struct.inflate_state, ptr %8, i64 0, i32 4
  %28 = load i32, ptr %27, align 4, !tbaa !68
  %29 = icmp ne i32 %28, 0
  %30 = and i1 %13, %29
  br i1 %30, label %189, label %31

31:                                               ; preds = %26
  %32 = icmp eq i32 %12, 4
  %33 = zext i1 %32 to i32
  %34 = or i32 %28, %33
  store i32 %34, ptr %27, align 4, !tbaa !68
  %35 = icmp ne i32 %22, 0
  %36 = select i1 %32, i1 %35, i1 false
  br i1 %36, label %37, label %75

37:                                               ; preds = %31
  %38 = or i32 %18, 4
  %39 = zext i32 %20 to i64
  store i64 %39, ptr %3, align 8, !tbaa !46
  %40 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 4
  %41 = load i32, ptr %40, align 8, !tbaa !43
  %42 = zext i32 %41 to i64
  store i64 %42, ptr %4, align 8, !tbaa !46
  %43 = load ptr, ptr %0, align 8, !tbaa !45
  %44 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !42
  %46 = call i32 @tinfl_decompress(ptr noundef nonnull %8, ptr noundef %43, ptr noundef nonnull %3, ptr noundef %45, ptr noundef %45, ptr noundef nonnull %4, i32 noundef %38)
  store i32 %46, ptr %23, align 4, !tbaa !65
  %47 = load i64, ptr %3, align 8, !tbaa !46
  %48 = load ptr, ptr %0, align 8, !tbaa !45
  %49 = and i64 %47, 4294967295
  %50 = getelementptr inbounds i8, ptr %48, i64 %49
  store ptr %50, ptr %0, align 8, !tbaa !45
  %51 = trunc i64 %47 to i32
  %52 = load i32, ptr %19, align 8, !tbaa !44
  %53 = sub i32 %52, %51
  store i32 %53, ptr %19, align 8, !tbaa !44
  %54 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 2
  %55 = load i64, ptr %54, align 8, !tbaa !22
  %56 = add i64 %55, %49
  store i64 %56, ptr %54, align 8, !tbaa !22
  %57 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %8, i64 0, i32 7
  %58 = load i32, ptr %57, align 4, !tbaa !69
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 12
  store i64 %59, ptr %60, align 8, !tbaa !20
  %61 = load i64, ptr %4, align 8, !tbaa !46
  %62 = load ptr, ptr %44, align 8, !tbaa !42
  %63 = and i64 %61, 4294967295
  %64 = getelementptr inbounds i8, ptr %62, i64 %63
  store ptr %64, ptr %44, align 8, !tbaa !42
  %65 = trunc i64 %61 to i32
  %66 = load i32, ptr %40, align 8, !tbaa !43
  %67 = sub i32 %66, %65
  store i32 %67, ptr %40, align 8, !tbaa !43
  %68 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 5
  %69 = load i64, ptr %68, align 8, !tbaa !41
  %70 = add i64 %69, %63
  store i64 %70, ptr %68, align 8, !tbaa !41
  %71 = icmp slt i32 %46, 0
  br i1 %71, label %189, label %72

72:                                               ; preds = %37
  %73 = icmp eq i32 %46, 0
  br i1 %73, label %189, label %74

74:                                               ; preds = %72
  store i32 -1, ptr %23, align 4, !tbaa !65
  br label %189

75:                                               ; preds = %31
  %76 = or i32 %18, 2
  %77 = select i1 %13, i32 %76, i32 %18
  %78 = getelementptr inbounds %struct.inflate_state, ptr %8, i64 0, i32 2
  %79 = load i32, ptr %78, align 4, !tbaa !70
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %92

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.inflate_state, ptr %8, i64 0, i32 1
  %83 = getelementptr inbounds %struct.inflate_state, ptr %8, i64 0, i32 6
  %84 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 2
  %85 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %8, i64 0, i32 7
  %86 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 12
  %87 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 4
  %88 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 3
  %89 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 5
  %90 = icmp ne i32 %20, 0
  %91 = load i32, ptr %82, align 8, !tbaa !71
  br label %121

92:                                               ; preds = %75
  %93 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 4
  %94 = load i32, ptr %93, align 8, !tbaa !43
  %95 = tail call i32 @llvm.umin.i32(i32 %79, i32 %94)
  %96 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !42
  %98 = getelementptr inbounds %struct.inflate_state, ptr %8, i64 0, i32 6
  %99 = getelementptr inbounds %struct.inflate_state, ptr %8, i64 0, i32 1
  %100 = load i32, ptr %99, align 8, !tbaa !71
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i8, ptr %98, i64 %101
  %103 = zext i32 %95 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %97, ptr nonnull align 1 %102, i64 %103, i1 false)
  %104 = load ptr, ptr %96, align 8, !tbaa !42
  %105 = getelementptr inbounds i8, ptr %104, i64 %103
  store ptr %105, ptr %96, align 8, !tbaa !42
  %106 = load i32, ptr %93, align 8, !tbaa !43
  %107 = sub i32 %106, %95
  store i32 %107, ptr %93, align 8, !tbaa !43
  %108 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 5
  %109 = load i64, ptr %108, align 8, !tbaa !41
  %110 = add i64 %109, %103
  store i64 %110, ptr %108, align 8, !tbaa !41
  %111 = load i32, ptr %78, align 4, !tbaa !70
  %112 = sub i32 %111, %95
  store i32 %112, ptr %78, align 4, !tbaa !70
  %113 = load i32, ptr %99, align 8, !tbaa !71
  %114 = add i32 %113, %95
  %115 = and i32 %114, 32767
  store i32 %115, ptr %99, align 8, !tbaa !71
  %116 = load i32, ptr %23, align 4, !tbaa !65
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %189

118:                                              ; preds = %92
  %119 = icmp eq i32 %111, %95
  %120 = zext i1 %119 to i32
  br label %189

121:                                              ; preds = %176, %81
  %122 = phi i32 [ %91, %81 ], [ %161, %176 ]
  %123 = phi i32 [ %20, %81 ], [ %177, %176 ]
  %124 = zext i32 %123 to i64
  store i64 %124, ptr %3, align 8, !tbaa !46
  %125 = sub i32 32768, %122
  %126 = zext i32 %125 to i64
  store i64 %126, ptr %4, align 8, !tbaa !46
  %127 = load ptr, ptr %0, align 8, !tbaa !45
  %128 = zext i32 %122 to i64
  %129 = getelementptr inbounds i8, ptr %83, i64 %128
  %130 = call i32 @tinfl_decompress(ptr noundef nonnull %8, ptr noundef %127, ptr noundef nonnull %3, ptr noundef nonnull %83, ptr noundef nonnull %129, ptr noundef nonnull %4, i32 noundef %77)
  store i32 %130, ptr %23, align 4, !tbaa !65
  %131 = load i64, ptr %3, align 8, !tbaa !46
  %132 = load ptr, ptr %0, align 8, !tbaa !45
  %133 = and i64 %131, 4294967295
  %134 = getelementptr inbounds i8, ptr %132, i64 %133
  store ptr %134, ptr %0, align 8, !tbaa !45
  %135 = trunc i64 %131 to i32
  %136 = load i32, ptr %19, align 8, !tbaa !44
  %137 = sub i32 %136, %135
  store i32 %137, ptr %19, align 8, !tbaa !44
  %138 = load i64, ptr %84, align 8, !tbaa !22
  %139 = add i64 %138, %133
  store i64 %139, ptr %84, align 8, !tbaa !22
  %140 = load i32, ptr %85, align 4, !tbaa !69
  %141 = zext i32 %140 to i64
  store i64 %141, ptr %86, align 8, !tbaa !20
  %142 = load i64, ptr %4, align 8, !tbaa !46
  %143 = trunc i64 %142 to i32
  store i32 %143, ptr %78, align 4, !tbaa !70
  %144 = load i32, ptr %87, align 8, !tbaa !43
  %145 = tail call i32 @llvm.umin.i32(i32 %144, i32 %143)
  %146 = load ptr, ptr %88, align 8, !tbaa !42
  %147 = load i32, ptr %82, align 8, !tbaa !71
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %83, i64 %148
  %150 = zext i32 %145 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %146, ptr nonnull align 1 %149, i64 %150, i1 false)
  %151 = load ptr, ptr %88, align 8, !tbaa !42
  %152 = getelementptr inbounds i8, ptr %151, i64 %150
  store ptr %152, ptr %88, align 8, !tbaa !42
  %153 = load i32, ptr %87, align 8, !tbaa !43
  %154 = sub i32 %153, %145
  store i32 %154, ptr %87, align 8, !tbaa !43
  %155 = load i64, ptr %89, align 8, !tbaa !41
  %156 = add i64 %155, %150
  store i64 %156, ptr %89, align 8, !tbaa !41
  %157 = load i32, ptr %78, align 4, !tbaa !70
  %158 = sub i32 %157, %145
  store i32 %158, ptr %78, align 4, !tbaa !70
  %159 = load i32, ptr %82, align 8, !tbaa !71
  %160 = add i32 %159, %145
  %161 = and i32 %160, 32767
  store i32 %161, ptr %82, align 8, !tbaa !71
  %162 = icmp slt i32 %130, 0
  br i1 %162, label %189, label %163

163:                                              ; preds = %121
  %164 = icmp ne i32 %130, 1
  %165 = select i1 %164, i1 true, i1 %90
  br i1 %165, label %166, label %189

166:                                              ; preds = %163
  %167 = icmp eq i32 %130, 0
  br i1 %32, label %168, label %178

168:                                              ; preds = %166
  br i1 %167, label %169, label %172

169:                                              ; preds = %168
  %170 = icmp eq i32 %157, %145
  %171 = select i1 %170, i32 1, i32 -5
  br label %189

172:                                              ; preds = %168
  %173 = icmp eq i32 %153, %145
  br i1 %173, label %189, label %174

174:                                              ; preds = %172
  %175 = load i32, ptr %19, align 8, !tbaa !44
  br label %176

176:                                              ; preds = %174, %179
  %177 = phi i32 [ %175, %174 ], [ %180, %179 ]
  br label %121

178:                                              ; preds = %166
  br i1 %167, label %186, label %179

179:                                              ; preds = %178
  %180 = load i32, ptr %19, align 8, !tbaa !44
  %181 = icmp ne i32 %180, 0
  %182 = icmp ne i32 %153, %145
  %183 = select i1 %181, i1 %182, i1 false
  %184 = icmp eq i32 %157, %145
  %185 = select i1 %183, i1 %184, i1 false
  br i1 %185, label %176, label %189

186:                                              ; preds = %178
  %187 = icmp eq i32 %157, %145
  %188 = zext i1 %187 to i32
  br label %189

189:                                              ; preds = %179, %172, %163, %121, %186, %92, %118, %72, %37, %26, %14, %10, %2, %6, %169, %74
  %190 = phi i32 [ -5, %74 ], [ %171, %169 ], [ -2, %6 ], [ -2, %2 ], [ -2, %10 ], [ -3, %14 ], [ -2, %26 ], [ -3, %37 ], [ 1, %72 ], [ 0, %92 ], [ %120, %118 ], [ %188, %186 ], [ 0, %179 ], [ -5, %172 ], [ -5, %163 ], [ -3, %121 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #38
  ret i32 %190
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tinfl_decompress(ptr noundef %0, ptr noundef %1, ptr nocapture noundef %2, ptr noundef %3, ptr noundef %4, ptr nocapture noundef %5, i32 noundef %6) local_unnamed_addr #8 {
  %8 = ptrtoint ptr %1 to i64
  %9 = alloca [3 x ptr], align 16
  %10 = alloca [3 x ptr], align 16
  %11 = alloca [17 x i32], align 16
  %12 = alloca [16 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #38
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #38
  %13 = load i64, ptr %2, align 8, !tbaa !46
  %14 = getelementptr inbounds i8, ptr %1, i64 %13
  %15 = icmp eq ptr %4, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %7
  %17 = load i64, ptr %5, align 8, !tbaa !46
  %18 = getelementptr inbounds i8, ptr %4, i64 %17
  br label %19

19:                                               ; preds = %7, %16
  %20 = phi ptr [ %18, %16 ], [ null, %7 ]
  %21 = and i32 %6, 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %19
  %24 = ptrtoint ptr %4 to i64
  %25 = ptrtoint ptr %3 to i64
  %26 = load i64, ptr %5, align 8, !tbaa !46
  %27 = xor i64 %25, -1
  %28 = add i64 %27, %24
  %29 = add i64 %28, %26
  br label %30

30:                                               ; preds = %19, %23
  %31 = phi i64 [ %29, %23 ], [ -1, %19 ]
  %32 = add i64 %31, 1
  %33 = and i64 %32, %31
  %34 = icmp ne i64 %33, 0
  %35 = icmp ult ptr %4, %3
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %38

37:                                               ; preds = %30
  store i64 0, ptr %5, align 8, !tbaa !46
  store i64 0, ptr %2, align 8, !tbaa !46
  br label %2206

38:                                               ; preds = %30
  %39 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 15
  store ptr %39, ptr %9, align 16, !tbaa !72
  %40 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 16
  %41 = getelementptr inbounds [3 x ptr], ptr %9, i64 0, i64 1
  store ptr %40, ptr %41, align 8, !tbaa !72
  %42 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 17
  %43 = getelementptr inbounds [3 x ptr], ptr %9, i64 0, i64 2
  store ptr %42, ptr %43, align 16, !tbaa !72
  %44 = getelementptr %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 18
  store ptr %44, ptr %10, align 16, !tbaa !72
  %45 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 19
  %46 = getelementptr inbounds [3 x ptr], ptr %10, i64 0, i64 1
  store ptr %45, ptr %46, align 8, !tbaa !72
  %47 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 20
  %48 = getelementptr inbounds [3 x ptr], ptr %10, i64 0, i64 2
  store ptr %47, ptr %48, align 16, !tbaa !72
  %49 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 1
  %50 = load i32, ptr %49, align 4, !tbaa !73
  %51 = freeze i32 %50
  %52 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 12
  %53 = load i64, ptr %52, align 8, !tbaa !74
  %54 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 8
  %55 = load i32, ptr %54, align 8, !tbaa !75
  %56 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 9
  %57 = load i32, ptr %56, align 4, !tbaa !76
  %58 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 10
  %59 = load i32, ptr %58, align 8, !tbaa !77
  %60 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 13
  %61 = load i64, ptr %60, align 8, !tbaa !78
  %62 = load i32, ptr %0, align 8, !tbaa !79
  switch i32 %62, label %2029 [
    i32 0, label %63
    i32 1, label %70
    i32 2, label %98
    i32 36, label %2001
    i32 3, label %156
    i32 5, label %197
    i32 6, label %251
    i32 7, label %289
    i32 39, label %324
    i32 51, label %365
    i32 52, label %397
    i32 9, label %422
    i32 38, label %437
    i32 10, label %453
    i32 11, label %504
    i32 14, label %577
    i32 35, label %809
    i32 16, label %1019
    i32 17, label %1092
    i32 18, label %1126
    i32 21, label %1175
    i32 23, label %1273
    i32 24, label %1348
    i32 25, label %1505
    i32 26, label %1601
    i32 27, label %1692
    i32 37, label %1734
    i32 53, label %1799
    i32 32, label %1864
    i32 41, label %1935
    i32 42, label %1972
    i32 34, label %1992
  ], !llvm.loop !80

63:                                               ; preds = %38
  %64 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 3
  store i32 0, ptr %64, align 4, !tbaa !81
  %65 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 2
  store i32 0, ptr %65, align 8, !tbaa !82
  %66 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 7
  store i32 1, ptr %66, align 4, !tbaa !83
  %67 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 4
  store i32 1, ptr %67, align 8, !tbaa !84
  %68 = and i32 %6, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %129, label %70

70:                                               ; preds = %38, %63
  %71 = phi i64 [ %53, %38 ], [ 0, %63 ]
  %72 = phi i32 [ %59, %38 ], [ 0, %63 ]
  %73 = phi i32 [ %57, %38 ], [ 0, %63 ]
  %74 = phi i32 [ %55, %38 ], [ 0, %63 ]
  %75 = phi i32 [ %51, %38 ], [ 0, %63 ]
  %76 = icmp sgt i64 %13, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %70
  %78 = and i32 %6, 2
  %79 = icmp eq i32 %78, 0
  store i32 1, ptr %0, align 8, !tbaa !79
  %80 = select i1 %79, i32 -4, i32 1
  br label %2029

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, ptr %1, i64 1
  %83 = load i8, ptr %1, align 1, !tbaa !3
  %84 = zext i8 %83 to i32
  %85 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 2
  store i32 %84, ptr %85, align 8, !tbaa !82
  br label %86

86:                                               ; preds = %98, %81
  %87 = phi ptr [ %1, %98 ], [ %82, %81 ]
  %88 = phi i64 [ %53, %98 ], [ %71, %81 ]
  %89 = phi i32 [ %59, %98 ], [ %72, %81 ]
  %90 = phi i32 [ %57, %98 ], [ %73, %81 ]
  %91 = phi i32 [ %55, %98 ], [ %74, %81 ]
  %92 = phi i32 [ %51, %98 ], [ %75, %81 ]
  %93 = icmp ult ptr %87, %14
  br i1 %93, label %99, label %94

94:                                               ; preds = %86
  %95 = and i32 %6, 2
  %96 = icmp eq i32 %95, 0
  store i32 2, ptr %0, align 8, !tbaa !79
  %97 = select i1 %96, i32 -4, i32 1
  br label %2029

98:                                               ; preds = %38
  br label %86, !llvm.loop !85

99:                                               ; preds = %86
  %100 = getelementptr inbounds i8, ptr %87, i64 1
  %101 = load i8, ptr %87, align 1, !tbaa !3
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 3
  store i32 %102, ptr %103, align 4, !tbaa !81
  %104 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 2
  %105 = load i32, ptr %104, align 8, !tbaa !82
  %106 = shl i32 %105, 8
  %107 = or i32 %106, %102
  %108 = urem i32 %107, 31
  %109 = icmp eq i32 %108, 0
  %110 = and i32 %102, 32
  %111 = icmp eq i32 %110, 0
  %112 = select i1 %109, i1 %111, i1 false
  br i1 %112, label %113, label %116

113:                                              ; preds = %99
  %114 = and i32 %105, 15
  %115 = icmp ne i32 %114, 8
  br i1 %22, label %117, label %128

116:                                              ; preds = %99
  br i1 %22, label %117, label %2001

117:                                              ; preds = %116, %113
  %118 = phi i1 [ true, %116 ], [ %115, %113 ]
  %119 = lshr i32 %105, 4
  %120 = shl i32 256, %119
  %121 = icmp ugt i32 %120, 32768
  %122 = add nuw nsw i32 %119, 8
  %123 = zext i32 %122 to i64
  %124 = lshr i64 %32, %123
  %125 = icmp eq i64 %124, 0
  %126 = select i1 %121, i1 true, i1 %125
  %127 = or i1 %126, %118
  br i1 %127, label %2001, label %129

128:                                              ; preds = %113
  br i1 %115, label %2001, label %129

129:                                              ; preds = %63, %128, %117, %1847
  %130 = phi i64 [ %1848, %1847 ], [ %61, %117 ], [ %61, %128 ], [ %61, %63 ]
  %131 = phi ptr [ %1849, %1847 ], [ %4, %117 ], [ %4, %128 ], [ %4, %63 ]
  %132 = phi ptr [ %1850, %1847 ], [ %100, %117 ], [ %100, %128 ], [ %1, %63 ]
  %133 = phi i64 [ %1851, %1847 ], [ %88, %117 ], [ %88, %128 ], [ 0, %63 ]
  %134 = phi i32 [ %1852, %1847 ], [ %89, %117 ], [ %89, %128 ], [ 0, %63 ]
  %135 = phi i32 [ %1853, %1847 ], [ 0, %117 ], [ 0, %128 ], [ 0, %63 ]
  %136 = phi i32 [ %1854, %1847 ], [ %91, %117 ], [ %91, %128 ], [ 0, %63 ]
  %137 = phi i32 [ %1855, %1847 ], [ %92, %117 ], [ %92, %128 ], [ 0, %63 ]
  %138 = icmp ult i32 %137, 3
  br i1 %138, label %139, label %176

139:                                              ; preds = %129, %156
  %140 = phi i64 [ %130, %129 ], [ %61, %156 ]
  %141 = phi ptr [ %131, %129 ], [ %4, %156 ]
  %142 = phi ptr [ %132, %129 ], [ %1, %156 ]
  %143 = phi i64 [ %133, %129 ], [ %53, %156 ]
  %144 = phi i32 [ %134, %129 ], [ %59, %156 ]
  %145 = phi i32 [ %135, %129 ], [ %57, %156 ]
  %146 = phi i32 [ %136, %129 ], [ %55, %156 ]
  %147 = phi i32 [ %137, %129 ], [ %51, %156 ]
  %148 = icmp ult ptr %142, %14
  br i1 %148, label %157, label %149

149:                                              ; preds = %166, %139
  %150 = phi ptr [ %142, %139 ], [ %158, %166 ]
  %151 = phi i64 [ %143, %139 ], [ %163, %166 ]
  %152 = phi i32 [ %147, %139 ], [ %164, %166 ]
  %153 = and i32 %6, 2
  %154 = icmp eq i32 %153, 0
  store i32 3, ptr %0, align 8, !tbaa !79
  %155 = select i1 %154, i32 -4, i32 1
  br label %2029

156:                                              ; preds = %38
  br label %139, !llvm.loop !86

157:                                              ; preds = %139
  %158 = getelementptr inbounds i8, ptr %142, i64 1
  %159 = load i8, ptr %142, align 1, !tbaa !3
  %160 = zext i8 %159 to i64
  %161 = zext i32 %147 to i64
  %162 = shl i64 %160, %161
  %163 = or i64 %162, %143
  %164 = add i32 %147, 8
  %165 = icmp ult i32 %164, 3
  br i1 %165, label %166, label %176, !llvm.loop !87

166:                                              ; preds = %157
  %167 = icmp ult ptr %158, %14
  br i1 %167, label %168, label %149

168:                                              ; preds = %166
  %169 = getelementptr inbounds i8, ptr %142, i64 2
  %170 = load i8, ptr %158, align 1, !tbaa !3
  %171 = zext i8 %170 to i64
  %172 = zext i32 %164 to i64
  %173 = shl i64 %171, %172
  %174 = or i64 %173, %163
  %175 = add i32 %147, 16
  br label %176

176:                                              ; preds = %157, %168, %129
  %177 = phi i64 [ %130, %129 ], [ %140, %168 ], [ %140, %157 ]
  %178 = phi ptr [ %131, %129 ], [ %141, %168 ], [ %141, %157 ]
  %179 = phi ptr [ %132, %129 ], [ %158, %157 ], [ %169, %168 ]
  %180 = phi i64 [ %133, %129 ], [ %163, %157 ], [ %174, %168 ]
  %181 = phi i32 [ %134, %129 ], [ %144, %168 ], [ %144, %157 ]
  %182 = phi i32 [ %135, %129 ], [ %145, %168 ], [ %145, %157 ]
  %183 = phi i32 [ %136, %129 ], [ %146, %168 ], [ %146, %157 ]
  %184 = phi i32 [ %137, %129 ], [ %164, %157 ], [ %175, %168 ]
  %185 = trunc i64 %180 to i32
  %186 = and i32 %185, 7
  %187 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 5
  store i32 %186, ptr %187, align 4, !tbaa !88
  %188 = lshr i64 %180, 3
  %189 = add i32 %184, -3
  %190 = lshr i32 %186, 1
  %191 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 6
  store i32 %190, ptr %191, align 8, !tbaa !89
  %192 = icmp ult i32 %186, 2
  br i1 %192, label %207, label %452

193:                                              ; preds = %197
  %194 = and i32 %6, 2
  %195 = icmp eq i32 %194, 0
  store i32 5, ptr %0, align 8, !tbaa !79
  %196 = select i1 %195, i32 -4, i32 1
  br label %2029

197:                                              ; preds = %38
  %198 = icmp sgt i64 %13, 0
  br i1 %198, label %199, label %193

199:                                              ; preds = %197
  %200 = getelementptr inbounds i8, ptr %1, i64 1
  %201 = load i8, ptr %1, align 1, !tbaa !3
  %202 = zext i8 %201 to i64
  %203 = zext i32 %51 to i64
  %204 = shl i64 %202, %203
  %205 = or i64 %204, %53
  %206 = add i32 %51, 8
  br label %207

207:                                              ; preds = %176, %199
  %208 = phi i64 [ %61, %199 ], [ %177, %176 ]
  %209 = phi ptr [ %4, %199 ], [ %178, %176 ]
  %210 = phi ptr [ %200, %199 ], [ %179, %176 ]
  %211 = phi i64 [ %205, %199 ], [ %188, %176 ]
  %212 = phi i32 [ %59, %199 ], [ %181, %176 ]
  %213 = phi i32 [ %55, %199 ], [ %183, %176 ]
  %214 = phi i32 [ %206, %199 ], [ %189, %176 ]
  %215 = and i32 %214, 7
  %216 = zext i32 %215 to i64
  %217 = lshr i64 %211, %216
  %218 = and i32 %214, -8
  br label %219

219:                                              ; preds = %295, %207
  %220 = phi i64 [ %208, %207 ], [ %296, %295 ]
  %221 = phi ptr [ %209, %207 ], [ %297, %295 ]
  %222 = phi ptr [ %210, %207 ], [ %298, %295 ]
  %223 = phi i64 [ %217, %207 ], [ %299, %295 ]
  %224 = phi i32 [ %212, %207 ], [ %300, %295 ]
  %225 = phi i32 [ 0, %207 ], [ %304, %295 ]
  %226 = phi i32 [ %213, %207 ], [ %302, %295 ]
  %227 = phi i32 [ %218, %207 ], [ %303, %295 ]
  %228 = icmp ult i32 %225, 4
  br i1 %228, label %229, label %305

229:                                              ; preds = %219
  %230 = icmp eq i32 %227, 0
  br i1 %230, label %275, label %231

231:                                              ; preds = %229
  %232 = icmp ult i32 %227, 8
  br i1 %232, label %233, label %261

233:                                              ; preds = %251, %231
  %234 = phi i64 [ %220, %231 ], [ %61, %251 ]
  %235 = phi ptr [ %221, %231 ], [ %4, %251 ]
  %236 = phi ptr [ %222, %231 ], [ %1, %251 ]
  %237 = phi i64 [ %223, %231 ], [ %53, %251 ]
  %238 = phi i32 [ %224, %231 ], [ %59, %251 ]
  %239 = phi i32 [ %225, %231 ], [ %57, %251 ]
  %240 = phi i32 [ %226, %231 ], [ %55, %251 ]
  %241 = phi i32 [ %227, %231 ], [ %51, %251 ]
  br label %242

242:                                              ; preds = %233, %252
  %243 = phi ptr [ %253, %252 ], [ %236, %233 ]
  %244 = phi i64 [ %258, %252 ], [ %237, %233 ]
  %245 = phi i32 [ %259, %252 ], [ %241, %233 ]
  %246 = icmp ult ptr %243, %14
  br i1 %246, label %252, label %247

247:                                              ; preds = %242
  %248 = and i32 %6, 2
  %249 = icmp eq i32 %248, 0
  store i32 6, ptr %0, align 8, !tbaa !79
  %250 = select i1 %249, i32 -4, i32 1
  br label %2029

251:                                              ; preds = %38
  br label %233, !llvm.loop !90

252:                                              ; preds = %242
  %253 = getelementptr inbounds i8, ptr %243, i64 1
  %254 = load i8, ptr %243, align 1, !tbaa !3
  %255 = zext i8 %254 to i64
  %256 = zext i32 %245 to i64
  %257 = shl i64 %255, %256
  %258 = or i64 %257, %244
  %259 = add i32 %245, 8
  %260 = icmp ugt i32 %245, -9
  br i1 %260, label %242, label %261, !llvm.loop !91

261:                                              ; preds = %252, %231
  %262 = phi i64 [ %220, %231 ], [ %234, %252 ]
  %263 = phi ptr [ %221, %231 ], [ %235, %252 ]
  %264 = phi ptr [ %222, %231 ], [ %253, %252 ]
  %265 = phi i64 [ %223, %231 ], [ %258, %252 ]
  %266 = phi i32 [ %224, %231 ], [ %238, %252 ]
  %267 = phi i32 [ %225, %231 ], [ %239, %252 ]
  %268 = phi i32 [ %226, %231 ], [ %240, %252 ]
  %269 = phi i32 [ %227, %231 ], [ %259, %252 ]
  %270 = trunc i64 %265 to i8
  %271 = zext i32 %267 to i64
  %272 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 21, i64 %271
  store i8 %270, ptr %272, align 1, !tbaa !3
  %273 = lshr i64 %265, 8
  %274 = add i32 %269, -8
  br label %295

275:                                              ; preds = %229, %289
  %276 = phi i64 [ %220, %229 ], [ %61, %289 ]
  %277 = phi ptr [ %221, %229 ], [ %4, %289 ]
  %278 = phi ptr [ %222, %229 ], [ %1, %289 ]
  %279 = phi i64 [ %223, %229 ], [ %53, %289 ]
  %280 = phi i32 [ %224, %229 ], [ %59, %289 ]
  %281 = phi i32 [ %225, %229 ], [ %57, %289 ]
  %282 = phi i32 [ %226, %229 ], [ %55, %289 ]
  %283 = phi i32 [ 0, %229 ], [ %51, %289 ]
  %284 = icmp ult ptr %278, %14
  br i1 %284, label %290, label %285

285:                                              ; preds = %275
  %286 = and i32 %6, 2
  %287 = icmp eq i32 %286, 0
  store i32 7, ptr %0, align 8, !tbaa !79
  %288 = select i1 %287, i32 -4, i32 1
  br label %2029

289:                                              ; preds = %38
  br label %275, !llvm.loop !92

290:                                              ; preds = %275
  %291 = getelementptr inbounds i8, ptr %278, i64 1
  %292 = load i8, ptr %278, align 1, !tbaa !3
  %293 = zext i32 %281 to i64
  %294 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 21, i64 %293
  store i8 %292, ptr %294, align 1, !tbaa !3
  br label %295

295:                                              ; preds = %261, %290
  %296 = phi i64 [ %262, %261 ], [ %276, %290 ]
  %297 = phi ptr [ %263, %261 ], [ %277, %290 ]
  %298 = phi ptr [ %264, %261 ], [ %291, %290 ]
  %299 = phi i64 [ %273, %261 ], [ %279, %290 ]
  %300 = phi i32 [ %266, %261 ], [ %280, %290 ]
  %301 = phi i32 [ %267, %261 ], [ %281, %290 ]
  %302 = phi i32 [ %268, %261 ], [ %282, %290 ]
  %303 = phi i32 [ %274, %261 ], [ %283, %290 ]
  %304 = add i32 %301, 1
  br label %219, !llvm.loop !93

305:                                              ; preds = %219
  %306 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 21
  %307 = load i8, ptr %306, align 1, !tbaa !3
  %308 = zext i8 %307 to i32
  %309 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 21, i64 1
  %310 = load i8, ptr %309, align 1, !tbaa !3
  %311 = zext i8 %310 to i32
  %312 = shl nuw nsw i32 %311, 8
  %313 = or i32 %312, %308
  %314 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 21, i64 2
  %315 = load i8, ptr %314, align 1, !tbaa !3
  %316 = zext i8 %315 to i32
  %317 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 21, i64 3
  %318 = load i8, ptr %317, align 1, !tbaa !3
  %319 = zext i8 %318 to i32
  %320 = shl nuw nsw i32 %319, 8
  %321 = or i32 %320, %316
  %322 = xor i32 %321, 65535
  %323 = icmp eq i32 %313, %322
  br i1 %323, label %333, label %324

324:                                              ; preds = %38, %305
  %325 = phi i64 [ %220, %305 ], [ %61, %38 ]
  %326 = phi ptr [ %221, %305 ], [ %4, %38 ]
  %327 = phi ptr [ %222, %305 ], [ %1, %38 ]
  %328 = phi i64 [ %223, %305 ], [ %53, %38 ]
  %329 = phi i32 [ %224, %305 ], [ %59, %38 ]
  %330 = phi i32 [ %313, %305 ], [ %57, %38 ]
  %331 = phi i32 [ %226, %305 ], [ %55, %38 ]
  %332 = phi i32 [ %227, %305 ], [ %51, %38 ]
  br label %2001

333:                                              ; preds = %305, %398
  %334 = phi i64 [ %220, %305 ], [ %388, %398 ]
  %335 = phi ptr [ %221, %305 ], [ %400, %398 ]
  %336 = phi ptr [ %222, %305 ], [ %390, %398 ]
  %337 = phi i64 [ %223, %305 ], [ %391, %398 ]
  %338 = phi i32 [ %224, %305 ], [ %392, %398 ]
  %339 = phi i32 [ %313, %305 ], [ %401, %398 ]
  %340 = phi i32 [ %226, %305 ], [ %394, %398 ]
  %341 = phi i32 [ %227, %305 ], [ %395, %398 ]
  %342 = icmp ne i32 %339, 0
  %343 = icmp ne i32 %341, 0
  %344 = select i1 %342, i1 %343, i1 false
  br i1 %344, label %345, label %402

345:                                              ; preds = %333
  %346 = icmp ult i32 %341, 8
  br i1 %346, label %347, label %375

347:                                              ; preds = %365, %345
  %348 = phi i64 [ %334, %345 ], [ %61, %365 ]
  %349 = phi ptr [ %335, %345 ], [ %4, %365 ]
  %350 = phi ptr [ %336, %345 ], [ %1, %365 ]
  %351 = phi i64 [ %337, %345 ], [ %53, %365 ]
  %352 = phi i32 [ %338, %345 ], [ %59, %365 ]
  %353 = phi i32 [ %339, %345 ], [ %57, %365 ]
  %354 = phi i32 [ %340, %345 ], [ %55, %365 ]
  %355 = phi i32 [ %341, %345 ], [ %51, %365 ]
  br label %356

356:                                              ; preds = %347, %366
  %357 = phi ptr [ %367, %366 ], [ %350, %347 ]
  %358 = phi i64 [ %372, %366 ], [ %351, %347 ]
  %359 = phi i32 [ %373, %366 ], [ %355, %347 ]
  %360 = icmp ult ptr %357, %14
  br i1 %360, label %366, label %361

361:                                              ; preds = %356
  %362 = and i32 %6, 2
  %363 = icmp eq i32 %362, 0
  store i32 51, ptr %0, align 8, !tbaa !79
  %364 = select i1 %363, i32 -4, i32 1
  br label %2029

365:                                              ; preds = %38
  br label %347, !llvm.loop !94

366:                                              ; preds = %356
  %367 = getelementptr inbounds i8, ptr %357, i64 1
  %368 = load i8, ptr %357, align 1, !tbaa !3
  %369 = zext i8 %368 to i64
  %370 = zext i32 %359 to i64
  %371 = shl i64 %369, %370
  %372 = or i64 %371, %358
  %373 = add i32 %359, 8
  %374 = icmp ugt i32 %359, -9
  br i1 %374, label %356, label %375, !llvm.loop !95

375:                                              ; preds = %366, %345
  %376 = phi i64 [ %334, %345 ], [ %348, %366 ]
  %377 = phi ptr [ %335, %345 ], [ %349, %366 ]
  %378 = phi ptr [ %336, %345 ], [ %367, %366 ]
  %379 = phi i64 [ %337, %345 ], [ %372, %366 ]
  %380 = phi i32 [ %338, %345 ], [ %352, %366 ]
  %381 = phi i32 [ %339, %345 ], [ %353, %366 ]
  %382 = phi i32 [ %341, %345 ], [ %373, %366 ]
  %383 = trunc i64 %379 to i32
  %384 = and i32 %383, 255
  %385 = lshr i64 %379, 8
  %386 = add i32 %382, -8
  br label %387

387:                                              ; preds = %397, %375
  %388 = phi i64 [ %376, %375 ], [ %61, %397 ]
  %389 = phi ptr [ %377, %375 ], [ %4, %397 ]
  %390 = phi ptr [ %378, %375 ], [ %1, %397 ]
  %391 = phi i64 [ %385, %375 ], [ %53, %397 ]
  %392 = phi i32 [ %380, %375 ], [ %59, %397 ]
  %393 = phi i32 [ %381, %375 ], [ %57, %397 ]
  %394 = phi i32 [ %384, %375 ], [ %55, %397 ]
  %395 = phi i32 [ %386, %375 ], [ %51, %397 ]
  %396 = icmp ult ptr %389, %20
  br i1 %396, label %398, label %2001

397:                                              ; preds = %38
  br label %387, !llvm.loop !96

398:                                              ; preds = %387
  %399 = trunc i32 %394 to i8
  %400 = getelementptr inbounds i8, ptr %389, i64 1
  store i8 %399, ptr %389, align 1, !tbaa !3
  %401 = add i32 %393, -1
  br label %333, !llvm.loop !97

402:                                              ; preds = %333, %438
  %403 = phi i64 [ %334, %333 ], [ %424, %438 ]
  %404 = phi ptr [ %335, %333 ], [ %449, %438 ]
  %405 = phi ptr [ %336, %333 ], [ %448, %438 ]
  %406 = phi i64 [ %337, %333 ], [ %427, %438 ]
  %407 = phi i32 [ %338, %333 ], [ %428, %438 ]
  %408 = phi i32 [ %339, %333 ], [ %451, %438 ]
  %409 = phi i32 [ %340, %333 ], [ %430, %438 ]
  %410 = phi i32 [ %341, %333 ], [ %431, %438 ]
  %411 = icmp eq i32 %408, 0
  br i1 %411, label %1847, label %412

412:                                              ; preds = %402, %422
  %413 = phi i64 [ %403, %402 ], [ %61, %422 ]
  %414 = phi ptr [ %404, %402 ], [ %4, %422 ]
  %415 = phi ptr [ %405, %402 ], [ %1, %422 ]
  %416 = phi i64 [ %406, %402 ], [ %53, %422 ]
  %417 = phi i32 [ %407, %402 ], [ %59, %422 ]
  %418 = phi i32 [ %408, %402 ], [ %57, %422 ]
  %419 = phi i32 [ %409, %402 ], [ %55, %422 ]
  %420 = phi i32 [ %410, %402 ], [ %51, %422 ]
  %421 = icmp ult ptr %414, %20
  br i1 %421, label %423, label %2001

422:                                              ; preds = %38
  br label %412, !llvm.loop !98

423:                                              ; preds = %412, %437
  %424 = phi i64 [ %413, %412 ], [ %61, %437 ]
  %425 = phi ptr [ %414, %412 ], [ %4, %437 ]
  %426 = phi ptr [ %415, %412 ], [ %1, %437 ]
  %427 = phi i64 [ %416, %412 ], [ %53, %437 ]
  %428 = phi i32 [ %417, %412 ], [ %59, %437 ]
  %429 = phi i32 [ %418, %412 ], [ %57, %437 ]
  %430 = phi i32 [ %419, %412 ], [ %55, %437 ]
  %431 = phi i32 [ %420, %412 ], [ %51, %437 ]
  %432 = icmp ult ptr %426, %14
  br i1 %432, label %438, label %433

433:                                              ; preds = %423
  %434 = and i32 %6, 2
  %435 = icmp eq i32 %434, 0
  store i32 38, ptr %0, align 8, !tbaa !79
  %436 = select i1 %435, i32 -4, i32 1
  br label %2029

437:                                              ; preds = %38
  br label %423, !llvm.loop !99

438:                                              ; preds = %423
  %439 = ptrtoint ptr %20 to i64
  %440 = ptrtoint ptr %425 to i64
  %441 = sub i64 %439, %440
  %442 = ptrtoint ptr %14 to i64
  %443 = ptrtoint ptr %426 to i64
  %444 = sub i64 %442, %443
  %445 = tail call i64 @llvm.umin.i64(i64 %441, i64 %444)
  %446 = zext i32 %429 to i64
  %447 = tail call i64 @llvm.umin.i64(i64 %445, i64 %446)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %425, ptr align 1 %426, i64 %447, i1 false)
  %448 = getelementptr inbounds i8, ptr %426, i64 %447
  %449 = getelementptr inbounds i8, ptr %425, i64 %447
  %450 = trunc i64 %447 to i32
  %451 = sub i32 %429, %450
  br label %402, !llvm.loop !100

452:                                              ; preds = %176
  switch i32 %190, label %468 [
    i32 3, label %453
    i32 1, label %462
  ]

453:                                              ; preds = %452, %38
  %454 = phi i64 [ %177, %452 ], [ %61, %38 ]
  %455 = phi ptr [ %178, %452 ], [ %4, %38 ]
  %456 = phi ptr [ %179, %452 ], [ %1, %38 ]
  %457 = phi i64 [ %188, %452 ], [ %53, %38 ]
  %458 = phi i32 [ %181, %452 ], [ %59, %38 ]
  %459 = phi i32 [ %182, %452 ], [ %57, %38 ]
  %460 = phi i32 [ %183, %452 ], [ %55, %38 ]
  %461 = phi i32 [ %189, %452 ], [ %51, %38 ]
  br label %2001

462:                                              ; preds = %452
  %463 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 11
  store i32 288, ptr %463, align 4, !tbaa !12
  %464 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 11, i64 1
  store i32 32, ptr %464, align 4, !tbaa !12
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %45, i8 5, i64 32, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(144) %44, i8 8, i64 144, i1 false), !tbaa !3
  %465 = getelementptr i8, ptr %0, i64 7716
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(112) %465, i8 9, i64 112, i1 false), !tbaa !3
  %466 = getelementptr i8, ptr %0, i64 7828
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(24) %466, i8 7, i64 24, i1 false), !tbaa !3
  %467 = getelementptr i8, ptr %0, i64 7852
  store i64 578721382704613384, ptr %467, align 1
  br label %619

468:                                              ; preds = %452, %519
  %469 = phi i64 [ %523, %519 ], [ %177, %452 ]
  %470 = phi ptr [ %524, %519 ], [ %178, %452 ]
  %471 = phi ptr [ %525, %519 ], [ %179, %452 ]
  %472 = phi i64 [ %538, %519 ], [ %188, %452 ]
  %473 = phi i32 [ %527, %519 ], [ %181, %452 ]
  %474 = phi i32 [ %544, %519 ], [ 0, %452 ]
  %475 = phi i32 [ %529, %519 ], [ %183, %452 ]
  %476 = phi i32 [ %539, %519 ], [ %189, %452 ]
  %477 = icmp ult i32 %474, 3
  br i1 %477, label %478, label %545

478:                                              ; preds = %468
  %479 = zext i32 %474 to i64
  %480 = getelementptr inbounds [4 x i8], ptr @.str.14, i64 0, i64 %479
  %481 = load i8, ptr %480, align 1, !tbaa !3
  %482 = sext i8 %481 to i32
  %483 = icmp ult i32 %476, %482
  br i1 %483, label %484, label %519

484:                                              ; preds = %504, %478
  %485 = phi i64 [ %469, %478 ], [ %61, %504 ]
  %486 = phi ptr [ %470, %478 ], [ %4, %504 ]
  %487 = phi ptr [ %471, %478 ], [ %1, %504 ]
  %488 = phi i64 [ %472, %478 ], [ %53, %504 ]
  %489 = phi i32 [ %473, %478 ], [ %59, %504 ]
  %490 = phi i32 [ %474, %478 ], [ %57, %504 ]
  %491 = phi i32 [ %475, %478 ], [ %55, %504 ]
  %492 = phi i32 [ %476, %478 ], [ %51, %504 ]
  %493 = zext i32 %490 to i64
  %494 = getelementptr inbounds [4 x i8], ptr @.str.14, i64 0, i64 %493
  br label %495

495:                                              ; preds = %484, %505
  %496 = phi ptr [ %506, %505 ], [ %487, %484 ]
  %497 = phi i64 [ %511, %505 ], [ %488, %484 ]
  %498 = phi i32 [ %512, %505 ], [ %492, %484 ]
  %499 = icmp ult ptr %496, %14
  br i1 %499, label %505, label %500

500:                                              ; preds = %495
  %501 = and i32 %6, 2
  %502 = icmp eq i32 %501, 0
  store i32 11, ptr %0, align 8, !tbaa !79
  %503 = select i1 %502, i32 -4, i32 1
  br label %2029

504:                                              ; preds = %38
  br label %484, !llvm.loop !101

505:                                              ; preds = %495
  %506 = getelementptr inbounds i8, ptr %496, i64 1
  %507 = load i8, ptr %496, align 1, !tbaa !3
  %508 = zext i8 %507 to i64
  %509 = zext i32 %498 to i64
  %510 = shl i64 %508, %509
  %511 = or i64 %510, %497
  %512 = add i32 %498, 8
  %513 = load i8, ptr %494, align 1, !tbaa !3
  %514 = sext i8 %513 to i32
  %515 = icmp ult i32 %512, %514
  br i1 %515, label %495, label %516, !llvm.loop !102

516:                                              ; preds = %505
  %517 = zext i32 %490 to i64
  %518 = sext i8 %513 to i32
  br label %519

519:                                              ; preds = %516, %478
  %520 = phi i32 [ %482, %478 ], [ %518, %516 ]
  %521 = phi i8 [ %481, %478 ], [ %513, %516 ]
  %522 = phi i64 [ %479, %478 ], [ %517, %516 ]
  %523 = phi i64 [ %469, %478 ], [ %485, %516 ]
  %524 = phi ptr [ %470, %478 ], [ %486, %516 ]
  %525 = phi ptr [ %471, %478 ], [ %506, %516 ]
  %526 = phi i64 [ %472, %478 ], [ %511, %516 ]
  %527 = phi i32 [ %473, %478 ], [ %489, %516 ]
  %528 = phi i32 [ %474, %478 ], [ %490, %516 ]
  %529 = phi i32 [ %475, %478 ], [ %491, %516 ]
  %530 = phi i32 [ %476, %478 ], [ %512, %516 ]
  %531 = zext i8 %521 to i32
  %532 = shl nsw i32 -1, %531
  %533 = xor i32 %532, -1
  %534 = trunc i64 %526 to i32
  %535 = and i32 %533, %534
  %536 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 11, i64 %522
  %537 = zext i32 %520 to i64
  %538 = lshr i64 %526, %537
  %539 = sub i32 %530, %520
  %540 = getelementptr inbounds [3 x i16], ptr @tinfl_decompress.s_min_table_sizes, i64 0, i64 %522
  %541 = load i16, ptr %540, align 2, !tbaa !103
  %542 = zext i16 %541 to i32
  %543 = add i32 %535, %542
  store i32 %543, ptr %536, align 4, !tbaa !12
  %544 = add i32 %528, 1
  br label %468, !llvm.loop !105

545:                                              ; preds = %468
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(19) %47, i8 0, i64 19, i1 false)
  br label %546

546:                                              ; preds = %597, %545
  %547 = phi i64 [ %469, %545 ], [ %598, %597 ]
  %548 = phi ptr [ %470, %545 ], [ %599, %597 ]
  %549 = phi ptr [ %471, %545 ], [ %600, %597 ]
  %550 = phi i64 [ %472, %545 ], [ %608, %597 ]
  %551 = phi i32 [ %473, %545 ], [ %602, %597 ]
  %552 = phi i32 [ 0, %545 ], [ %615, %597 ]
  %553 = phi i32 [ %475, %545 ], [ %604, %597 ]
  %554 = phi i32 [ %476, %545 ], [ %609, %597 ]
  %555 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 11, i64 2
  %556 = load i32, ptr %555, align 4, !tbaa !12
  %557 = icmp ult i32 %552, %556
  br i1 %557, label %558, label %616

558:                                              ; preds = %546
  %559 = icmp ult i32 %554, 3
  br i1 %559, label %560, label %597

560:                                              ; preds = %558, %577
  %561 = phi i64 [ %547, %558 ], [ %61, %577 ]
  %562 = phi ptr [ %548, %558 ], [ %4, %577 ]
  %563 = phi ptr [ %549, %558 ], [ %1, %577 ]
  %564 = phi i64 [ %550, %558 ], [ %53, %577 ]
  %565 = phi i32 [ %551, %558 ], [ %59, %577 ]
  %566 = phi i32 [ %552, %558 ], [ %57, %577 ]
  %567 = phi i32 [ %553, %558 ], [ %55, %577 ]
  %568 = phi i32 [ %554, %558 ], [ %51, %577 ]
  %569 = icmp ult ptr %563, %14
  br i1 %569, label %578, label %570

570:                                              ; preds = %587, %560
  %571 = phi ptr [ %563, %560 ], [ %579, %587 ]
  %572 = phi i64 [ %564, %560 ], [ %584, %587 ]
  %573 = phi i32 [ %568, %560 ], [ %585, %587 ]
  %574 = and i32 %6, 2
  %575 = icmp eq i32 %574, 0
  store i32 14, ptr %0, align 8, !tbaa !79
  %576 = select i1 %575, i32 -4, i32 1
  br label %2029

577:                                              ; preds = %38
  br label %560, !llvm.loop !106

578:                                              ; preds = %560
  %579 = getelementptr inbounds i8, ptr %563, i64 1
  %580 = load i8, ptr %563, align 1, !tbaa !3
  %581 = zext i8 %580 to i64
  %582 = zext i32 %568 to i64
  %583 = shl i64 %581, %582
  %584 = or i64 %583, %564
  %585 = add i32 %568, 8
  %586 = icmp ult i32 %585, 3
  br i1 %586, label %587, label %597, !llvm.loop !107

587:                                              ; preds = %578
  %588 = icmp ult ptr %579, %14
  br i1 %588, label %589, label %570

589:                                              ; preds = %587
  %590 = getelementptr inbounds i8, ptr %563, i64 2
  %591 = load i8, ptr %579, align 1, !tbaa !3
  %592 = zext i8 %591 to i64
  %593 = zext i32 %585 to i64
  %594 = shl i64 %592, %593
  %595 = or i64 %594, %584
  %596 = add i32 %568, 16
  br label %597

597:                                              ; preds = %578, %589, %558
  %598 = phi i64 [ %547, %558 ], [ %561, %589 ], [ %561, %578 ]
  %599 = phi ptr [ %548, %558 ], [ %562, %589 ], [ %562, %578 ]
  %600 = phi ptr [ %549, %558 ], [ %579, %578 ], [ %590, %589 ]
  %601 = phi i64 [ %550, %558 ], [ %584, %578 ], [ %595, %589 ]
  %602 = phi i32 [ %551, %558 ], [ %565, %589 ], [ %565, %578 ]
  %603 = phi i32 [ %552, %558 ], [ %566, %589 ], [ %566, %578 ]
  %604 = phi i32 [ %553, %558 ], [ %567, %589 ], [ %567, %578 ]
  %605 = phi i32 [ %554, %558 ], [ %585, %578 ], [ %596, %589 ]
  %606 = trunc i64 %601 to i8
  %607 = and i8 %606, 7
  %608 = lshr i64 %601, 3
  %609 = add i32 %605, -3
  %610 = zext i32 %603 to i64
  %611 = getelementptr inbounds [19 x i8], ptr @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %610
  %612 = load i8, ptr %611, align 1, !tbaa !3
  %613 = zext i8 %612 to i64
  %614 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 20, i64 %613
  store i8 %607, ptr %614, align 1, !tbaa !3
  %615 = add i32 %603, 1
  br label %546, !llvm.loop !108

616:                                              ; preds = %546
  store i32 19, ptr %555, align 4, !tbaa !12
  %617 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 6
  %618 = load i32, ptr %617, align 8, !tbaa !89
  br label %619

619:                                              ; preds = %616, %462, %1189
  %620 = phi i32 [ %1200, %1189 ], [ %618, %616 ], [ 1, %462 ]
  %621 = phi i64 [ %1190, %1189 ], [ %547, %616 ], [ %177, %462 ]
  %622 = phi ptr [ %1191, %1189 ], [ %548, %616 ], [ %178, %462 ]
  %623 = phi ptr [ %1192, %1189 ], [ %549, %616 ], [ %179, %462 ]
  %624 = phi i64 [ %1193, %1189 ], [ %550, %616 ], [ %188, %462 ]
  %625 = phi i32 [ %1194, %1189 ], [ %551, %616 ], [ %181, %462 ]
  %626 = phi i32 [ %1195, %1189 ], [ %552, %616 ], [ %182, %462 ]
  %627 = phi i32 [ %1196, %1189 ], [ %553, %616 ], [ %183, %462 ]
  %628 = phi i32 [ %1197, %1189 ], [ %554, %616 ], [ %189, %462 ]
  %629 = icmp sgt i32 %620, -1
  br i1 %629, label %630, label %1352

630:                                              ; preds = %619
  %631 = zext i32 %620 to i64
  %632 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 14, i64 %631
  %633 = getelementptr inbounds [3 x ptr], ptr %9, i64 0, i64 %631
  %634 = load ptr, ptr %633, align 8, !tbaa !72
  %635 = getelementptr inbounds [3 x ptr], ptr %10, i64 0, i64 %631
  %636 = load ptr, ptr %635, align 8, !tbaa !72
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(64) %12, i8 0, i64 64, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(2048) %632, i8 0, i64 2048, i1 false)
  switch i32 %620, label %639 [
    i32 0, label %637
    i32 1, label %638
  ]

637:                                              ; preds = %630
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1152) %39, i8 0, i64 1152, i1 false)
  br label %640

638:                                              ; preds = %630
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %40, i8 0, i64 128, i1 false)
  br label %640

639:                                              ; preds = %630
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(76) %42, i8 0, i64 76, i1 false)
  br label %640

640:                                              ; preds = %637, %638, %639
  %641 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 11, i64 %631
  %642 = load i32, ptr %641, align 4, !tbaa !12
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %727, label %644

644:                                              ; preds = %640
  %645 = zext i32 %642 to i64
  %646 = and i64 %645, 3
  %647 = icmp ult i32 %642, 4
  br i1 %647, label %683, label %648

648:                                              ; preds = %644
  %649 = and i64 %645, 4294967292
  br label %650

650:                                              ; preds = %650, %648
  %651 = phi i64 [ 0, %648 ], [ %680, %650 ]
  %652 = phi i64 [ 0, %648 ], [ %681, %650 ]
  %653 = getelementptr inbounds i8, ptr %636, i64 %651
  %654 = load i8, ptr %653, align 1, !tbaa !3
  %655 = zext i8 %654 to i64
  %656 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 %655
  %657 = load i32, ptr %656, align 4, !tbaa !12
  %658 = add i32 %657, 1
  store i32 %658, ptr %656, align 4, !tbaa !12
  %659 = or i64 %651, 1
  %660 = getelementptr inbounds i8, ptr %636, i64 %659
  %661 = load i8, ptr %660, align 1, !tbaa !3
  %662 = zext i8 %661 to i64
  %663 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 %662
  %664 = load i32, ptr %663, align 4, !tbaa !12
  %665 = add i32 %664, 1
  store i32 %665, ptr %663, align 4, !tbaa !12
  %666 = or i64 %651, 2
  %667 = getelementptr inbounds i8, ptr %636, i64 %666
  %668 = load i8, ptr %667, align 1, !tbaa !3
  %669 = zext i8 %668 to i64
  %670 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 %669
  %671 = load i32, ptr %670, align 4, !tbaa !12
  %672 = add i32 %671, 1
  store i32 %672, ptr %670, align 4, !tbaa !12
  %673 = or i64 %651, 3
  %674 = getelementptr inbounds i8, ptr %636, i64 %673
  %675 = load i8, ptr %674, align 1, !tbaa !3
  %676 = zext i8 %675 to i64
  %677 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 %676
  %678 = load i32, ptr %677, align 4, !tbaa !12
  %679 = add i32 %678, 1
  store i32 %679, ptr %677, align 4, !tbaa !12
  %680 = add nuw nsw i64 %651, 4
  %681 = add i64 %652, 4
  %682 = icmp eq i64 %681, %649
  br i1 %682, label %683, label %650, !llvm.loop !109

683:                                              ; preds = %650, %644
  %684 = phi i64 [ 0, %644 ], [ %680, %650 ]
  %685 = icmp eq i64 %646, 0
  br i1 %685, label %698, label %686

686:                                              ; preds = %683, %686
  %687 = phi i64 [ %695, %686 ], [ %684, %683 ]
  %688 = phi i64 [ %696, %686 ], [ 0, %683 ]
  %689 = getelementptr inbounds i8, ptr %636, i64 %687
  %690 = load i8, ptr %689, align 1, !tbaa !3
  %691 = zext i8 %690 to i64
  %692 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 %691
  %693 = load i32, ptr %692, align 4, !tbaa !12
  %694 = add i32 %693, 1
  store i32 %694, ptr %692, align 4, !tbaa !12
  %695 = add nuw nsw i64 %687, 1
  %696 = add i64 %688, 1
  %697 = icmp eq i64 %696, %646
  br i1 %697, label %698, label %686, !llvm.loop !110

698:                                              ; preds = %686, %683
  %699 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 1
  %700 = load i32, ptr %699, align 4, !tbaa !12
  %701 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 2
  %702 = load i32, ptr %701, align 8, !tbaa !12
  %703 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 3
  %704 = load i32, ptr %703, align 4, !tbaa !12
  %705 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 4
  %706 = load i32, ptr %705, align 16, !tbaa !12
  %707 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 5
  %708 = load i32, ptr %707, align 4, !tbaa !12
  %709 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 6
  %710 = load i32, ptr %709, align 8, !tbaa !12
  %711 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 7
  %712 = load i32, ptr %711, align 4, !tbaa !12
  %713 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 8
  %714 = load i32, ptr %713, align 16, !tbaa !12
  %715 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 9
  %716 = load i32, ptr %715, align 4, !tbaa !12
  %717 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 10
  %718 = load i32, ptr %717, align 8, !tbaa !12
  %719 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 11
  %720 = load i32, ptr %719, align 4, !tbaa !12
  %721 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 12
  %722 = load i32, ptr %721, align 16, !tbaa !12
  %723 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 13
  %724 = load i32, ptr %723, align 4, !tbaa !12
  %725 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 14
  %726 = load i32, ptr %725, align 8, !tbaa !12
  br label %727

727:                                              ; preds = %698, %640
  %728 = phi i32 [ %726, %698 ], [ 0, %640 ]
  %729 = phi i32 [ %724, %698 ], [ 0, %640 ]
  %730 = phi i32 [ %722, %698 ], [ 0, %640 ]
  %731 = phi i32 [ %720, %698 ], [ 0, %640 ]
  %732 = phi i32 [ %718, %698 ], [ 0, %640 ]
  %733 = phi i32 [ %716, %698 ], [ 0, %640 ]
  %734 = phi i32 [ %714, %698 ], [ 0, %640 ]
  %735 = phi i32 [ %712, %698 ], [ 0, %640 ]
  %736 = phi i32 [ %710, %698 ], [ 0, %640 ]
  %737 = phi i32 [ %708, %698 ], [ 0, %640 ]
  %738 = phi i32 [ %706, %698 ], [ 0, %640 ]
  %739 = phi i32 [ %704, %698 ], [ 0, %640 ]
  %740 = phi i32 [ %702, %698 ], [ 0, %640 ]
  %741 = phi i32 [ %700, %698 ], [ 0, %640 ]
  %742 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 1
  store i32 0, ptr %742, align 4, !tbaa !12
  store i32 0, ptr %11, align 16, !tbaa !12
  %743 = shl i32 %741, 1
  %744 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 2
  store i32 %743, ptr %744, align 8, !tbaa !12
  %745 = add i32 %740, %741
  %746 = add i32 %740, %743
  %747 = shl i32 %746, 1
  %748 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 3
  store i32 %747, ptr %748, align 4, !tbaa !12
  %749 = add i32 %739, %745
  %750 = add i32 %739, %747
  %751 = shl i32 %750, 1
  %752 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 4
  store i32 %751, ptr %752, align 16, !tbaa !12
  %753 = add i32 %738, %749
  %754 = add i32 %738, %751
  %755 = shl i32 %754, 1
  %756 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 5
  store i32 %755, ptr %756, align 4, !tbaa !12
  %757 = add i32 %737, %753
  %758 = add i32 %737, %755
  %759 = shl i32 %758, 1
  %760 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 6
  store i32 %759, ptr %760, align 8, !tbaa !12
  %761 = add i32 %736, %757
  %762 = add i32 %736, %759
  %763 = shl i32 %762, 1
  %764 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 7
  store i32 %763, ptr %764, align 4, !tbaa !12
  %765 = add i32 %735, %761
  %766 = add i32 %735, %763
  %767 = shl i32 %766, 1
  %768 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 8
  store i32 %767, ptr %768, align 16, !tbaa !12
  %769 = add i32 %734, %765
  %770 = add i32 %734, %767
  %771 = shl i32 %770, 1
  %772 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 9
  store i32 %771, ptr %772, align 4, !tbaa !12
  %773 = add i32 %733, %769
  %774 = add i32 %733, %771
  %775 = shl i32 %774, 1
  %776 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 10
  store i32 %775, ptr %776, align 8, !tbaa !12
  %777 = add i32 %732, %773
  %778 = add i32 %732, %775
  %779 = shl i32 %778, 1
  %780 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 11
  store i32 %779, ptr %780, align 4, !tbaa !12
  %781 = add i32 %731, %777
  %782 = add i32 %731, %779
  %783 = shl i32 %782, 1
  %784 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 12
  store i32 %783, ptr %784, align 16, !tbaa !12
  %785 = add i32 %730, %781
  %786 = add i32 %730, %783
  %787 = shl i32 %786, 1
  %788 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 13
  store i32 %787, ptr %788, align 4, !tbaa !12
  %789 = add i32 %729, %785
  %790 = add i32 %729, %787
  %791 = shl i32 %790, 1
  %792 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 14
  store i32 %791, ptr %792, align 8, !tbaa !12
  %793 = add i32 %728, %789
  %794 = add i32 %728, %791
  %795 = shl i32 %794, 1
  %796 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 15
  store i32 %795, ptr %796, align 4, !tbaa !12
  %797 = getelementptr inbounds [16 x i32], ptr %12, i64 0, i64 15
  %798 = load i32, ptr %797, align 4, !tbaa !12
  %799 = add i32 %798, %793
  %800 = add i32 %798, %795
  %801 = shl i32 %800, 1
  %802 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 16
  store i32 %801, ptr %802, align 16, !tbaa !12
  %803 = icmp ne i32 %801, 65536
  %804 = icmp ugt i32 %799, 1
  %805 = select i1 %803, i1 %804, i1 false
  br i1 %805, label %809, label %806

806:                                              ; preds = %727
  br i1 %643, label %941, label %807

807:                                              ; preds = %806
  %808 = zext i32 %642 to i64
  br label %818

809:                                              ; preds = %38, %727
  %810 = phi i64 [ %621, %727 ], [ %61, %38 ]
  %811 = phi ptr [ %622, %727 ], [ %4, %38 ]
  %812 = phi ptr [ %623, %727 ], [ %1, %38 ]
  %813 = phi i64 [ %624, %727 ], [ %53, %38 ]
  %814 = phi i32 [ %625, %727 ], [ %59, %38 ]
  %815 = phi i32 [ %626, %727 ], [ %57, %38 ]
  %816 = phi i32 [ %627, %727 ], [ %55, %38 ]
  %817 = phi i32 [ %628, %727 ], [ %51, %38 ]
  br label %2001

818:                                              ; preds = %807, %937
  %819 = phi i64 [ 0, %807 ], [ %939, %937 ]
  %820 = phi i32 [ -1, %807 ], [ %938, %937 ]
  %821 = getelementptr inbounds i8, ptr %636, i64 %819
  %822 = load i8, ptr %821, align 1, !tbaa !3
  %823 = zext i8 %822 to i32
  %824 = icmp eq i8 %822, 0
  br i1 %824, label %937, label %825

825:                                              ; preds = %818
  %826 = zext i8 %822 to i64
  %827 = getelementptr inbounds [17 x i32], ptr %11, i64 0, i64 %826
  %828 = load i32, ptr %827, align 4, !tbaa !12
  %829 = add i32 %828, 1
  store i32 %829, ptr %827, align 4, !tbaa !12
  %830 = and i32 %823, 3
  %831 = icmp ult i8 %822, 4
  br i1 %831, label %854, label %832

832:                                              ; preds = %825
  %833 = and i32 %823, 252
  br label %834

834:                                              ; preds = %834, %832
  %835 = phi i32 [ %828, %832 ], [ %851, %834 ]
  %836 = phi i32 [ 0, %832 ], [ %850, %834 ]
  %837 = phi i32 [ 0, %832 ], [ %852, %834 ]
  %838 = shl i32 %836, 3
  %839 = shl i32 %835, 2
  %840 = and i32 %839, 4
  %841 = or i32 %838, %840
  %842 = and i32 %835, 2
  %843 = or i32 %842, %841
  %844 = lshr i32 %835, 2
  %845 = and i32 %844, 1
  %846 = or i32 %845, %843
  %847 = lshr i32 %835, 3
  %848 = shl i32 %846, 1
  %849 = and i32 %847, 1
  %850 = or i32 %849, %848
  %851 = lshr i32 %835, 4
  %852 = add i32 %837, 4
  %853 = icmp eq i32 %852, %833
  br i1 %853, label %854, label %834, !llvm.loop !111

854:                                              ; preds = %834, %825
  %855 = phi i32 [ undef, %825 ], [ %848, %834 ]
  %856 = phi i32 [ undef, %825 ], [ %850, %834 ]
  %857 = phi i32 [ %828, %825 ], [ %851, %834 ]
  %858 = phi i32 [ 0, %825 ], [ %850, %834 ]
  %859 = icmp eq i32 %830, 0
  br i1 %859, label %870, label %860

860:                                              ; preds = %854, %860
  %861 = phi i32 [ %867, %860 ], [ %857, %854 ]
  %862 = phi i32 [ %866, %860 ], [ %858, %854 ]
  %863 = phi i32 [ %868, %860 ], [ 0, %854 ]
  %864 = shl i32 %862, 1
  %865 = and i32 %861, 1
  %866 = or i32 %865, %864
  %867 = lshr i32 %861, 1
  %868 = add i32 %863, 1
  %869 = icmp eq i32 %868, %830
  br i1 %869, label %870, label %860, !llvm.loop !112

870:                                              ; preds = %860, %854
  %871 = phi i32 [ %855, %854 ], [ %864, %860 ]
  %872 = phi i32 [ %856, %854 ], [ %866, %860 ]
  %873 = icmp ult i8 %822, 11
  br i1 %873, label %874, label %888

874:                                              ; preds = %870
  %875 = shl nuw nsw i32 %823, 9
  %876 = trunc i64 %819 to i32
  %877 = or i32 %875, %876
  %878 = trunc i32 %877 to i16
  %879 = icmp ult i32 %872, 1024
  br i1 %879, label %880, label %937

880:                                              ; preds = %874
  %881 = shl nuw i32 1, %823
  br label %882

882:                                              ; preds = %880, %882
  %883 = phi i32 [ %872, %880 ], [ %886, %882 ]
  %884 = zext i32 %883 to i64
  %885 = getelementptr inbounds i16, ptr %632, i64 %884
  store i16 %878, ptr %885, align 2, !tbaa !103
  %886 = add i32 %883, %881
  %887 = icmp ult i32 %886, 1024
  br i1 %887, label %882, label %937, !llvm.loop !113

888:                                              ; preds = %870
  %889 = and i32 %872, 1023
  %890 = zext i32 %889 to i64
  %891 = getelementptr inbounds i16, ptr %632, i64 %890
  %892 = load i16, ptr %891, align 2, !tbaa !103
  %893 = sext i16 %892 to i32
  %894 = icmp eq i16 %892, 0
  br i1 %894, label %895, label %898

895:                                              ; preds = %888
  %896 = trunc i32 %820 to i16
  store i16 %896, ptr %891, align 2, !tbaa !103
  %897 = add nsw i32 %820, -2
  br label %898

898:                                              ; preds = %895, %888
  %899 = phi i32 [ %820, %895 ], [ %893, %888 ]
  %900 = phi i32 [ %897, %895 ], [ %820, %888 ]
  %901 = lshr i32 %871, 9
  %902 = icmp ugt i8 %822, 11
  br i1 %902, label %903, label %926

903:                                              ; preds = %898, %921
  %904 = phi i32 [ %908, %921 ], [ %901, %898 ]
  %905 = phi i32 [ %924, %921 ], [ %823, %898 ]
  %906 = phi i32 [ %923, %921 ], [ %900, %898 ]
  %907 = phi i32 [ %922, %921 ], [ %899, %898 ]
  %908 = lshr i32 %904, 1
  %909 = and i32 %908, 1
  %910 = xor i32 %907, -1
  %911 = add i32 %909, %910
  %912 = sext i32 %911 to i64
  %913 = getelementptr inbounds i16, ptr %634, i64 %912
  %914 = load i16, ptr %913, align 2, !tbaa !103
  %915 = icmp eq i16 %914, 0
  br i1 %915, label %916, label %919

916:                                              ; preds = %903
  %917 = trunc i32 %906 to i16
  store i16 %917, ptr %913, align 2, !tbaa !103
  %918 = add nsw i32 %906, -2
  br label %921

919:                                              ; preds = %903
  %920 = sext i16 %914 to i32
  br label %921

921:                                              ; preds = %916, %919
  %922 = phi i32 [ %920, %919 ], [ %906, %916 ]
  %923 = phi i32 [ %906, %919 ], [ %918, %916 ]
  %924 = add i32 %905, -1
  %925 = icmp ugt i32 %924, 11
  br i1 %925, label %903, label %926, !llvm.loop !114

926:                                              ; preds = %921, %898
  %927 = phi i32 [ %899, %898 ], [ %922, %921 ]
  %928 = phi i32 [ %900, %898 ], [ %923, %921 ]
  %929 = phi i32 [ %901, %898 ], [ %908, %921 ]
  %930 = lshr i32 %929, 1
  %931 = and i32 %930, 1
  %932 = trunc i64 %819 to i16
  %933 = xor i32 %927, -1
  %934 = add i32 %931, %933
  %935 = sext i32 %934 to i64
  %936 = getelementptr inbounds i16, ptr %634, i64 %935
  store i16 %932, ptr %936, align 2, !tbaa !103
  br label %937

937:                                              ; preds = %882, %874, %818, %926
  %938 = phi i32 [ %928, %926 ], [ %820, %818 ], [ %820, %874 ], [ %820, %882 ]
  %939 = add nuw nsw i64 %819, 1
  %940 = icmp eq i64 %939, %808
  br i1 %940, label %941, label %818, !llvm.loop !115

941:                                              ; preds = %937, %806
  %942 = icmp eq i32 %620, 2
  br i1 %942, label %943, label %1189

943:                                              ; preds = %941, %1169, %1083
  %944 = phi i64 [ %1045, %1083 ], [ %1141, %1169 ], [ %621, %941 ]
  %945 = phi ptr [ %1046, %1083 ], [ %1142, %1169 ], [ %622, %941 ]
  %946 = phi ptr [ %1047, %1083 ], [ %1143, %1169 ], [ %623, %941 ]
  %947 = phi i64 [ %1080, %1083 ], [ %1154, %1169 ], [ %624, %941 ]
  %948 = phi i32 [ %1049, %1083 ], [ %1145, %1169 ], [ %625, %941 ]
  %949 = phi i32 [ %1085, %1083 ], [ %1172, %1169 ], [ 0, %941 ]
  %950 = phi i32 [ %1077, %1083 ], [ %1147, %1169 ], [ %627, %941 ]
  %951 = phi i32 [ %1081, %1083 ], [ %1155, %1169 ], [ %628, %941 ]
  %952 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 11
  %953 = load i32, ptr %952, align 4, !tbaa !12
  %954 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 11, i64 1
  %955 = load i32, ptr %954, align 4, !tbaa !12
  %956 = add i32 %955, %953
  %957 = icmp ult i32 %949, %956
  br i1 %957, label %958, label %1173

958:                                              ; preds = %943
  %959 = icmp ult i32 %951, 15
  br i1 %959, label %960, label %1044

960:                                              ; preds = %958
  %961 = ptrtoint ptr %14 to i64
  %962 = ptrtoint ptr %946 to i64
  %963 = sub i64 %961, %962
  %964 = icmp slt i64 %963, 2
  br i1 %964, label %965, label %1029

965:                                              ; preds = %960, %1020
  %966 = phi i64 [ %944, %960 ], [ %1006, %1020 ]
  %967 = phi ptr [ %945, %960 ], [ %1007, %1020 ]
  %968 = phi ptr [ %946, %960 ], [ %1021, %1020 ]
  %969 = phi i64 [ %947, %960 ], [ %1026, %1020 ]
  %970 = phi i32 [ %948, %960 ], [ %1010, %1020 ]
  %971 = phi i32 [ %949, %960 ], [ %1011, %1020 ]
  %972 = phi i32 [ %950, %960 ], [ %1012, %1020 ]
  %973 = phi i32 [ %951, %960 ], [ %1027, %1020 ]
  %974 = and i64 %969, 1023
  %975 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 14, i64 2, i64 %974
  %976 = load i16, ptr %975, align 2, !tbaa !103
  %977 = sext i16 %976 to i32
  %978 = icmp sgt i16 %976, -1
  br i1 %978, label %979, label %984

979:                                              ; preds = %965
  %980 = icmp ult i16 %976, 512
  %981 = lshr i32 %977, 9
  %982 = icmp ult i32 %973, %981
  %983 = select i1 %980, i1 true, i1 %982
  br i1 %983, label %1005, label %1044

984:                                              ; preds = %965
  %985 = icmp ugt i32 %973, 10
  br i1 %985, label %986, label %1005

986:                                              ; preds = %984, %986
  %987 = phi i32 [ %998, %986 ], [ %977, %984 ]
  %988 = phi i32 [ %991, %986 ], [ 10, %984 ]
  %989 = xor i32 %987, -1
  %990 = sext i32 %989 to i64
  %991 = add i32 %988, 1
  %992 = zext i32 %988 to i64
  %993 = lshr i64 %969, %992
  %994 = and i64 %993, 1
  %995 = add nsw i64 %994, %990
  %996 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 17, i64 %995
  %997 = load i16, ptr %996, align 2, !tbaa !103
  %998 = sext i16 %997 to i32
  %999 = icmp slt i16 %997, 0
  %1000 = add i32 %988, 2
  %1001 = icmp uge i32 %973, %1000
  %1002 = select i1 %999, i1 %1001, i1 false
  br i1 %1002, label %986, label %1003, !llvm.loop !116

1003:                                             ; preds = %986
  %1004 = icmp sgt i16 %997, -1
  br i1 %1004, label %1044, label %1005

1005:                                             ; preds = %984, %1003, %979, %1019
  %1006 = phi i64 [ %966, %979 ], [ %966, %1003 ], [ %966, %984 ], [ %61, %1019 ]
  %1007 = phi ptr [ %967, %979 ], [ %967, %1003 ], [ %967, %984 ], [ %4, %1019 ]
  %1008 = phi ptr [ %968, %979 ], [ %968, %1003 ], [ %968, %984 ], [ %1, %1019 ]
  %1009 = phi i64 [ %969, %979 ], [ %969, %1003 ], [ %969, %984 ], [ %53, %1019 ]
  %1010 = phi i32 [ %970, %979 ], [ %970, %1003 ], [ %970, %984 ], [ %59, %1019 ]
  %1011 = phi i32 [ %971, %979 ], [ %971, %1003 ], [ %971, %984 ], [ %57, %1019 ]
  %1012 = phi i32 [ %972, %979 ], [ %972, %1003 ], [ %972, %984 ], [ %55, %1019 ]
  %1013 = phi i32 [ %973, %979 ], [ %973, %1003 ], [ %973, %984 ], [ %51, %1019 ]
  %1014 = icmp ult ptr %1008, %14
  br i1 %1014, label %1020, label %1015

1015:                                             ; preds = %1005
  %1016 = and i32 %6, 2
  %1017 = icmp eq i32 %1016, 0
  store i32 16, ptr %0, align 8, !tbaa !79
  %1018 = select i1 %1017, i32 -4, i32 1
  br label %2029

1019:                                             ; preds = %38
  br label %1005, !llvm.loop !117

1020:                                             ; preds = %1005
  %1021 = getelementptr inbounds i8, ptr %1008, i64 1
  %1022 = load i8, ptr %1008, align 1, !tbaa !3
  %1023 = zext i8 %1022 to i64
  %1024 = zext i32 %1013 to i64
  %1025 = shl i64 %1023, %1024
  %1026 = or i64 %1025, %1009
  %1027 = add i32 %1013, 8
  %1028 = icmp ult i32 %1027, 15
  br i1 %1028, label %965, label %1044, !llvm.loop !118

1029:                                             ; preds = %960
  %1030 = load i8, ptr %946, align 1, !tbaa !3
  %1031 = zext i8 %1030 to i64
  %1032 = zext i32 %951 to i64
  %1033 = shl nuw nsw i64 %1031, %1032
  %1034 = getelementptr inbounds i8, ptr %946, i64 1
  %1035 = load i8, ptr %1034, align 1, !tbaa !3
  %1036 = zext i8 %1035 to i64
  %1037 = add nuw nsw i32 %951, 8
  %1038 = zext i32 %1037 to i64
  %1039 = shl nuw nsw i64 %1036, %1038
  %1040 = or i64 %1033, %1039
  %1041 = or i64 %1040, %947
  %1042 = getelementptr inbounds i8, ptr %946, i64 2
  %1043 = add nuw nsw i32 %951, 16
  br label %1044

1044:                                             ; preds = %979, %1029, %1003, %1020, %958
  %1045 = phi i64 [ %1006, %1020 ], [ %966, %1003 ], [ %944, %1029 ], [ %944, %958 ], [ %966, %979 ]
  %1046 = phi ptr [ %1007, %1020 ], [ %967, %1003 ], [ %945, %1029 ], [ %945, %958 ], [ %967, %979 ]
  %1047 = phi ptr [ %1021, %1020 ], [ %968, %1003 ], [ %1042, %1029 ], [ %946, %958 ], [ %968, %979 ]
  %1048 = phi i64 [ %1026, %1020 ], [ %969, %1003 ], [ %1041, %1029 ], [ %947, %958 ], [ %969, %979 ]
  %1049 = phi i32 [ %1010, %1020 ], [ %970, %1003 ], [ %948, %1029 ], [ %948, %958 ], [ %970, %979 ]
  %1050 = phi i32 [ %1011, %1020 ], [ %971, %1003 ], [ %949, %1029 ], [ %949, %958 ], [ %971, %979 ]
  %1051 = phi i32 [ %1027, %1020 ], [ %973, %1003 ], [ %1043, %1029 ], [ %951, %958 ], [ %973, %979 ]
  %1052 = and i64 %1048, 1023
  %1053 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 14, i64 2, i64 %1052
  %1054 = load i16, ptr %1053, align 2, !tbaa !103
  %1055 = sext i16 %1054 to i32
  %1056 = icmp sgt i16 %1054, -1
  br i1 %1056, label %1057, label %1060

1057:                                             ; preds = %1044
  %1058 = lshr i32 %1055, 9
  %1059 = and i32 %1055, 511
  br label %1076

1060:                                             ; preds = %1044, %1060
  %1061 = phi i32 [ %1072, %1060 ], [ %1055, %1044 ]
  %1062 = phi i32 [ %1065, %1060 ], [ 10, %1044 ]
  %1063 = xor i32 %1061, -1
  %1064 = sext i32 %1063 to i64
  %1065 = add i32 %1062, 1
  %1066 = zext i32 %1062 to i64
  %1067 = lshr i64 %1048, %1066
  %1068 = and i64 %1067, 1
  %1069 = add nsw i64 %1068, %1064
  %1070 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 17, i64 %1069
  %1071 = load i16, ptr %1070, align 2, !tbaa !103
  %1072 = sext i16 %1071 to i32
  %1073 = icmp slt i16 %1071, 0
  br i1 %1073, label %1060, label %1074, !llvm.loop !119

1074:                                             ; preds = %1060
  %1075 = sext i16 %1071 to i32
  br label %1076

1076:                                             ; preds = %1074, %1057
  %1077 = phi i32 [ %1059, %1057 ], [ %1075, %1074 ]
  %1078 = phi i32 [ %1058, %1057 ], [ %1065, %1074 ]
  %1079 = zext i32 %1078 to i64
  %1080 = lshr i64 %1048, %1079
  %1081 = sub i32 %1051, %1078
  %1082 = icmp ult i32 %1077, 16
  br i1 %1082, label %1083, label %1088

1083:                                             ; preds = %1076
  %1084 = trunc i32 %1077 to i8
  %1085 = add i32 %1050, 1
  %1086 = zext i32 %1050 to i64
  %1087 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 22, i64 %1086
  store i8 %1084, ptr %1087, align 1, !tbaa !3
  br label %943, !llvm.loop !120

1088:                                             ; preds = %1076
  %1089 = icmp ne i32 %1077, 16
  %1090 = icmp ne i32 %1050, 0
  %1091 = select i1 %1089, i1 true, i1 %1090
  br i1 %1091, label %1101, label %1092

1092:                                             ; preds = %38, %1088
  %1093 = phi i64 [ %1045, %1088 ], [ %61, %38 ]
  %1094 = phi ptr [ %1046, %1088 ], [ %4, %38 ]
  %1095 = phi ptr [ %1047, %1088 ], [ %1, %38 ]
  %1096 = phi i64 [ %1080, %1088 ], [ %53, %38 ]
  %1097 = phi i32 [ %1049, %1088 ], [ %59, %38 ]
  %1098 = phi i32 [ 0, %1088 ], [ %57, %38 ]
  %1099 = phi i32 [ 16, %1088 ], [ %55, %38 ]
  %1100 = phi i32 [ %1081, %1088 ], [ %51, %38 ]
  br label %2001

1101:                                             ; preds = %1088
  %1102 = add nsw i32 %1077, -16
  %1103 = zext i32 %1102 to i64
  %1104 = getelementptr inbounds [4 x i8], ptr @.str.15, i64 0, i64 %1103
  %1105 = load i8, ptr %1104, align 1, !tbaa !3
  %1106 = sext i8 %1105 to i32
  %1107 = icmp ult i32 %1081, %1106
  br i1 %1107, label %1108, label %1139

1108:                                             ; preds = %1126, %1101
  %1109 = phi i64 [ %1045, %1101 ], [ %61, %1126 ]
  %1110 = phi ptr [ %1046, %1101 ], [ %4, %1126 ]
  %1111 = phi ptr [ %1047, %1101 ], [ %1, %1126 ]
  %1112 = phi i64 [ %1080, %1101 ], [ %53, %1126 ]
  %1113 = phi i32 [ %1106, %1101 ], [ %59, %1126 ]
  %1114 = phi i32 [ %1050, %1101 ], [ %57, %1126 ]
  %1115 = phi i32 [ %1077, %1101 ], [ %55, %1126 ]
  %1116 = phi i32 [ %1081, %1101 ], [ %51, %1126 ]
  br label %1117

1117:                                             ; preds = %1108, %1127
  %1118 = phi ptr [ %1128, %1127 ], [ %1111, %1108 ]
  %1119 = phi i64 [ %1133, %1127 ], [ %1112, %1108 ]
  %1120 = phi i32 [ %1134, %1127 ], [ %1116, %1108 ]
  %1121 = icmp ult ptr %1118, %14
  br i1 %1121, label %1127, label %1122

1122:                                             ; preds = %1117
  %1123 = and i32 %6, 2
  %1124 = icmp eq i32 %1123, 0
  store i32 18, ptr %0, align 8, !tbaa !79
  %1125 = select i1 %1124, i32 -4, i32 1
  br label %2029

1126:                                             ; preds = %38
  br label %1108, !llvm.loop !121

1127:                                             ; preds = %1117
  %1128 = getelementptr inbounds i8, ptr %1118, i64 1
  %1129 = load i8, ptr %1118, align 1, !tbaa !3
  %1130 = zext i8 %1129 to i64
  %1131 = zext i32 %1120 to i64
  %1132 = shl i64 %1130, %1131
  %1133 = or i64 %1132, %1119
  %1134 = add i32 %1120, 8
  %1135 = icmp ult i32 %1134, %1113
  br i1 %1135, label %1117, label %1136, !llvm.loop !122

1136:                                             ; preds = %1127
  %1137 = add i32 %1115, -16
  %1138 = zext i32 %1137 to i64
  br label %1139

1139:                                             ; preds = %1136, %1101
  %1140 = phi i64 [ %1138, %1136 ], [ %1103, %1101 ]
  %1141 = phi i64 [ %1109, %1136 ], [ %1045, %1101 ]
  %1142 = phi ptr [ %1110, %1136 ], [ %1046, %1101 ]
  %1143 = phi ptr [ %1128, %1136 ], [ %1047, %1101 ]
  %1144 = phi i64 [ %1133, %1136 ], [ %1080, %1101 ]
  %1145 = phi i32 [ %1113, %1136 ], [ %1106, %1101 ]
  %1146 = phi i32 [ %1114, %1136 ], [ %1050, %1101 ]
  %1147 = phi i32 [ %1115, %1136 ], [ %1077, %1101 ]
  %1148 = phi i32 [ %1134, %1136 ], [ %1081, %1101 ]
  %1149 = shl nsw i32 -1, %1145
  %1150 = xor i32 %1149, -1
  %1151 = trunc i64 %1144 to i32
  %1152 = and i32 %1150, %1151
  %1153 = zext i32 %1145 to i64
  %1154 = lshr i64 %1144, %1153
  %1155 = sub i32 %1148, %1145
  %1156 = getelementptr inbounds [4 x i8], ptr @.str.16, i64 0, i64 %1140
  %1157 = load i8, ptr %1156, align 1, !tbaa !3
  %1158 = sext i8 %1157 to i32
  %1159 = add i32 %1152, %1158
  %1160 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 22
  %1161 = zext i32 %1146 to i64
  %1162 = getelementptr inbounds i8, ptr %1160, i64 %1161
  %1163 = icmp eq i32 %1147, 16
  br i1 %1163, label %1164, label %1169

1164:                                             ; preds = %1139
  %1165 = add i32 %1146, -1
  %1166 = zext i32 %1165 to i64
  %1167 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 22, i64 %1166
  %1168 = load i8, ptr %1167, align 1, !tbaa !3
  br label %1169

1169:                                             ; preds = %1139, %1164
  %1170 = phi i8 [ %1168, %1164 ], [ 0, %1139 ]
  %1171 = zext i32 %1159 to i64
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %1162, i8 %1170, i64 %1171, i1 false)
  %1172 = add i32 %1159, %1146
  br label %943, !llvm.loop !120

1173:                                             ; preds = %943
  %1174 = icmp eq i32 %956, %949
  br i1 %1174, label %1184, label %1175

1175:                                             ; preds = %38, %1173
  %1176 = phi i64 [ %944, %1173 ], [ %61, %38 ]
  %1177 = phi ptr [ %945, %1173 ], [ %4, %38 ]
  %1178 = phi ptr [ %946, %1173 ], [ %1, %38 ]
  %1179 = phi i64 [ %947, %1173 ], [ %53, %38 ]
  %1180 = phi i32 [ %948, %1173 ], [ %59, %38 ]
  %1181 = phi i32 [ %949, %1173 ], [ %57, %38 ]
  %1182 = phi i32 [ %950, %1173 ], [ %55, %38 ]
  %1183 = phi i32 [ %951, %1173 ], [ %51, %38 ]
  br label %2001

1184:                                             ; preds = %1173
  %1185 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 22
  %1186 = zext i32 %953 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %44, ptr nonnull align 1 %1185, i64 %1186, i1 false)
  %1187 = getelementptr inbounds i8, ptr %1185, i64 %1186
  %1188 = zext i32 %955 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 4 %45, ptr nonnull align 1 %1187, i64 %1188, i1 false)
  br label %1189

1189:                                             ; preds = %941, %1184
  %1190 = phi i64 [ %944, %1184 ], [ %621, %941 ]
  %1191 = phi ptr [ %945, %1184 ], [ %622, %941 ]
  %1192 = phi ptr [ %946, %1184 ], [ %623, %941 ]
  %1193 = phi i64 [ %947, %1184 ], [ %624, %941 ]
  %1194 = phi i32 [ %948, %1184 ], [ %625, %941 ]
  %1195 = phi i32 [ %949, %1184 ], [ %626, %941 ]
  %1196 = phi i32 [ %950, %1184 ], [ %627, %941 ]
  %1197 = phi i32 [ %951, %1184 ], [ %628, %941 ]
  %1198 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 6
  %1199 = load i32, ptr %1198, align 8, !tbaa !89
  %1200 = add i32 %1199, -1
  store i32 %1200, ptr %1198, align 8, !tbaa !89
  br label %619, !llvm.loop !123

1201:                                             ; preds = %1352, %1459
  %1202 = phi ptr [ %1462, %1459 ], [ %1354, %1352 ]
  %1203 = phi ptr [ %1390, %1459 ], [ %1355, %1352 ]
  %1204 = phi i64 [ %1452, %1459 ], [ %1356, %1352 ]
  %1205 = phi i32 [ %1417, %1459 ], [ %1358, %1352 ]
  %1206 = phi i32 [ %1453, %1459 ], [ %1360, %1352 ]
  %1207 = ptrtoint ptr %1203 to i64
  %1208 = sub i64 %1361, %1207
  %1209 = icmp slt i64 %1208, 4
  %1210 = ptrtoint ptr %1202 to i64
  %1211 = sub i64 %1362, %1210
  %1212 = icmp slt i64 %1211, 2
  %1213 = select i1 %1209, i1 true, i1 %1212
  br i1 %1213, label %1214, label %1364

1214:                                             ; preds = %1201
  %1215 = icmp ult i32 %1206, 15
  br i1 %1215, label %1216, label %1298

1216:                                             ; preds = %1214
  %1217 = icmp slt i64 %1208, 2
  br i1 %1217, label %1218, label %1283

1218:                                             ; preds = %1216, %1274
  %1219 = phi i64 [ %1353, %1216 ], [ %1260, %1274 ]
  %1220 = phi ptr [ %1202, %1216 ], [ %1261, %1274 ]
  %1221 = phi ptr [ %1203, %1216 ], [ %1275, %1274 ]
  %1222 = phi i64 [ %1204, %1216 ], [ %1280, %1274 ]
  %1223 = phi i32 [ %1357, %1216 ], [ %1264, %1274 ]
  %1224 = phi i32 [ %1205, %1216 ], [ %1265, %1274 ]
  %1225 = phi i32 [ %1359, %1216 ], [ %1266, %1274 ]
  %1226 = phi i32 [ %1206, %1216 ], [ %1281, %1274 ]
  %1227 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 14
  %1228 = and i64 %1222, 1023
  %1229 = getelementptr inbounds [1024 x i16], ptr %1227, i64 0, i64 %1228
  %1230 = load i16, ptr %1229, align 2, !tbaa !103
  %1231 = sext i16 %1230 to i32
  %1232 = icmp sgt i16 %1230, -1
  br i1 %1232, label %1233, label %1238

1233:                                             ; preds = %1218
  %1234 = icmp ult i16 %1230, 512
  %1235 = lshr i32 %1231, 9
  %1236 = icmp ult i32 %1226, %1235
  %1237 = select i1 %1234, i1 true, i1 %1236
  br i1 %1237, label %1259, label %1298

1238:                                             ; preds = %1218
  %1239 = icmp ugt i32 %1226, 10
  br i1 %1239, label %1240, label %1259

1240:                                             ; preds = %1238, %1240
  %1241 = phi i32 [ %1252, %1240 ], [ %1231, %1238 ]
  %1242 = phi i32 [ %1245, %1240 ], [ 10, %1238 ]
  %1243 = xor i32 %1241, -1
  %1244 = sext i32 %1243 to i64
  %1245 = add i32 %1242, 1
  %1246 = zext i32 %1242 to i64
  %1247 = lshr i64 %1222, %1246
  %1248 = and i64 %1247, 1
  %1249 = add nsw i64 %1248, %1244
  %1250 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 15, i64 %1249
  %1251 = load i16, ptr %1250, align 2, !tbaa !103
  %1252 = sext i16 %1251 to i32
  %1253 = icmp slt i16 %1251, 0
  %1254 = add i32 %1242, 2
  %1255 = icmp uge i32 %1226, %1254
  %1256 = select i1 %1253, i1 %1255, i1 false
  br i1 %1256, label %1240, label %1257, !llvm.loop !124

1257:                                             ; preds = %1240
  %1258 = icmp sgt i16 %1251, -1
  br i1 %1258, label %1298, label %1259

1259:                                             ; preds = %1238, %1257, %1233, %1273
  %1260 = phi i64 [ %1219, %1233 ], [ %1219, %1257 ], [ %1219, %1238 ], [ %61, %1273 ]
  %1261 = phi ptr [ %1220, %1233 ], [ %1220, %1257 ], [ %1220, %1238 ], [ %4, %1273 ]
  %1262 = phi ptr [ %1221, %1233 ], [ %1221, %1257 ], [ %1221, %1238 ], [ %1, %1273 ]
  %1263 = phi i64 [ %1222, %1233 ], [ %1222, %1257 ], [ %1222, %1238 ], [ %53, %1273 ]
  %1264 = phi i32 [ %1223, %1233 ], [ %1223, %1257 ], [ %1223, %1238 ], [ %59, %1273 ]
  %1265 = phi i32 [ %1224, %1233 ], [ %1224, %1257 ], [ %1224, %1238 ], [ %57, %1273 ]
  %1266 = phi i32 [ %1225, %1233 ], [ %1225, %1257 ], [ %1225, %1238 ], [ %55, %1273 ]
  %1267 = phi i32 [ %1226, %1233 ], [ %1226, %1257 ], [ %1226, %1238 ], [ %51, %1273 ]
  %1268 = icmp ult ptr %1262, %14
  br i1 %1268, label %1274, label %1269

1269:                                             ; preds = %1259
  %1270 = and i32 %6, 2
  %1271 = icmp eq i32 %1270, 0
  store i32 23, ptr %0, align 8, !tbaa !79
  %1272 = select i1 %1271, i32 -4, i32 1
  br label %2029

1273:                                             ; preds = %38
  br label %1259, !llvm.loop !125

1274:                                             ; preds = %1259
  %1275 = getelementptr inbounds i8, ptr %1262, i64 1
  %1276 = load i8, ptr %1262, align 1, !tbaa !3
  %1277 = zext i8 %1276 to i64
  %1278 = zext i32 %1267 to i64
  %1279 = shl i64 %1277, %1278
  %1280 = or i64 %1279, %1263
  %1281 = add i32 %1267, 8
  %1282 = icmp ult i32 %1281, 15
  br i1 %1282, label %1218, label %1298, !llvm.loop !126

1283:                                             ; preds = %1216
  %1284 = load i8, ptr %1203, align 1, !tbaa !3
  %1285 = zext i8 %1284 to i64
  %1286 = zext i32 %1206 to i64
  %1287 = shl nuw nsw i64 %1285, %1286
  %1288 = getelementptr inbounds i8, ptr %1203, i64 1
  %1289 = load i8, ptr %1288, align 1, !tbaa !3
  %1290 = zext i8 %1289 to i64
  %1291 = add nuw nsw i32 %1206, 8
  %1292 = zext i32 %1291 to i64
  %1293 = shl nuw nsw i64 %1290, %1292
  %1294 = or i64 %1287, %1293
  %1295 = or i64 %1294, %1204
  %1296 = getelementptr inbounds i8, ptr %1203, i64 2
  %1297 = add nuw nsw i32 %1206, 16
  br label %1298

1298:                                             ; preds = %1233, %1283, %1257, %1274, %1214
  %1299 = phi i64 [ %1260, %1274 ], [ %1219, %1257 ], [ %1353, %1283 ], [ %1353, %1214 ], [ %1219, %1233 ]
  %1300 = phi ptr [ %1261, %1274 ], [ %1220, %1257 ], [ %1202, %1283 ], [ %1202, %1214 ], [ %1220, %1233 ]
  %1301 = phi ptr [ %1275, %1274 ], [ %1221, %1257 ], [ %1296, %1283 ], [ %1203, %1214 ], [ %1221, %1233 ]
  %1302 = phi i64 [ %1280, %1274 ], [ %1222, %1257 ], [ %1295, %1283 ], [ %1204, %1214 ], [ %1222, %1233 ]
  %1303 = phi i32 [ %1264, %1274 ], [ %1223, %1257 ], [ %1357, %1283 ], [ %1357, %1214 ], [ %1223, %1233 ]
  %1304 = phi i32 [ %1266, %1274 ], [ %1225, %1257 ], [ %1359, %1283 ], [ %1359, %1214 ], [ %1225, %1233 ]
  %1305 = phi i32 [ %1281, %1274 ], [ %1226, %1257 ], [ %1297, %1283 ], [ %1206, %1214 ], [ %1226, %1233 ]
  %1306 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 14
  %1307 = and i64 %1302, 1023
  %1308 = getelementptr inbounds [1024 x i16], ptr %1306, i64 0, i64 %1307
  %1309 = load i16, ptr %1308, align 2, !tbaa !103
  %1310 = sext i16 %1309 to i32
  %1311 = icmp sgt i16 %1309, -1
  br i1 %1311, label %1312, label %1315

1312:                                             ; preds = %1298
  %1313 = lshr i32 %1310, 9
  %1314 = and i32 %1310, 511
  br label %1331

1315:                                             ; preds = %1298, %1315
  %1316 = phi i32 [ %1327, %1315 ], [ %1310, %1298 ]
  %1317 = phi i32 [ %1320, %1315 ], [ 10, %1298 ]
  %1318 = xor i32 %1316, -1
  %1319 = sext i32 %1318 to i64
  %1320 = add i32 %1317, 1
  %1321 = zext i32 %1317 to i64
  %1322 = lshr i64 %1302, %1321
  %1323 = and i64 %1322, 1
  %1324 = add nsw i64 %1323, %1319
  %1325 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 15, i64 %1324
  %1326 = load i16, ptr %1325, align 2, !tbaa !103
  %1327 = sext i16 %1326 to i32
  %1328 = icmp slt i16 %1326, 0
  br i1 %1328, label %1315, label %1329, !llvm.loop !127

1329:                                             ; preds = %1315
  %1330 = sext i16 %1326 to i32
  br label %1331

1331:                                             ; preds = %1329, %1312
  %1332 = phi i32 [ %1314, %1312 ], [ %1330, %1329 ]
  %1333 = phi i32 [ %1313, %1312 ], [ %1320, %1329 ]
  %1334 = zext i32 %1333 to i64
  %1335 = lshr i64 %1302, %1334
  %1336 = sub i32 %1305, %1333
  %1337 = icmp ugt i32 %1332, 255
  br i1 %1337, label %1463, label %1338

1338:                                             ; preds = %1331, %1348
  %1339 = phi i64 [ %1299, %1331 ], [ %61, %1348 ]
  %1340 = phi ptr [ %1300, %1331 ], [ %4, %1348 ]
  %1341 = phi ptr [ %1301, %1331 ], [ %1, %1348 ]
  %1342 = phi i64 [ %1335, %1331 ], [ %53, %1348 ]
  %1343 = phi i32 [ %1303, %1331 ], [ %59, %1348 ]
  %1344 = phi i32 [ %1332, %1331 ], [ %57, %1348 ]
  %1345 = phi i32 [ %1304, %1331 ], [ %55, %1348 ]
  %1346 = phi i32 [ %1336, %1331 ], [ %51, %1348 ]
  %1347 = icmp ult ptr %1340, %20
  br i1 %1347, label %1349, label %2001

1348:                                             ; preds = %38
  br label %1338, !llvm.loop !128

1349:                                             ; preds = %1338
  %1350 = trunc i32 %1344 to i8
  %1351 = getelementptr inbounds i8, ptr %1340, i64 1
  store i8 %1350, ptr %1340, align 1, !tbaa !3
  br label %1352

1352:                                             ; preds = %1778, %619, %1349, %1844, %1832
  %1353 = phi i64 [ %1728, %1832 ], [ %1728, %1844 ], [ %1339, %1349 ], [ %621, %619 ], [ %1779, %1778 ]
  %1354 = phi ptr [ %1833, %1832 ], [ %1846, %1844 ], [ %1351, %1349 ], [ %622, %619 ], [ %1780, %1778 ]
  %1355 = phi ptr [ %1720, %1832 ], [ %1720, %1844 ], [ %1341, %1349 ], [ %623, %619 ], [ %1781, %1778 ]
  %1356 = phi i64 [ %1721, %1832 ], [ %1721, %1844 ], [ %1342, %1349 ], [ %624, %619 ], [ %1782, %1778 ]
  %1357 = phi i32 [ %1722, %1832 ], [ %1722, %1844 ], [ %1343, %1349 ], [ %625, %619 ], [ %1783, %1778 ]
  %1358 = phi i32 [ %1835, %1832 ], [ %1835, %1844 ], [ %1344, %1349 ], [ %626, %619 ], [ -1, %1778 ]
  %1359 = phi i32 [ %1724, %1832 ], [ %1724, %1844 ], [ %1345, %1349 ], [ %627, %619 ], [ %1785, %1778 ]
  %1360 = phi i32 [ %1725, %1832 ], [ %1725, %1844 ], [ %1346, %1349 ], [ %628, %619 ], [ %1786, %1778 ]
  %1361 = ptrtoint ptr %14 to i64
  %1362 = ptrtoint ptr %20 to i64
  %1363 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 14
  br label %1201

1364:                                             ; preds = %1201
  %1365 = icmp ult i32 %1206, 30
  br i1 %1365, label %1366, label %1389

1366:                                             ; preds = %1364
  %1367 = load i8, ptr %1203, align 1, !tbaa !3
  %1368 = zext i8 %1367 to i64
  %1369 = getelementptr inbounds i8, ptr %1203, i64 1
  %1370 = load i8, ptr %1369, align 1, !tbaa !3
  %1371 = zext i8 %1370 to i64
  %1372 = shl nuw nsw i64 %1371, 8
  %1373 = or i64 %1372, %1368
  %1374 = getelementptr inbounds i8, ptr %1203, i64 2
  %1375 = load i8, ptr %1374, align 1, !tbaa !3
  %1376 = zext i8 %1375 to i64
  %1377 = shl nuw nsw i64 %1376, 16
  %1378 = or i64 %1373, %1377
  %1379 = getelementptr inbounds i8, ptr %1203, i64 3
  %1380 = load i8, ptr %1379, align 1, !tbaa !3
  %1381 = zext i8 %1380 to i64
  %1382 = shl nuw nsw i64 %1381, 24
  %1383 = or i64 %1378, %1382
  %1384 = zext i32 %1206 to i64
  %1385 = shl nuw nsw i64 %1383, %1384
  %1386 = or i64 %1385, %1204
  %1387 = getelementptr inbounds i8, ptr %1203, i64 4
  %1388 = add nuw nsw i32 %1206, 32
  br label %1389

1389:                                             ; preds = %1366, %1364
  %1390 = phi ptr [ %1387, %1366 ], [ %1203, %1364 ]
  %1391 = phi i64 [ %1386, %1366 ], [ %1204, %1364 ]
  %1392 = phi i32 [ %1388, %1366 ], [ %1206, %1364 ]
  %1393 = and i64 %1391, 1023
  %1394 = getelementptr inbounds [1024 x i16], ptr %1363, i64 0, i64 %1393
  %1395 = load i16, ptr %1394, align 2, !tbaa !103
  %1396 = sext i16 %1395 to i32
  %1397 = icmp sgt i16 %1395, -1
  br i1 %1397, label %1398, label %1400

1398:                                             ; preds = %1389
  %1399 = lshr i32 %1396, 9
  br label %1416

1400:                                             ; preds = %1389, %1400
  %1401 = phi i32 [ %1412, %1400 ], [ %1396, %1389 ]
  %1402 = phi i32 [ %1405, %1400 ], [ 10, %1389 ]
  %1403 = xor i32 %1401, -1
  %1404 = sext i32 %1403 to i64
  %1405 = add i32 %1402, 1
  %1406 = zext i32 %1402 to i64
  %1407 = lshr i64 %1391, %1406
  %1408 = and i64 %1407, 1
  %1409 = add nsw i64 %1408, %1404
  %1410 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 15, i64 %1409
  %1411 = load i16, ptr %1410, align 2, !tbaa !103
  %1412 = sext i16 %1411 to i32
  %1413 = icmp slt i16 %1411, 0
  br i1 %1413, label %1400, label %1414, !llvm.loop !129

1414:                                             ; preds = %1400
  %1415 = sext i16 %1411 to i32
  br label %1416

1416:                                             ; preds = %1414, %1398
  %1417 = phi i32 [ %1396, %1398 ], [ %1415, %1414 ]
  %1418 = phi i32 [ %1399, %1398 ], [ %1405, %1414 ]
  %1419 = zext i32 %1418 to i64
  %1420 = lshr i64 %1391, %1419
  %1421 = sub i32 %1392, %1418
  %1422 = and i32 %1417, 256
  %1423 = icmp eq i32 %1422, 0
  br i1 %1423, label %1424, label %1463

1424:                                             ; preds = %1416
  %1425 = and i64 %1420, 1023
  %1426 = getelementptr inbounds [1024 x i16], ptr %1363, i64 0, i64 %1425
  %1427 = load i16, ptr %1426, align 2, !tbaa !103
  %1428 = sext i16 %1427 to i32
  %1429 = icmp sgt i16 %1427, -1
  br i1 %1429, label %1430, label %1432

1430:                                             ; preds = %1424
  %1431 = lshr i32 %1428, 9
  br label %1448

1432:                                             ; preds = %1424, %1432
  %1433 = phi i32 [ %1444, %1432 ], [ %1428, %1424 ]
  %1434 = phi i32 [ %1437, %1432 ], [ 10, %1424 ]
  %1435 = xor i32 %1433, -1
  %1436 = sext i32 %1435 to i64
  %1437 = add i32 %1434, 1
  %1438 = zext i32 %1434 to i64
  %1439 = lshr i64 %1420, %1438
  %1440 = and i64 %1439, 1
  %1441 = add nsw i64 %1440, %1436
  %1442 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 15, i64 %1441
  %1443 = load i16, ptr %1442, align 2, !tbaa !103
  %1444 = sext i16 %1443 to i32
  %1445 = icmp slt i16 %1443, 0
  br i1 %1445, label %1432, label %1446, !llvm.loop !130

1446:                                             ; preds = %1432
  %1447 = sext i16 %1443 to i32
  br label %1448

1448:                                             ; preds = %1446, %1430
  %1449 = phi i32 [ %1428, %1430 ], [ %1447, %1446 ]
  %1450 = phi i32 [ %1431, %1430 ], [ %1437, %1446 ]
  %1451 = zext i32 %1450 to i64
  %1452 = lshr i64 %1420, %1451
  %1453 = sub i32 %1421, %1450
  %1454 = trunc i32 %1417 to i8
  store i8 %1454, ptr %1202, align 1, !tbaa !3
  %1455 = and i32 %1449, 256
  %1456 = icmp eq i32 %1455, 0
  br i1 %1456, label %1459, label %1457

1457:                                             ; preds = %1448
  %1458 = getelementptr inbounds i8, ptr %1202, i64 1
  br label %1463

1459:                                             ; preds = %1448
  %1460 = trunc i32 %1449 to i8
  %1461 = getelementptr inbounds i8, ptr %1202, i64 1
  store i8 %1460, ptr %1461, align 1, !tbaa !3
  %1462 = getelementptr inbounds i8, ptr %1202, i64 2
  br label %1201

1463:                                             ; preds = %1416, %1457, %1331
  %1464 = phi i64 [ %1299, %1331 ], [ %1353, %1457 ], [ %1353, %1416 ]
  %1465 = phi ptr [ %1300, %1331 ], [ %1458, %1457 ], [ %1202, %1416 ]
  %1466 = phi ptr [ %1301, %1331 ], [ %1390, %1457 ], [ %1390, %1416 ]
  %1467 = phi i64 [ %1335, %1331 ], [ %1452, %1457 ], [ %1420, %1416 ]
  %1468 = phi i32 [ %1303, %1331 ], [ %1357, %1457 ], [ %1357, %1416 ]
  %1469 = phi i32 [ %1332, %1331 ], [ %1449, %1457 ], [ %1417, %1416 ]
  %1470 = phi i32 [ %1304, %1331 ], [ %1359, %1457 ], [ %1359, %1416 ]
  %1471 = phi i32 [ %1336, %1331 ], [ %1453, %1457 ], [ %1421, %1416 ]
  %1472 = and i32 %1469, 511
  %1473 = icmp eq i32 %1472, 256
  br i1 %1473, label %1847, label %1474

1474:                                             ; preds = %1463
  %1475 = add nsw i32 %1472, -257
  %1476 = zext i32 %1475 to i64
  %1477 = getelementptr inbounds [31 x i16], ptr @tinfl_decompress.s_length_base, i64 0, i64 %1476
  %1478 = load i16, ptr %1477, align 2, !tbaa !103
  %1479 = zext i16 %1478 to i32
  %1480 = add nsw i64 %1476, -28
  %1481 = icmp ult i64 %1480, -20
  br i1 %1481, label %1532, label %1482

1482:                                             ; preds = %1474
  %1483 = getelementptr inbounds [31 x i8], ptr @tinfl_decompress.s_length_extra, i64 0, i64 %1476
  %1484 = load i8, ptr %1483, align 1, !tbaa !3
  %1485 = zext i8 %1484 to i32
  %1486 = icmp ult i32 %1471, %1485
  br i1 %1486, label %1487, label %1515

1487:                                             ; preds = %1505, %1482
  %1488 = phi i64 [ %1464, %1482 ], [ %61, %1505 ]
  %1489 = phi ptr [ %1465, %1482 ], [ %4, %1505 ]
  %1490 = phi ptr [ %1466, %1482 ], [ %1, %1505 ]
  %1491 = phi i64 [ %1467, %1482 ], [ %53, %1505 ]
  %1492 = phi i32 [ %1485, %1482 ], [ %59, %1505 ]
  %1493 = phi i32 [ %1479, %1482 ], [ %57, %1505 ]
  %1494 = phi i32 [ %1470, %1482 ], [ %55, %1505 ]
  %1495 = phi i32 [ %1471, %1482 ], [ %51, %1505 ]
  br label %1496

1496:                                             ; preds = %1487, %1506
  %1497 = phi ptr [ %1507, %1506 ], [ %1490, %1487 ]
  %1498 = phi i64 [ %1512, %1506 ], [ %1491, %1487 ]
  %1499 = phi i32 [ %1513, %1506 ], [ %1495, %1487 ]
  %1500 = icmp ult ptr %1497, %14
  br i1 %1500, label %1506, label %1501

1501:                                             ; preds = %1496
  %1502 = and i32 %6, 2
  %1503 = icmp eq i32 %1502, 0
  store i32 25, ptr %0, align 8, !tbaa !79
  %1504 = select i1 %1503, i32 -4, i32 1
  br label %2029

1505:                                             ; preds = %38
  br label %1487, !llvm.loop !131

1506:                                             ; preds = %1496
  %1507 = getelementptr inbounds i8, ptr %1497, i64 1
  %1508 = load i8, ptr %1497, align 1, !tbaa !3
  %1509 = zext i8 %1508 to i64
  %1510 = zext i32 %1499 to i64
  %1511 = shl i64 %1509, %1510
  %1512 = or i64 %1511, %1498
  %1513 = add i32 %1499, 8
  %1514 = icmp ult i32 %1513, %1492
  br i1 %1514, label %1496, label %1515, !llvm.loop !132

1515:                                             ; preds = %1506, %1482
  %1516 = phi i64 [ %1464, %1482 ], [ %1488, %1506 ]
  %1517 = phi ptr [ %1465, %1482 ], [ %1489, %1506 ]
  %1518 = phi ptr [ %1466, %1482 ], [ %1507, %1506 ]
  %1519 = phi i64 [ %1467, %1482 ], [ %1512, %1506 ]
  %1520 = phi i32 [ %1485, %1482 ], [ %1492, %1506 ]
  %1521 = phi i32 [ %1479, %1482 ], [ %1493, %1506 ]
  %1522 = phi i32 [ %1470, %1482 ], [ %1494, %1506 ]
  %1523 = phi i32 [ %1471, %1482 ], [ %1513, %1506 ]
  %1524 = shl nsw i32 -1, %1520
  %1525 = xor i32 %1524, -1
  %1526 = trunc i64 %1519 to i32
  %1527 = and i32 %1525, %1526
  %1528 = zext i32 %1520 to i64
  %1529 = lshr i64 %1519, %1528
  %1530 = sub i32 %1523, %1520
  %1531 = add i32 %1527, %1521
  br label %1532

1532:                                             ; preds = %1474, %1515
  %1533 = phi i64 [ %1516, %1515 ], [ %1464, %1474 ]
  %1534 = phi ptr [ %1517, %1515 ], [ %1465, %1474 ]
  %1535 = phi ptr [ %1518, %1515 ], [ %1466, %1474 ]
  %1536 = phi i64 [ %1529, %1515 ], [ %1467, %1474 ]
  %1537 = phi i32 [ %1520, %1515 ], [ 0, %1474 ]
  %1538 = phi i32 [ %1531, %1515 ], [ %1479, %1474 ]
  %1539 = phi i32 [ %1522, %1515 ], [ %1470, %1474 ]
  %1540 = phi i32 [ %1530, %1515 ], [ %1471, %1474 ]
  %1541 = icmp ult i32 %1540, 15
  br i1 %1541, label %1542, label %1626

1542:                                             ; preds = %1532
  %1543 = ptrtoint ptr %14 to i64
  %1544 = ptrtoint ptr %1535 to i64
  %1545 = sub i64 %1543, %1544
  %1546 = icmp slt i64 %1545, 2
  br i1 %1546, label %1547, label %1611

1547:                                             ; preds = %1542, %1602
  %1548 = phi i64 [ %1533, %1542 ], [ %1588, %1602 ]
  %1549 = phi ptr [ %1534, %1542 ], [ %1589, %1602 ]
  %1550 = phi ptr [ %1535, %1542 ], [ %1603, %1602 ]
  %1551 = phi i64 [ %1536, %1542 ], [ %1608, %1602 ]
  %1552 = phi i32 [ %1537, %1542 ], [ %1592, %1602 ]
  %1553 = phi i32 [ %1538, %1542 ], [ %1593, %1602 ]
  %1554 = phi i32 [ %1539, %1542 ], [ %1594, %1602 ]
  %1555 = phi i32 [ %1540, %1542 ], [ %1609, %1602 ]
  %1556 = and i64 %1551, 1023
  %1557 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 14, i64 1, i64 %1556
  %1558 = load i16, ptr %1557, align 2, !tbaa !103
  %1559 = sext i16 %1558 to i32
  %1560 = icmp sgt i16 %1558, -1
  br i1 %1560, label %1561, label %1566

1561:                                             ; preds = %1547
  %1562 = icmp ult i16 %1558, 512
  %1563 = lshr i32 %1559, 9
  %1564 = icmp ult i32 %1555, %1563
  %1565 = select i1 %1562, i1 true, i1 %1564
  br i1 %1565, label %1587, label %1626

1566:                                             ; preds = %1547
  %1567 = icmp ugt i32 %1555, 10
  br i1 %1567, label %1568, label %1587

1568:                                             ; preds = %1566, %1568
  %1569 = phi i32 [ %1580, %1568 ], [ %1559, %1566 ]
  %1570 = phi i32 [ %1573, %1568 ], [ 10, %1566 ]
  %1571 = xor i32 %1569, -1
  %1572 = sext i32 %1571 to i64
  %1573 = add i32 %1570, 1
  %1574 = zext i32 %1570 to i64
  %1575 = lshr i64 %1551, %1574
  %1576 = and i64 %1575, 1
  %1577 = add nsw i64 %1576, %1572
  %1578 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 16, i64 %1577
  %1579 = load i16, ptr %1578, align 2, !tbaa !103
  %1580 = sext i16 %1579 to i32
  %1581 = icmp slt i16 %1579, 0
  %1582 = add i32 %1570, 2
  %1583 = icmp uge i32 %1555, %1582
  %1584 = select i1 %1581, i1 %1583, i1 false
  br i1 %1584, label %1568, label %1585, !llvm.loop !133

1585:                                             ; preds = %1568
  %1586 = icmp sgt i16 %1579, -1
  br i1 %1586, label %1626, label %1587

1587:                                             ; preds = %1566, %1585, %1561, %1601
  %1588 = phi i64 [ %1548, %1561 ], [ %1548, %1585 ], [ %1548, %1566 ], [ %61, %1601 ]
  %1589 = phi ptr [ %1549, %1561 ], [ %1549, %1585 ], [ %1549, %1566 ], [ %4, %1601 ]
  %1590 = phi ptr [ %1550, %1561 ], [ %1550, %1585 ], [ %1550, %1566 ], [ %1, %1601 ]
  %1591 = phi i64 [ %1551, %1561 ], [ %1551, %1585 ], [ %1551, %1566 ], [ %53, %1601 ]
  %1592 = phi i32 [ %1552, %1561 ], [ %1552, %1585 ], [ %1552, %1566 ], [ %59, %1601 ]
  %1593 = phi i32 [ %1553, %1561 ], [ %1553, %1585 ], [ %1553, %1566 ], [ %57, %1601 ]
  %1594 = phi i32 [ %1554, %1561 ], [ %1554, %1585 ], [ %1554, %1566 ], [ %55, %1601 ]
  %1595 = phi i32 [ %1555, %1561 ], [ %1555, %1585 ], [ %1555, %1566 ], [ %51, %1601 ]
  %1596 = icmp ult ptr %1590, %14
  br i1 %1596, label %1602, label %1597

1597:                                             ; preds = %1587
  %1598 = and i32 %6, 2
  %1599 = icmp eq i32 %1598, 0
  store i32 26, ptr %0, align 8, !tbaa !79
  %1600 = select i1 %1599, i32 -4, i32 1
  br label %2029

1601:                                             ; preds = %38
  br label %1587, !llvm.loop !134

1602:                                             ; preds = %1587
  %1603 = getelementptr inbounds i8, ptr %1590, i64 1
  %1604 = load i8, ptr %1590, align 1, !tbaa !3
  %1605 = zext i8 %1604 to i64
  %1606 = zext i32 %1595 to i64
  %1607 = shl i64 %1605, %1606
  %1608 = or i64 %1607, %1591
  %1609 = add i32 %1595, 8
  %1610 = icmp ult i32 %1609, 15
  br i1 %1610, label %1547, label %1626, !llvm.loop !135

1611:                                             ; preds = %1542
  %1612 = load i8, ptr %1535, align 1, !tbaa !3
  %1613 = zext i8 %1612 to i64
  %1614 = zext i32 %1540 to i64
  %1615 = shl nuw nsw i64 %1613, %1614
  %1616 = getelementptr inbounds i8, ptr %1535, i64 1
  %1617 = load i8, ptr %1616, align 1, !tbaa !3
  %1618 = zext i8 %1617 to i64
  %1619 = add nuw nsw i32 %1540, 8
  %1620 = zext i32 %1619 to i64
  %1621 = shl nuw nsw i64 %1618, %1620
  %1622 = or i64 %1615, %1621
  %1623 = or i64 %1622, %1536
  %1624 = getelementptr inbounds i8, ptr %1535, i64 2
  %1625 = add nuw nsw i32 %1540, 16
  br label %1626

1626:                                             ; preds = %1561, %1611, %1585, %1602, %1532
  %1627 = phi i64 [ %1588, %1602 ], [ %1548, %1585 ], [ %1533, %1611 ], [ %1533, %1532 ], [ %1548, %1561 ]
  %1628 = phi ptr [ %1589, %1602 ], [ %1549, %1585 ], [ %1534, %1611 ], [ %1534, %1532 ], [ %1549, %1561 ]
  %1629 = phi ptr [ %1603, %1602 ], [ %1550, %1585 ], [ %1624, %1611 ], [ %1535, %1532 ], [ %1550, %1561 ]
  %1630 = phi i64 [ %1608, %1602 ], [ %1551, %1585 ], [ %1623, %1611 ], [ %1536, %1532 ], [ %1551, %1561 ]
  %1631 = phi i32 [ %1593, %1602 ], [ %1553, %1585 ], [ %1538, %1611 ], [ %1538, %1532 ], [ %1553, %1561 ]
  %1632 = phi i32 [ %1609, %1602 ], [ %1555, %1585 ], [ %1625, %1611 ], [ %1540, %1532 ], [ %1555, %1561 ]
  %1633 = and i64 %1630, 1023
  %1634 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 14, i64 1, i64 %1633
  %1635 = load i16, ptr %1634, align 2, !tbaa !103
  %1636 = sext i16 %1635 to i32
  %1637 = icmp sgt i16 %1635, -1
  br i1 %1637, label %1638, label %1641

1638:                                             ; preds = %1626
  %1639 = lshr i32 %1636, 9
  %1640 = and i32 %1636, 511
  br label %1657

1641:                                             ; preds = %1626, %1641
  %1642 = phi i32 [ %1653, %1641 ], [ %1636, %1626 ]
  %1643 = phi i32 [ %1646, %1641 ], [ 10, %1626 ]
  %1644 = xor i32 %1642, -1
  %1645 = sext i32 %1644 to i64
  %1646 = add i32 %1643, 1
  %1647 = zext i32 %1643 to i64
  %1648 = lshr i64 %1630, %1647
  %1649 = and i64 %1648, 1
  %1650 = add nsw i64 %1649, %1645
  %1651 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 16, i64 %1650
  %1652 = load i16, ptr %1651, align 2, !tbaa !103
  %1653 = sext i16 %1652 to i32
  %1654 = icmp slt i16 %1652, 0
  br i1 %1654, label %1641, label %1655, !llvm.loop !136

1655:                                             ; preds = %1641
  %1656 = sext i16 %1652 to i32
  br label %1657

1657:                                             ; preds = %1655, %1638
  %1658 = phi i32 [ %1640, %1638 ], [ %1656, %1655 ]
  %1659 = phi i32 [ %1639, %1638 ], [ %1646, %1655 ]
  %1660 = zext i32 %1659 to i64
  %1661 = lshr i64 %1630, %1660
  %1662 = sub i32 %1632, %1659
  %1663 = zext i32 %1658 to i64
  %1664 = getelementptr inbounds [32 x i16], ptr @tinfl_decompress.s_dist_base, i64 0, i64 %1663
  %1665 = load i16, ptr %1664, align 2, !tbaa !103
  %1666 = zext i16 %1665 to i32
  %1667 = add nsw i64 %1663, -30
  %1668 = icmp ult i64 %1667, -26
  br i1 %1668, label %1718, label %1669

1669:                                             ; preds = %1657
  %1670 = getelementptr inbounds [32 x i8], ptr @tinfl_decompress.s_dist_extra, i64 0, i64 %1663
  %1671 = load i8, ptr %1670, align 1, !tbaa !3
  %1672 = zext i8 %1671 to i32
  %1673 = icmp ult i32 %1662, %1672
  br i1 %1673, label %1674, label %1702

1674:                                             ; preds = %1692, %1669
  %1675 = phi i64 [ %1627, %1669 ], [ %61, %1692 ]
  %1676 = phi ptr [ %1628, %1669 ], [ %4, %1692 ]
  %1677 = phi ptr [ %1629, %1669 ], [ %1, %1692 ]
  %1678 = phi i64 [ %1661, %1669 ], [ %53, %1692 ]
  %1679 = phi i32 [ %1672, %1669 ], [ %59, %1692 ]
  %1680 = phi i32 [ %1631, %1669 ], [ %57, %1692 ]
  %1681 = phi i32 [ %1666, %1669 ], [ %55, %1692 ]
  %1682 = phi i32 [ %1662, %1669 ], [ %51, %1692 ]
  br label %1683

1683:                                             ; preds = %1674, %1693
  %1684 = phi ptr [ %1694, %1693 ], [ %1677, %1674 ]
  %1685 = phi i64 [ %1699, %1693 ], [ %1678, %1674 ]
  %1686 = phi i32 [ %1700, %1693 ], [ %1682, %1674 ]
  %1687 = icmp ult ptr %1684, %14
  br i1 %1687, label %1693, label %1688

1688:                                             ; preds = %1683
  %1689 = and i32 %6, 2
  %1690 = icmp eq i32 %1689, 0
  store i32 27, ptr %0, align 8, !tbaa !79
  %1691 = select i1 %1690, i32 -4, i32 1
  br label %2029

1692:                                             ; preds = %38
  br label %1674, !llvm.loop !137

1693:                                             ; preds = %1683
  %1694 = getelementptr inbounds i8, ptr %1684, i64 1
  %1695 = load i8, ptr %1684, align 1, !tbaa !3
  %1696 = zext i8 %1695 to i64
  %1697 = zext i32 %1686 to i64
  %1698 = shl i64 %1696, %1697
  %1699 = or i64 %1698, %1685
  %1700 = add i32 %1686, 8
  %1701 = icmp ult i32 %1700, %1679
  br i1 %1701, label %1683, label %1702, !llvm.loop !138

1702:                                             ; preds = %1693, %1669
  %1703 = phi ptr [ %1628, %1669 ], [ %1676, %1693 ]
  %1704 = phi ptr [ %1629, %1669 ], [ %1694, %1693 ]
  %1705 = phi i64 [ %1661, %1669 ], [ %1699, %1693 ]
  %1706 = phi i32 [ %1672, %1669 ], [ %1679, %1693 ]
  %1707 = phi i32 [ %1631, %1669 ], [ %1680, %1693 ]
  %1708 = phi i32 [ %1666, %1669 ], [ %1681, %1693 ]
  %1709 = phi i32 [ %1662, %1669 ], [ %1700, %1693 ]
  %1710 = shl nsw i32 -1, %1706
  %1711 = xor i32 %1710, -1
  %1712 = trunc i64 %1705 to i32
  %1713 = and i32 %1711, %1712
  %1714 = zext i32 %1706 to i64
  %1715 = lshr i64 %1705, %1714
  %1716 = sub i32 %1709, %1706
  %1717 = add i32 %1708, %1713
  br label %1718

1718:                                             ; preds = %1702, %1657
  %1719 = phi ptr [ %1703, %1702 ], [ %1628, %1657 ]
  %1720 = phi ptr [ %1704, %1702 ], [ %1629, %1657 ]
  %1721 = phi i64 [ %1715, %1702 ], [ %1661, %1657 ]
  %1722 = phi i32 [ %1706, %1702 ], [ 0, %1657 ]
  %1723 = phi i32 [ %1707, %1702 ], [ %1631, %1657 ]
  %1724 = phi i32 [ %1717, %1702 ], [ %1666, %1657 ]
  %1725 = phi i32 [ %1716, %1702 ], [ %1662, %1657 ]
  %1726 = ptrtoint ptr %1719 to i64
  %1727 = ptrtoint ptr %3 to i64
  %1728 = sub i64 %1726, %1727
  %1729 = icmp ne i32 %1724, 0
  %1730 = zext i32 %1724 to i64
  %1731 = icmp uge i64 %1728, %1730
  %1732 = select i1 %1729, i1 %1731, i1 false
  %1733 = or i1 %22, %1732
  br i1 %1733, label %1743, label %1734

1734:                                             ; preds = %1718, %38
  %1735 = phi i64 [ %61, %38 ], [ %1728, %1718 ]
  %1736 = phi ptr [ %4, %38 ], [ %1719, %1718 ]
  %1737 = phi ptr [ %1, %38 ], [ %1720, %1718 ]
  %1738 = phi i64 [ %53, %38 ], [ %1721, %1718 ]
  %1739 = phi i32 [ %59, %38 ], [ %1722, %1718 ]
  %1740 = phi i32 [ %57, %38 ], [ %1723, %1718 ]
  %1741 = phi i32 [ %55, %38 ], [ %1724, %1718 ]
  %1742 = phi i32 [ %51, %38 ], [ %1725, %1718 ]
  br label %2001

1743:                                             ; preds = %1718
  %1744 = sub i64 %1728, %1730
  %1745 = and i64 %1744, %31
  %1746 = getelementptr inbounds i8, ptr %3, i64 %1745
  %1747 = icmp ugt ptr %1719, %1746
  %1748 = select i1 %1747, ptr %1719, ptr %1746
  %1749 = zext i32 %1723 to i64
  %1750 = getelementptr inbounds i8, ptr %1748, i64 %1749
  %1751 = icmp ugt ptr %1750, %20
  br i1 %1751, label %1778, label %1752

1752:                                             ; preds = %1743
  %1753 = icmp ugt i32 %1723, 2
  br i1 %1753, label %1754, label %1832

1754:                                             ; preds = %1752
  %1755 = add i32 %1723, -3
  %1756 = udiv i32 %1755, 3
  %1757 = and i32 %1756, 1
  %1758 = icmp eq i32 %1757, 0
  br i1 %1758, label %1759, label %1770

1759:                                             ; preds = %1754
  %1760 = load i8, ptr %1746, align 1, !tbaa !3
  store i8 %1760, ptr %1719, align 1, !tbaa !3
  %1761 = getelementptr inbounds i8, ptr %1746, i64 1
  %1762 = load i8, ptr %1761, align 1, !tbaa !3
  %1763 = getelementptr inbounds i8, ptr %1719, i64 1
  store i8 %1762, ptr %1763, align 1, !tbaa !3
  %1764 = getelementptr inbounds i8, ptr %1746, i64 2
  %1765 = load i8, ptr %1764, align 1, !tbaa !3
  %1766 = getelementptr inbounds i8, ptr %1719, i64 2
  store i8 %1765, ptr %1766, align 1, !tbaa !3
  %1767 = getelementptr inbounds i8, ptr %1719, i64 3
  %1768 = getelementptr inbounds i8, ptr %1746, i64 3
  %1769 = add i32 %1723, -3
  br label %1770

1770:                                             ; preds = %1759, %1754
  %1771 = phi i32 [ %1723, %1754 ], [ %1769, %1759 ]
  %1772 = phi ptr [ %1746, %1754 ], [ %1768, %1759 ]
  %1773 = phi ptr [ %1719, %1754 ], [ %1767, %1759 ]
  %1774 = phi ptr [ undef, %1754 ], [ %1767, %1759 ]
  %1775 = phi ptr [ undef, %1754 ], [ %1768, %1759 ]
  %1776 = phi i32 [ undef, %1754 ], [ %1769, %1759 ]
  %1777 = icmp ult i32 %1755, 3
  br i1 %1777, label %1832, label %1808

1778:                                             ; preds = %1743, %1800
  %1779 = phi i64 [ %1801, %1800 ], [ %1728, %1743 ]
  %1780 = phi ptr [ %1807, %1800 ], [ %1719, %1743 ]
  %1781 = phi ptr [ %1792, %1800 ], [ %1720, %1743 ]
  %1782 = phi i64 [ %1793, %1800 ], [ %1721, %1743 ]
  %1783 = phi i32 [ %1794, %1800 ], [ %1722, %1743 ]
  %1784 = phi i32 [ %1795, %1800 ], [ %1723, %1743 ]
  %1785 = phi i32 [ %1796, %1800 ], [ %1724, %1743 ]
  %1786 = phi i32 [ %1797, %1800 ], [ %1725, %1743 ]
  %1787 = add i32 %1784, -1
  %1788 = icmp eq i32 %1784, 0
  br i1 %1788, label %1352, label %1789

1789:                                             ; preds = %1778, %1799
  %1790 = phi i64 [ %61, %1799 ], [ %1779, %1778 ]
  %1791 = phi ptr [ %4, %1799 ], [ %1780, %1778 ]
  %1792 = phi ptr [ %1, %1799 ], [ %1781, %1778 ]
  %1793 = phi i64 [ %53, %1799 ], [ %1782, %1778 ]
  %1794 = phi i32 [ %59, %1799 ], [ %1783, %1778 ]
  %1795 = phi i32 [ %57, %1799 ], [ %1787, %1778 ]
  %1796 = phi i32 [ %55, %1799 ], [ %1785, %1778 ]
  %1797 = phi i32 [ %51, %1799 ], [ %1786, %1778 ]
  %1798 = icmp ult ptr %1791, %20
  br i1 %1798, label %1800, label %2001

1799:                                             ; preds = %38
  br label %1789, !llvm.loop !139

1800:                                             ; preds = %1789
  %1801 = add i64 %1790, 1
  %1802 = zext i32 %1796 to i64
  %1803 = sub i64 %1790, %1802
  %1804 = and i64 %1803, %31
  %1805 = getelementptr inbounds i8, ptr %3, i64 %1804
  %1806 = load i8, ptr %1805, align 1, !tbaa !3
  %1807 = getelementptr inbounds i8, ptr %1791, i64 1
  store i8 %1806, ptr %1791, align 1, !tbaa !3
  br label %1778, !llvm.loop !140

1808:                                             ; preds = %1770, %1808
  %1809 = phi i32 [ %1830, %1808 ], [ %1771, %1770 ]
  %1810 = phi ptr [ %1829, %1808 ], [ %1772, %1770 ]
  %1811 = phi ptr [ %1828, %1808 ], [ %1773, %1770 ]
  %1812 = load i8, ptr %1810, align 1, !tbaa !3
  store i8 %1812, ptr %1811, align 1, !tbaa !3
  %1813 = getelementptr inbounds i8, ptr %1810, i64 1
  %1814 = load i8, ptr %1813, align 1, !tbaa !3
  %1815 = getelementptr inbounds i8, ptr %1811, i64 1
  store i8 %1814, ptr %1815, align 1, !tbaa !3
  %1816 = getelementptr inbounds i8, ptr %1810, i64 2
  %1817 = load i8, ptr %1816, align 1, !tbaa !3
  %1818 = getelementptr inbounds i8, ptr %1811, i64 2
  store i8 %1817, ptr %1818, align 1, !tbaa !3
  %1819 = getelementptr inbounds i8, ptr %1811, i64 3
  %1820 = getelementptr inbounds i8, ptr %1810, i64 3
  %1821 = load i8, ptr %1820, align 1, !tbaa !3
  store i8 %1821, ptr %1819, align 1, !tbaa !3
  %1822 = getelementptr inbounds i8, ptr %1810, i64 4
  %1823 = load i8, ptr %1822, align 1, !tbaa !3
  %1824 = getelementptr inbounds i8, ptr %1811, i64 4
  store i8 %1823, ptr %1824, align 1, !tbaa !3
  %1825 = getelementptr inbounds i8, ptr %1810, i64 5
  %1826 = load i8, ptr %1825, align 1, !tbaa !3
  %1827 = getelementptr inbounds i8, ptr %1811, i64 5
  store i8 %1826, ptr %1827, align 1, !tbaa !3
  %1828 = getelementptr inbounds i8, ptr %1811, i64 6
  %1829 = getelementptr inbounds i8, ptr %1810, i64 6
  %1830 = add i32 %1809, -6
  %1831 = icmp ugt i32 %1830, 2
  br i1 %1831, label %1808, label %1832, !llvm.loop !141

1832:                                             ; preds = %1770, %1808, %1752
  %1833 = phi ptr [ %1719, %1752 ], [ %1774, %1770 ], [ %1828, %1808 ]
  %1834 = phi ptr [ %1746, %1752 ], [ %1775, %1770 ], [ %1829, %1808 ]
  %1835 = phi i32 [ %1723, %1752 ], [ %1776, %1770 ], [ %1830, %1808 ]
  %1836 = icmp eq i32 %1835, 0
  br i1 %1836, label %1352, label %1837

1837:                                             ; preds = %1832
  %1838 = load i8, ptr %1834, align 1, !tbaa !3
  store i8 %1838, ptr %1833, align 1, !tbaa !3
  %1839 = icmp eq i32 %1835, 1
  br i1 %1839, label %1844, label %1840

1840:                                             ; preds = %1837
  %1841 = getelementptr inbounds i8, ptr %1834, i64 1
  %1842 = load i8, ptr %1841, align 1, !tbaa !3
  %1843 = getelementptr inbounds i8, ptr %1833, i64 1
  store i8 %1842, ptr %1843, align 1, !tbaa !3
  br label %1844

1844:                                             ; preds = %1840, %1837
  %1845 = zext i32 %1835 to i64
  %1846 = getelementptr inbounds i8, ptr %1833, i64 %1845
  br label %1352

1847:                                             ; preds = %402, %1463
  %1848 = phi i64 [ %1464, %1463 ], [ %403, %402 ]
  %1849 = phi ptr [ %1465, %1463 ], [ %404, %402 ]
  %1850 = phi ptr [ %1466, %1463 ], [ %405, %402 ]
  %1851 = phi i64 [ %1467, %1463 ], [ %406, %402 ]
  %1852 = phi i32 [ %1468, %1463 ], [ %407, %402 ]
  %1853 = phi i32 [ 256, %1463 ], [ 0, %402 ]
  %1854 = phi i32 [ %1470, %1463 ], [ %409, %402 ]
  %1855 = phi i32 [ %1471, %1463 ], [ %410, %402 ]
  %1856 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 5
  %1857 = load i32, ptr %1856, align 4, !tbaa !88
  %1858 = and i32 %1857, 1
  %1859 = icmp eq i32 %1858, 0
  br i1 %1859, label %129, label %1869, !llvm.loop !142

1860:                                             ; preds = %1864
  %1861 = and i32 %6, 2
  %1862 = icmp eq i32 %1861, 0
  store i32 32, ptr %0, align 8, !tbaa !79
  %1863 = select i1 %1862, i32 -4, i32 1
  br label %2029

1864:                                             ; preds = %38
  %1865 = icmp sgt i64 %13, 0
  br i1 %1865, label %1866, label %1860

1866:                                             ; preds = %1864
  %1867 = getelementptr inbounds i8, ptr %1, i64 1
  %1868 = add i32 %51, 8
  br label %1869

1869:                                             ; preds = %1847, %1866
  %1870 = phi i64 [ %61, %1866 ], [ %1848, %1847 ]
  %1871 = phi ptr [ %4, %1866 ], [ %1849, %1847 ]
  %1872 = phi ptr [ %1867, %1866 ], [ %1850, %1847 ]
  %1873 = phi i32 [ %59, %1866 ], [ %1852, %1847 ]
  %1874 = phi i32 [ %57, %1866 ], [ %1853, %1847 ]
  %1875 = phi i32 [ %55, %1866 ], [ %1854, %1847 ]
  %1876 = phi i32 [ %1868, %1866 ], [ %1855, %1847 ]
  %1877 = freeze i32 %1876
  %1878 = and i32 %1877, -8
  %1879 = icmp ugt ptr %1872, %1
  %1880 = icmp ne i32 %1878, 0
  %1881 = and i1 %1879, %1880
  br i1 %1881, label %1882, label %1895

1882:                                             ; preds = %1869
  %1883 = ptrtoint ptr %1872 to i64
  %1884 = add i32 %1878, -8
  %1885 = lshr exact i32 %1884, 3
  %1886 = zext i32 %1885 to i64
  %1887 = xor i64 %8, -1
  %1888 = add i64 %1887, %1883
  %1889 = tail call i64 @llvm.umin.i64(i64 %1886, i64 %1888)
  %1890 = xor i64 %1889, -1
  %1891 = getelementptr i8, ptr %1872, i64 %1890
  %1892 = trunc i64 %1889 to i32
  %1893 = shl nuw i32 %1892, 3
  %1894 = sub i32 %1884, %1893
  br label %1895

1895:                                             ; preds = %1882, %1869
  %1896 = phi ptr [ %1872, %1869 ], [ %1891, %1882 ]
  %1897 = phi i32 [ %1878, %1869 ], [ %1894, %1882 ]
  %1898 = icmp eq i32 %1897, 0
  br i1 %1898, label %1900, label %1899

1899:                                             ; preds = %1895
  tail call void @__assert_fail(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.12, i32 noundef 4733, ptr noundef nonnull @__PRETTY_FUNCTION__.tinfl_decompress) #41
  unreachable

1900:                                             ; preds = %1895
  %1901 = and i32 %6, 1
  %1902 = icmp eq i32 %1901, 0
  br i1 %1902, label %1992, label %1903

1903:                                             ; preds = %1900, %1977
  %1904 = phi i64 [ %1978, %1977 ], [ %1870, %1900 ]
  %1905 = phi ptr [ %1979, %1977 ], [ %1871, %1900 ]
  %1906 = phi ptr [ %1980, %1977 ], [ %1896, %1900 ]
  %1907 = phi i64 [ %1981, %1977 ], [ 0, %1900 ]
  %1908 = phi i32 [ %1982, %1977 ], [ %1873, %1900 ]
  %1909 = phi i32 [ %1991, %1977 ], [ 0, %1900 ]
  %1910 = phi i32 [ %1984, %1977 ], [ %1875, %1900 ]
  %1911 = phi i32 [ %1985, %1977 ], [ 0, %1900 ]
  %1912 = icmp ult i32 %1909, 4
  br i1 %1912, label %1913, label %1992

1913:                                             ; preds = %1903
  %1914 = icmp eq i32 %1911, 0
  br i1 %1914, label %1958, label %1915

1915:                                             ; preds = %1913
  %1916 = icmp ult i32 %1911, 8
  br i1 %1916, label %1917, label %1945

1917:                                             ; preds = %1935, %1915
  %1918 = phi i64 [ %1904, %1915 ], [ %61, %1935 ]
  %1919 = phi ptr [ %1905, %1915 ], [ %4, %1935 ]
  %1920 = phi ptr [ %1906, %1915 ], [ %1, %1935 ]
  %1921 = phi i64 [ %1907, %1915 ], [ %53, %1935 ]
  %1922 = phi i32 [ %1908, %1915 ], [ %59, %1935 ]
  %1923 = phi i32 [ %1909, %1915 ], [ %57, %1935 ]
  %1924 = phi i32 [ %1910, %1915 ], [ %55, %1935 ]
  %1925 = phi i32 [ %1911, %1915 ], [ %51, %1935 ]
  br label %1926

1926:                                             ; preds = %1917, %1936
  %1927 = phi ptr [ %1937, %1936 ], [ %1920, %1917 ]
  %1928 = phi i64 [ %1942, %1936 ], [ %1921, %1917 ]
  %1929 = phi i32 [ %1943, %1936 ], [ %1925, %1917 ]
  %1930 = icmp ult ptr %1927, %14
  br i1 %1930, label %1936, label %1931

1931:                                             ; preds = %1926
  %1932 = and i32 %6, 2
  %1933 = icmp eq i32 %1932, 0
  store i32 41, ptr %0, align 8, !tbaa !79
  %1934 = select i1 %1933, i32 -4, i32 1
  br label %2029

1935:                                             ; preds = %38
  br label %1917, !llvm.loop !143

1936:                                             ; preds = %1926
  %1937 = getelementptr inbounds i8, ptr %1927, i64 1
  %1938 = load i8, ptr %1927, align 1, !tbaa !3
  %1939 = zext i8 %1938 to i64
  %1940 = zext i32 %1929 to i64
  %1941 = shl i64 %1939, %1940
  %1942 = or i64 %1941, %1928
  %1943 = add i32 %1929, 8
  %1944 = icmp ugt i32 %1929, -9
  br i1 %1944, label %1926, label %1945, !llvm.loop !144

1945:                                             ; preds = %1936, %1915
  %1946 = phi i64 [ %1904, %1915 ], [ %1918, %1936 ]
  %1947 = phi ptr [ %1905, %1915 ], [ %1919, %1936 ]
  %1948 = phi ptr [ %1906, %1915 ], [ %1937, %1936 ]
  %1949 = phi i64 [ %1907, %1915 ], [ %1942, %1936 ]
  %1950 = phi i32 [ %1908, %1915 ], [ %1922, %1936 ]
  %1951 = phi i32 [ %1909, %1915 ], [ %1923, %1936 ]
  %1952 = phi i32 [ %1910, %1915 ], [ %1924, %1936 ]
  %1953 = phi i32 [ %1911, %1915 ], [ %1943, %1936 ]
  %1954 = trunc i64 %1949 to i32
  %1955 = and i32 %1954, 255
  %1956 = lshr i64 %1949, 8
  %1957 = add i32 %1953, -8
  br label %1977

1958:                                             ; preds = %1913, %1972
  %1959 = phi i64 [ %61, %1972 ], [ %1904, %1913 ]
  %1960 = phi ptr [ %4, %1972 ], [ %1905, %1913 ]
  %1961 = phi ptr [ %1, %1972 ], [ %1906, %1913 ]
  %1962 = phi i64 [ %53, %1972 ], [ %1907, %1913 ]
  %1963 = phi i32 [ %59, %1972 ], [ %1908, %1913 ]
  %1964 = phi i32 [ %57, %1972 ], [ %1909, %1913 ]
  %1965 = phi i32 [ %55, %1972 ], [ %1910, %1913 ]
  %1966 = phi i32 [ %51, %1972 ], [ 0, %1913 ]
  %1967 = icmp ult ptr %1961, %14
  br i1 %1967, label %1973, label %1968

1968:                                             ; preds = %1958
  %1969 = and i32 %6, 2
  %1970 = icmp eq i32 %1969, 0
  store i32 42, ptr %0, align 8, !tbaa !79
  %1971 = select i1 %1970, i32 -4, i32 1
  br label %2029

1972:                                             ; preds = %38
  br label %1958, !llvm.loop !145

1973:                                             ; preds = %1958
  %1974 = getelementptr inbounds i8, ptr %1961, i64 1
  %1975 = load i8, ptr %1961, align 1, !tbaa !3
  %1976 = zext i8 %1975 to i32
  br label %1977

1977:                                             ; preds = %1973, %1945
  %1978 = phi i64 [ %1959, %1973 ], [ %1946, %1945 ]
  %1979 = phi ptr [ %1960, %1973 ], [ %1947, %1945 ]
  %1980 = phi ptr [ %1974, %1973 ], [ %1948, %1945 ]
  %1981 = phi i64 [ %1962, %1973 ], [ %1956, %1945 ]
  %1982 = phi i32 [ %1963, %1973 ], [ %1950, %1945 ]
  %1983 = phi i32 [ %1964, %1973 ], [ %1951, %1945 ]
  %1984 = phi i32 [ %1965, %1973 ], [ %1952, %1945 ]
  %1985 = phi i32 [ %1966, %1973 ], [ %1957, %1945 ]
  %1986 = phi i32 [ %1976, %1973 ], [ %1955, %1945 ]
  %1987 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 4
  %1988 = load i32, ptr %1987, align 8, !tbaa !84
  %1989 = shl i32 %1988, 8
  %1990 = or i32 %1989, %1986
  store i32 %1990, ptr %1987, align 8, !tbaa !84
  %1991 = add i32 %1983, 1
  br label %1903, !llvm.loop !146

1992:                                             ; preds = %38, %1900, %1903
  %1993 = phi i64 [ %61, %38 ], [ %1904, %1903 ], [ %1870, %1900 ]
  %1994 = phi ptr [ %4, %38 ], [ %1905, %1903 ], [ %1871, %1900 ]
  %1995 = phi ptr [ %1, %38 ], [ %1906, %1903 ], [ %1896, %1900 ]
  %1996 = phi i64 [ %53, %38 ], [ %1907, %1903 ], [ 0, %1900 ]
  %1997 = phi i32 [ %59, %38 ], [ %1908, %1903 ], [ %1873, %1900 ]
  %1998 = phi i32 [ %57, %38 ], [ %1909, %1903 ], [ %1874, %1900 ]
  %1999 = phi i32 [ %55, %38 ], [ %1910, %1903 ], [ %1875, %1900 ]
  %2000 = phi i32 [ %51, %38 ], [ %1911, %1903 ], [ 0, %1900 ]
  br label %2001

2001:                                             ; preds = %1789, %1338, %412, %387, %128, %38, %117, %116, %1992, %1734, %1175, %1092, %809, %453, %324
  %2002 = phi i32 [ 34, %1992 ], [ 37, %1734 ], [ 21, %1175 ], [ 17, %1092 ], [ 35, %809 ], [ 10, %453 ], [ 39, %324 ], [ 36, %116 ], [ 36, %117 ], [ %62, %38 ], [ 36, %128 ], [ 52, %387 ], [ 9, %412 ], [ 24, %1338 ], [ 53, %1789 ]
  %2003 = phi i64 [ %1993, %1992 ], [ %1735, %1734 ], [ %1176, %1175 ], [ %1093, %1092 ], [ %810, %809 ], [ %454, %453 ], [ %325, %324 ], [ %61, %116 ], [ %61, %117 ], [ %61, %38 ], [ %61, %128 ], [ %388, %387 ], [ %413, %412 ], [ %1339, %1338 ], [ %1790, %1789 ]
  %2004 = phi ptr [ %1994, %1992 ], [ %1736, %1734 ], [ %1177, %1175 ], [ %1094, %1092 ], [ %811, %809 ], [ %455, %453 ], [ %326, %324 ], [ %4, %116 ], [ %4, %117 ], [ %4, %38 ], [ %4, %128 ], [ %389, %387 ], [ %414, %412 ], [ %1340, %1338 ], [ %1791, %1789 ]
  %2005 = phi ptr [ %1995, %1992 ], [ %1737, %1734 ], [ %1178, %1175 ], [ %1095, %1092 ], [ %812, %809 ], [ %456, %453 ], [ %327, %324 ], [ %100, %116 ], [ %100, %117 ], [ %1, %38 ], [ %100, %128 ], [ %390, %387 ], [ %415, %412 ], [ %1341, %1338 ], [ %1792, %1789 ]
  %2006 = phi i64 [ %1996, %1992 ], [ %1738, %1734 ], [ %1179, %1175 ], [ %1096, %1092 ], [ %813, %809 ], [ %457, %453 ], [ %328, %324 ], [ %88, %116 ], [ %88, %117 ], [ %53, %38 ], [ %88, %128 ], [ %391, %387 ], [ %416, %412 ], [ %1342, %1338 ], [ %1793, %1789 ]
  %2007 = phi i32 [ %1997, %1992 ], [ %1739, %1734 ], [ %1180, %1175 ], [ %1097, %1092 ], [ %814, %809 ], [ %458, %453 ], [ %329, %324 ], [ %89, %116 ], [ %89, %117 ], [ %59, %38 ], [ %89, %128 ], [ %392, %387 ], [ %417, %412 ], [ %1343, %1338 ], [ %1794, %1789 ]
  %2008 = phi i32 [ %1998, %1992 ], [ %1740, %1734 ], [ %1181, %1175 ], [ %1098, %1092 ], [ %815, %809 ], [ %459, %453 ], [ %330, %324 ], [ 1, %116 ], [ 1, %117 ], [ %57, %38 ], [ 1, %128 ], [ %393, %387 ], [ %418, %412 ], [ %1344, %1338 ], [ %1795, %1789 ]
  %2009 = phi i32 [ %1999, %1992 ], [ %1741, %1734 ], [ %1182, %1175 ], [ %1099, %1092 ], [ %816, %809 ], [ %460, %453 ], [ %331, %324 ], [ %91, %116 ], [ %91, %117 ], [ %55, %38 ], [ %91, %128 ], [ %394, %387 ], [ %419, %412 ], [ %1345, %1338 ], [ %1796, %1789 ]
  %2010 = phi i32 [ %2000, %1992 ], [ %1742, %1734 ], [ %1183, %1175 ], [ %1100, %1092 ], [ %817, %809 ], [ %461, %453 ], [ %332, %324 ], [ %92, %116 ], [ %92, %117 ], [ %51, %38 ], [ %92, %128 ], [ %395, %387 ], [ %420, %412 ], [ %1346, %1338 ], [ %1797, %1789 ]
  %2011 = phi i32 [ 0, %1992 ], [ -1, %1734 ], [ -1, %1175 ], [ -1, %1092 ], [ -1, %809 ], [ -1, %453 ], [ -1, %324 ], [ -1, %116 ], [ -1, %117 ], [ -1, %38 ], [ -1, %128 ], [ 2, %387 ], [ 2, %412 ], [ 2, %1338 ], [ 2, %1789 ]
  store i32 %2002, ptr %0, align 8, !tbaa !79
  %2012 = freeze i32 %2010
  %2013 = icmp ugt ptr %2005, %1
  %2014 = icmp ugt i32 %2012, 7
  %2015 = and i1 %2013, %2014
  br i1 %2015, label %2016, label %2029

2016:                                             ; preds = %2001
  %2017 = ptrtoint ptr %2005 to i64
  %2018 = add i32 %2012, -8
  %2019 = lshr i32 %2018, 3
  %2020 = zext i32 %2019 to i64
  %2021 = xor i64 %8, -1
  %2022 = add i64 %2021, %2017
  %2023 = tail call i64 @llvm.umin.i64(i64 %2020, i64 %2022)
  %2024 = xor i64 %2023, -1
  %2025 = getelementptr i8, ptr %2005, i64 %2024
  %2026 = trunc i64 %2023 to i32
  %2027 = shl nuw i32 %2026, 3
  %2028 = sub i32 %2018, %2027
  br label %2029

2029:                                             ; preds = %38, %2016, %2001, %1968, %1931, %1860, %1688, %1597, %1501, %1269, %1122, %1015, %570, %500, %433, %361, %285, %247, %193, %149, %94, %77
  %2030 = phi i32 [ %1971, %1968 ], [ %1934, %1931 ], [ %1863, %1860 ], [ %155, %149 ], [ %196, %193 ], [ %250, %247 ], [ %288, %285 ], [ %364, %361 ], [ %436, %433 ], [ %1125, %1122 ], [ %1018, %1015 ], [ %503, %500 ], [ %576, %570 ], [ %1504, %1501 ], [ %1691, %1688 ], [ %1600, %1597 ], [ %1272, %1269 ], [ %97, %94 ], [ %80, %77 ], [ %2011, %2001 ], [ %2011, %2016 ], [ -1, %38 ]
  %2031 = phi i32 [ %1965, %1968 ], [ %1924, %1931 ], [ %55, %1860 ], [ %146, %149 ], [ %55, %193 ], [ %240, %247 ], [ %282, %285 ], [ %354, %361 ], [ %430, %433 ], [ %1115, %1122 ], [ %1012, %1015 ], [ %491, %500 ], [ %567, %570 ], [ %1494, %1501 ], [ %1681, %1688 ], [ %1594, %1597 ], [ %1266, %1269 ], [ %91, %94 ], [ %74, %77 ], [ %2009, %2001 ], [ %2009, %2016 ], [ %55, %38 ]
  %2032 = phi i32 [ %1964, %1968 ], [ %1923, %1931 ], [ %57, %1860 ], [ %145, %149 ], [ %57, %193 ], [ %239, %247 ], [ %281, %285 ], [ %353, %361 ], [ %429, %433 ], [ %1114, %1122 ], [ %1011, %1015 ], [ %490, %500 ], [ %566, %570 ], [ %1493, %1501 ], [ %1680, %1688 ], [ %1593, %1597 ], [ %1265, %1269 ], [ %90, %94 ], [ %73, %77 ], [ %2008, %2001 ], [ %2008, %2016 ], [ %57, %38 ]
  %2033 = phi i32 [ %1963, %1968 ], [ %1922, %1931 ], [ %59, %1860 ], [ %144, %149 ], [ %59, %193 ], [ %238, %247 ], [ %280, %285 ], [ %352, %361 ], [ %428, %433 ], [ %1113, %1122 ], [ %1010, %1015 ], [ %489, %500 ], [ %565, %570 ], [ %1492, %1501 ], [ %1679, %1688 ], [ %1592, %1597 ], [ %1264, %1269 ], [ %89, %94 ], [ %72, %77 ], [ %2007, %2001 ], [ %2007, %2016 ], [ %59, %38 ]
  %2034 = phi i64 [ %1962, %1968 ], [ %1928, %1931 ], [ %53, %1860 ], [ %151, %149 ], [ %53, %193 ], [ %244, %247 ], [ %279, %285 ], [ %358, %361 ], [ %427, %433 ], [ %1119, %1122 ], [ %1009, %1015 ], [ %497, %500 ], [ %572, %570 ], [ %1498, %1501 ], [ %1685, %1688 ], [ %1591, %1597 ], [ %1263, %1269 ], [ %88, %94 ], [ %71, %77 ], [ %2006, %2001 ], [ %2006, %2016 ], [ %53, %38 ]
  %2035 = phi ptr [ %1960, %1968 ], [ %1919, %1931 ], [ %4, %1860 ], [ %141, %149 ], [ %4, %193 ], [ %235, %247 ], [ %277, %285 ], [ %349, %361 ], [ %425, %433 ], [ %1110, %1122 ], [ %1007, %1015 ], [ %486, %500 ], [ %562, %570 ], [ %1489, %1501 ], [ %1676, %1688 ], [ %1589, %1597 ], [ %1261, %1269 ], [ %4, %94 ], [ %4, %77 ], [ %2004, %2001 ], [ %2004, %2016 ], [ %4, %38 ]
  %2036 = phi i64 [ %1959, %1968 ], [ %1918, %1931 ], [ %61, %1860 ], [ %140, %149 ], [ %61, %193 ], [ %234, %247 ], [ %276, %285 ], [ %348, %361 ], [ %424, %433 ], [ %1109, %1122 ], [ %1006, %1015 ], [ %485, %500 ], [ %561, %570 ], [ %1488, %1501 ], [ %1675, %1688 ], [ %1588, %1597 ], [ %1260, %1269 ], [ %61, %94 ], [ %61, %77 ], [ %2003, %2001 ], [ %2003, %2016 ], [ %61, %38 ]
  %2037 = phi ptr [ %1961, %1968 ], [ %1927, %1931 ], [ %1, %1860 ], [ %150, %149 ], [ %1, %193 ], [ %243, %247 ], [ %278, %285 ], [ %357, %361 ], [ %426, %433 ], [ %1118, %1122 ], [ %1008, %1015 ], [ %496, %500 ], [ %571, %570 ], [ %1497, %1501 ], [ %1684, %1688 ], [ %1590, %1597 ], [ %1262, %1269 ], [ %87, %94 ], [ %1, %77 ], [ %2005, %2001 ], [ %2025, %2016 ], [ %1, %38 ]
  %2038 = phi i32 [ %1966, %1968 ], [ %1929, %1931 ], [ %51, %1860 ], [ %152, %149 ], [ %51, %193 ], [ %245, %247 ], [ %283, %285 ], [ %359, %361 ], [ %431, %433 ], [ %1120, %1122 ], [ %1013, %1015 ], [ %498, %500 ], [ %573, %570 ], [ %1499, %1501 ], [ %1686, %1688 ], [ %1595, %1597 ], [ %1267, %1269 ], [ %92, %94 ], [ %75, %77 ], [ %2012, %2001 ], [ %2028, %2016 ], [ %51, %38 ]
  store i32 %2038, ptr %49, align 4, !tbaa !73
  %2039 = zext i32 %2038 to i64
  %2040 = shl nsw i64 -1, %2039
  %2041 = xor i64 %2040, -1
  %2042 = and i64 %2034, %2041
  store i64 %2042, ptr %52, align 8, !tbaa !74
  store i32 %2031, ptr %54, align 8, !tbaa !75
  store i32 %2032, ptr %56, align 4, !tbaa !76
  store i32 %2033, ptr %58, align 8, !tbaa !77
  store i64 %2036, ptr %60, align 8, !tbaa !78
  %2043 = ptrtoint ptr %2037 to i64
  %2044 = sub i64 %2043, %8
  store i64 %2044, ptr %2, align 8, !tbaa !46
  %2045 = ptrtoint ptr %2035 to i64
  %2046 = ptrtoint ptr %4 to i64
  %2047 = sub i64 %2045, %2046
  store i64 %2047, ptr %5, align 8, !tbaa !46
  %2048 = and i32 %6, 9
  %2049 = icmp ne i32 %2048, 0
  %2050 = icmp sgt i32 %2030, -1
  %2051 = and i1 %2049, %2050
  br i1 %2051, label %2052, label %2206

2052:                                             ; preds = %2029
  %2053 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 7
  %2054 = load i32, ptr %2053, align 4, !tbaa !83
  %2055 = and i32 %2054, 65535
  %2056 = lshr i32 %2054, 16
  %2057 = icmp eq i64 %2047, 0
  br i1 %2057, label %2192, label %2058

2058:                                             ; preds = %2052
  %2059 = urem i64 %2047, 5552
  br label %2060

2060:                                             ; preds = %2058, %2184
  %2061 = phi i64 [ 5552, %2184 ], [ %2059, %2058 ]
  %2062 = phi i32 [ %2189, %2184 ], [ %2056, %2058 ]
  %2063 = phi i32 [ %2188, %2184 ], [ %2055, %2058 ]
  %2064 = phi i64 [ %2190, %2184 ], [ %2047, %2058 ]
  %2065 = phi ptr [ %2185, %2184 ], [ %4, %2058 ]
  %2066 = icmp ugt i64 %2061, 7
  br i1 %2066, label %2067, label %2069

2067:                                             ; preds = %2060
  %2068 = trunc i64 %2061 to i32
  br label %2105

2069:                                             ; preds = %2105, %2060
  %2070 = phi ptr [ %2065, %2060 ], [ %2150, %2105 ]
  %2071 = phi i32 [ 0, %2060 ], [ %2149, %2105 ]
  %2072 = phi i32 [ %2063, %2060 ], [ %2147, %2105 ]
  %2073 = phi i32 [ %2062, %2060 ], [ %2148, %2105 ]
  %2074 = zext i32 %2071 to i64
  %2075 = icmp ugt i64 %2061, %2074
  br i1 %2075, label %2076, label %2184

2076:                                             ; preds = %2069
  %2077 = sub nsw i64 %2061, %2074
  %2078 = sub nsw i64 %2061, %2074
  %2079 = xor i64 %2074, -1
  %2080 = add nsw i64 %2061, %2079
  %2081 = and i64 %2078, 3
  %2082 = icmp eq i64 %2081, 0
  br i1 %2082, label %2097, label %2083

2083:                                             ; preds = %2076, %2083
  %2084 = phi i64 [ %2094, %2083 ], [ %2074, %2076 ]
  %2085 = phi i32 [ %2093, %2083 ], [ %2073, %2076 ]
  %2086 = phi i32 [ %2092, %2083 ], [ %2072, %2076 ]
  %2087 = phi ptr [ %2089, %2083 ], [ %2070, %2076 ]
  %2088 = phi i64 [ %2095, %2083 ], [ 0, %2076 ]
  %2089 = getelementptr inbounds i8, ptr %2087, i64 1
  %2090 = load i8, ptr %2087, align 1, !tbaa !3
  %2091 = zext i8 %2090 to i32
  %2092 = add i32 %2086, %2091
  %2093 = add i32 %2092, %2085
  %2094 = add nuw nsw i64 %2084, 1
  %2095 = add i64 %2088, 1
  %2096 = icmp eq i64 %2095, %2081
  br i1 %2096, label %2097, label %2083, !llvm.loop !147

2097:                                             ; preds = %2083, %2076
  %2098 = phi i32 [ undef, %2076 ], [ %2092, %2083 ]
  %2099 = phi i32 [ undef, %2076 ], [ %2093, %2083 ]
  %2100 = phi i64 [ %2074, %2076 ], [ %2094, %2083 ]
  %2101 = phi i32 [ %2073, %2076 ], [ %2093, %2083 ]
  %2102 = phi i32 [ %2072, %2076 ], [ %2092, %2083 ]
  %2103 = phi ptr [ %2070, %2076 ], [ %2089, %2083 ]
  %2104 = icmp ult i64 %2080, 3
  br i1 %2104, label %2180, label %2153

2105:                                             ; preds = %2067, %2105
  %2106 = phi i32 [ %2148, %2105 ], [ %2062, %2067 ]
  %2107 = phi i32 [ %2147, %2105 ], [ %2063, %2067 ]
  %2108 = phi i32 [ %2149, %2105 ], [ 0, %2067 ]
  %2109 = phi ptr [ %2150, %2105 ], [ %2065, %2067 ]
  %2110 = load i8, ptr %2109, align 1, !tbaa !3
  %2111 = zext i8 %2110 to i32
  %2112 = add i32 %2107, %2111
  %2113 = add i32 %2112, %2106
  %2114 = getelementptr inbounds i8, ptr %2109, i64 1
  %2115 = load i8, ptr %2114, align 1, !tbaa !3
  %2116 = zext i8 %2115 to i32
  %2117 = add i32 %2112, %2116
  %2118 = add i32 %2113, %2117
  %2119 = getelementptr inbounds i8, ptr %2109, i64 2
  %2120 = load i8, ptr %2119, align 1, !tbaa !3
  %2121 = zext i8 %2120 to i32
  %2122 = add i32 %2117, %2121
  %2123 = add i32 %2118, %2122
  %2124 = getelementptr inbounds i8, ptr %2109, i64 3
  %2125 = load i8, ptr %2124, align 1, !tbaa !3
  %2126 = zext i8 %2125 to i32
  %2127 = add i32 %2122, %2126
  %2128 = add i32 %2123, %2127
  %2129 = getelementptr inbounds i8, ptr %2109, i64 4
  %2130 = load i8, ptr %2129, align 1, !tbaa !3
  %2131 = zext i8 %2130 to i32
  %2132 = add i32 %2127, %2131
  %2133 = add i32 %2128, %2132
  %2134 = getelementptr inbounds i8, ptr %2109, i64 5
  %2135 = load i8, ptr %2134, align 1, !tbaa !3
  %2136 = zext i8 %2135 to i32
  %2137 = add i32 %2132, %2136
  %2138 = add i32 %2133, %2137
  %2139 = getelementptr inbounds i8, ptr %2109, i64 6
  %2140 = load i8, ptr %2139, align 1, !tbaa !3
  %2141 = zext i8 %2140 to i32
  %2142 = add i32 %2137, %2141
  %2143 = add i32 %2138, %2142
  %2144 = getelementptr inbounds i8, ptr %2109, i64 7
  %2145 = load i8, ptr %2144, align 1, !tbaa !3
  %2146 = zext i8 %2145 to i32
  %2147 = add i32 %2142, %2146
  %2148 = add i32 %2143, %2147
  %2149 = add nuw i32 %2108, 8
  %2150 = getelementptr inbounds i8, ptr %2109, i64 8
  %2151 = or i32 %2149, 7
  %2152 = icmp ult i32 %2151, %2068
  br i1 %2152, label %2105, label %2069, !llvm.loop !148

2153:                                             ; preds = %2097, %2153
  %2154 = phi i64 [ %2178, %2153 ], [ %2100, %2097 ]
  %2155 = phi i32 [ %2177, %2153 ], [ %2101, %2097 ]
  %2156 = phi i32 [ %2176, %2153 ], [ %2102, %2097 ]
  %2157 = phi ptr [ %2173, %2153 ], [ %2103, %2097 ]
  %2158 = getelementptr inbounds i8, ptr %2157, i64 1
  %2159 = load i8, ptr %2157, align 1, !tbaa !3
  %2160 = zext i8 %2159 to i32
  %2161 = add i32 %2156, %2160
  %2162 = add i32 %2161, %2155
  %2163 = getelementptr inbounds i8, ptr %2157, i64 2
  %2164 = load i8, ptr %2158, align 1, !tbaa !3
  %2165 = zext i8 %2164 to i32
  %2166 = add i32 %2161, %2165
  %2167 = add i32 %2166, %2162
  %2168 = getelementptr inbounds i8, ptr %2157, i64 3
  %2169 = load i8, ptr %2163, align 1, !tbaa !3
  %2170 = zext i8 %2169 to i32
  %2171 = add i32 %2166, %2170
  %2172 = add i32 %2171, %2167
  %2173 = getelementptr inbounds i8, ptr %2157, i64 4
  %2174 = load i8, ptr %2168, align 1, !tbaa !3
  %2175 = zext i8 %2174 to i32
  %2176 = add i32 %2171, %2175
  %2177 = add i32 %2176, %2172
  %2178 = add nuw nsw i64 %2154, 4
  %2179 = icmp eq i64 %2178, %2061
  br i1 %2179, label %2180, label %2153, !llvm.loop !149

2180:                                             ; preds = %2153, %2097
  %2181 = phi i32 [ %2098, %2097 ], [ %2176, %2153 ]
  %2182 = phi i32 [ %2099, %2097 ], [ %2177, %2153 ]
  %2183 = getelementptr i8, ptr %2070, i64 %2077
  br label %2184

2184:                                             ; preds = %2180, %2069
  %2185 = phi ptr [ %2070, %2069 ], [ %2183, %2180 ]
  %2186 = phi i32 [ %2072, %2069 ], [ %2181, %2180 ]
  %2187 = phi i32 [ %2073, %2069 ], [ %2182, %2180 ]
  %2188 = urem i32 %2186, 65521
  %2189 = urem i32 %2187, 65521
  %2190 = sub i64 %2064, %2061
  %2191 = icmp eq i64 %2190, 0
  br i1 %2191, label %2192, label %2060, !llvm.loop !150

2192:                                             ; preds = %2184, %2052
  %2193 = phi i32 [ %2055, %2052 ], [ %2188, %2184 ]
  %2194 = phi i32 [ %2056, %2052 ], [ %2189, %2184 ]
  %2195 = shl nuw i32 %2194, 16
  %2196 = or i32 %2195, %2193
  store i32 %2196, ptr %2053, align 4, !tbaa !83
  %2197 = icmp eq i32 %2030, 0
  br i1 %2197, label %2198, label %2206

2198:                                             ; preds = %2192
  %2199 = and i32 %6, 1
  %2200 = icmp eq i32 %2199, 0
  br i1 %2200, label %2206, label %2201

2201:                                             ; preds = %2198
  %2202 = getelementptr inbounds %struct.tinfl_decompressor_tag, ptr %0, i64 0, i32 4
  %2203 = load i32, ptr %2202, align 8, !tbaa !84
  %2204 = icmp eq i32 %2196, %2203
  %2205 = select i1 %2204, i32 0, i32 -2
  br label %2206

2206:                                             ; preds = %2201, %2029, %2198, %2192, %37
  %2207 = phi i32 [ -3, %37 ], [ %2030, %2029 ], [ 0, %2198 ], [ %2030, %2192 ], [ %2205, %2201 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #38
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #38
  ret i32 %2207
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #15

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_inflateEnd(ptr noundef %0) local_unnamed_addr #8 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 7
  %5 = load ptr, ptr %4, align 8, !tbaa !26
  %6 = icmp eq ptr %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 9
  %9 = load ptr, ptr %8, align 8, !tbaa !24
  %10 = getelementptr inbounds %struct.mz_stream_s, ptr %0, i64 0, i32 10
  %11 = load ptr, ptr %10, align 8, !tbaa !25
  tail call void %9(ptr noundef %11, ptr noundef nonnull %5) #38
  store ptr null, ptr %4, align 8, !tbaa !26
  br label %12

12:                                               ; preds = %3, %7, %1
  %13 = phi i32 [ -2, %1 ], [ 0, %7 ], [ 0, %3 ]
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_uncompress2(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, ptr nocapture noundef %3) local_unnamed_addr #8 {
  %5 = alloca %struct.mz_stream_s, align 8
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %5) #38
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %6, i8 0, i64 88, i1 false)
  %7 = load i64, ptr %3, align 8, !tbaa !46
  %8 = load i64, ptr %1, align 8, !tbaa !46
  %9 = or i64 %8, %7
  %10 = icmp ugt i64 %9, 4294967295
  br i1 %10, label %54, label %11

11:                                               ; preds = %4
  store ptr %2, ptr %5, align 8, !tbaa !45
  %12 = trunc i64 %7 to i32
  store i32 %12, ptr %6, align 8, !tbaa !44
  %13 = getelementptr inbounds %struct.mz_stream_s, ptr %5, i64 0, i32 3
  store ptr %0, ptr %13, align 8, !tbaa !42
  %14 = trunc i64 %8 to i32
  %15 = getelementptr inbounds %struct.mz_stream_s, ptr %5, i64 0, i32 4
  store i32 %14, ptr %15, align 8, !tbaa !43
  %16 = getelementptr inbounds %struct.mz_stream_s, ptr %5, i64 0, i32 12
  %17 = getelementptr inbounds %struct.mz_stream_s, ptr %5, i64 0, i32 5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, i8 0, i64 16, i1 false)
  %18 = getelementptr inbounds %struct.mz_stream_s, ptr %5, i64 0, i32 8
  store ptr @miniz_def_alloc_func, ptr %18, align 8, !tbaa !23
  %19 = getelementptr inbounds %struct.mz_stream_s, ptr %5, i64 0, i32 9
  store ptr @miniz_def_free_func, ptr %19, align 8, !tbaa !24
  %20 = getelementptr inbounds %struct.mz_stream_s, ptr %5, i64 0, i32 10
  %21 = tail call noalias dereferenceable_or_null(41168) ptr @malloc(i64 noundef 41168) #39
  %22 = icmp eq ptr %21, null
  br i1 %22, label %54, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.mz_stream_s, ptr %5, i64 0, i32 7
  store ptr %21, ptr %24, align 8, !tbaa !26
  store i32 0, ptr %21, align 8, !tbaa !62
  %25 = getelementptr inbounds %struct.inflate_state, ptr %21, i64 0, i32 1
  %26 = getelementptr inbounds %struct.inflate_state, ptr %21, i64 0, i32 7
  store i32 1, ptr %26, align 4, !tbaa !65
  store <4 x i32> <i32 0, i32 0, i32 1, i32 0>, ptr %25, align 8, !tbaa !12
  %27 = getelementptr inbounds %struct.inflate_state, ptr %21, i64 0, i32 5
  store i32 15, ptr %27, align 8, !tbaa !66
  %28 = call i32 @mz_inflate(ptr noundef nonnull %5, i32 noundef 4)
  %29 = load i64, ptr %3, align 8, !tbaa !46
  %30 = load i32, ptr %6, align 8, !tbaa !44
  %31 = zext i32 %30 to i64
  %32 = sub i64 %29, %31
  store i64 %32, ptr %3, align 8, !tbaa !46
  %33 = icmp eq i32 %28, 1
  br i1 %33, label %47, label %34

34:                                               ; preds = %23
  %35 = load ptr, ptr %24, align 8, !tbaa !26
  %36 = icmp eq ptr %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %19, align 8, !tbaa !24
  %39 = load ptr, ptr %20, align 8, !tbaa !25
  call void %38(ptr noundef %39, ptr noundef nonnull %35) #38
  %40 = load i32, ptr %6, align 8
  br label %41

41:                                               ; preds = %34, %37
  %42 = phi i32 [ %30, %34 ], [ %40, %37 ]
  %43 = icmp ne i32 %28, -5
  %44 = icmp ne i32 %42, 0
  %45 = select i1 %43, i1 true, i1 %44
  %46 = select i1 %45, i32 %28, i32 -3
  br label %54

47:                                               ; preds = %23
  %48 = load i64, ptr %17, align 8, !tbaa !41
  store i64 %48, ptr %1, align 8, !tbaa !46
  %49 = load ptr, ptr %24, align 8, !tbaa !26
  %50 = icmp eq ptr %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = load ptr, ptr %19, align 8, !tbaa !24
  %53 = load ptr, ptr %20, align 8, !tbaa !25
  call void %52(ptr noundef %53, ptr noundef nonnull %49) #38
  br label %54

54:                                               ; preds = %51, %47, %11, %4, %41
  %55 = phi i32 [ %46, %41 ], [ -10000, %4 ], [ -4, %11 ], [ 0, %47 ], [ 0, %51 ]
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %5) #38
  ret i32 %55
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_uncompress(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, i64 noundef %3) local_unnamed_addr #8 {
  %5 = alloca i64, align 8
  store i64 %3, ptr %5, align 8, !tbaa !46
  %6 = call i32 @mz_uncompress2(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull %5)
  ret i32 %6
}

; Function Attrs: nofree norecurse nosync nounwind memory(none) uwtable
define dso_local ptr @mz_error(i32 noundef %0) local_unnamed_addr #16 {
  switch i32 %0, label %15 [
    i32 0, label %11
    i32 1, label %2
    i32 2, label %3
    i32 -1, label %4
    i32 -2, label %5
    i32 -3, label %6
    i32 -4, label %7
    i32 -5, label %8
    i32 -6, label %9
    i32 -10000, label %10
  ]

2:                                                ; preds = %1
  br label %11

3:                                                ; preds = %1
  br label %11

4:                                                ; preds = %1
  br label %11

5:                                                ; preds = %1
  br label %11

6:                                                ; preds = %1
  br label %11

7:                                                ; preds = %1
  br label %11

8:                                                ; preds = %1
  br label %11

9:                                                ; preds = %1
  br label %11

10:                                               ; preds = %1
  br label %11

11:                                               ; preds = %1, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %12 = phi i64 [ 0, %1 ], [ 1, %2 ], [ 2, %3 ], [ 3, %4 ], [ 4, %5 ], [ 5, %6 ], [ 6, %7 ], [ 7, %8 ], [ 8, %9 ], [ 9, %10 ]
  %13 = getelementptr inbounds [10 x %struct.anon], ptr @mz_error.s_error_descs, i64 0, i64 %12, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !151
  br label %15

15:                                               ; preds = %1, %11
  %16 = phi ptr [ %14, %11 ], [ null, %1 ]
  ret ptr %16
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc i32 @tdefl_flush_output_buffer(ptr nocapture noundef %0) unnamed_addr #11 {
  %2 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 29
  %3 = load ptr, ptr %2, align 8, !tbaa !49
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 32
  %7 = load ptr, ptr %6, align 8, !tbaa !52
  %8 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 27
  %9 = load ptr, ptr %8, align 8, !tbaa !48
  %10 = ptrtoint ptr %7 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  store i64 %12, ptr %3, align 8, !tbaa !46
  br label %13

13:                                               ; preds = %5, %1
  %14 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 30
  %15 = load ptr, ptr %14, align 8, !tbaa !51
  %16 = icmp eq ptr %15, null
  br i1 %16, label %42, label %17

17:                                               ; preds = %13
  %18 = load i64, ptr %15, align 8, !tbaa !46
  %19 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 34
  %20 = load i64, ptr %19, align 8, !tbaa !54
  %21 = sub i64 %18, %20
  %22 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 22
  %23 = load i32, ptr %22, align 4, !tbaa !57
  %24 = zext i32 %23 to i64
  %25 = tail call i64 @llvm.umin.i64(i64 %21, i64 %24)
  %26 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 28
  %27 = load ptr, ptr %26, align 8, !tbaa !50
  %28 = getelementptr inbounds i8, ptr %27, i64 %20
  %29 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 42
  %30 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 21
  %31 = load i32, ptr %30, align 8, !tbaa !59
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, ptr %29, i64 %32
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %28, ptr nonnull align 1 %33, i64 %25, i1 false)
  %34 = trunc i64 %25 to i32
  %35 = load i32, ptr %30, align 8, !tbaa !59
  %36 = add i32 %35, %34
  store i32 %36, ptr %30, align 8, !tbaa !59
  %37 = load i32, ptr %22, align 4, !tbaa !57
  %38 = sub i32 %37, %34
  store i32 %38, ptr %22, align 4, !tbaa !57
  %39 = load i64, ptr %19, align 8, !tbaa !54
  %40 = add i64 %39, %25
  store i64 %40, ptr %19, align 8, !tbaa !54
  %41 = load ptr, ptr %14, align 8, !tbaa !51
  store i64 %40, ptr %41, align 8, !tbaa !46
  br label %42

42:                                               ; preds = %17, %13
  %43 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 23
  %44 = load i32, ptr %43, align 8, !tbaa !58
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 22
  %48 = load i32, ptr %47, align 4, !tbaa !57
  %49 = icmp eq i32 %48, 0
  %50 = zext i1 %49 to i32
  br label %51

51:                                               ; preds = %46, %42
  %52 = phi i32 [ 0, %42 ], [ %50, %46 ]
  ret i32 %52
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @tdefl_compress_normal(ptr noundef %0) unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 32
  %3 = load ptr, ptr %2, align 8, !tbaa !52
  %4 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 33
  %5 = load i64, ptr %4, align 8, !tbaa !53
  %6 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 31
  %7 = load i32, ptr %6, align 8, !tbaa !55
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 7
  %10 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 8
  %11 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 6
  %12 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 19
  %13 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 2
  %14 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35
  %15 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 20
  %16 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 14
  %17 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 9
  %18 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 10
  %19 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 13
  %20 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36
  %21 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 18
  %22 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 4
  %23 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 39
  %24 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 39, i64 65528
  %25 = ptrtoint ptr %23 to i64
  br label %26

26:                                               ; preds = %620, %1
  %27 = phi i64 [ %5, %1 ], [ %175, %620 ]
  %28 = phi ptr [ %3, %1 ], [ %174, %620 ]
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  br i1 %8, label %635, label %31

31:                                               ; preds = %30
  %32 = load i32, ptr %9, align 8, !tbaa !60
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %635, label %34

34:                                               ; preds = %31
  %35 = load i32, ptr %10, align 4, !tbaa !61
  %36 = add i32 %35, %32
  %37 = icmp ugt i32 %36, 1
  br i1 %37, label %48, label %43

38:                                               ; preds = %26
  %39 = load i32, ptr %9, align 8, !tbaa !60
  %40 = load i32, ptr %10, align 4, !tbaa !61
  %41 = add i32 %40, %39
  %42 = icmp ugt i32 %41, 1
  br i1 %42, label %48, label %44

43:                                               ; preds = %34
  br i1 %29, label %156, label %44

44:                                               ; preds = %38, %43
  %45 = phi i32 [ %32, %43 ], [ %39, %38 ]
  %46 = phi i32 [ %35, %43 ], [ %40, %38 ]
  %47 = tail call i32 @llvm.umax.i32(i32 %45, i32 258)
  br label %108

48:                                               ; preds = %38, %34
  %49 = phi i32 [ %40, %38 ], [ %35, %34 ]
  %50 = phi i32 [ %39, %38 ], [ %32, %34 ]
  %51 = load i32, ptr %11, align 4, !tbaa !153
  %52 = add i32 %51, %50
  %53 = add i32 %52, -2
  %54 = and i32 %53, 32767
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !3
  %58 = add i32 %52, 32767
  %59 = and i32 %58, 32767
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %60
  %62 = load i8, ptr %61, align 1, !tbaa !3
  %63 = sub i32 258, %50
  %64 = zext i32 %63 to i64
  %65 = tail call i64 @llvm.umin.i64(i64 %27, i64 %64)
  %66 = trunc i64 %65 to i32
  %67 = icmp eq ptr %28, null
  %68 = getelementptr inbounds i8, ptr %28, i64 %65
  %69 = select i1 %67, ptr null, ptr %68
  %70 = sub i64 %27, %65
  %71 = add i32 %50, %66
  store i32 %71, ptr %9, align 8, !tbaa !60
  %72 = icmp eq ptr %28, %69
  br i1 %72, label %163, label %73

73:                                               ; preds = %48
  %74 = zext i8 %57 to i32
  %75 = shl nuw nsw i32 %74, 5
  %76 = zext i8 %62 to i32
  %77 = xor i32 %75, %76
  br label %78

78:                                               ; preds = %73, %93
  %79 = phi i32 [ %105, %93 ], [ %52, %73 ]
  %80 = phi ptr [ %84, %93 ], [ %28, %73 ]
  %81 = phi i32 [ %106, %93 ], [ %53, %73 ]
  %82 = phi i32 [ %97, %93 ], [ %77, %73 ]
  %83 = and i32 %79, 32767
  %84 = getelementptr inbounds i8, ptr %80, i64 1
  %85 = load i8, ptr %80, align 1, !tbaa !3
  %86 = zext i32 %83 to i64
  %87 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %86
  store i8 %85, ptr %87, align 1, !tbaa !3
  %88 = icmp ult i32 %83, 257
  br i1 %88, label %89, label %93

89:                                               ; preds = %78
  %90 = or i32 %83, 32768
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %91
  store i8 %85, ptr %92, align 1, !tbaa !3
  br label %93

93:                                               ; preds = %89, %78
  %94 = shl nsw i32 %82, 5
  %95 = zext i8 %85 to i32
  %96 = and i32 %94, 32736
  %97 = xor i32 %96, %95
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 41, i64 %98
  %100 = load i16, ptr %99, align 2, !tbaa !103
  %101 = and i32 %81, 32767
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 40, i64 %102
  store i16 %100, ptr %103, align 2, !tbaa !103
  %104 = trunc i32 %81 to i16
  store i16 %104, ptr %99, align 2, !tbaa !103
  %105 = add nuw nsw i32 %83, 1
  %106 = add i32 %81, 1
  %107 = icmp eq ptr %84, %69
  br i1 %107, label %163, label %78, !llvm.loop !154

108:                                              ; preds = %44, %154
  %109 = phi i32 [ %45, %44 ], [ %128, %154 ]
  %110 = phi ptr [ %28, %44 ], [ %114, %154 ]
  %111 = phi i64 [ %27, %44 ], [ %119, %154 ]
  %112 = icmp eq i32 %109, %47
  br i1 %112, label %156, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds i8, ptr %110, i64 1
  %115 = load i8, ptr %110, align 1, !tbaa !3
  %116 = load i32, ptr %11, align 4, !tbaa !153
  %117 = add i32 %116, %109
  %118 = and i32 %117, 32767
  %119 = add i64 %111, -1
  %120 = zext i32 %118 to i64
  %121 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %120
  store i8 %115, ptr %121, align 1, !tbaa !3
  %122 = icmp ult i32 %118, 257
  br i1 %122, label %123, label %127

123:                                              ; preds = %113
  %124 = or i32 %118, 32768
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %125
  store i8 %115, ptr %126, align 1, !tbaa !3
  br label %127

127:                                              ; preds = %123, %113
  %128 = add nuw nsw i32 %109, 1
  store i32 %128, ptr %9, align 8, !tbaa !60
  %129 = add i32 %128, %46
  %130 = icmp ugt i32 %129, 2
  br i1 %130, label %131, label %154

131:                                              ; preds = %127
  %132 = add i32 %117, -2
  %133 = and i32 %132, 32767
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %134
  %136 = load i8, ptr %135, align 1, !tbaa !3
  %137 = zext i8 %136 to i64
  %138 = shl nuw nsw i64 %137, 10
  %139 = add i32 %117, 32767
  %140 = and i32 %139, 32767
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %141
  %143 = load i8, ptr %142, align 1, !tbaa !3
  %144 = zext i8 %143 to i64
  %145 = shl nuw nsw i64 %144, 5
  %146 = zext i8 %115 to i64
  %147 = and i64 %138, 31744
  %148 = xor i64 %145, %146
  %149 = xor i64 %148, %147
  %150 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 41, i64 %149
  %151 = load i16, ptr %150, align 2, !tbaa !103
  %152 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 40, i64 %134
  store i16 %151, ptr %152, align 2, !tbaa !103
  %153 = trunc i32 %132 to i16
  store i16 %153, ptr %150, align 2, !tbaa !103
  br label %154

154:                                              ; preds = %131, %127
  %155 = icmp eq i64 %119, 0
  br i1 %155, label %163, label %108, !llvm.loop !155

156:                                              ; preds = %108, %43
  %157 = phi i32 [ %35, %43 ], [ %46, %108 ]
  %158 = phi i32 [ %32, %43 ], [ %47, %108 ]
  %159 = phi i64 [ 0, %43 ], [ %111, %108 ]
  %160 = phi ptr [ %28, %43 ], [ %110, %108 ]
  %161 = sub i32 32768, %158
  %162 = tail call i32 @llvm.umin.i32(i32 %161, i32 %157)
  store i32 %162, ptr %10, align 4, !tbaa !61
  br label %172

163:                                              ; preds = %154, %93, %48
  %164 = phi i32 [ %49, %48 ], [ %49, %93 ], [ %46, %154 ]
  %165 = phi i32 [ %71, %48 ], [ %71, %93 ], [ %128, %154 ]
  %166 = phi i64 [ %70, %48 ], [ %70, %93 ], [ 0, %154 ]
  %167 = phi ptr [ %28, %48 ], [ %69, %93 ], [ %114, %154 ]
  %168 = sub i32 32768, %165
  %169 = tail call i32 @llvm.umin.i32(i32 %168, i32 %164)
  store i32 %169, ptr %10, align 4, !tbaa !61
  %170 = icmp ult i32 %165, 258
  %171 = select i1 %8, i1 %170, i1 false
  br i1 %171, label %635, label %172

172:                                              ; preds = %156, %163
  %173 = phi i32 [ %162, %156 ], [ %169, %163 ]
  %174 = phi ptr [ %160, %156 ], [ %167, %163 ]
  %175 = phi i64 [ %159, %156 ], [ %166, %163 ]
  %176 = phi i32 [ %158, %156 ], [ %165, %163 ]
  %177 = load i32, ptr %12, align 8, !tbaa !37
  %178 = icmp eq i32 %177, 0
  %179 = select i1 %178, i32 2, i32 %177
  %180 = load i32, ptr %11, align 4, !tbaa !153
  %181 = and i32 %180, 32767
  %182 = load i32, ptr %13, align 8, !tbaa !27
  %183 = and i32 %182, 589824
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %217, label %185

185:                                              ; preds = %172
  %186 = icmp ne i32 %173, 0
  %187 = and i32 %182, 524288
  %188 = icmp eq i32 %187, 0
  %189 = select i1 %186, i1 %188, i1 false
  br i1 %189, label %190, label %364

190:                                              ; preds = %185
  %191 = add i32 %180, 32767
  %192 = and i32 %191, 32767
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %193
  %195 = load i8, ptr %194, align 1, !tbaa !3
  %196 = icmp eq i32 %176, 0
  br i1 %196, label %212, label %197

197:                                              ; preds = %190
  %198 = zext i32 %176 to i64
  br label %199

199:                                              ; preds = %197, %207
  %200 = phi i64 [ 0, %197 ], [ %208, %207 ]
  %201 = trunc i64 %200 to i32
  %202 = add i32 %181, %201
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %203
  %205 = load i8, ptr %204, align 1, !tbaa !3
  %206 = icmp eq i8 %205, %195
  br i1 %206, label %207, label %210

207:                                              ; preds = %199
  %208 = add nuw nsw i64 %200, 1
  %209 = icmp eq i64 %208, %198
  br i1 %209, label %212, label %199, !llvm.loop !156

210:                                              ; preds = %199
  %211 = trunc i64 %200 to i32
  br label %212

212:                                              ; preds = %207, %210, %190
  %213 = phi i32 [ 0, %190 ], [ %211, %210 ], [ %176, %207 ]
  %214 = icmp ugt i32 %213, 2
  %215 = zext i1 %214 to i32
  %216 = select i1 %214, i32 %213, i32 0
  br label %364

217:                                              ; preds = %172
  %218 = zext i32 %181 to i64
  %219 = getelementptr inbounds i8, ptr %14, i64 %218
  %220 = icmp ult i32 %176, 259
  br i1 %220, label %222, label %221

221:                                              ; preds = %217
  tail call void @__assert_fail(ptr noundef nonnull @.str.60, ptr noundef nonnull @.str.12, i32 noundef 3353, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_find_match) #41
  unreachable

222:                                              ; preds = %217
  %223 = add i32 %179, %181
  %224 = add i32 %223, -1
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %225
  %227 = load i8, ptr %226, align 1, !tbaa !3
  %228 = zext i32 %223 to i64
  %229 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %228
  %230 = load i8, ptr %229, align 1, !tbaa !3
  %231 = icmp ult i32 %179, %176
  br i1 %231, label %232, label %364

232:                                              ; preds = %222
  %233 = icmp ugt i32 %179, 31
  %234 = zext i1 %233 to i64
  %235 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 3, i64 %234
  %236 = load i32, ptr %235, align 4, !tbaa !12
  %237 = add i32 %236, -1
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %364, label %239

239:                                              ; preds = %232
  %240 = trunc i32 %180 to i16
  br label %241

241:                                              ; preds = %356, %239
  %242 = phi i32 [ 0, %239 ], [ %357, %356 ]
  %243 = phi i32 [ %179, %239 ], [ %358, %356 ]
  %244 = phi i32 [ %237, %239 ], [ %362, %356 ]
  %245 = phi i8 [ %227, %239 ], [ %361, %356 ]
  %246 = phi i8 [ %230, %239 ], [ %360, %356 ]
  %247 = phi i32 [ %181, %239 ], [ %324, %356 ]
  %248 = phi i32 [ %179, %239 ], [ %359, %356 ]
  br label %249

249:                                              ; preds = %320, %241
  %250 = phi i32 [ %244, %241 ], [ %321, %320 ]
  %251 = phi i32 [ %247, %241 ], [ %308, %320 ]
  %252 = zext i32 %251 to i64
  %253 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 40, i64 %252
  %254 = load i16, ptr %253, align 2, !tbaa !103
  %255 = icmp eq i16 %254, 0
  br i1 %255, label %364, label %256

256:                                              ; preds = %249
  %257 = sub i16 %240, %254
  %258 = zext i16 %257 to i32
  %259 = icmp ult i32 %173, %258
  br i1 %259, label %364, label %260

260:                                              ; preds = %256
  %261 = and i16 %254, 32767
  %262 = zext i16 %261 to i32
  %263 = add i32 %248, %262
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %264
  %266 = load i8, ptr %265, align 1, !tbaa !3
  %267 = icmp eq i8 %266, %246
  br i1 %267, label %268, label %274

268:                                              ; preds = %260
  %269 = add i32 %263, -1
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %270
  %272 = load i8, ptr %271, align 1, !tbaa !3
  %273 = icmp eq i8 %272, %245
  br i1 %273, label %323, label %274

274:                                              ; preds = %268, %260
  %275 = zext i16 %261 to i64
  %276 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 40, i64 %275
  %277 = load i16, ptr %276, align 2, !tbaa !103
  %278 = icmp eq i16 %277, 0
  br i1 %278, label %364, label %279

279:                                              ; preds = %274
  %280 = sub i16 %240, %277
  %281 = zext i16 %280 to i32
  %282 = icmp ult i32 %173, %281
  br i1 %282, label %364, label %283

283:                                              ; preds = %279
  %284 = and i16 %277, 32767
  %285 = zext i16 %284 to i32
  %286 = add i32 %248, %285
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %287
  %289 = load i8, ptr %288, align 1, !tbaa !3
  %290 = icmp eq i8 %289, %246
  br i1 %290, label %291, label %297

291:                                              ; preds = %283
  %292 = add i32 %286, -1
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %293
  %295 = load i8, ptr %294, align 1, !tbaa !3
  %296 = icmp eq i8 %295, %245
  br i1 %296, label %323, label %297

297:                                              ; preds = %291, %283
  %298 = zext i16 %284 to i64
  %299 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 40, i64 %298
  %300 = load i16, ptr %299, align 2, !tbaa !103
  %301 = icmp eq i16 %300, 0
  br i1 %301, label %364, label %302

302:                                              ; preds = %297
  %303 = sub i16 %240, %300
  %304 = zext i16 %303 to i32
  %305 = icmp ult i32 %173, %304
  br i1 %305, label %364, label %306

306:                                              ; preds = %302
  %307 = and i16 %300, 32767
  %308 = zext i16 %307 to i32
  %309 = add i32 %248, %308
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %310
  %312 = load i8, ptr %311, align 1, !tbaa !3
  %313 = icmp eq i8 %312, %246
  br i1 %313, label %314, label %320

314:                                              ; preds = %306
  %315 = add i32 %309, -1
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %316
  %318 = load i8, ptr %317, align 1, !tbaa !3
  %319 = icmp eq i8 %318, %245
  br i1 %319, label %323, label %320

320:                                              ; preds = %314, %306
  %321 = add i32 %250, -1
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %364, label %249

323:                                              ; preds = %314, %291, %268
  %324 = phi i32 [ %262, %268 ], [ %285, %291 ], [ %308, %314 ]
  %325 = phi i32 [ %258, %268 ], [ %281, %291 ], [ %304, %314 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %364, label %327

327:                                              ; preds = %323
  %328 = zext i32 %324 to i64
  %329 = getelementptr inbounds i8, ptr %14, i64 %328
  br label %330

330:                                              ; preds = %337, %327
  %331 = phi ptr [ %329, %327 ], [ %338, %337 ]
  %332 = phi ptr [ %219, %327 ], [ %339, %337 ]
  %333 = phi i32 [ 0, %327 ], [ %340, %337 ]
  %334 = load i8, ptr %332, align 1, !tbaa !3
  %335 = load i8, ptr %331, align 1, !tbaa !3
  %336 = icmp eq i8 %334, %335
  br i1 %336, label %337, label %342

337:                                              ; preds = %330
  %338 = getelementptr inbounds i8, ptr %331, i64 1
  %339 = getelementptr inbounds i8, ptr %332, i64 1
  %340 = add nuw i32 %333, 1
  %341 = icmp eq i32 %340, %176
  br i1 %341, label %342, label %330, !llvm.loop !157

342:                                              ; preds = %337, %330
  %343 = phi i32 [ %333, %330 ], [ %176, %337 ]
  %344 = icmp ugt i32 %343, %248
  br i1 %344, label %345, label %356

345:                                              ; preds = %342
  %346 = icmp eq i32 %343, %176
  br i1 %346, label %364, label %347

347:                                              ; preds = %345
  %348 = add i32 %343, %181
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %349
  %351 = load i8, ptr %350, align 1, !tbaa !3
  %352 = add i32 %348, -1
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %353
  %355 = load i8, ptr %354, align 1, !tbaa !3
  br label %356

356:                                              ; preds = %347, %342
  %357 = phi i32 [ %325, %347 ], [ %242, %342 ]
  %358 = phi i32 [ %343, %347 ], [ %243, %342 ]
  %359 = phi i32 [ %343, %347 ], [ %248, %342 ]
  %360 = phi i8 [ %351, %347 ], [ %246, %342 ]
  %361 = phi i8 [ %355, %347 ], [ %245, %342 ]
  %362 = add i32 %250, -1
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %241

364:                                              ; preds = %356, %345, %323, %320, %302, %297, %279, %274, %256, %249, %212, %232, %222, %185
  %365 = phi i32 [ 0, %185 ], [ 0, %232 ], [ 0, %222 ], [ %215, %212 ], [ %242, %249 ], [ %242, %256 ], [ %242, %274 ], [ %242, %279 ], [ %242, %297 ], [ %242, %302 ], [ %242, %320 ], [ %357, %356 ], [ %325, %345 ], [ %242, %323 ]
  %366 = phi i32 [ %179, %185 ], [ %179, %232 ], [ %179, %222 ], [ %216, %212 ], [ %243, %249 ], [ %243, %256 ], [ %243, %274 ], [ %243, %279 ], [ %243, %297 ], [ %243, %302 ], [ %243, %320 ], [ %358, %356 ], [ %176, %345 ], [ %243, %323 ]
  %367 = icmp eq i32 %366, 3
  %368 = icmp ugt i32 %365, 8191
  %369 = select i1 %367, i1 %368, i1 false
  %370 = icmp eq i32 %181, %365
  %371 = select i1 %369, i1 true, i1 %370
  br i1 %371, label %378, label %372

372:                                              ; preds = %364
  %373 = and i32 %182, 131072
  %374 = icmp ne i32 %373, 0
  %375 = icmp ult i32 %366, 6
  %376 = select i1 %374, i1 %375, i1 false
  br i1 %376, label %378, label %377

377:                                              ; preds = %372
  br i1 %178, label %514, label %379

378:                                              ; preds = %364, %372
  br i1 %178, label %516, label %459

379:                                              ; preds = %377
  %380 = icmp ugt i32 %366, %177
  br i1 %380, label %381, label %459

381:                                              ; preds = %379
  %382 = load i32, ptr %15, align 4, !tbaa !36
  %383 = trunc i32 %382 to i8
  %384 = load i32, ptr %16, align 4, !tbaa !158
  %385 = add i32 %384, 1
  store i32 %385, ptr %16, align 4, !tbaa !158
  %386 = load ptr, ptr %17, align 8, !tbaa !30
  %387 = getelementptr inbounds i8, ptr %386, i64 1
  store ptr %387, ptr %17, align 8, !tbaa !30
  store i8 %383, ptr %386, align 1, !tbaa !3
  %388 = load ptr, ptr %18, align 8, !tbaa !31
  %389 = load i8, ptr %388, align 1, !tbaa !3
  %390 = lshr i8 %389, 1
  store i8 %390, ptr %388, align 1, !tbaa !3
  %391 = load i32, ptr %19, align 8, !tbaa !32
  %392 = add i32 %391, -1
  store i32 %392, ptr %19, align 8, !tbaa !32
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %397

394:                                              ; preds = %381
  store i32 8, ptr %19, align 8, !tbaa !32
  %395 = load ptr, ptr %17, align 8, !tbaa !30
  %396 = getelementptr inbounds i8, ptr %395, i64 1
  store ptr %396, ptr %17, align 8, !tbaa !30
  store ptr %395, ptr %18, align 8, !tbaa !31
  br label %397

397:                                              ; preds = %381, %394
  %398 = and i32 %382, 255
  %399 = zext i32 %398 to i64
  %400 = getelementptr inbounds [288 x i16], ptr %20, i64 0, i64 %399
  %401 = load i16, ptr %400, align 2, !tbaa !103
  %402 = add i16 %401, 1
  store i16 %402, ptr %400, align 2, !tbaa !103
  %403 = icmp ugt i32 %366, 127
  br i1 %403, label %404, label %454

404:                                              ; preds = %397
  %405 = add i32 %365, -1
  %406 = icmp ult i32 %405, 32768
  br i1 %406, label %408, label %407

407:                                              ; preds = %404
  tail call void @__assert_fail(ptr noundef nonnull @.str.61, ptr noundef nonnull @.str.12, i32 noundef 3604, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_record_match) #41
  unreachable

408:                                              ; preds = %404
  %409 = load i32, ptr %16, align 4, !tbaa !158
  %410 = add i32 %409, %366
  store i32 %410, ptr %16, align 4, !tbaa !158
  %411 = add i32 %366, -3
  %412 = trunc i32 %411 to i8
  %413 = load ptr, ptr %17, align 8, !tbaa !30
  store i8 %412, ptr %413, align 1, !tbaa !3
  %414 = trunc i32 %405 to i8
  %415 = load ptr, ptr %17, align 8, !tbaa !30
  %416 = getelementptr inbounds i8, ptr %415, i64 1
  store i8 %414, ptr %416, align 1, !tbaa !3
  %417 = lshr i32 %405, 8
  %418 = trunc i32 %417 to i8
  %419 = load ptr, ptr %17, align 8, !tbaa !30
  %420 = getelementptr inbounds i8, ptr %419, i64 2
  store i8 %418, ptr %420, align 1, !tbaa !3
  %421 = load ptr, ptr %17, align 8, !tbaa !30
  %422 = getelementptr inbounds i8, ptr %421, i64 3
  store ptr %422, ptr %17, align 8, !tbaa !30
  %423 = load ptr, ptr %18, align 8, !tbaa !31
  %424 = load i8, ptr %423, align 1, !tbaa !3
  %425 = lshr i8 %424, 1
  %426 = or i8 %425, -128
  store i8 %426, ptr %423, align 1, !tbaa !3
  %427 = load i32, ptr %19, align 8, !tbaa !32
  %428 = add i32 %427, -1
  store i32 %428, ptr %19, align 8, !tbaa !32
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %433

430:                                              ; preds = %408
  store i32 8, ptr %19, align 8, !tbaa !32
  %431 = load ptr, ptr %17, align 8, !tbaa !30
  %432 = getelementptr inbounds i8, ptr %431, i64 1
  store ptr %432, ptr %17, align 8, !tbaa !30
  store ptr %431, ptr %18, align 8, !tbaa !31
  br label %433

433:                                              ; preds = %408, %430
  %434 = and i32 %405, 511
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_sym, i64 0, i64 %435
  %437 = load i8, ptr %436, align 1, !tbaa !3
  %438 = zext i32 %417 to i64
  %439 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_sym, i64 0, i64 %438
  %440 = load i8, ptr %439, align 1, !tbaa !3
  %441 = icmp ult i32 %405, 512
  %442 = select i1 %441, i8 %437, i8 %440
  %443 = zext i8 %442 to i64
  %444 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 1, i64 %443
  %445 = load i16, ptr %444, align 2, !tbaa !103
  %446 = add i16 %445, 1
  store i16 %446, ptr %444, align 2, !tbaa !103
  %447 = zext i32 %411 to i64
  %448 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %447
  %449 = load i16, ptr %448, align 2, !tbaa !103
  %450 = zext i16 %449 to i64
  %451 = getelementptr inbounds [288 x i16], ptr %20, i64 0, i64 %450
  %452 = load i16, ptr %451, align 2, !tbaa !103
  %453 = add i16 %452, 1
  store i16 %453, ptr %451, align 2, !tbaa !103
  store i32 0, ptr %12, align 8, !tbaa !37
  br label %603

454:                                              ; preds = %397
  %455 = zext i32 %181 to i64
  %456 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %455
  %457 = load i8, ptr %456, align 1, !tbaa !3
  %458 = zext i8 %457 to i32
  store i32 %458, ptr %15, align 4, !tbaa !36
  store i32 %365, ptr %21, align 4, !tbaa !38
  store i32 %366, ptr %12, align 8, !tbaa !37
  br label %603

459:                                              ; preds = %378, %379
  %460 = load i32, ptr %21, align 4, !tbaa !38
  %461 = icmp ugt i32 %177, 2
  %462 = add i32 %460, -1
  %463 = icmp ult i32 %462, 32768
  %464 = and i1 %461, %463
  br i1 %464, label %466, label %465

465:                                              ; preds = %459
  tail call void @__assert_fail(ptr noundef nonnull @.str.61, ptr noundef nonnull @.str.12, i32 noundef 3604, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_record_match) #41
  unreachable

466:                                              ; preds = %459
  %467 = load i32, ptr %16, align 4, !tbaa !158
  %468 = add i32 %467, %177
  store i32 %468, ptr %16, align 4, !tbaa !158
  %469 = add i32 %177, -3
  %470 = trunc i32 %469 to i8
  %471 = load ptr, ptr %17, align 8, !tbaa !30
  store i8 %470, ptr %471, align 1, !tbaa !3
  %472 = trunc i32 %462 to i8
  %473 = load ptr, ptr %17, align 8, !tbaa !30
  %474 = getelementptr inbounds i8, ptr %473, i64 1
  store i8 %472, ptr %474, align 1, !tbaa !3
  %475 = lshr i32 %462, 8
  %476 = trunc i32 %475 to i8
  %477 = load ptr, ptr %17, align 8, !tbaa !30
  %478 = getelementptr inbounds i8, ptr %477, i64 2
  store i8 %476, ptr %478, align 1, !tbaa !3
  %479 = load ptr, ptr %17, align 8, !tbaa !30
  %480 = getelementptr inbounds i8, ptr %479, i64 3
  store ptr %480, ptr %17, align 8, !tbaa !30
  %481 = load ptr, ptr %18, align 8, !tbaa !31
  %482 = load i8, ptr %481, align 1, !tbaa !3
  %483 = lshr i8 %482, 1
  %484 = or i8 %483, -128
  store i8 %484, ptr %481, align 1, !tbaa !3
  %485 = load i32, ptr %19, align 8, !tbaa !32
  %486 = add i32 %485, -1
  store i32 %486, ptr %19, align 8, !tbaa !32
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %491

488:                                              ; preds = %466
  store i32 8, ptr %19, align 8, !tbaa !32
  %489 = load ptr, ptr %17, align 8, !tbaa !30
  %490 = getelementptr inbounds i8, ptr %489, i64 1
  store ptr %490, ptr %17, align 8, !tbaa !30
  store ptr %489, ptr %18, align 8, !tbaa !31
  br label %491

491:                                              ; preds = %466, %488
  %492 = and i32 %462, 511
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_sym, i64 0, i64 %493
  %495 = load i8, ptr %494, align 1, !tbaa !3
  %496 = zext i32 %475 to i64
  %497 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_sym, i64 0, i64 %496
  %498 = load i8, ptr %497, align 1, !tbaa !3
  %499 = icmp ult i32 %462, 512
  %500 = select i1 %499, i8 %495, i8 %498
  %501 = zext i8 %500 to i64
  %502 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 1, i64 %501
  %503 = load i16, ptr %502, align 2, !tbaa !103
  %504 = add i16 %503, 1
  store i16 %504, ptr %502, align 2, !tbaa !103
  %505 = zext i32 %469 to i64
  %506 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %505
  %507 = load i16, ptr %506, align 2, !tbaa !103
  %508 = zext i16 %507 to i64
  %509 = getelementptr inbounds [288 x i16], ptr %20, i64 0, i64 %508
  %510 = load i16, ptr %509, align 2, !tbaa !103
  %511 = add i16 %510, 1
  store i16 %511, ptr %509, align 2, !tbaa !103
  %512 = load i32, ptr %12, align 8, !tbaa !37
  %513 = add i32 %512, -1
  store i32 0, ptr %12, align 8, !tbaa !37
  br label %603

514:                                              ; preds = %377
  %515 = icmp eq i32 %365, 0
  br i1 %515, label %516, label %538

516:                                              ; preds = %378, %514
  %517 = zext i32 %181 to i64
  %518 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %517
  %519 = load i8, ptr %518, align 1, !tbaa !3
  %520 = load i32, ptr %16, align 4, !tbaa !158
  %521 = add i32 %520, 1
  store i32 %521, ptr %16, align 4, !tbaa !158
  %522 = load ptr, ptr %17, align 8, !tbaa !30
  %523 = getelementptr inbounds i8, ptr %522, i64 1
  store ptr %523, ptr %17, align 8, !tbaa !30
  store i8 %519, ptr %522, align 1, !tbaa !3
  %524 = load ptr, ptr %18, align 8, !tbaa !31
  %525 = load i8, ptr %524, align 1, !tbaa !3
  %526 = lshr i8 %525, 1
  store i8 %526, ptr %524, align 1, !tbaa !3
  %527 = load i32, ptr %19, align 8, !tbaa !32
  %528 = add i32 %527, -1
  store i32 %528, ptr %19, align 8, !tbaa !32
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %533

530:                                              ; preds = %516
  store i32 8, ptr %19, align 8, !tbaa !32
  %531 = load ptr, ptr %17, align 8, !tbaa !30
  %532 = getelementptr inbounds i8, ptr %531, i64 1
  store ptr %532, ptr %17, align 8, !tbaa !30
  store ptr %531, ptr %18, align 8, !tbaa !31
  br label %533

533:                                              ; preds = %516, %530
  %534 = zext i8 %519 to i64
  %535 = getelementptr inbounds [288 x i16], ptr %20, i64 0, i64 %534
  %536 = load i16, ptr %535, align 2, !tbaa !103
  %537 = add i16 %536, 1
  store i16 %537, ptr %535, align 2, !tbaa !103
  br label %603

538:                                              ; preds = %514
  %539 = load i32, ptr %22, align 4, !tbaa !29
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %546

541:                                              ; preds = %538
  %542 = and i32 %182, 65536
  %543 = icmp ne i32 %542, 0
  %544 = icmp ugt i32 %366, 127
  %545 = select i1 %543, i1 true, i1 %544
  br i1 %545, label %546, label %598

546:                                              ; preds = %541, %538
  %547 = icmp ugt i32 %366, 2
  %548 = add i32 %365, -1
  %549 = icmp ult i32 %365, 32769
  %550 = and i1 %549, %547
  br i1 %550, label %552, label %551

551:                                              ; preds = %546
  tail call void @__assert_fail(ptr noundef nonnull @.str.61, ptr noundef nonnull @.str.12, i32 noundef 3604, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_record_match) #41
  unreachable

552:                                              ; preds = %546
  %553 = load i32, ptr %16, align 4, !tbaa !158
  %554 = add i32 %553, %366
  store i32 %554, ptr %16, align 4, !tbaa !158
  %555 = add i32 %366, -3
  %556 = trunc i32 %555 to i8
  %557 = load ptr, ptr %17, align 8, !tbaa !30
  store i8 %556, ptr %557, align 1, !tbaa !3
  %558 = trunc i32 %548 to i8
  %559 = load ptr, ptr %17, align 8, !tbaa !30
  %560 = getelementptr inbounds i8, ptr %559, i64 1
  store i8 %558, ptr %560, align 1, !tbaa !3
  %561 = lshr i32 %548, 8
  %562 = trunc i32 %561 to i8
  %563 = load ptr, ptr %17, align 8, !tbaa !30
  %564 = getelementptr inbounds i8, ptr %563, i64 2
  store i8 %562, ptr %564, align 1, !tbaa !3
  %565 = load ptr, ptr %17, align 8, !tbaa !30
  %566 = getelementptr inbounds i8, ptr %565, i64 3
  store ptr %566, ptr %17, align 8, !tbaa !30
  %567 = load ptr, ptr %18, align 8, !tbaa !31
  %568 = load i8, ptr %567, align 1, !tbaa !3
  %569 = lshr i8 %568, 1
  %570 = or i8 %569, -128
  store i8 %570, ptr %567, align 1, !tbaa !3
  %571 = load i32, ptr %19, align 8, !tbaa !32
  %572 = add i32 %571, -1
  store i32 %572, ptr %19, align 8, !tbaa !32
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %577

574:                                              ; preds = %552
  store i32 8, ptr %19, align 8, !tbaa !32
  %575 = load ptr, ptr %17, align 8, !tbaa !30
  %576 = getelementptr inbounds i8, ptr %575, i64 1
  store ptr %576, ptr %17, align 8, !tbaa !30
  store ptr %575, ptr %18, align 8, !tbaa !31
  br label %577

577:                                              ; preds = %552, %574
  %578 = and i32 %548, 511
  %579 = zext i32 %578 to i64
  %580 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_sym, i64 0, i64 %579
  %581 = load i8, ptr %580, align 1, !tbaa !3
  %582 = zext i32 %561 to i64
  %583 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_sym, i64 0, i64 %582
  %584 = load i8, ptr %583, align 1, !tbaa !3
  %585 = icmp ult i32 %365, 513
  %586 = select i1 %585, i8 %581, i8 %584
  %587 = zext i8 %586 to i64
  %588 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 1, i64 %587
  %589 = load i16, ptr %588, align 2, !tbaa !103
  %590 = add i16 %589, 1
  store i16 %590, ptr %588, align 2, !tbaa !103
  %591 = zext i32 %555 to i64
  %592 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %591
  %593 = load i16, ptr %592, align 2, !tbaa !103
  %594 = zext i16 %593 to i64
  %595 = getelementptr inbounds [288 x i16], ptr %20, i64 0, i64 %594
  %596 = load i16, ptr %595, align 2, !tbaa !103
  %597 = add i16 %596, 1
  store i16 %597, ptr %595, align 2, !tbaa !103
  br label %603

598:                                              ; preds = %541
  %599 = zext i32 %181 to i64
  %600 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %599
  %601 = load i8, ptr %600, align 1, !tbaa !3
  %602 = zext i8 %601 to i32
  store i32 %602, ptr %15, align 4, !tbaa !36
  store i32 %365, ptr %21, align 4, !tbaa !38
  store i32 %366, ptr %12, align 8, !tbaa !37
  br label %603

603:                                              ; preds = %533, %598, %577, %491, %454, %433
  %604 = phi i32 [ %366, %433 ], [ 1, %454 ], [ %513, %491 ], [ %366, %577 ], [ 1, %598 ], [ 1, %533 ]
  %605 = load i32, ptr %11, align 4, !tbaa !153
  %606 = add i32 %605, %604
  store i32 %606, ptr %11, align 4, !tbaa !153
  %607 = load i32, ptr %9, align 8, !tbaa !60
  %608 = icmp ult i32 %607, %604
  br i1 %608, label %609, label %610

609:                                              ; preds = %603
  tail call void @__assert_fail(ptr noundef nonnull @.str.59, ptr noundef nonnull @.str.12, i32 noundef 3747, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_normal) #41
  unreachable

610:                                              ; preds = %603
  %611 = sub i32 %607, %604
  store i32 %611, ptr %9, align 8, !tbaa !60
  %612 = load i32, ptr %10, align 4, !tbaa !61
  %613 = add i32 %612, %604
  %614 = tail call i32 @llvm.umin.i32(i32 %613, i32 32768)
  store i32 %614, ptr %10, align 4, !tbaa !61
  %615 = load ptr, ptr %17, align 8, !tbaa !30
  %616 = icmp ugt ptr %615, %24
  br i1 %616, label %632, label %617

617:                                              ; preds = %610
  %618 = load i32, ptr %16, align 4, !tbaa !158
  %619 = icmp ugt i32 %618, 31744
  br i1 %619, label %621, label %620

620:                                              ; preds = %617, %628, %632
  br label %26

621:                                              ; preds = %617
  %622 = ptrtoint ptr %615 to i64
  %623 = sub i64 %622, %25
  %624 = trunc i64 %623 to i32
  %625 = mul i32 %624, 115
  %626 = lshr i32 %625, 7
  %627 = icmp ult i32 %626, %618
  br i1 %627, label %628, label %632

628:                                              ; preds = %621
  %629 = load i32, ptr %13, align 8, !tbaa !27
  %630 = and i32 %629, 524288
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %620, label %632

632:                                              ; preds = %628, %621, %610
  store ptr %174, ptr %2, align 8, !tbaa !52
  store i64 %175, ptr %4, align 8, !tbaa !53
  %633 = tail call fastcc i32 @tdefl_flush_block(ptr noundef nonnull %0, i32 noundef 0)
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %620, label %638

635:                                              ; preds = %163, %30, %31
  %636 = phi i64 [ 0, %31 ], [ 0, %30 ], [ %166, %163 ]
  %637 = phi ptr [ %28, %31 ], [ %28, %30 ], [ %167, %163 ]
  store ptr %637, ptr %2, align 8, !tbaa !52
  store i64 %636, ptr %4, align 8, !tbaa !53
  br label %641

638:                                              ; preds = %632
  %639 = icmp sgt i32 %633, -1
  %640 = zext i1 %639 to i32
  br label %641

641:                                              ; preds = %638, %635
  %642 = phi i32 [ 1, %635 ], [ %640, %638 ]
  ret i32 %642
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @tdefl_flush_block(ptr noundef %0, i32 noundef %1) unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 2
  %4 = load i32, ptr %3, align 8, !tbaa !27
  %5 = and i32 %4, 524288
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 6
  %9 = load i32, ptr %8, align 4, !tbaa !153
  %10 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 15
  %11 = load i32, ptr %10, align 8, !tbaa !159
  %12 = sub i32 %9, %11
  %13 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 8
  %14 = load i32, ptr %13, align 4, !tbaa !61
  %15 = icmp ule i32 %12, %14
  br label %16

16:                                               ; preds = %7, %2
  %17 = phi i1 [ false, %2 ], [ %15, %7 ]
  %18 = load ptr, ptr %0, align 8, !tbaa !39
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 30
  %22 = load ptr, ptr %21, align 8, !tbaa !51
  %23 = load i64, ptr %22, align 8, !tbaa !46
  %24 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 34
  %25 = load i64, ptr %24, align 8, !tbaa !54
  %26 = sub i64 %23, %25
  %27 = icmp ugt i64 %26, 85195
  br i1 %27, label %28, label %32

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 28
  %30 = load ptr, ptr %29, align 8, !tbaa !50
  %31 = getelementptr inbounds i8, ptr %30, i64 %25
  br label %34

32:                                               ; preds = %20, %16
  %33 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 42
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi ptr [ %31, %28 ], [ %33, %32 ]
  %36 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  store ptr %35, ptr %36, align 8, !tbaa !33
  %37 = getelementptr inbounds i8, ptr %35, i64 85180
  %38 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  store ptr %37, ptr %38, align 8, !tbaa !34
  %39 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 22
  %40 = load i32, ptr %39, align 4, !tbaa !57
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %34
  tail call void @__assert_fail(ptr noundef nonnull @.str.62, ptr noundef nonnull @.str.12, i32 noundef 3132, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_flush_block) #41
  unreachable

43:                                               ; preds = %34
  %44 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 21
  store i32 0, ptr %44, align 8, !tbaa !59
  store i32 0, ptr %39, align 4, !tbaa !57
  %45 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 10
  %46 = load ptr, ptr %45, align 8, !tbaa !31
  %47 = load i8, ptr %46, align 1, !tbaa !3
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 13
  %50 = load i32, ptr %49, align 8, !tbaa !32
  %51 = lshr i32 %48, %50
  %52 = trunc i32 %51 to i8
  store i8 %52, ptr %46, align 1, !tbaa !3
  %53 = load i32, ptr %49, align 8, !tbaa !32
  %54 = icmp eq i32 %53, 8
  %55 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 9
  %56 = load ptr, ptr %55, align 8, !tbaa !30
  %57 = sext i1 %54 to i64
  %58 = getelementptr inbounds i8, ptr %56, i64 %57
  store ptr %58, ptr %55, align 8, !tbaa !30
  %59 = load i32, ptr %3, align 8, !tbaa !27
  %60 = and i32 %59, 4096
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %132, label %62

62:                                               ; preds = %43
  %63 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 24
  %64 = load i32, ptr %63, align 4, !tbaa !160
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %132

66:                                               ; preds = %62
  %67 = and i32 %59, 4095
  switch i32 %67, label %68 [
    i32 0, label %76
    i32 1, label %76
    i32 6, label %69
    i32 32, label %70
    i32 16, label %71
    i32 128, label %72
    i32 256, label %73
    i32 512, label %74
    i32 768, label %75
  ]

68:                                               ; preds = %66
  br label %76

69:                                               ; preds = %66
  br label %76

70:                                               ; preds = %66
  br label %76

71:                                               ; preds = %66
  br label %76

72:                                               ; preds = %66
  br label %76

73:                                               ; preds = %66
  br label %76

74:                                               ; preds = %66
  br label %76

75:                                               ; preds = %66
  br label %76

76:                                               ; preds = %66, %66, %75, %74, %73, %72, %71, %70, %69, %68
  %77 = phi i32 [ 30720, %66 ], [ 30912, %68 ], [ 30720, %66 ], [ 30784, %69 ], [ 30784, %70 ], [ 30784, %71 ], [ 30848, %72 ], [ 30912, %73 ], [ 30912, %74 ], [ 30912, %75 ]
  %78 = trunc i32 %77 to i16
  %79 = urem i16 %78, 31
  %80 = zext i16 %79 to i32
  %81 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 16
  %82 = load i32, ptr %81, align 4, !tbaa !161
  %83 = shl i32 120, %82
  %84 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 17
  %85 = load i32, ptr %84, align 8, !tbaa !162
  %86 = or i32 %85, %83
  store i32 %86, ptr %84, align 8, !tbaa !162
  %87 = add i32 %82, 8
  store i32 %87, ptr %81, align 4, !tbaa !161
  %88 = icmp ult i32 %82, -8
  br i1 %88, label %89, label %106

89:                                               ; preds = %76, %100
  %90 = phi i32 [ %104, %100 ], [ %87, %76 ]
  %91 = phi i32 [ %103, %100 ], [ %86, %76 ]
  %92 = load ptr, ptr %36, align 8, !tbaa !33
  %93 = load ptr, ptr %38, align 8, !tbaa !34
  %94 = icmp ult ptr %92, %93
  br i1 %94, label %95, label %100

95:                                               ; preds = %89
  %96 = trunc i32 %91 to i8
  %97 = getelementptr inbounds i8, ptr %92, i64 1
  store ptr %97, ptr %36, align 8, !tbaa !33
  store i8 %96, ptr %92, align 1, !tbaa !3
  %98 = load i32, ptr %84, align 8, !tbaa !162
  %99 = load i32, ptr %81, align 4, !tbaa !161
  br label %100

100:                                              ; preds = %95, %89
  %101 = phi i32 [ %99, %95 ], [ %90, %89 ]
  %102 = phi i32 [ %98, %95 ], [ %91, %89 ]
  %103 = lshr i32 %102, 8
  store i32 %103, ptr %84, align 8, !tbaa !162
  %104 = add i32 %101, -8
  store i32 %104, ptr %81, align 4, !tbaa !161
  %105 = icmp ugt i32 %104, 7
  br i1 %105, label %89, label %106, !llvm.loop !163

106:                                              ; preds = %100, %76
  %107 = phi i32 [ %86, %76 ], [ %103, %100 ]
  %108 = phi i32 [ %87, %76 ], [ %104, %100 ]
  %109 = and i32 %77, 192
  %110 = or i32 %109, %80
  %111 = xor i32 %110, 31
  %112 = shl i32 %111, %108
  %113 = or i32 %107, %112
  store i32 %113, ptr %84, align 8, !tbaa !162
  %114 = add nuw nsw i32 %108, 8
  store i32 %114, ptr %81, align 4, !tbaa !161
  br label %115

115:                                              ; preds = %106, %126
  %116 = phi i32 [ %114, %106 ], [ %130, %126 ]
  %117 = phi i32 [ %113, %106 ], [ %129, %126 ]
  %118 = load ptr, ptr %36, align 8, !tbaa !33
  %119 = load ptr, ptr %38, align 8, !tbaa !34
  %120 = icmp ult ptr %118, %119
  br i1 %120, label %121, label %126

121:                                              ; preds = %115
  %122 = trunc i32 %117 to i8
  %123 = getelementptr inbounds i8, ptr %118, i64 1
  store ptr %123, ptr %36, align 8, !tbaa !33
  store i8 %122, ptr %118, align 1, !tbaa !3
  %124 = load i32, ptr %84, align 8, !tbaa !162
  %125 = load i32, ptr %81, align 4, !tbaa !161
  br label %126

126:                                              ; preds = %121, %115
  %127 = phi i32 [ %125, %121 ], [ %116, %115 ]
  %128 = phi i32 [ %124, %121 ], [ %117, %115 ]
  %129 = lshr i32 %128, 8
  store i32 %129, ptr %84, align 8, !tbaa !162
  %130 = add i32 %127, -8
  store i32 %130, ptr %81, align 4, !tbaa !161
  %131 = icmp ugt i32 %130, 7
  br i1 %131, label %115, label %132, !llvm.loop !164

132:                                              ; preds = %126, %43, %62
  %133 = icmp eq i32 %1, 4
  %134 = zext i1 %133 to i32
  %135 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 16
  %136 = load i32, ptr %135, align 4, !tbaa !161
  %137 = shl nuw i32 %134, %136
  %138 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 17
  %139 = load i32, ptr %138, align 8, !tbaa !162
  %140 = or i32 %139, %137
  store i32 %140, ptr %138, align 8, !tbaa !162
  %141 = add i32 %136, 1
  store i32 %141, ptr %135, align 4, !tbaa !161
  %142 = icmp ugt i32 %141, 7
  br i1 %142, label %143, label %160

143:                                              ; preds = %132, %154
  %144 = phi i32 [ %158, %154 ], [ %141, %132 ]
  %145 = phi i32 [ %157, %154 ], [ %140, %132 ]
  %146 = load ptr, ptr %36, align 8, !tbaa !33
  %147 = load ptr, ptr %38, align 8, !tbaa !34
  %148 = icmp ult ptr %146, %147
  br i1 %148, label %149, label %154

149:                                              ; preds = %143
  %150 = trunc i32 %145 to i8
  %151 = getelementptr inbounds i8, ptr %146, i64 1
  store ptr %151, ptr %36, align 8, !tbaa !33
  store i8 %150, ptr %146, align 1, !tbaa !3
  %152 = load i32, ptr %138, align 8, !tbaa !162
  %153 = load i32, ptr %135, align 4, !tbaa !161
  br label %154

154:                                              ; preds = %149, %143
  %155 = phi i32 [ %153, %149 ], [ %144, %143 ]
  %156 = phi i32 [ %152, %149 ], [ %145, %143 ]
  %157 = lshr i32 %156, 8
  store i32 %157, ptr %138, align 8, !tbaa !162
  %158 = add i32 %155, -8
  store i32 %158, ptr %135, align 4, !tbaa !161
  %159 = icmp ugt i32 %158, 7
  br i1 %159, label %143, label %160, !llvm.loop !165

160:                                              ; preds = %154, %132
  %161 = phi i32 [ %140, %132 ], [ %157, %154 ]
  %162 = phi i32 [ %141, %132 ], [ %158, %154 ]
  %163 = load ptr, ptr %36, align 8, !tbaa !33
  br i1 %17, label %187, label %164

164:                                              ; preds = %160
  %165 = load i32, ptr %3, align 8, !tbaa !27
  %166 = and i32 %165, 262144
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 14
  %170 = load i32, ptr %169, align 4, !tbaa !158
  %171 = icmp ult i32 %170, 48
  br label %172

172:                                              ; preds = %168, %164
  %173 = phi i1 [ true, %164 ], [ %171, %168 ]
  %174 = zext i1 %173 to i32
  %175 = tail call fastcc i32 @tdefl_compress_block(ptr noundef nonnull %0, i32 noundef %174)
  %176 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 14
  %177 = load i32, ptr %176, align 4, !tbaa !158
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %327, label %179

179:                                              ; preds = %172
  %180 = load ptr, ptr %36, align 8, !tbaa !33
  %181 = ptrtoint ptr %180 to i64
  %182 = ptrtoint ptr %163 to i64
  %183 = sub i64 1, %182
  %184 = add i64 %183, %181
  %185 = zext i32 %177 to i64
  %186 = icmp slt i64 %184, %185
  br i1 %186, label %327, label %187

187:                                              ; preds = %160, %179
  %188 = phi i32 [ %175, %179 ], [ 0, %160 ]
  %189 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 6
  %190 = load i32, ptr %189, align 4, !tbaa !153
  %191 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 15
  %192 = load i32, ptr %191, align 8, !tbaa !159
  %193 = sub i32 %190, %192
  %194 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 8
  %195 = load i32, ptr %194, align 4, !tbaa !61
  %196 = icmp ugt i32 %193, %195
  br i1 %196, label %327, label %197

197:                                              ; preds = %187
  store ptr %163, ptr %36, align 8, !tbaa !33
  store i32 %161, ptr %138, align 8, !tbaa !162
  %198 = add nuw nsw i32 %162, 2
  store i32 %198, ptr %135, align 4, !tbaa !161
  %199 = icmp ugt i32 %162, 5
  br i1 %199, label %200, label %219

200:                                              ; preds = %197, %211
  %201 = phi i32 [ %215, %211 ], [ %198, %197 ]
  %202 = phi i32 [ %214, %211 ], [ %161, %197 ]
  %203 = load ptr, ptr %36, align 8, !tbaa !33
  %204 = load ptr, ptr %38, align 8, !tbaa !34
  %205 = icmp ult ptr %203, %204
  br i1 %205, label %206, label %211

206:                                              ; preds = %200
  %207 = trunc i32 %202 to i8
  %208 = getelementptr inbounds i8, ptr %203, i64 1
  store ptr %208, ptr %36, align 8, !tbaa !33
  store i8 %207, ptr %203, align 1, !tbaa !3
  %209 = load i32, ptr %138, align 8, !tbaa !162
  %210 = load i32, ptr %135, align 4, !tbaa !161
  br label %211

211:                                              ; preds = %206, %200
  %212 = phi i32 [ %210, %206 ], [ %201, %200 ]
  %213 = phi i32 [ %209, %206 ], [ %202, %200 ]
  %214 = lshr i32 %213, 8
  store i32 %214, ptr %138, align 8, !tbaa !162
  %215 = add i32 %212, -8
  store i32 %215, ptr %135, align 4, !tbaa !161
  %216 = icmp ugt i32 %215, 7
  br i1 %216, label %200, label %217, !llvm.loop !166

217:                                              ; preds = %211
  %218 = icmp eq i32 %215, 0
  br i1 %218, label %238, label %219

219:                                              ; preds = %197, %217
  %220 = phi i32 [ %214, %217 ], [ %161, %197 ]
  store i32 8, ptr %135, align 4, !tbaa !161
  br label %221

221:                                              ; preds = %219, %232
  %222 = phi i32 [ 8, %219 ], [ %236, %232 ]
  %223 = phi i32 [ %220, %219 ], [ %235, %232 ]
  %224 = load ptr, ptr %36, align 8, !tbaa !33
  %225 = load ptr, ptr %38, align 8, !tbaa !34
  %226 = icmp ult ptr %224, %225
  br i1 %226, label %227, label %232

227:                                              ; preds = %221
  %228 = trunc i32 %223 to i8
  %229 = getelementptr inbounds i8, ptr %224, i64 1
  store ptr %229, ptr %36, align 8, !tbaa !33
  store i8 %228, ptr %224, align 1, !tbaa !3
  %230 = load i32, ptr %138, align 8, !tbaa !162
  %231 = load i32, ptr %135, align 4, !tbaa !161
  br label %232

232:                                              ; preds = %227, %221
  %233 = phi i32 [ %231, %227 ], [ %222, %221 ]
  %234 = phi i32 [ %230, %227 ], [ %223, %221 ]
  %235 = lshr i32 %234, 8
  store i32 %235, ptr %138, align 8, !tbaa !162
  %236 = add i32 %233, -8
  store i32 %236, ptr %135, align 4, !tbaa !161
  %237 = icmp ugt i32 %236, 7
  br i1 %237, label %221, label %238, !llvm.loop !167

238:                                              ; preds = %232, %217
  %239 = phi i32 [ %214, %217 ], [ %235, %232 ]
  %240 = phi i32 [ 0, %217 ], [ %236, %232 ]
  %241 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 14
  %242 = load i32, ptr %241, align 4, !tbaa !158
  %243 = and i32 %242, 65535
  %244 = shl nuw nsw i32 %243, %240
  %245 = or i32 %239, %244
  store i32 %245, ptr %138, align 8, !tbaa !162
  %246 = or i32 %240, 16
  store i32 %246, ptr %135, align 4, !tbaa !161
  br label %247

247:                                              ; preds = %238, %258
  %248 = phi i32 [ %246, %238 ], [ %262, %258 ]
  %249 = phi i32 [ %245, %238 ], [ %261, %258 ]
  %250 = load ptr, ptr %36, align 8, !tbaa !33
  %251 = load ptr, ptr %38, align 8, !tbaa !34
  %252 = icmp ult ptr %250, %251
  br i1 %252, label %253, label %258

253:                                              ; preds = %247
  %254 = trunc i32 %249 to i8
  %255 = getelementptr inbounds i8, ptr %250, i64 1
  store ptr %255, ptr %36, align 8, !tbaa !33
  store i8 %254, ptr %250, align 1, !tbaa !3
  %256 = load i32, ptr %138, align 8, !tbaa !162
  %257 = load i32, ptr %135, align 4, !tbaa !161
  br label %258

258:                                              ; preds = %253, %247
  %259 = phi i32 [ %257, %253 ], [ %248, %247 ]
  %260 = phi i32 [ %256, %253 ], [ %249, %247 ]
  %261 = lshr i32 %260, 8
  store i32 %261, ptr %138, align 8, !tbaa !162
  %262 = add i32 %259, -8
  store i32 %262, ptr %135, align 4, !tbaa !161
  %263 = icmp ugt i32 %262, 7
  br i1 %263, label %247, label %264, !llvm.loop !168

264:                                              ; preds = %258
  %265 = load i32, ptr %241, align 4, !tbaa !158
  %266 = xor i32 %265, 65535
  store i32 %266, ptr %241, align 4, !tbaa !158
  %267 = and i32 %266, 65535
  %268 = shl nuw nsw i32 %267, %262
  %269 = or i32 %261, %268
  store i32 %269, ptr %138, align 8, !tbaa !162
  %270 = add i32 %259, 8
  store i32 %270, ptr %135, align 4, !tbaa !161
  br label %271

271:                                              ; preds = %282, %264
  %272 = phi i32 [ %286, %282 ], [ %270, %264 ]
  %273 = phi i32 [ %285, %282 ], [ %269, %264 ]
  %274 = load ptr, ptr %36, align 8, !tbaa !33
  %275 = load ptr, ptr %38, align 8, !tbaa !34
  %276 = icmp ult ptr %274, %275
  br i1 %276, label %277, label %282

277:                                              ; preds = %271
  %278 = trunc i32 %273 to i8
  %279 = getelementptr inbounds i8, ptr %274, i64 1
  store ptr %279, ptr %36, align 8, !tbaa !33
  store i8 %278, ptr %274, align 1, !tbaa !3
  %280 = load i32, ptr %138, align 8, !tbaa !162
  %281 = load i32, ptr %135, align 4, !tbaa !161
  br label %282

282:                                              ; preds = %277, %271
  %283 = phi i32 [ %281, %277 ], [ %272, %271 ]
  %284 = phi i32 [ %280, %277 ], [ %273, %271 ]
  %285 = lshr i32 %284, 8
  store i32 %285, ptr %138, align 8, !tbaa !162
  %286 = add i32 %283, -8
  store i32 %286, ptr %135, align 4, !tbaa !161
  %287 = icmp ugt i32 %286, 7
  br i1 %287, label %271, label %288, !llvm.loop !168

288:                                              ; preds = %282
  %289 = load i32, ptr %241, align 4, !tbaa !158
  %290 = xor i32 %289, 65535
  store i32 %290, ptr %241, align 4, !tbaa !158
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %332, label %292

292:                                              ; preds = %288, %323
  %293 = phi i32 [ %320, %323 ], [ %285, %288 ]
  %294 = phi i32 [ %321, %323 ], [ %286, %288 ]
  %295 = phi i32 [ %325, %323 ], [ 0, %288 ]
  %296 = load i32, ptr %191, align 8, !tbaa !159
  %297 = add i32 %296, %295
  %298 = and i32 %297, 32767
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 35, i64 %299
  %301 = load i8, ptr %300, align 1, !tbaa !3
  %302 = zext i8 %301 to i32
  %303 = shl nuw nsw i32 %302, %294
  %304 = or i32 %293, %303
  store i32 %304, ptr %138, align 8, !tbaa !162
  %305 = add nuw nsw i32 %294, 8
  store i32 %305, ptr %135, align 4, !tbaa !161
  br label %306

306:                                              ; preds = %292, %317
  %307 = phi i32 [ %305, %292 ], [ %321, %317 ]
  %308 = phi i32 [ %304, %292 ], [ %320, %317 ]
  %309 = load ptr, ptr %36, align 8, !tbaa !33
  %310 = load ptr, ptr %38, align 8, !tbaa !34
  %311 = icmp ult ptr %309, %310
  br i1 %311, label %312, label %317

312:                                              ; preds = %306
  %313 = trunc i32 %308 to i8
  %314 = getelementptr inbounds i8, ptr %309, i64 1
  store ptr %314, ptr %36, align 8, !tbaa !33
  store i8 %313, ptr %309, align 1, !tbaa !3
  %315 = load i32, ptr %138, align 8, !tbaa !162
  %316 = load i32, ptr %135, align 4, !tbaa !161
  br label %317

317:                                              ; preds = %312, %306
  %318 = phi i32 [ %316, %312 ], [ %307, %306 ]
  %319 = phi i32 [ %315, %312 ], [ %308, %306 ]
  %320 = lshr i32 %319, 8
  store i32 %320, ptr %138, align 8, !tbaa !162
  %321 = add i32 %318, -8
  store i32 %321, ptr %135, align 4, !tbaa !161
  %322 = icmp ugt i32 %321, 7
  br i1 %322, label %306, label %323, !llvm.loop !169

323:                                              ; preds = %317
  %324 = load i32, ptr %241, align 4, !tbaa !158
  %325 = add nuw i32 %295, 1
  %326 = icmp ult i32 %325, %324
  br i1 %326, label %292, label %332, !llvm.loop !170

327:                                              ; preds = %187, %179, %172
  %328 = phi i32 [ %188, %187 ], [ %175, %179 ], [ %175, %172 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %332

330:                                              ; preds = %327
  store ptr %163, ptr %36, align 8, !tbaa !33
  store i32 %161, ptr %138, align 8, !tbaa !162
  store i32 %162, ptr %135, align 4, !tbaa !161
  %331 = tail call fastcc i32 @tdefl_compress_block(ptr noundef nonnull %0, i32 noundef 1)
  br label %332

332:                                              ; preds = %323, %288, %327, %330
  %333 = icmp eq i32 %1, 0
  br i1 %333, label %534, label %334

334:                                              ; preds = %332
  %335 = load i32, ptr %135, align 4, !tbaa !161
  br i1 %133, label %336, label %450

336:                                              ; preds = %334
  %337 = icmp eq i32 %335, 0
  br i1 %337, label %355, label %338

338:                                              ; preds = %336
  store i32 8, ptr %135, align 4, !tbaa !161
  br label %339

339:                                              ; preds = %338, %349
  %340 = phi i32 [ 8, %338 ], [ %353, %349 ]
  %341 = load ptr, ptr %36, align 8, !tbaa !33
  %342 = load ptr, ptr %38, align 8, !tbaa !34
  %343 = icmp ult ptr %341, %342
  br i1 %343, label %344, label %349

344:                                              ; preds = %339
  %345 = load i32, ptr %138, align 8, !tbaa !162
  %346 = trunc i32 %345 to i8
  %347 = getelementptr inbounds i8, ptr %341, i64 1
  store ptr %347, ptr %36, align 8, !tbaa !33
  store i8 %346, ptr %341, align 1, !tbaa !3
  %348 = load i32, ptr %135, align 4, !tbaa !161
  br label %349

349:                                              ; preds = %344, %339
  %350 = phi i32 [ %348, %344 ], [ %340, %339 ]
  %351 = load i32, ptr %138, align 8, !tbaa !162
  %352 = lshr i32 %351, 8
  store i32 %352, ptr %138, align 8, !tbaa !162
  %353 = add i32 %350, -8
  store i32 %353, ptr %135, align 4, !tbaa !161
  %354 = icmp ugt i32 %353, 7
  br i1 %354, label %339, label %355, !llvm.loop !171

355:                                              ; preds = %349, %336
  %356 = phi i32 [ 0, %336 ], [ %353, %349 ]
  %357 = load i32, ptr %3, align 8, !tbaa !27
  %358 = and i32 %357, 4096
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %534, label %360

360:                                              ; preds = %355
  %361 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 5
  %362 = load i32, ptr %361, align 8, !tbaa !47
  %363 = lshr i32 %362, 24
  %364 = shl nuw nsw i32 %363, %356
  %365 = load i32, ptr %138, align 8, !tbaa !162
  %366 = or i32 %365, %364
  store i32 %366, ptr %138, align 8, !tbaa !162
  %367 = or i32 %356, 8
  store i32 %367, ptr %135, align 4, !tbaa !161
  br label %368

368:                                              ; preds = %360, %379
  %369 = phi i32 [ %367, %360 ], [ %383, %379 ]
  %370 = phi i32 [ %366, %360 ], [ %382, %379 ]
  %371 = load ptr, ptr %36, align 8, !tbaa !33
  %372 = load ptr, ptr %38, align 8, !tbaa !34
  %373 = icmp ult ptr %371, %372
  br i1 %373, label %374, label %379

374:                                              ; preds = %368
  %375 = trunc i32 %370 to i8
  %376 = getelementptr inbounds i8, ptr %371, i64 1
  store ptr %376, ptr %36, align 8, !tbaa !33
  store i8 %375, ptr %371, align 1, !tbaa !3
  %377 = load i32, ptr %138, align 8, !tbaa !162
  %378 = load i32, ptr %135, align 4, !tbaa !161
  br label %379

379:                                              ; preds = %374, %368
  %380 = phi i32 [ %378, %374 ], [ %369, %368 ]
  %381 = phi i32 [ %377, %374 ], [ %370, %368 ]
  %382 = lshr i32 %381, 8
  store i32 %382, ptr %138, align 8, !tbaa !162
  %383 = add i32 %380, -8
  store i32 %383, ptr %135, align 4, !tbaa !161
  %384 = icmp ugt i32 %383, 7
  br i1 %384, label %368, label %385, !llvm.loop !172

385:                                              ; preds = %379
  %386 = lshr i32 %362, 16
  %387 = and i32 %386, 255
  %388 = shl nuw nsw i32 %387, %383
  %389 = or i32 %382, %388
  store i32 %389, ptr %138, align 8, !tbaa !162
  store i32 %380, ptr %135, align 4, !tbaa !161
  br label %390

390:                                              ; preds = %401, %385
  %391 = phi i32 [ %405, %401 ], [ %380, %385 ]
  %392 = phi i32 [ %404, %401 ], [ %389, %385 ]
  %393 = load ptr, ptr %36, align 8, !tbaa !33
  %394 = load ptr, ptr %38, align 8, !tbaa !34
  %395 = icmp ult ptr %393, %394
  br i1 %395, label %396, label %401

396:                                              ; preds = %390
  %397 = trunc i32 %392 to i8
  %398 = getelementptr inbounds i8, ptr %393, i64 1
  store ptr %398, ptr %36, align 8, !tbaa !33
  store i8 %397, ptr %393, align 1, !tbaa !3
  %399 = load i32, ptr %138, align 8, !tbaa !162
  %400 = load i32, ptr %135, align 4, !tbaa !161
  br label %401

401:                                              ; preds = %396, %390
  %402 = phi i32 [ %400, %396 ], [ %391, %390 ]
  %403 = phi i32 [ %399, %396 ], [ %392, %390 ]
  %404 = lshr i32 %403, 8
  store i32 %404, ptr %138, align 8, !tbaa !162
  %405 = add i32 %402, -8
  store i32 %405, ptr %135, align 4, !tbaa !161
  %406 = icmp ugt i32 %405, 7
  br i1 %406, label %390, label %407, !llvm.loop !172

407:                                              ; preds = %401
  %408 = lshr i32 %362, 8
  %409 = and i32 %408, 255
  %410 = shl nuw nsw i32 %409, %405
  %411 = or i32 %404, %410
  store i32 %411, ptr %138, align 8, !tbaa !162
  store i32 %402, ptr %135, align 4, !tbaa !161
  br label %412

412:                                              ; preds = %423, %407
  %413 = phi i32 [ %427, %423 ], [ %402, %407 ]
  %414 = phi i32 [ %426, %423 ], [ %411, %407 ]
  %415 = load ptr, ptr %36, align 8, !tbaa !33
  %416 = load ptr, ptr %38, align 8, !tbaa !34
  %417 = icmp ult ptr %415, %416
  br i1 %417, label %418, label %423

418:                                              ; preds = %412
  %419 = trunc i32 %414 to i8
  %420 = getelementptr inbounds i8, ptr %415, i64 1
  store ptr %420, ptr %36, align 8, !tbaa !33
  store i8 %419, ptr %415, align 1, !tbaa !3
  %421 = load i32, ptr %138, align 8, !tbaa !162
  %422 = load i32, ptr %135, align 4, !tbaa !161
  br label %423

423:                                              ; preds = %418, %412
  %424 = phi i32 [ %422, %418 ], [ %413, %412 ]
  %425 = phi i32 [ %421, %418 ], [ %414, %412 ]
  %426 = lshr i32 %425, 8
  store i32 %426, ptr %138, align 8, !tbaa !162
  %427 = add i32 %424, -8
  store i32 %427, ptr %135, align 4, !tbaa !161
  %428 = icmp ugt i32 %427, 7
  br i1 %428, label %412, label %429, !llvm.loop !172

429:                                              ; preds = %423
  %430 = and i32 %362, 255
  %431 = shl nuw nsw i32 %430, %427
  %432 = or i32 %426, %431
  store i32 %432, ptr %138, align 8, !tbaa !162
  store i32 %424, ptr %135, align 4, !tbaa !161
  br label %433

433:                                              ; preds = %444, %429
  %434 = phi i32 [ %448, %444 ], [ %424, %429 ]
  %435 = phi i32 [ %447, %444 ], [ %432, %429 ]
  %436 = load ptr, ptr %36, align 8, !tbaa !33
  %437 = load ptr, ptr %38, align 8, !tbaa !34
  %438 = icmp ult ptr %436, %437
  br i1 %438, label %439, label %444

439:                                              ; preds = %433
  %440 = trunc i32 %435 to i8
  %441 = getelementptr inbounds i8, ptr %436, i64 1
  store ptr %441, ptr %36, align 8, !tbaa !33
  store i8 %440, ptr %436, align 1, !tbaa !3
  %442 = load i32, ptr %138, align 8, !tbaa !162
  %443 = load i32, ptr %135, align 4, !tbaa !161
  br label %444

444:                                              ; preds = %439, %433
  %445 = phi i32 [ %443, %439 ], [ %434, %433 ]
  %446 = phi i32 [ %442, %439 ], [ %435, %433 ]
  %447 = lshr i32 %446, 8
  store i32 %447, ptr %138, align 8, !tbaa !162
  %448 = add i32 %445, -8
  store i32 %448, ptr %135, align 4, !tbaa !161
  %449 = icmp ugt i32 %448, 7
  br i1 %449, label %433, label %534, !llvm.loop !172

450:                                              ; preds = %334
  %451 = add i32 %335, 3
  store i32 %451, ptr %135, align 4, !tbaa !161
  %452 = icmp ugt i32 %451, 7
  br i1 %452, label %453, label %469

453:                                              ; preds = %450, %463
  %454 = phi i32 [ %467, %463 ], [ %451, %450 ]
  %455 = load ptr, ptr %36, align 8, !tbaa !33
  %456 = load ptr, ptr %38, align 8, !tbaa !34
  %457 = icmp ult ptr %455, %456
  br i1 %457, label %458, label %463

458:                                              ; preds = %453
  %459 = load i32, ptr %138, align 8, !tbaa !162
  %460 = trunc i32 %459 to i8
  %461 = getelementptr inbounds i8, ptr %455, i64 1
  store ptr %461, ptr %36, align 8, !tbaa !33
  store i8 %460, ptr %455, align 1, !tbaa !3
  %462 = load i32, ptr %135, align 4, !tbaa !161
  br label %463

463:                                              ; preds = %458, %453
  %464 = phi i32 [ %462, %458 ], [ %454, %453 ]
  %465 = load i32, ptr %138, align 8, !tbaa !162
  %466 = lshr i32 %465, 8
  store i32 %466, ptr %138, align 8, !tbaa !162
  %467 = add i32 %464, -8
  store i32 %467, ptr %135, align 4, !tbaa !161
  %468 = icmp ugt i32 %467, 7
  br i1 %468, label %453, label %469, !llvm.loop !173

469:                                              ; preds = %463, %450
  %470 = phi i32 [ %451, %450 ], [ %467, %463 ]
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %474

472:                                              ; preds = %469
  %473 = load i32, ptr %138, align 8, !tbaa !162
  br label %493

474:                                              ; preds = %469
  store i32 8, ptr %135, align 4, !tbaa !161
  br label %475

475:                                              ; preds = %474, %485
  %476 = phi i32 [ 8, %474 ], [ %489, %485 ]
  %477 = load ptr, ptr %36, align 8, !tbaa !33
  %478 = load ptr, ptr %38, align 8, !tbaa !34
  %479 = icmp ult ptr %477, %478
  br i1 %479, label %480, label %485

480:                                              ; preds = %475
  %481 = load i32, ptr %138, align 8, !tbaa !162
  %482 = trunc i32 %481 to i8
  %483 = getelementptr inbounds i8, ptr %477, i64 1
  store ptr %483, ptr %36, align 8, !tbaa !33
  store i8 %482, ptr %477, align 1, !tbaa !3
  %484 = load i32, ptr %135, align 4, !tbaa !161
  br label %485

485:                                              ; preds = %480, %475
  %486 = phi i32 [ %484, %480 ], [ %476, %475 ]
  %487 = load i32, ptr %138, align 8, !tbaa !162
  %488 = lshr i32 %487, 8
  store i32 %488, ptr %138, align 8, !tbaa !162
  %489 = add i32 %486, -8
  store i32 %489, ptr %135, align 4, !tbaa !161
  %490 = icmp ugt i32 %489, 7
  br i1 %490, label %475, label %491, !llvm.loop !174

491:                                              ; preds = %485
  %492 = add nuw nsw i32 %486, 8
  br label %493

493:                                              ; preds = %491, %472
  %494 = phi i32 [ %488, %491 ], [ %473, %472 ]
  %495 = phi i32 [ %492, %491 ], [ 16, %472 ]
  store i32 %494, ptr %138, align 8, !tbaa !162
  store i32 %495, ptr %135, align 4, !tbaa !161
  br label %496

496:                                              ; preds = %493, %507
  %497 = phi i32 [ %495, %493 ], [ %511, %507 ]
  %498 = phi i32 [ %494, %493 ], [ %510, %507 ]
  %499 = load ptr, ptr %36, align 8, !tbaa !33
  %500 = load ptr, ptr %38, align 8, !tbaa !34
  %501 = icmp ult ptr %499, %500
  br i1 %501, label %502, label %507

502:                                              ; preds = %496
  %503 = trunc i32 %498 to i8
  %504 = getelementptr inbounds i8, ptr %499, i64 1
  store ptr %504, ptr %36, align 8, !tbaa !33
  store i8 %503, ptr %499, align 1, !tbaa !3
  %505 = load i32, ptr %138, align 8, !tbaa !162
  %506 = load i32, ptr %135, align 4, !tbaa !161
  br label %507

507:                                              ; preds = %502, %496
  %508 = phi i32 [ %506, %502 ], [ %497, %496 ]
  %509 = phi i32 [ %505, %502 ], [ %498, %496 ]
  %510 = lshr i32 %509, 8
  store i32 %510, ptr %138, align 8, !tbaa !162
  %511 = add i32 %508, -8
  store i32 %511, ptr %135, align 4, !tbaa !161
  %512 = icmp ugt i32 %511, 7
  br i1 %512, label %496, label %513, !llvm.loop !175

513:                                              ; preds = %507
  %514 = shl nuw nsw i32 65535, %511
  %515 = or i32 %510, %514
  store i32 %515, ptr %138, align 8, !tbaa !162
  %516 = add i32 %508, 8
  store i32 %516, ptr %135, align 4, !tbaa !161
  br label %517

517:                                              ; preds = %528, %513
  %518 = phi i32 [ %532, %528 ], [ %516, %513 ]
  %519 = phi i32 [ %531, %528 ], [ %515, %513 ]
  %520 = load ptr, ptr %36, align 8, !tbaa !33
  %521 = load ptr, ptr %38, align 8, !tbaa !34
  %522 = icmp ult ptr %520, %521
  br i1 %522, label %523, label %528

523:                                              ; preds = %517
  %524 = trunc i32 %519 to i8
  %525 = getelementptr inbounds i8, ptr %520, i64 1
  store ptr %525, ptr %36, align 8, !tbaa !33
  store i8 %524, ptr %520, align 1, !tbaa !3
  %526 = load i32, ptr %138, align 8, !tbaa !162
  %527 = load i32, ptr %135, align 4, !tbaa !161
  br label %528

528:                                              ; preds = %523, %517
  %529 = phi i32 [ %527, %523 ], [ %518, %517 ]
  %530 = phi i32 [ %526, %523 ], [ %519, %517 ]
  %531 = lshr i32 %530, 8
  store i32 %531, ptr %138, align 8, !tbaa !162
  %532 = add i32 %529, -8
  store i32 %532, ptr %135, align 4, !tbaa !161
  %533 = icmp ugt i32 %532, 7
  br i1 %533, label %517, label %534, !llvm.loop !175

534:                                              ; preds = %528, %444, %355, %332
  %535 = load ptr, ptr %36, align 8, !tbaa !33
  %536 = load ptr, ptr %38, align 8, !tbaa !34
  %537 = icmp ult ptr %535, %536
  br i1 %537, label %539, label %538

538:                                              ; preds = %534
  tail call void @__assert_fail(ptr noundef nonnull @.str.64, ptr noundef nonnull @.str.12, i32 noundef 3230, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_flush_block) #41
  unreachable

539:                                              ; preds = %534
  %540 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36
  %541 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 39
  %542 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 39, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(640) %540, i8 0, i64 640, i1 false)
  store ptr %542, ptr %55, align 8, !tbaa !30
  store ptr %541, ptr %45, align 8, !tbaa !31
  store i32 8, ptr %49, align 8, !tbaa !32
  %543 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 14
  %544 = load i32, ptr %543, align 4, !tbaa !158
  %545 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 15
  %546 = load i32, ptr %545, align 8, !tbaa !159
  %547 = add i32 %546, %544
  store i32 %547, ptr %545, align 8, !tbaa !159
  store i32 0, ptr %543, align 4, !tbaa !158
  %548 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 24
  %549 = load i32, ptr %548, align 4, !tbaa !160
  %550 = add i32 %549, 1
  store i32 %550, ptr %548, align 4, !tbaa !160
  %551 = ptrtoint ptr %535 to i64
  %552 = ptrtoint ptr %35 to i64
  %553 = sub i64 %551, %552
  %554 = trunc i64 %553 to i32
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %604, label %556

556:                                              ; preds = %539
  %557 = load ptr, ptr %0, align 8, !tbaa !39
  %558 = icmp eq ptr %557, null
  br i1 %558, label %576, label %559

559:                                              ; preds = %556
  %560 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 32
  %561 = load ptr, ptr %560, align 8, !tbaa !52
  %562 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 27
  %563 = load ptr, ptr %562, align 8, !tbaa !48
  %564 = ptrtoint ptr %561 to i64
  %565 = ptrtoint ptr %563 to i64
  %566 = sub i64 %564, %565
  %567 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 29
  %568 = load ptr, ptr %567, align 8, !tbaa !49
  store i64 %566, ptr %568, align 8, !tbaa !46
  %569 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 42
  %570 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 1
  %571 = load ptr, ptr %570, align 8, !tbaa !40
  %572 = tail call i32 %557(ptr noundef nonnull %569, i32 noundef %554, ptr noundef %571) #38
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %604

574:                                              ; preds = %559
  %575 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 26
  store i32 -1, ptr %575, align 4, !tbaa !35
  br label %606

576:                                              ; preds = %556
  %577 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 42
  %578 = icmp eq ptr %35, %577
  %579 = shl i64 %553, 32
  %580 = ashr exact i64 %579, 32
  br i1 %578, label %581, label %600

581:                                              ; preds = %576
  %582 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 30
  %583 = load ptr, ptr %582, align 8, !tbaa !51
  %584 = load i64, ptr %583, align 8, !tbaa !46
  %585 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 34
  %586 = load i64, ptr %585, align 8, !tbaa !54
  %587 = sub i64 %584, %586
  %588 = tail call i64 @llvm.umin.i64(i64 %580, i64 %587)
  %589 = trunc i64 %588 to i32
  %590 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 28
  %591 = load ptr, ptr %590, align 8, !tbaa !50
  %592 = getelementptr inbounds i8, ptr %591, i64 %586
  %593 = shl i64 %588, 32
  %594 = ashr exact i64 %593, 32
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %592, ptr nonnull align 2 %577, i64 %594, i1 false)
  %595 = load i64, ptr %585, align 8, !tbaa !54
  %596 = add i64 %594, %595
  store i64 %596, ptr %585, align 8, !tbaa !54
  %597 = icmp eq i32 %554, %589
  br i1 %597, label %604, label %598

598:                                              ; preds = %581
  %599 = sub nsw i32 %554, %589
  store i32 %589, ptr %44, align 8, !tbaa !59
  store i32 %599, ptr %39, align 4, !tbaa !57
  br label %604

600:                                              ; preds = %576
  %601 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 34
  %602 = load i64, ptr %601, align 8, !tbaa !54
  %603 = add i64 %602, %580
  store i64 %603, ptr %601, align 8, !tbaa !54
  br label %604

604:                                              ; preds = %581, %598, %559, %600, %539
  %605 = load i32, ptr %39, align 4, !tbaa !57
  br label %606

606:                                              ; preds = %604, %574
  %607 = phi i32 [ %605, %604 ], [ -1, %574 ]
  ret i32 %607
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tdefl_compress_buffer(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca i64, align 8
  store i64 %2, ptr %5, align 8, !tbaa !46
  %6 = load ptr, ptr %0, align 8, !tbaa !39
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @__assert_fail(ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12, i32 noundef 3866, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_buffer) #41
  unreachable

9:                                                ; preds = %4
  %10 = call i32 @tdefl_compress(ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %5, ptr noundef null, ptr noundef null, i32 noundef %3)
  ret i32 %10
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #17

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i32 @tdefl_get_prev_return_status(ptr nocapture noundef readonly %0) local_unnamed_addr #12 {
  %2 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 26
  %3 = load i32, ptr %2, align 4, !tbaa !35
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tdefl_compress_mem_to_output(ptr noundef %0, i64 noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = alloca i64, align 8
  %7 = icmp eq i64 %1, 0
  %8 = icmp ne ptr %0, null
  %9 = or i1 %8, %7
  %10 = icmp ne ptr %2, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %64

12:                                               ; preds = %5
  %13 = tail call noalias dereferenceable_or_null(319352) ptr @malloc(i64 noundef 319352) #39
  %14 = icmp eq ptr %13, null
  br i1 %14, label %64, label %15

15:                                               ; preds = %12
  store ptr %2, ptr %13, align 8, !tbaa !39
  %16 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 1
  store ptr %3, ptr %16, align 8, !tbaa !40
  %17 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 2
  store i32 %4, ptr %17, align 8, !tbaa !27
  %18 = and i32 %4, 4095
  %19 = trunc i32 %18 to i16
  %20 = add nuw nsw i16 %19, 2
  %21 = udiv i16 %20, 3
  %22 = add nuw nsw i16 %21, 1
  %23 = zext i16 %22 to i32
  %24 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 3
  store i32 %23, ptr %24, align 4, !tbaa !12
  %25 = lshr i32 %4, 14
  %26 = and i32 %25, 1
  %27 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 4
  store i32 %26, ptr %27, align 4, !tbaa !29
  %28 = lshr i32 %18, 2
  %29 = trunc i32 %28 to i16
  %30 = add nuw nsw i16 %29, 2
  %31 = udiv i16 %30, 3
  %32 = add nuw nsw i16 %31, 1
  %33 = zext i16 %32 to i32
  %34 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 3, i64 1
  store i32 %33, ptr %34, align 4, !tbaa !12
  %35 = and i32 %4, 32768
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %15
  %38 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 41
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(65536) %38, i8 0, i64 65536, i1 false)
  br label %39

39:                                               ; preds = %37, %15
  %40 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 14
  %41 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 21
  %42 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 39
  %43 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 39, i64 1
  %44 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 9
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %40, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %41, i8 0, i64 20, i1 false)
  store ptr %43, ptr %44, align 8, !tbaa !30
  %45 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 10
  store ptr %42, ptr %45, align 8, !tbaa !31
  store i8 0, ptr %42, align 1, !tbaa !3
  %46 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 13
  store i32 8, ptr %46, align 8, !tbaa !32
  %47 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 42
  %48 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 11
  store ptr %47, ptr %48, align 8, !tbaa !33
  %49 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 12
  store ptr %47, ptr %49, align 8, !tbaa !34
  %50 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 26
  store i32 0, ptr %50, align 4, !tbaa !35
  %51 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 20
  store i32 0, ptr %51, align 4, !tbaa !36
  %52 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 19
  store i32 0, ptr %52, align 8, !tbaa !37
  %53 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 18
  store i32 0, ptr %53, align 4, !tbaa !38
  %54 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 5
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, ptr %54, align 8, !tbaa !12
  %55 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 27
  %56 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 32
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %55, i8 0, i64 36, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %56, i8 0, i64 24, i1 false)
  br i1 %36, label %57, label %59

57:                                               ; preds = %39
  %58 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 35
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(33025) %58, i8 0, i64 33025, i1 false)
  br label %59

59:                                               ; preds = %57, %39
  %60 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 36
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(640) %60, i8 0, i64 640, i1 false)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  store i64 %1, ptr %6, align 8, !tbaa !46
  %61 = call i32 @tdefl_compress(ptr noundef nonnull %13, ptr noundef %0, ptr noundef nonnull %6, ptr noundef null, ptr noundef null, i32 noundef 4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %62 = icmp eq i32 %61, 1
  %63 = zext i1 %62 to i32
  call void @free(ptr noundef nonnull %13) #38
  br label %64

64:                                               ; preds = %12, %5, %59
  %65 = phi i32 [ %63, %59 ], [ 0, %5 ], [ 0, %12 ]
  ret i32 %65
}

; Function Attrs: nounwind uwtable
define dso_local ptr @tdefl_compress_mem_to_heap(ptr noundef %0, i64 noundef %1, ptr noundef writeonly %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca %struct.tdefl_output_buffer, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %5, i8 0, i64 32, i1 false)
  %6 = icmp eq ptr %2, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  store i64 0, ptr %2, align 8, !tbaa !46
  %8 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %5, i64 0, i32 3
  store i32 1, ptr %8, align 8, !tbaa !176
  %9 = call i32 @tdefl_compress_mem_to_output(ptr noundef %0, i64 noundef %1, ptr noundef nonnull @tdefl_output_buffer_putter, ptr noundef nonnull %5, i32 noundef %3)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = load i64, ptr %5, align 8, !tbaa !178
  store i64 %12, ptr %2, align 8, !tbaa !46
  %13 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %5, i64 0, i32 2
  %14 = load ptr, ptr %13, align 8, !tbaa !179
  br label %15

15:                                               ; preds = %7, %4, %11
  %16 = phi ptr [ %14, %11 ], [ null, %4 ], [ null, %7 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #38
  ret ptr %16
}

; Function Attrs: nounwind uwtable
define internal i32 @tdefl_output_buffer_putter(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef %2) #8 {
  %4 = load i64, ptr %2, align 8, !tbaa !178
  %5 = sext i32 %1 to i64
  %6 = add i64 %4, %5
  %7 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %2, i64 0, i32 1
  %8 = load i64, ptr %7, align 8, !tbaa !180
  %9 = icmp ugt i64 %6, %8
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %2, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !179
  br label %29

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %2, i64 0, i32 3
  %15 = load i32, ptr %14, align 8, !tbaa !176
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %13, %17
  %18 = phi i64 [ %20, %17 ], [ %8, %13 ]
  %19 = shl i64 %18, 1
  %20 = tail call i64 @llvm.umax.i64(i64 %19, i64 128)
  %21 = icmp ugt i64 %6, %20
  br i1 %21, label %17, label %22, !llvm.loop !181

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %2, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !179
  %25 = tail call ptr @realloc(ptr noundef %24, i64 noundef %20) #40
  %26 = icmp eq ptr %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %22
  store ptr %25, ptr %23, align 8, !tbaa !179
  store i64 %20, ptr %7, align 8, !tbaa !180
  %28 = load i64, ptr %2, align 8, !tbaa !178
  br label %29

29:                                               ; preds = %10, %27
  %30 = phi i64 [ %4, %10 ], [ %28, %27 ]
  %31 = phi ptr [ %12, %10 ], [ %25, %27 ]
  %32 = getelementptr inbounds i8, ptr %31, i64 %30
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %32, ptr align 1 %0, i64 %5, i1 false)
  store i64 %6, ptr %2, align 8, !tbaa !178
  br label %33

33:                                               ; preds = %13, %22, %29
  %34 = phi i32 [ 1, %29 ], [ 0, %22 ], [ 0, %13 ]
  ret i32 %34
}

; Function Attrs: nounwind uwtable
define dso_local i64 @tdefl_compress_mem_to_mem(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = alloca %struct.tdefl_output_buffer, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %6, i8 0, i64 32, i1 false)
  %7 = icmp eq ptr %0, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %6, i64 0, i32 2
  store ptr %0, ptr %9, align 8, !tbaa !179
  %10 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %6, i64 0, i32 1
  store i64 %1, ptr %10, align 8, !tbaa !180
  %11 = call i32 @tdefl_compress_mem_to_output(ptr noundef %2, i64 noundef %3, ptr noundef nonnull @tdefl_output_buffer_putter, ptr noundef nonnull %6, i32 noundef %4)
  %12 = icmp eq i32 %11, 0
  %13 = load i64, ptr %6, align 8
  %14 = select i1 %12, i64 0, i64 %13
  br label %15

15:                                               ; preds = %8, %5
  %16 = phi i64 [ 0, %5 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #38
  ret i64 %16
}

; Function Attrs: nounwind uwtable
define dso_local ptr @tdefl_write_image_to_png_file_in_memory_ex(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr nocapture noundef %4, i32 noundef %5, i32 noundef %6) local_unnamed_addr #8 {
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.tdefl_output_buffer, align 8
  %12 = alloca i32, align 4
  %13 = tail call noalias dereferenceable_or_null(319352) ptr @malloc(i64 noundef 319352) #39
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %11) #38
  %14 = mul nsw i32 %3, %1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #38
  store i64 0, ptr %4, align 8, !tbaa !46
  %15 = icmp eq ptr %13, null
  br i1 %15, label %408, label %16

16:                                               ; preds = %7
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %11, i8 0, i64 32, i1 false)
  %17 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %11, i64 0, i32 3
  store i32 1, ptr %17, align 8, !tbaa !176
  %18 = add nsw i32 %14, 1
  %19 = mul nsw i32 %18, %2
  %20 = tail call i32 @llvm.smax.i32(i32 %19, i32 64)
  %21 = add nuw nsw i32 %20, 57
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %11, i64 0, i32 1
  store i64 %22, ptr %23, align 8, !tbaa !180
  %24 = tail call noalias ptr @malloc(i64 noundef %22) #39
  %25 = getelementptr inbounds %struct.tdefl_output_buffer, ptr %11, i64 0, i32 2
  store ptr %24, ptr %25, align 8, !tbaa !179
  %26 = icmp eq ptr %24, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %16
  store i32 41, ptr %12, align 4, !tbaa !12
  br label %29

28:                                               ; preds = %16
  tail call void @free(ptr noundef nonnull %13) #38
  br label %408

29:                                               ; preds = %27, %55
  %30 = phi i32 [ 41, %27 ], [ %58, %55 ]
  %31 = phi i8 [ 41, %27 ], [ %60, %55 ]
  %32 = phi i64 [ 0, %27 ], [ %57, %55 ]
  %33 = add i64 %32, 1
  %34 = load i64, ptr %23, align 8, !tbaa !180
  %35 = icmp ugt i64 %33, %34
  br i1 %35, label %38, label %36

36:                                               ; preds = %29
  %37 = load ptr, ptr %25, align 8, !tbaa !179
  br label %51

38:                                               ; preds = %29
  %39 = load i32, ptr %17, align 8, !tbaa !176
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %55, label %41

41:                                               ; preds = %38, %41
  %42 = phi i64 [ %44, %41 ], [ %34, %38 ]
  %43 = shl i64 %42, 1
  %44 = tail call i64 @llvm.umax.i64(i64 %43, i64 128)
  %45 = icmp ugt i64 %33, %44
  br i1 %45, label %41, label %46, !llvm.loop !181

46:                                               ; preds = %41
  %47 = load ptr, ptr %25, align 8, !tbaa !179
  %48 = tail call ptr @realloc(ptr noundef %47, i64 noundef %44) #40
  %49 = icmp eq ptr %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  store ptr %48, ptr %25, align 8, !tbaa !179
  store i64 %44, ptr %23, align 8, !tbaa !180
  br label %51

51:                                               ; preds = %50, %36
  %52 = phi ptr [ %37, %36 ], [ %48, %50 ]
  %53 = getelementptr inbounds i8, ptr %52, i64 %32
  store i8 %31, ptr %53, align 1
  store i64 %33, ptr %11, align 8, !tbaa !178
  %54 = load i32, ptr %12, align 4, !tbaa !12
  br label %55

55:                                               ; preds = %38, %46, %51
  %56 = phi i32 [ %30, %38 ], [ %30, %46 ], [ %54, %51 ]
  %57 = phi i64 [ %32, %38 ], [ %32, %46 ], [ %33, %51 ]
  %58 = add nsw i32 %56, -1
  store i32 %58, ptr %12, align 4, !tbaa !12
  %59 = icmp eq i32 %58, 0
  %60 = trunc i32 %58 to i8
  br i1 %59, label %61, label %29, !llvm.loop !182

61:                                               ; preds = %55
  %62 = tail call i32 @llvm.umin.i32(i32 %5, i32 10)
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [11 x i32], ptr @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %63
  %65 = load i32, ptr %64, align 4, !tbaa !12
  %66 = or i32 %65, 4096
  store ptr @tdefl_output_buffer_putter, ptr %13, align 8, !tbaa !39
  %67 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 1
  store ptr %11, ptr %67, align 8, !tbaa !40
  %68 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 2
  store i32 %66, ptr %68, align 8, !tbaa !27
  %69 = and i32 %65, 4095
  %70 = trunc i32 %69 to i16
  %71 = add nuw nsw i16 %70, 2
  %72 = udiv i16 %71, 3
  %73 = add nuw nsw i16 %72, 1
  %74 = zext i16 %73 to i32
  %75 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 3
  store i32 %74, ptr %75, align 4, !tbaa !12
  %76 = lshr i32 %65, 14
  %77 = and i32 %76, 1
  %78 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 4
  store i32 %77, ptr %78, align 4, !tbaa !29
  %79 = lshr i32 %69, 2
  %80 = trunc i32 %79 to i16
  %81 = add nuw nsw i16 %80, 2
  %82 = udiv i16 %81, 3
  %83 = add nuw nsw i16 %82, 1
  %84 = zext i16 %83 to i32
  %85 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 3, i64 1
  store i32 %84, ptr %85, align 4, !tbaa !12
  %86 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(65536) %86, i8 0, i64 65536, i1 false)
  %87 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 14
  %88 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 21
  %89 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 39
  %90 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 39, i64 1
  %91 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 9
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %87, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %88, i8 0, i64 20, i1 false)
  store ptr %90, ptr %91, align 8, !tbaa !30
  %92 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 10
  store ptr %89, ptr %92, align 8, !tbaa !31
  store i8 0, ptr %89, align 1, !tbaa !3
  %93 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 13
  store i32 8, ptr %93, align 8, !tbaa !32
  %94 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 42
  %95 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 11
  store ptr %94, ptr %95, align 8, !tbaa !33
  %96 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 12
  store ptr %94, ptr %96, align 8, !tbaa !34
  %97 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 26
  store i32 0, ptr %97, align 4, !tbaa !35
  %98 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 20
  store i32 0, ptr %98, align 4, !tbaa !36
  %99 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 19
  store i32 0, ptr %99, align 8, !tbaa !37
  %100 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 18
  store i32 0, ptr %100, align 4, !tbaa !38
  %101 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 5
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, ptr %101, align 8, !tbaa !12
  %102 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 27
  %103 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %102, i8 0, i64 36, i1 false)
  %104 = getelementptr inbounds %struct.tdefl_compressor, ptr %13, i64 0, i32 36
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(640) %104, i8 0, i64 640, i1 false)
  %105 = icmp sgt i32 %2, 0
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(33049) %103, i8 0, i64 33049, i1 false)
  br i1 %105, label %107, label %106

106:                                              ; preds = %61
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  store i64 0, ptr %8, align 8, !tbaa !46
  br label %134

107:                                              ; preds = %61
  %108 = sext i32 %14 to i64
  %109 = icmp eq i32 %6, 0
  br label %110

110:                                              ; preds = %107, %120
  %111 = phi i32 [ 0, %107 ], [ %128, %120 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10)
  store i64 1, ptr %10, align 8, !tbaa !46
  %112 = load ptr, ptr %13, align 8, !tbaa !39
  %113 = icmp eq ptr %112, null
  br i1 %113, label %114, label %115

114:                                              ; preds = %110
  call void @__assert_fail(ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12, i32 noundef 3866, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_buffer) #41
  unreachable

115:                                              ; preds = %110
  %116 = call i32 @tdefl_compress(ptr noundef nonnull %13, ptr noundef nonnull %12, ptr noundef nonnull %10, ptr noundef null, ptr noundef null, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  store i64 %108, ptr %9, align 8, !tbaa !46
  %117 = load ptr, ptr %13, align 8, !tbaa !39
  %118 = icmp eq ptr %117, null
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  call void @__assert_fail(ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12, i32 noundef 3866, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_buffer) #41
  unreachable

120:                                              ; preds = %115
  %121 = xor i32 %111, -1
  %122 = add i32 %121, %2
  %123 = select i1 %109, i32 %111, i32 %122
  %124 = mul nsw i32 %123, %14
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, ptr %0, i64 %125
  %127 = call i32 @tdefl_compress(ptr noundef nonnull %13, ptr noundef %126, ptr noundef nonnull %9, ptr noundef null, ptr noundef null, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  %128 = add nuw nsw i32 %111, 1
  %129 = icmp eq i32 %128, %2
  br i1 %129, label %130, label %110, !llvm.loop !183

130:                                              ; preds = %120
  %131 = load ptr, ptr %13, align 8, !tbaa !39
  %132 = icmp eq ptr %131, null
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  store i64 0, ptr %8, align 8, !tbaa !46
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @__assert_fail(ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12, i32 noundef 3866, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_buffer) #41
  unreachable

134:                                              ; preds = %106, %130
  %135 = call i32 @tdefl_compress(ptr noundef nonnull %13, ptr noundef null, ptr noundef nonnull %8, ptr noundef null, ptr noundef null, i32 noundef 4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  call void @free(ptr noundef nonnull %13) #38
  %138 = load ptr, ptr %25, align 8, !tbaa !179
  call void @free(ptr noundef %138) #38
  br label %408

139:                                              ; preds = %134
  %140 = load i64, ptr %11, align 8, !tbaa !178
  %141 = add i64 %140, -41
  store i64 %141, ptr %4, align 8, !tbaa !46
  %142 = lshr i32 %1, 8
  %143 = trunc i32 %142 to i8
  %144 = trunc i32 %1 to i8
  %145 = lshr i32 %2, 8
  %146 = trunc i32 %145 to i8
  %147 = trunc i32 %2 to i8
  %148 = sext i32 %3 to i64
  %149 = getelementptr inbounds [5 x i8], ptr @tdefl_write_image_to_png_file_in_memory_ex.chans, i64 0, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !3
  %151 = lshr i64 %141, 24
  %152 = trunc i64 %151 to i8
  %153 = lshr i64 %141, 16
  %154 = trunc i64 %153 to i8
  %155 = lshr i64 %141, 8
  %156 = trunc i64 %155 to i8
  %157 = trunc i64 %141 to i8
  %158 = xor i8 %143, -60
  %159 = zext i8 %158 to i64
  %160 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !12
  %162 = xor i32 %161, 7710499
  %163 = lshr i32 %162, 8
  %164 = xor i32 %162, %1
  %165 = and i32 %164, 255
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %166
  %168 = load i32, ptr %167, align 4, !tbaa !12
  %169 = xor i32 %163, %168
  %170 = and i32 %169, 255
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %171
  %173 = load i32, ptr %172, align 4, !tbaa !12
  %174 = lshr i32 %169, 8
  %175 = xor i32 %173, %174
  %176 = lshr i32 %175, 8
  %177 = and i32 %175, 255
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %178
  %180 = load i32, ptr %179, align 4, !tbaa !12
  %181 = xor i32 %176, %180
  %182 = lshr i32 %181, 8
  %183 = xor i32 %145, %181
  %184 = and i32 %183, 255
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %185
  %187 = load i32, ptr %186, align 4, !tbaa !12
  %188 = xor i32 %182, %187
  %189 = lshr i32 %188, 8
  %190 = xor i32 %188, %2
  %191 = and i32 %190, 255
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %192
  %194 = load i32, ptr %193, align 4, !tbaa !12
  %195 = xor i32 %189, %194
  %196 = and i32 %195, 255
  %197 = xor i32 %196, 8
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %198
  %200 = load i32, ptr %199, align 4, !tbaa !12
  %201 = lshr i32 %195, 8
  %202 = xor i32 %200, %201
  %203 = lshr i32 %202, 8
  %204 = trunc i32 %202 to i8
  %205 = xor i8 %150, %204
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %206
  %208 = load i32, ptr %207, align 4, !tbaa !12
  %209 = xor i32 %203, %208
  %210 = lshr i32 %209, 8
  %211 = and i32 %209, 255
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %212
  %214 = load i32, ptr %213, align 4, !tbaa !12
  %215 = xor i32 %210, %214
  %216 = lshr i32 %215, 8
  %217 = and i32 %215, 255
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %218
  %220 = load i32, ptr %219, align 4, !tbaa !12
  %221 = xor i32 %216, %220
  %222 = and i32 %221, 255
  %223 = zext i32 %222 to i64
  %224 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %223
  %225 = load i32, ptr %224, align 4, !tbaa !12
  %226 = lshr i32 %221, 8
  %227 = xor i32 %225, %226
  %228 = xor i32 %227, -1
  %229 = lshr i32 %228, 24
  %230 = trunc i32 %229 to i8
  %231 = lshr i32 %228, 16
  %232 = trunc i32 %231 to i8
  %233 = lshr i32 %228, 8
  %234 = trunc i32 %233 to i8
  %235 = trunc i32 %228 to i8
  %236 = load ptr, ptr %25, align 8, !tbaa !179
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(12) %236, ptr noundef nonnull align 16 dereferenceable(12) @__const.tdefl_write_image_to_png_file_in_memory_ex.pnghdr, i64 12, i1 false)
  %237 = getelementptr inbounds i8, ptr %236, i64 12
  store <4 x i8> <i8 73, i8 72, i8 68, i8 82>, ptr %237, align 1
  %238 = getelementptr inbounds i8, ptr %236, i64 16
  store i8 0, ptr %238, align 1
  %239 = getelementptr inbounds i8, ptr %236, i64 17
  store i8 0, ptr %239, align 1
  %240 = getelementptr inbounds i8, ptr %236, i64 18
  store i8 %143, ptr %240, align 1
  %241 = getelementptr inbounds i8, ptr %236, i64 19
  store i8 %144, ptr %241, align 1
  %242 = getelementptr inbounds i8, ptr %236, i64 20
  store i8 0, ptr %242, align 1
  %243 = getelementptr inbounds i8, ptr %236, i64 21
  store i8 0, ptr %243, align 1
  %244 = getelementptr inbounds i8, ptr %236, i64 22
  store i8 %146, ptr %244, align 1
  %245 = getelementptr inbounds i8, ptr %236, i64 23
  store i8 %147, ptr %245, align 1
  %246 = getelementptr inbounds i8, ptr %236, i64 24
  store i8 8, ptr %246, align 1
  %247 = getelementptr inbounds i8, ptr %236, i64 25
  store i8 %150, ptr %247, align 1
  %248 = getelementptr inbounds i8, ptr %236, i64 26
  store i8 0, ptr %248, align 1
  %249 = getelementptr inbounds i8, ptr %236, i64 27
  store i8 0, ptr %249, align 1
  %250 = getelementptr inbounds i8, ptr %236, i64 28
  store i8 0, ptr %250, align 1
  %251 = getelementptr inbounds i8, ptr %236, i64 29
  store i8 %230, ptr %251, align 1
  %252 = getelementptr inbounds i8, ptr %236, i64 30
  store i8 %232, ptr %252, align 1
  %253 = getelementptr inbounds i8, ptr %236, i64 31
  store i8 %234, ptr %253, align 1
  %254 = getelementptr inbounds i8, ptr %236, i64 32
  store i8 %235, ptr %254, align 1
  %255 = getelementptr inbounds i8, ptr %236, i64 33
  store i8 %152, ptr %255, align 1
  %256 = getelementptr inbounds i8, ptr %236, i64 34
  store i8 %154, ptr %256, align 1
  %257 = getelementptr inbounds i8, ptr %236, i64 35
  store i8 %156, ptr %257, align 1
  %258 = getelementptr inbounds i8, ptr %236, i64 36
  store i8 %157, ptr %258, align 1
  %259 = getelementptr inbounds i8, ptr %236, i64 37
  store i32 1413563465, ptr %259, align 1
  %260 = add i64 %140, 16
  %261 = load i64, ptr %23, align 8, !tbaa !180
  %262 = icmp ugt i64 %260, %261
  br i1 %262, label %263, label %278

263:                                              ; preds = %139
  %264 = load i32, ptr %17, align 8, !tbaa !176
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %276, label %266

266:                                              ; preds = %263, %266
  %267 = phi i64 [ %269, %266 ], [ %261, %263 ]
  %268 = shl i64 %267, 1
  %269 = call i64 @llvm.umax.i64(i64 %268, i64 128)
  %270 = icmp ugt i64 %260, %269
  br i1 %270, label %266, label %271, !llvm.loop !181

271:                                              ; preds = %266
  %272 = call ptr @realloc(ptr noundef %236, i64 noundef %269) #40
  %273 = icmp eq ptr %272, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  store ptr %272, ptr %25, align 8, !tbaa !179
  store i64 %269, ptr %23, align 8, !tbaa !180
  %275 = load i64, ptr %11, align 8, !tbaa !178
  br label %278

276:                                              ; preds = %271, %263
  store i64 0, ptr %4, align 8, !tbaa !46
  call void @free(ptr noundef %13) #38
  %277 = load ptr, ptr %25, align 8, !tbaa !179
  call void @free(ptr noundef %277) #38
  br label %408

278:                                              ; preds = %139, %274
  %279 = phi i64 [ %275, %274 ], [ %140, %139 ]
  %280 = phi ptr [ %272, %274 ], [ %236, %139 ]
  %281 = getelementptr inbounds i8, ptr %280, i64 %279
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %281, ptr noundef nonnull align 1 dereferenceable(16) @.str.13, i64 16, i1 false)
  store i64 %260, ptr %11, align 8, !tbaa !178
  %282 = load ptr, ptr %25, align 8, !tbaa !179
  %283 = getelementptr inbounds i8, ptr %282, i64 37
  %284 = load i64, ptr %4, align 8, !tbaa !46
  %285 = add i64 %284, 4
  %286 = icmp ult i64 %284, -4
  br i1 %286, label %312, label %287

287:                                              ; preds = %312, %278
  %288 = phi i64 [ %285, %278 ], [ %352, %312 ]
  %289 = phi i32 [ -1, %278 ], [ %350, %312 ]
  %290 = phi ptr [ %283, %278 ], [ %351, %312 ]
  %291 = icmp eq i64 %288, 0
  br i1 %291, label %378, label %292

292:                                              ; preds = %287
  %293 = and i64 %288, 1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %306, label %295

295:                                              ; preds = %292
  %296 = lshr i32 %289, 8
  %297 = load i8, ptr %290, align 1, !tbaa !3
  %298 = trunc i32 %289 to i8
  %299 = xor i8 %297, %298
  %300 = zext i8 %299 to i64
  %301 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !12
  %303 = xor i32 %302, %296
  %304 = getelementptr inbounds i8, ptr %290, i64 1
  %305 = add i64 %288, -1
  br label %306

306:                                              ; preds = %295, %292
  %307 = phi i32 [ undef, %292 ], [ %303, %295 ]
  %308 = phi ptr [ %290, %292 ], [ %304, %295 ]
  %309 = phi i32 [ %289, %292 ], [ %303, %295 ]
  %310 = phi i64 [ %288, %292 ], [ %305, %295 ]
  %311 = icmp eq i64 %288, 1
  br i1 %311, label %378, label %354

312:                                              ; preds = %278, %312
  %313 = phi ptr [ %351, %312 ], [ %283, %278 ]
  %314 = phi i32 [ %350, %312 ], [ -1, %278 ]
  %315 = phi i64 [ %352, %312 ], [ %285, %278 ]
  %316 = lshr i32 %314, 8
  %317 = load i8, ptr %313, align 1, !tbaa !3
  %318 = trunc i32 %314 to i8
  %319 = xor i8 %317, %318
  %320 = zext i8 %319 to i64
  %321 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %320
  %322 = load i32, ptr %321, align 4, !tbaa !12
  %323 = xor i32 %322, %316
  %324 = lshr i32 %323, 8
  %325 = getelementptr inbounds i8, ptr %313, i64 1
  %326 = load i8, ptr %325, align 1, !tbaa !3
  %327 = trunc i32 %323 to i8
  %328 = xor i8 %326, %327
  %329 = zext i8 %328 to i64
  %330 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %329
  %331 = load i32, ptr %330, align 4, !tbaa !12
  %332 = xor i32 %324, %331
  %333 = lshr i32 %332, 8
  %334 = getelementptr inbounds i8, ptr %313, i64 2
  %335 = load i8, ptr %334, align 1, !tbaa !3
  %336 = trunc i32 %332 to i8
  %337 = xor i8 %335, %336
  %338 = zext i8 %337 to i64
  %339 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %338
  %340 = load i32, ptr %339, align 4, !tbaa !12
  %341 = xor i32 %333, %340
  %342 = lshr i32 %341, 8
  %343 = getelementptr inbounds i8, ptr %313, i64 3
  %344 = load i8, ptr %343, align 1, !tbaa !3
  %345 = trunc i32 %341 to i8
  %346 = xor i8 %344, %345
  %347 = zext i8 %346 to i64
  %348 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %347
  %349 = load i32, ptr %348, align 4, !tbaa !12
  %350 = xor i32 %342, %349
  %351 = getelementptr inbounds i8, ptr %313, i64 4
  %352 = add i64 %315, -4
  %353 = icmp ugt i64 %352, 3
  br i1 %353, label %312, label %287, !llvm.loop !14

354:                                              ; preds = %306, %354
  %355 = phi ptr [ %375, %354 ], [ %308, %306 ]
  %356 = phi i32 [ %374, %354 ], [ %309, %306 ]
  %357 = phi i64 [ %376, %354 ], [ %310, %306 ]
  %358 = lshr i32 %356, 8
  %359 = load i8, ptr %355, align 1, !tbaa !3
  %360 = trunc i32 %356 to i8
  %361 = xor i8 %359, %360
  %362 = zext i8 %361 to i64
  %363 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %362
  %364 = load i32, ptr %363, align 4, !tbaa !12
  %365 = xor i32 %364, %358
  %366 = getelementptr inbounds i8, ptr %355, i64 1
  %367 = lshr i32 %365, 8
  %368 = load i8, ptr %366, align 1, !tbaa !3
  %369 = trunc i32 %365 to i8
  %370 = xor i8 %368, %369
  %371 = zext i8 %370 to i64
  %372 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %371
  %373 = load i32, ptr %372, align 4, !tbaa !12
  %374 = xor i32 %373, %367
  %375 = getelementptr inbounds i8, ptr %355, i64 2
  %376 = add i64 %357, -2
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %378, label %354, !llvm.loop !15

378:                                              ; preds = %306, %354, %287
  %379 = phi i32 [ %289, %287 ], [ %307, %306 ], [ %374, %354 ]
  %380 = xor i32 %379, -1
  %381 = lshr i32 %380, 24
  %382 = trunc i32 %381 to i8
  %383 = getelementptr inbounds i8, ptr %282, i64 %260
  %384 = getelementptr inbounds i8, ptr %383, i64 -16
  store i8 %382, ptr %384, align 1, !tbaa !3
  %385 = lshr i32 %380, 16
  %386 = trunc i32 %385 to i8
  %387 = load ptr, ptr %25, align 8, !tbaa !179
  %388 = load i64, ptr %11, align 8, !tbaa !178
  %389 = getelementptr inbounds i8, ptr %387, i64 %388
  %390 = getelementptr inbounds i8, ptr %389, i64 -16
  %391 = getelementptr inbounds i8, ptr %390, i64 1
  store i8 %386, ptr %391, align 1, !tbaa !3
  %392 = lshr i32 %380, 8
  %393 = trunc i32 %392 to i8
  %394 = load ptr, ptr %25, align 8, !tbaa !179
  %395 = load i64, ptr %11, align 8, !tbaa !178
  %396 = getelementptr inbounds i8, ptr %394, i64 %395
  %397 = getelementptr inbounds i8, ptr %396, i64 -16
  %398 = getelementptr inbounds i8, ptr %397, i64 2
  store i8 %393, ptr %398, align 1, !tbaa !3
  %399 = trunc i32 %380 to i8
  %400 = load ptr, ptr %25, align 8, !tbaa !179
  %401 = load i64, ptr %11, align 8, !tbaa !178
  %402 = getelementptr inbounds i8, ptr %400, i64 %401
  %403 = getelementptr inbounds i8, ptr %402, i64 -16
  %404 = getelementptr inbounds i8, ptr %403, i64 3
  store i8 %399, ptr %404, align 1, !tbaa !3
  %405 = load i64, ptr %4, align 8, !tbaa !46
  %406 = add i64 %405, 57
  store i64 %406, ptr %4, align 8, !tbaa !46
  call void @free(ptr noundef %13) #38
  %407 = load ptr, ptr %25, align 8, !tbaa !179
  br label %408

408:                                              ; preds = %7, %378, %276, %137, %28
  %409 = phi ptr [ null, %28 ], [ null, %137 ], [ %407, %378 ], [ null, %276 ], [ null, %7 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #38
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %11) #38
  ret ptr %409
}

; Function Attrs: nounwind uwtable
define dso_local ptr @tdefl_write_image_to_png_file_in_memory(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr nocapture noundef %4) local_unnamed_addr #8 {
  %6 = tail call ptr @tdefl_write_image_to_png_file_in_memory_ex(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef 6, i32 noundef 0)
  ret ptr %6
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(inaccessiblemem: readwrite) uwtable
define dso_local noalias ptr @tdefl_compressor_alloc() local_unnamed_addr #4 {
  %1 = tail call noalias dereferenceable_or_null(319352) ptr @malloc(i64 noundef 319352) #39
  ret ptr %1
}

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local void @tdefl_compressor_free(ptr nocapture noundef %0) local_unnamed_addr #2 {
  tail call void @free(ptr noundef %0) #38
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @tinfl_decompress_mem_to_heap(ptr noundef %0, i64 noundef %1, ptr nocapture noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca %struct.tinfl_decompressor_tag, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8376, ptr nonnull %5) #38
  store i64 0, ptr %2, align 8, !tbaa !46
  store i32 0, ptr %5, align 8, !tbaa !79
  %8 = and i32 %3, -7
  %9 = or i32 %8, 4
  br label %10

10:                                               ; preds = %38, %4
  %11 = phi i64 [ 0, %4 ], [ %30, %38 ]
  %12 = phi ptr [ null, %4 ], [ %35, %38 ]
  %13 = phi i64 [ 0, %4 ], [ %27, %38 ]
  %14 = phi i64 [ 0, %4 ], [ %34, %38 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #38
  %15 = sub i64 %1, %13
  store i64 %15, ptr %6, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #38
  %16 = sub i64 %14, %11
  store i64 %16, ptr %7, align 8, !tbaa !46
  %17 = getelementptr inbounds i8, ptr %0, i64 %13
  %18 = icmp eq ptr %12, null
  %19 = getelementptr inbounds i8, ptr %12, i64 %11
  %20 = select i1 %18, ptr null, ptr %19
  %21 = call i32 @tinfl_decompress(ptr noundef nonnull %5, ptr noundef %17, ptr noundef nonnull %6, ptr noundef %12, ptr noundef %20, ptr noundef nonnull %7, i32 noundef %9)
  %22 = icmp slt i32 %21, 0
  %23 = icmp eq i32 %21, 1
  %24 = or i1 %22, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %10
  %26 = load i64, ptr %6, align 8, !tbaa !46
  %27 = add i64 %26, %13
  %28 = load i64, ptr %7, align 8, !tbaa !46
  %29 = load i64, ptr %2, align 8, !tbaa !46
  %30 = add i64 %29, %28
  store i64 %30, ptr %2, align 8, !tbaa !46
  %31 = icmp eq i32 %21, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %25
  %33 = shl i64 %14, 1
  %34 = call i64 @llvm.umax.i64(i64 %33, i64 128)
  %35 = call ptr @realloc(ptr noundef %12, i64 noundef %34) #40
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %32, %10
  call void @free(ptr noundef %12) #38
  store i64 0, ptr %2, align 8, !tbaa !46
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #38
  br label %40

38:                                               ; preds = %32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #38
  br label %10

39:                                               ; preds = %25
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #38
  br label %40

40:                                               ; preds = %37, %39
  %41 = phi ptr [ %12, %39 ], [ null, %37 ]
  call void @llvm.lifetime.end.p0(i64 8376, ptr nonnull %5) #38
  ret ptr %41
}

; Function Attrs: nounwind uwtable
define dso_local i64 @tinfl_decompress_mem_to_mem(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.tinfl_decompressor_tag, align 8
  store i64 %1, ptr %6, align 8, !tbaa !46
  store i64 %3, ptr %7, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 8376, ptr nonnull %8) #38
  store i32 0, ptr %8, align 8, !tbaa !79
  %9 = and i32 %4, -7
  %10 = or i32 %9, 4
  %11 = call i32 @tinfl_decompress(ptr noundef nonnull %8, ptr noundef %2, ptr noundef nonnull %7, ptr noundef %0, ptr noundef %0, ptr noundef nonnull %6, i32 noundef %10)
  %12 = icmp eq i32 %11, 0
  %13 = load i64, ptr %6, align 8
  %14 = select i1 %12, i64 %13, i64 -1
  call void @llvm.lifetime.end.p0(i64 8376, ptr nonnull %8) #38
  ret i64 %14
}

; Function Attrs: nounwind uwtable
define dso_local i32 @tinfl_decompress_mem_to_callback(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = alloca %struct.tinfl_decompressor_tag, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8376, ptr nonnull %6) #38
  %9 = tail call dereferenceable_or_null(32768) ptr @calloc(i64 1, i64 32768)
  %10 = icmp eq ptr %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %5
  store i32 0, ptr %6, align 8, !tbaa !79
  %12 = and i32 %4, -7
  br label %13

13:                                               ; preds = %35, %11
  %14 = phi i64 [ 0, %11 ], [ %23, %35 ]
  %15 = phi i64 [ 0, %11 ], [ %37, %35 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #38
  %16 = load i64, ptr %1, align 8, !tbaa !46
  %17 = sub i64 %16, %14
  store i64 %17, ptr %7, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #38
  %18 = sub nuw nsw i64 32768, %15
  store i64 %18, ptr %8, align 8, !tbaa !46
  %19 = getelementptr inbounds i8, ptr %0, i64 %14
  %20 = getelementptr inbounds i8, ptr %9, i64 %15
  %21 = call i32 @tinfl_decompress(ptr noundef nonnull %6, ptr noundef %19, ptr noundef nonnull %7, ptr noundef nonnull %9, ptr noundef nonnull %20, ptr noundef nonnull %8, i32 noundef %12)
  %22 = load i64, ptr %7, align 8, !tbaa !46
  %23 = add i64 %22, %14
  %24 = load i64, ptr %8, align 8, !tbaa !46
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %13
  %27 = trunc i64 %24 to i32
  %28 = call i32 %2(ptr noundef nonnull %20, i32 noundef %27, ptr noundef %3) #38
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %26, %13
  %31 = icmp eq i32 %21, 2
  br i1 %31, label %35, label %32

32:                                               ; preds = %30
  %33 = icmp eq i32 %21, 0
  %34 = zext i1 %33 to i32
  br label %38

35:                                               ; preds = %30
  %36 = add i64 %24, %15
  %37 = and i64 %36, 32767
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #38
  br label %13

38:                                               ; preds = %26, %32
  %39 = phi i32 [ %34, %32 ], [ 0, %26 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #38
  call void @free(ptr noundef %9) #38
  store i64 %23, ptr %1, align 8, !tbaa !46
  br label %40

40:                                               ; preds = %5, %38
  %41 = phi i32 [ %39, %38 ], [ -1, %5 ]
  call void @llvm.lifetime.end.p0(i64 8376, ptr nonnull %6) #38
  ret i32 %41
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write, argmem: none, inaccessiblemem: readwrite) uwtable
define dso_local noalias ptr @tinfl_decompressor_alloc() local_unnamed_addr #18 {
  %1 = tail call noalias dereferenceable_or_null(8376) ptr @malloc(i64 noundef 8376) #39
  %2 = icmp eq ptr %1, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  store i32 0, ptr %1, align 8, !tbaa !79
  br label %4

4:                                                ; preds = %3, %0
  ret ptr %1
}

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local void @tinfl_decompressor_free(ptr nocapture noundef %0) local_unnamed_addr #2 {
  tail call void @free(ptr noundef %0) #38
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local void @mz_zip_zero_struct(ptr noundef writeonly %0) local_unnamed_addr #10 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %0, i8 0, i64 112, i1 false)
  br label %4

4:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_end(ptr noundef %0) local_unnamed_addr #8 {
  %2 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef %0, i32 noundef 1)
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mz_zip_reader_end_internal(ptr noundef %0, i32 noundef %1) unnamed_addr #8 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %56, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = icmp eq ptr %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !186
  %11 = icmp eq ptr %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !187
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %18 = load i32, ptr %17, align 4, !tbaa !188
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %24, label %20

20:                                               ; preds = %16, %12, %8, %4
  %21 = icmp eq i32 %1, 0
  br i1 %21, label %56, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %23, align 4, !tbaa !189
  br label %56

24:                                               ; preds = %16
  store ptr null, ptr %5, align 8, !tbaa !184
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %26 = load ptr, ptr %25, align 8, !tbaa !190
  %27 = load ptr, ptr %6, align 8, !tbaa !191
  tail call void %14(ptr noundef %26, ptr noundef %27) #38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %6, i8 0, i64 32, i1 false)
  %28 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 1
  %29 = load ptr, ptr %13, align 8, !tbaa !187
  %30 = load ptr, ptr %25, align 8, !tbaa !190
  %31 = load ptr, ptr %28, align 8, !tbaa !191
  tail call void %29(ptr noundef %30, ptr noundef %31) #38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %28, i8 0, i64 32, i1 false)
  %32 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 2
  %33 = load ptr, ptr %13, align 8, !tbaa !187
  %34 = load ptr, ptr %25, align 8, !tbaa !190
  %35 = load ptr, ptr %32, align 8, !tbaa !191
  tail call void %33(ptr noundef %34, ptr noundef %35) #38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %32, i8 0, i64 32, i1 false)
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 6
  %37 = load ptr, ptr %36, align 8, !tbaa !193
  %38 = icmp eq ptr %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %24
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  %41 = load i32, ptr %40, align 8, !tbaa !195
  %42 = icmp eq i32 %41, 4
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = tail call i32 @fclose(ptr noundef nonnull %37)
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %50

46:                                               ; preds = %43
  %47 = icmp eq i32 %1, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 21, ptr %49, align 4, !tbaa !189
  br label %50

50:                                               ; preds = %46, %48, %43, %39
  %51 = phi i32 [ 1, %43 ], [ 1, %39 ], [ 0, %48 ], [ 0, %46 ]
  store ptr null, ptr %36, align 8, !tbaa !193
  br label %52

52:                                               ; preds = %50, %24
  %53 = phi i32 [ %51, %50 ], [ 1, %24 ]
  %54 = load ptr, ptr %13, align 8, !tbaa !187
  %55 = load ptr, ptr %25, align 8, !tbaa !190
  tail call void %54(ptr noundef %55, ptr noundef nonnull %6) #38
  store i32 0, ptr %17, align 4, !tbaa !188
  br label %56

56:                                               ; preds = %20, %22, %2, %52
  %57 = phi i32 [ %53, %52 ], [ 0, %2 ], [ 0, %22 ], [ 0, %20 ]
  ret i32 %57
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_init(ptr noundef %0, i64 noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  %7 = load ptr, ptr %6, align 8, !tbaa !196
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %10, align 4, !tbaa !189
  br label %57

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %13 = load ptr, ptr %12, align 8, !tbaa !184
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %17 = load i32, ptr %16, align 4, !tbaa !188
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %15, %11
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %20, align 4, !tbaa !189
  br label %57

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !186
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store ptr @miniz_def_alloc_func, ptr %22, align 8, !tbaa !186
  br label %26

26:                                               ; preds = %25, %21
  %27 = phi ptr [ @miniz_def_alloc_func, %25 ], [ %23, %21 ]
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %29 = load ptr, ptr %28, align 8, !tbaa !187
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  store ptr @miniz_def_free_func, ptr %28, align 8, !tbaa !187
  br label %32

32:                                               ; preds = %31, %26
  %33 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %34 = load ptr, ptr %33, align 8, !tbaa !197
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  store ptr @miniz_def_realloc_func, ptr %33, align 8, !tbaa !197
  br label %37

37:                                               ; preds = %36, %32
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 0, ptr %38, align 4, !tbaa !189
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %0, i8 0, i64 20, i1 false)
  %40 = load ptr, ptr %39, align 8, !tbaa !190
  %41 = tail call ptr %27(ptr noundef %40, i64 noundef 1, i64 noundef 152) #38
  store ptr %41, ptr %12, align 8, !tbaa !184
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %37
  store i32 16, ptr %38, align 4, !tbaa !189
  br label %57

44:                                               ; preds = %37
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %41, i8 0, i64 152, i1 false)
  %45 = load ptr, ptr %12, align 8, !tbaa !184
  %46 = getelementptr inbounds %struct.mz_zip_array, ptr %45, i64 0, i32 3
  store i32 1, ptr %46, align 8, !tbaa !198
  %47 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %45, i64 0, i32 1, i32 3
  store i32 4, ptr %47, align 8, !tbaa !199
  %48 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %45, i64 0, i32 2, i32 3
  store i32 4, ptr %48, align 8, !tbaa !200
  %49 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %45, i64 0, i32 3
  store i32 %2, ptr %49, align 8, !tbaa !201
  %50 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %45, i64 0, i32 4
  store i32 0, ptr %50, align 4, !tbaa !202
  %51 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %45, i64 0, i32 5
  store i32 0, ptr %51, align 8, !tbaa !203
  store i32 1, ptr %16, align 4, !tbaa !188
  %52 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 1, ptr %52, align 8, !tbaa !195
  store i64 %1, ptr %0, align 8, !tbaa !204
  %53 = tail call fastcc i32 @mz_zip_reader_read_central_dir(ptr noundef nonnull %0, i32 noundef %2)
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %44
  %56 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %0, i32 noundef 0)
  br label %57

57:                                               ; preds = %19, %43, %3, %9, %44, %55
  %58 = phi i32 [ 0, %55 ], [ 1, %44 ], [ 0, %9 ], [ 0, %3 ], [ 0, %43 ], [ 0, %19 ]
  ret i32 %58
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mz_zip_reader_read_central_dir(ptr noundef %0, i32 noundef %1) unnamed_addr #8 {
  %3 = alloca [1024 x i32], align 16
  %4 = alloca [1024 x i32], align 16
  %5 = alloca [5 x i32], align 16
  %6 = alloca [14 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 4096, ptr nonnull %4) #38
  %7 = and i32 %1, 2048
  %8 = icmp eq i32 %7, 0
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %5) #38
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %6) #38
  %9 = load i64, ptr %0, align 8, !tbaa !204
  %10 = icmp ult i64 %9, 22
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 8, ptr %12, align 4, !tbaa !189
  br label %974

13:                                               ; preds = %2
  call void @llvm.lifetime.start.p0(i64 4096, ptr nonnull %3) #38
  %14 = icmp sgt i64 %9, 4096
  %15 = add nsw i64 %9, -4096
  %16 = select i1 %14, i64 %15, i64 0
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %19 = tail call i64 @llvm.smax.i64(i64 %9, i64 4096)
  %20 = sub nsw i64 4096, %19
  br label %21

21:                                               ; preds = %69, %13
  %22 = phi i64 [ %70, %69 ], [ %9, %13 ]
  %23 = phi i64 [ %74, %69 ], [ %20, %13 ]
  %24 = phi i64 [ %73, %69 ], [ %16, %13 ]
  %25 = sub i64 %22, %24
  %26 = call i64 @llvm.umin.i64(i64 %25, i64 4096)
  %27 = load ptr, ptr %17, align 8, !tbaa !196
  %28 = load ptr, ptr %18, align 8, !tbaa !205
  %29 = call i64 %27(ptr noundef %28, i64 noundef %24, ptr noundef nonnull %3, i64 noundef %26) #38
  %30 = icmp eq i64 %29, %26
  br i1 %30, label %31, label %75

31:                                               ; preds = %21
  %32 = icmp ult i64 %26, 4
  br i1 %32, label %67, label %33

33:                                               ; preds = %31
  %34 = add i64 %23, %22
  %35 = call i64 @llvm.umin.i64(i64 %34, i64 4096)
  %36 = add nuw nsw i64 %35, 4294967292
  %37 = and i64 %36, 4294967295
  br label %38

38:                                               ; preds = %64, %33
  %39 = phi i64 [ %37, %33 ], [ %65, %64 ]
  %40 = getelementptr inbounds i8, ptr %3, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !3
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i8, ptr %40, i64 1
  %44 = load i8, ptr %43, align 1, !tbaa !3
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 8
  %47 = or i32 %46, %42
  %48 = getelementptr inbounds i8, ptr %40, i64 2
  %49 = load i8, ptr %48, align 1, !tbaa !3
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %50, 16
  %52 = or i32 %47, %51
  %53 = getelementptr inbounds i8, ptr %40, i64 3
  %54 = load i8, ptr %53, align 1, !tbaa !3
  %55 = zext i8 %54 to i32
  %56 = shl nuw i32 %55, 24
  %57 = or i32 %52, %56
  %58 = icmp eq i32 %57, 101010256
  br i1 %58, label %59, label %64

59:                                               ; preds = %38
  %60 = load i64, ptr %0, align 8, !tbaa !204
  %61 = add i64 %39, %24
  %62 = sub i64 %60, %61
  %63 = icmp ugt i64 %62, 21
  br i1 %63, label %80, label %64

64:                                               ; preds = %59, %38
  %65 = add nsw i64 %39, -1
  %66 = icmp sgt i64 %39, 0
  br i1 %66, label %38, label %67, !llvm.loop !206

67:                                               ; preds = %64, %31
  %68 = icmp eq i64 %24, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %67
  %70 = load i64, ptr %0, align 8, !tbaa !204
  %71 = sub i64 %70, %24
  %72 = icmp ugt i64 %71, 65556
  %73 = add i64 %24, -4093
  %74 = add i64 %23, 4093
  br i1 %72, label %75, label %21

75:                                               ; preds = %21, %69
  call void @llvm.lifetime.end.p0(i64 4096, ptr nonnull %3) #38
  br label %78

76:                                               ; preds = %67
  call void @llvm.lifetime.end.p0(i64 4096, ptr nonnull %3) #38
  %77 = icmp eq ptr %0, null
  br i1 %77, label %974, label %78

78:                                               ; preds = %75, %76
  %79 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 7, ptr %79, align 4, !tbaa !189
  br label %974

80:                                               ; preds = %59
  %81 = and i64 %39, 4294967295
  %82 = add nsw i64 %81, %24
  call void @llvm.lifetime.end.p0(i64 4096, ptr nonnull %3) #38
  %83 = load ptr, ptr %17, align 8, !tbaa !196
  %84 = load ptr, ptr %18, align 8, !tbaa !205
  %85 = call i64 %83(ptr noundef %84, i64 noundef %82, ptr noundef nonnull %4, i64 noundef 22) #38
  %86 = icmp eq i64 %85, 22
  br i1 %86, label %89, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %88, align 4, !tbaa !189
  br label %974

89:                                               ; preds = %80
  %90 = load i8, ptr %4, align 16, !tbaa !3
  %91 = zext i8 %90 to i32
  %92 = getelementptr inbounds i8, ptr %4, i64 1
  %93 = load i8, ptr %92, align 1, !tbaa !3
  %94 = zext i8 %93 to i32
  %95 = shl nuw nsw i32 %94, 8
  %96 = or i32 %95, %91
  %97 = getelementptr inbounds i8, ptr %4, i64 2
  %98 = load i8, ptr %97, align 2, !tbaa !3
  %99 = zext i8 %98 to i32
  %100 = shl nuw nsw i32 %99, 16
  %101 = or i32 %96, %100
  %102 = getelementptr inbounds i8, ptr %4, i64 3
  %103 = load i8, ptr %102, align 1, !tbaa !3
  %104 = zext i8 %103 to i32
  %105 = shl nuw i32 %104, 24
  %106 = or i32 %101, %105
  %107 = icmp eq i32 %106, 101010256
  br i1 %107, label %110, label %108

108:                                              ; preds = %89
  %109 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 8, ptr %109, align 4, !tbaa !189
  br label %974

110:                                              ; preds = %89
  %111 = icmp sgt i64 %82, 75
  br i1 %111, label %112, label %209

112:                                              ; preds = %110
  %113 = load ptr, ptr %17, align 8, !tbaa !196
  %114 = load ptr, ptr %18, align 8, !tbaa !205
  %115 = add nsw i64 %82, -20
  %116 = call i64 %113(ptr noundef %114, i64 noundef %115, ptr noundef nonnull %5, i64 noundef 20) #38
  %117 = icmp eq i64 %116, 20
  br i1 %117, label %118, label %209

118:                                              ; preds = %112
  %119 = load i8, ptr %5, align 16, !tbaa !3
  %120 = zext i8 %119 to i32
  %121 = getelementptr inbounds i8, ptr %5, i64 1
  %122 = load i8, ptr %121, align 1, !tbaa !3
  %123 = zext i8 %122 to i32
  %124 = shl nuw nsw i32 %123, 8
  %125 = or i32 %124, %120
  %126 = getelementptr inbounds i8, ptr %5, i64 2
  %127 = load i8, ptr %126, align 2, !tbaa !3
  %128 = zext i8 %127 to i32
  %129 = shl nuw nsw i32 %128, 16
  %130 = or i32 %125, %129
  %131 = getelementptr inbounds i8, ptr %5, i64 3
  %132 = load i8, ptr %131, align 1, !tbaa !3
  %133 = zext i8 %132 to i32
  %134 = shl nuw i32 %133, 24
  %135 = or i32 %130, %134
  %136 = icmp eq i32 %135, 117853008
  br i1 %136, label %137, label %209

137:                                              ; preds = %118
  %138 = getelementptr inbounds i8, ptr %5, i64 8
  %139 = load i8, ptr %138, align 8, !tbaa !3
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds i8, ptr %5, i64 9
  %142 = load i8, ptr %141, align 1, !tbaa !3
  %143 = zext i8 %142 to i64
  %144 = shl nuw nsw i64 %143, 8
  %145 = getelementptr inbounds i8, ptr %5, i64 10
  %146 = load i8, ptr %145, align 2, !tbaa !3
  %147 = zext i8 %146 to i64
  %148 = shl nuw nsw i64 %147, 16
  %149 = getelementptr inbounds i8, ptr %5, i64 11
  %150 = load i8, ptr %149, align 1, !tbaa !3
  %151 = zext i8 %150 to i64
  %152 = shl nuw nsw i64 %151, 24
  %153 = getelementptr inbounds i8, ptr %5, i64 12
  %154 = load i8, ptr %153, align 4, !tbaa !3
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds i8, ptr %5, i64 13
  %157 = load i8, ptr %156, align 1, !tbaa !3
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds i8, ptr %5, i64 14
  %160 = load i8, ptr %159, align 2, !tbaa !3
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds i8, ptr %5, i64 15
  %163 = load i8, ptr %162, align 1, !tbaa !3
  %164 = zext i8 %163 to i64
  %165 = shl nuw i64 %164, 56
  %166 = shl nuw nsw i64 %161, 48
  %167 = shl nuw nsw i64 %158, 40
  %168 = shl nuw nsw i64 %155, 32
  %169 = or i64 %144, %140
  %170 = or i64 %169, %148
  %171 = or i64 %170, %152
  %172 = or i64 %171, %168
  %173 = or i64 %172, %167
  %174 = or i64 %173, %166
  %175 = or i64 %174, %165
  %176 = load i64, ptr %0, align 8, !tbaa !204
  %177 = add i64 %176, -56
  %178 = icmp ugt i64 %175, %177
  br i1 %178, label %179, label %181

179:                                              ; preds = %137
  %180 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 8, ptr %180, align 4, !tbaa !189
  br label %974

181:                                              ; preds = %137
  %182 = load ptr, ptr %17, align 8, !tbaa !196
  %183 = load ptr, ptr %18, align 8, !tbaa !205
  %184 = call i64 %182(ptr noundef %183, i64 noundef %175, ptr noundef nonnull %6, i64 noundef 56) #38
  %185 = icmp eq i64 %184, 56
  br i1 %185, label %186, label %209

186:                                              ; preds = %181
  %187 = load i8, ptr %6, align 16, !tbaa !3
  %188 = zext i8 %187 to i32
  %189 = getelementptr inbounds i8, ptr %6, i64 1
  %190 = load i8, ptr %189, align 1, !tbaa !3
  %191 = zext i8 %190 to i32
  %192 = shl nuw nsw i32 %191, 8
  %193 = or i32 %192, %188
  %194 = getelementptr inbounds i8, ptr %6, i64 2
  %195 = load i8, ptr %194, align 2, !tbaa !3
  %196 = zext i8 %195 to i32
  %197 = shl nuw nsw i32 %196, 16
  %198 = or i32 %193, %197
  %199 = getelementptr inbounds i8, ptr %6, i64 3
  %200 = load i8, ptr %199, align 1, !tbaa !3
  %201 = zext i8 %200 to i32
  %202 = shl nuw i32 %201, 24
  %203 = or i32 %198, %202
  %204 = icmp eq i32 %203, 101075792
  br i1 %204, label %205, label %209

205:                                              ; preds = %186
  %206 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %207 = load ptr, ptr %206, align 8, !tbaa !184
  %208 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %207, i64 0, i32 4
  store i32 1, ptr %208, align 4, !tbaa !202
  br label %209

209:                                              ; preds = %112, %181, %205, %186, %118, %110
  %210 = getelementptr inbounds i8, ptr %4, i64 10
  %211 = load i8, ptr %210, align 2, !tbaa !3
  %212 = zext i8 %211 to i32
  %213 = getelementptr inbounds i8, ptr %4, i64 11
  %214 = load i8, ptr %213, align 1, !tbaa !3
  %215 = zext i8 %214 to i32
  %216 = shl nuw nsw i32 %215, 8
  %217 = or i32 %216, %212
  %218 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  store i32 %217, ptr %218, align 8, !tbaa !207
  %219 = getelementptr inbounds i8, ptr %4, i64 8
  %220 = load i8, ptr %219, align 8, !tbaa !3
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds i8, ptr %4, i64 9
  %223 = load i8, ptr %222, align 1, !tbaa !3
  %224 = zext i8 %223 to i32
  %225 = shl nuw nsw i32 %224, 8
  %226 = or i32 %225, %221
  %227 = getelementptr inbounds i8, ptr %4, i64 4
  %228 = load i8, ptr %227, align 4, !tbaa !3
  %229 = zext i8 %228 to i32
  %230 = getelementptr inbounds i8, ptr %4, i64 5
  %231 = load i8, ptr %230, align 1, !tbaa !3
  %232 = zext i8 %231 to i32
  %233 = shl nuw nsw i32 %232, 8
  %234 = or i32 %233, %229
  %235 = getelementptr inbounds i8, ptr %4, i64 6
  %236 = load i8, ptr %235, align 2, !tbaa !3
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds i8, ptr %4, i64 7
  %239 = load i8, ptr %238, align 1, !tbaa !3
  %240 = zext i8 %239 to i32
  %241 = shl nuw nsw i32 %240, 8
  %242 = or i32 %241, %237
  %243 = getelementptr inbounds i8, ptr %4, i64 12
  %244 = load i8, ptr %243, align 4, !tbaa !3
  %245 = zext i8 %244 to i32
  %246 = getelementptr inbounds i8, ptr %4, i64 13
  %247 = load i8, ptr %246, align 1, !tbaa !3
  %248 = zext i8 %247 to i32
  %249 = shl nuw nsw i32 %248, 8
  %250 = or i32 %249, %245
  %251 = getelementptr inbounds i8, ptr %4, i64 14
  %252 = load i8, ptr %251, align 2, !tbaa !3
  %253 = zext i8 %252 to i32
  %254 = shl nuw nsw i32 %253, 16
  %255 = or i32 %250, %254
  %256 = getelementptr inbounds i8, ptr %4, i64 15
  %257 = load i8, ptr %256, align 1, !tbaa !3
  %258 = zext i8 %257 to i32
  %259 = shl nuw i32 %258, 24
  %260 = or i32 %255, %259
  %261 = getelementptr inbounds i8, ptr %4, i64 16
  %262 = load i8, ptr %261, align 16, !tbaa !3
  %263 = zext i8 %262 to i64
  %264 = getelementptr inbounds i8, ptr %4, i64 17
  %265 = load i8, ptr %264, align 1, !tbaa !3
  %266 = zext i8 %265 to i64
  %267 = shl nuw nsw i64 %266, 8
  %268 = or i64 %267, %263
  %269 = getelementptr inbounds i8, ptr %4, i64 18
  %270 = load i8, ptr %269, align 2, !tbaa !3
  %271 = zext i8 %270 to i64
  %272 = shl nuw nsw i64 %271, 16
  %273 = or i64 %268, %272
  %274 = getelementptr inbounds i8, ptr %4, i64 19
  %275 = load i8, ptr %274, align 1, !tbaa !3
  %276 = zext i8 %275 to i64
  %277 = shl nuw nsw i64 %276, 24
  %278 = or i64 %273, %277
  %279 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %280 = load ptr, ptr %279, align 8, !tbaa !184
  %281 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %280, i64 0, i32 4
  %282 = load i32, ptr %281, align 4, !tbaa !202
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %546, label %284

284:                                              ; preds = %209
  %285 = getelementptr inbounds i8, ptr %6, i64 32
  %286 = load i8, ptr %285, align 16, !tbaa !3
  %287 = zext i8 %286 to i32
  %288 = getelementptr inbounds i8, ptr %6, i64 33
  %289 = load i8, ptr %288, align 1, !tbaa !3
  %290 = zext i8 %289 to i32
  %291 = shl nuw nsw i32 %290, 8
  %292 = or i32 %291, %287
  %293 = getelementptr inbounds i8, ptr %6, i64 34
  %294 = load i8, ptr %293, align 2, !tbaa !3
  %295 = zext i8 %294 to i32
  %296 = shl nuw nsw i32 %295, 16
  %297 = or i32 %292, %296
  %298 = getelementptr inbounds i8, ptr %6, i64 35
  %299 = load i8, ptr %298, align 1, !tbaa !3
  %300 = zext i8 %299 to i32
  %301 = shl nuw i32 %300, 24
  %302 = or i32 %297, %301
  %303 = getelementptr inbounds i8, ptr %6, i64 36
  %304 = load i8, ptr %303, align 4, !tbaa !3
  %305 = zext i8 %304 to i64
  %306 = getelementptr inbounds i8, ptr %6, i64 37
  %307 = load i8, ptr %306, align 1, !tbaa !3
  %308 = zext i8 %307 to i64
  %309 = getelementptr inbounds i8, ptr %6, i64 38
  %310 = load i8, ptr %309, align 2, !tbaa !3
  %311 = zext i8 %310 to i64
  %312 = getelementptr inbounds i8, ptr %6, i64 39
  %313 = load i8, ptr %312, align 1, !tbaa !3
  %314 = zext i8 %313 to i64
  %315 = shl nuw i64 %314, 56
  %316 = shl nuw nsw i64 %311, 48
  %317 = shl nuw nsw i64 %308, 40
  %318 = shl nuw nsw i64 %305, 32
  %319 = or i64 %317, %318
  %320 = or i64 %319, %316
  %321 = or i64 %320, %315
  %322 = getelementptr inbounds i8, ptr %6, i64 24
  %323 = load i8, ptr %322, align 8, !tbaa !3
  %324 = zext i8 %323 to i32
  %325 = getelementptr inbounds i8, ptr %6, i64 25
  %326 = load i8, ptr %325, align 1, !tbaa !3
  %327 = zext i8 %326 to i32
  %328 = shl nuw nsw i32 %327, 8
  %329 = or i32 %328, %324
  %330 = getelementptr inbounds i8, ptr %6, i64 26
  %331 = load i8, ptr %330, align 2, !tbaa !3
  %332 = zext i8 %331 to i32
  %333 = shl nuw nsw i32 %332, 16
  %334 = or i32 %329, %333
  %335 = getelementptr inbounds i8, ptr %6, i64 27
  %336 = load i8, ptr %335, align 1, !tbaa !3
  %337 = zext i8 %336 to i32
  %338 = shl nuw i32 %337, 24
  %339 = or i32 %334, %338
  %340 = getelementptr inbounds i8, ptr %6, i64 28
  %341 = load i8, ptr %340, align 4, !tbaa !3
  %342 = zext i8 %341 to i64
  %343 = getelementptr inbounds i8, ptr %6, i64 29
  %344 = load i8, ptr %343, align 1, !tbaa !3
  %345 = zext i8 %344 to i64
  %346 = getelementptr inbounds i8, ptr %6, i64 30
  %347 = load i8, ptr %346, align 2, !tbaa !3
  %348 = zext i8 %347 to i64
  %349 = getelementptr inbounds i8, ptr %6, i64 31
  %350 = load i8, ptr %349, align 1, !tbaa !3
  %351 = zext i8 %350 to i64
  %352 = shl nuw i64 %351, 56
  %353 = shl nuw nsw i64 %348, 48
  %354 = shl nuw nsw i64 %345, 40
  %355 = shl nuw nsw i64 %342, 32
  %356 = or i64 %354, %355
  %357 = or i64 %356, %353
  %358 = or i64 %357, %352
  %359 = getelementptr inbounds i8, ptr %6, i64 4
  %360 = load i8, ptr %359, align 4, !tbaa !3
  %361 = zext i8 %360 to i64
  %362 = getelementptr inbounds i8, ptr %6, i64 5
  %363 = load i8, ptr %362, align 1, !tbaa !3
  %364 = zext i8 %363 to i64
  %365 = shl nuw nsw i64 %364, 8
  %366 = getelementptr inbounds i8, ptr %6, i64 6
  %367 = load i8, ptr %366, align 2, !tbaa !3
  %368 = zext i8 %367 to i64
  %369 = shl nuw nsw i64 %368, 16
  %370 = getelementptr inbounds i8, ptr %6, i64 7
  %371 = load i8, ptr %370, align 1, !tbaa !3
  %372 = zext i8 %371 to i64
  %373 = shl nuw nsw i64 %372, 24
  %374 = getelementptr inbounds i8, ptr %6, i64 8
  %375 = load i8, ptr %374, align 8, !tbaa !3
  %376 = zext i8 %375 to i64
  %377 = getelementptr inbounds i8, ptr %6, i64 9
  %378 = load i8, ptr %377, align 1, !tbaa !3
  %379 = zext i8 %378 to i64
  %380 = getelementptr inbounds i8, ptr %6, i64 10
  %381 = load i8, ptr %380, align 2, !tbaa !3
  %382 = zext i8 %381 to i64
  %383 = getelementptr inbounds i8, ptr %6, i64 11
  %384 = load i8, ptr %383, align 1, !tbaa !3
  %385 = zext i8 %384 to i64
  %386 = shl nuw i64 %385, 56
  %387 = shl nuw nsw i64 %382, 48
  %388 = shl nuw nsw i64 %379, 40
  %389 = shl nuw nsw i64 %376, 32
  %390 = or i64 %365, %361
  %391 = or i64 %390, %369
  %392 = or i64 %391, %373
  %393 = or i64 %392, %389
  %394 = or i64 %393, %388
  %395 = or i64 %394, %387
  %396 = or i64 %395, %386
  %397 = getelementptr inbounds i8, ptr %6, i64 40
  %398 = load i8, ptr %397, align 8, !tbaa !3
  %399 = zext i8 %398 to i32
  %400 = getelementptr inbounds i8, ptr %6, i64 41
  %401 = load i8, ptr %400, align 1, !tbaa !3
  %402 = zext i8 %401 to i32
  %403 = shl nuw nsw i32 %402, 8
  %404 = or i32 %403, %399
  %405 = getelementptr inbounds i8, ptr %6, i64 42
  %406 = load i8, ptr %405, align 2, !tbaa !3
  %407 = zext i8 %406 to i32
  %408 = shl nuw nsw i32 %407, 16
  %409 = or i32 %404, %408
  %410 = getelementptr inbounds i8, ptr %6, i64 43
  %411 = load i8, ptr %410, align 1, !tbaa !3
  %412 = zext i8 %411 to i32
  %413 = shl nuw i32 %412, 24
  %414 = or i32 %409, %413
  %415 = getelementptr inbounds i8, ptr %6, i64 44
  %416 = load i8, ptr %415, align 4, !tbaa !3
  %417 = zext i8 %416 to i64
  %418 = getelementptr inbounds i8, ptr %6, i64 45
  %419 = load i8, ptr %418, align 1, !tbaa !3
  %420 = zext i8 %419 to i64
  %421 = getelementptr inbounds i8, ptr %6, i64 46
  %422 = load i8, ptr %421, align 2, !tbaa !3
  %423 = zext i8 %422 to i64
  %424 = getelementptr inbounds i8, ptr %6, i64 47
  %425 = load i8, ptr %424, align 1, !tbaa !3
  %426 = zext i8 %425 to i64
  %427 = shl nuw i64 %426, 56
  %428 = shl nuw nsw i64 %423, 48
  %429 = shl nuw nsw i64 %420, 40
  %430 = shl nuw nsw i64 %417, 32
  %431 = or i64 %429, %430
  %432 = or i64 %431, %428
  %433 = or i64 %432, %427
  %434 = icmp ult i64 %396, 44
  br i1 %434, label %435, label %437

435:                                              ; preds = %284
  %436 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %436, align 4, !tbaa !189
  br label %974

437:                                              ; preds = %284
  %438 = getelementptr inbounds i8, ptr %5, i64 17
  %439 = load i8, ptr %438, align 1, !tbaa !3
  %440 = zext i8 %439 to i32
  %441 = shl nuw nsw i32 %440, 8
  %442 = getelementptr inbounds i8, ptr %5, i64 16
  %443 = load i8, ptr %442, align 16, !tbaa !3
  %444 = zext i8 %443 to i32
  %445 = or i32 %441, %444
  %446 = getelementptr inbounds i8, ptr %5, i64 18
  %447 = load i8, ptr %446, align 2, !tbaa !3
  %448 = zext i8 %447 to i32
  %449 = shl nuw nsw i32 %448, 16
  %450 = or i32 %445, %449
  %451 = getelementptr inbounds i8, ptr %5, i64 19
  %452 = load i8, ptr %451, align 1, !tbaa !3
  %453 = zext i8 %452 to i32
  %454 = shl nuw i32 %453, 24
  %455 = or i32 %450, %454
  %456 = icmp eq i32 %455, 1
  br i1 %456, label %459, label %457

457:                                              ; preds = %437
  %458 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 10, ptr %458, align 4, !tbaa !189
  br label %974

459:                                              ; preds = %437
  %460 = icmp eq i64 %321, 0
  br i1 %460, label %463, label %461

461:                                              ; preds = %459
  %462 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %462, align 4, !tbaa !189
  br label %974

463:                                              ; preds = %459
  store i32 %302, ptr %218, align 8, !tbaa !207
  %464 = icmp eq i64 %358, 0
  br i1 %464, label %467, label %465

465:                                              ; preds = %463
  %466 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %466, align 4, !tbaa !189
  br label %974

467:                                              ; preds = %463
  %468 = icmp eq i64 %433, 0
  br i1 %468, label %471, label %469

469:                                              ; preds = %467
  %470 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 15, ptr %470, align 4, !tbaa !189
  br label %974

471:                                              ; preds = %467
  %472 = getelementptr inbounds i8, ptr %6, i64 16
  %473 = load i8, ptr %472, align 16, !tbaa !3
  %474 = zext i8 %473 to i32
  %475 = getelementptr inbounds i8, ptr %6, i64 17
  %476 = load i8, ptr %475, align 1, !tbaa !3
  %477 = zext i8 %476 to i32
  %478 = shl nuw nsw i32 %477, 8
  %479 = or i32 %478, %474
  %480 = getelementptr inbounds i8, ptr %6, i64 18
  %481 = load i8, ptr %480, align 2, !tbaa !3
  %482 = zext i8 %481 to i32
  %483 = shl nuw nsw i32 %482, 16
  %484 = or i32 %479, %483
  %485 = getelementptr inbounds i8, ptr %6, i64 19
  %486 = load i8, ptr %485, align 1, !tbaa !3
  %487 = zext i8 %486 to i32
  %488 = shl nuw i32 %487, 24
  %489 = or i32 %484, %488
  %490 = getelementptr inbounds i8, ptr %6, i64 20
  %491 = load i8, ptr %490, align 4, !tbaa !3
  %492 = zext i8 %491 to i32
  %493 = getelementptr inbounds i8, ptr %6, i64 21
  %494 = load i8, ptr %493, align 1, !tbaa !3
  %495 = zext i8 %494 to i32
  %496 = shl nuw nsw i32 %495, 8
  %497 = or i32 %496, %492
  %498 = getelementptr inbounds i8, ptr %6, i64 22
  %499 = load i8, ptr %498, align 2, !tbaa !3
  %500 = zext i8 %499 to i32
  %501 = shl nuw nsw i32 %500, 16
  %502 = or i32 %497, %501
  %503 = getelementptr inbounds i8, ptr %6, i64 23
  %504 = load i8, ptr %503, align 1, !tbaa !3
  %505 = zext i8 %504 to i32
  %506 = shl nuw i32 %505, 24
  %507 = or i32 %502, %506
  %508 = getelementptr inbounds i8, ptr %6, i64 48
  %509 = load i8, ptr %508, align 16, !tbaa !3
  %510 = zext i8 %509 to i64
  %511 = getelementptr inbounds i8, ptr %6, i64 49
  %512 = load i8, ptr %511, align 1, !tbaa !3
  %513 = zext i8 %512 to i64
  %514 = shl nuw nsw i64 %513, 8
  %515 = getelementptr inbounds i8, ptr %6, i64 50
  %516 = load i8, ptr %515, align 2, !tbaa !3
  %517 = zext i8 %516 to i64
  %518 = shl nuw nsw i64 %517, 16
  %519 = getelementptr inbounds i8, ptr %6, i64 51
  %520 = load i8, ptr %519, align 1, !tbaa !3
  %521 = zext i8 %520 to i64
  %522 = shl nuw nsw i64 %521, 24
  %523 = getelementptr inbounds i8, ptr %6, i64 52
  %524 = load i8, ptr %523, align 4, !tbaa !3
  %525 = zext i8 %524 to i64
  %526 = getelementptr inbounds i8, ptr %6, i64 53
  %527 = load i8, ptr %526, align 1, !tbaa !3
  %528 = zext i8 %527 to i64
  %529 = getelementptr inbounds i8, ptr %6, i64 54
  %530 = load i8, ptr %529, align 2, !tbaa !3
  %531 = zext i8 %530 to i64
  %532 = getelementptr inbounds i8, ptr %6, i64 55
  %533 = load i8, ptr %532, align 1, !tbaa !3
  %534 = zext i8 %533 to i64
  %535 = shl nuw i64 %534, 56
  %536 = shl nuw nsw i64 %531, 48
  %537 = shl nuw nsw i64 %528, 40
  %538 = shl nuw nsw i64 %525, 32
  %539 = or i64 %514, %510
  %540 = or i64 %539, %518
  %541 = or i64 %540, %522
  %542 = or i64 %541, %538
  %543 = or i64 %542, %537
  %544 = or i64 %543, %536
  %545 = or i64 %544, %535
  br label %546

546:                                              ; preds = %471, %209
  %547 = phi i32 [ %302, %471 ], [ %217, %209 ]
  %548 = phi i64 [ %545, %471 ], [ %278, %209 ]
  %549 = phi i32 [ %507, %471 ], [ %242, %209 ]
  %550 = phi i32 [ %489, %471 ], [ %234, %209 ]
  %551 = phi i32 [ %339, %471 ], [ %226, %209 ]
  %552 = phi i32 [ %414, %471 ], [ %260, %209 ]
  %553 = icmp eq i32 %547, %551
  br i1 %553, label %556, label %554

554:                                              ; preds = %546
  %555 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 10, ptr %555, align 4, !tbaa !189
  br label %974

556:                                              ; preds = %546
  %557 = or i32 %550, %549
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %565, label %559

559:                                              ; preds = %556
  %560 = icmp ne i32 %550, 1
  %561 = icmp ne i32 %549, 1
  %562 = select i1 %560, i1 true, i1 %561
  br i1 %562, label %563, label %565

563:                                              ; preds = %559
  %564 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 10, ptr %564, align 4, !tbaa !189
  br label %974

565:                                              ; preds = %559, %556
  %566 = zext i32 %552 to i64
  %567 = zext i32 %547 to i64
  %568 = mul nuw nsw i64 %567, 46
  %569 = icmp ugt i64 %568, %566
  br i1 %569, label %570, label %572

570:                                              ; preds = %565
  %571 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %571, align 4, !tbaa !189
  br label %974

572:                                              ; preds = %565
  %573 = add i64 %548, %566
  %574 = load i64, ptr %0, align 8, !tbaa !204
  %575 = icmp ugt i64 %573, %574
  br i1 %575, label %576, label %578

576:                                              ; preds = %572
  %577 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %577, align 4, !tbaa !189
  br label %974

578:                                              ; preds = %572
  %579 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 1
  store i64 %548, ptr %579, align 8, !tbaa !208
  %580 = icmp eq i32 %547, 0
  br i1 %580, label %972, label %581

581:                                              ; preds = %578
  %582 = getelementptr inbounds %struct.mz_zip_array, ptr %280, i64 0, i32 2
  %583 = load i64, ptr %582, align 8, !tbaa !209
  %584 = icmp ult i64 %583, %566
  br i1 %584, label %585, label %602

585:                                              ; preds = %581
  %586 = getelementptr inbounds %struct.mz_zip_array, ptr %280, i64 0, i32 3
  %587 = load i32, ptr %586, align 8, !tbaa !210
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %590

589:                                              ; preds = %585
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

590:                                              ; preds = %585
  %591 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %592 = load ptr, ptr %591, align 8, !tbaa !197
  %593 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %594 = load ptr, ptr %593, align 8, !tbaa !190
  %595 = load ptr, ptr %280, align 8, !tbaa !191
  %596 = zext i32 %587 to i64
  %597 = call ptr %592(ptr noundef %594, ptr noundef %595, i64 noundef %596, i64 noundef %566) #38
  %598 = icmp eq ptr %597, null
  br i1 %598, label %625, label %599

599:                                              ; preds = %590
  store ptr %597, ptr %280, align 8, !tbaa !191
  store i64 %566, ptr %582, align 8, !tbaa !209
  %600 = load i32, ptr %218, align 8, !tbaa !207
  %601 = zext i32 %600 to i64
  br label %602

602:                                              ; preds = %599, %581
  %603 = phi i64 [ %601, %599 ], [ %567, %581 ]
  %604 = getelementptr inbounds %struct.mz_zip_array, ptr %280, i64 0, i32 1
  store i64 %566, ptr %604, align 8, !tbaa !211
  %605 = load ptr, ptr %279, align 8, !tbaa !184
  %606 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %605, i64 0, i32 1
  %607 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %605, i64 0, i32 1, i32 2
  %608 = load i64, ptr %607, align 8, !tbaa !209
  %609 = icmp ult i64 %608, %603
  br i1 %609, label %610, label %627

610:                                              ; preds = %602
  %611 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %605, i64 0, i32 1, i32 3
  %612 = load i32, ptr %611, align 8, !tbaa !210
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %615

614:                                              ; preds = %610
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

615:                                              ; preds = %610
  %616 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %617 = load ptr, ptr %616, align 8, !tbaa !197
  %618 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %619 = load ptr, ptr %618, align 8, !tbaa !190
  %620 = load ptr, ptr %606, align 8, !tbaa !191
  %621 = zext i32 %612 to i64
  %622 = call ptr %617(ptr noundef %619, ptr noundef %620, i64 noundef %621, i64 noundef %603) #38
  %623 = icmp eq ptr %622, null
  br i1 %623, label %625, label %624

624:                                              ; preds = %615
  store ptr %622, ptr %606, align 8, !tbaa !191
  store i64 %603, ptr %607, align 8, !tbaa !209
  br label %627

625:                                              ; preds = %615, %590
  %626 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %626, align 4, !tbaa !189
  br label %974

627:                                              ; preds = %624, %602
  %628 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %605, i64 0, i32 1, i32 1
  store i64 %603, ptr %628, align 8, !tbaa !211
  br i1 %8, label %629, label %656

629:                                              ; preds = %627
  %630 = load ptr, ptr %279, align 8, !tbaa !184
  %631 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %630, i64 0, i32 2
  %632 = load i32, ptr %218, align 8, !tbaa !207
  %633 = zext i32 %632 to i64
  %634 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %630, i64 0, i32 2, i32 2
  %635 = load i64, ptr %634, align 8, !tbaa !209
  %636 = icmp ult i64 %635, %633
  br i1 %636, label %637, label %652

637:                                              ; preds = %629
  %638 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %630, i64 0, i32 2, i32 3
  %639 = load i32, ptr %638, align 8, !tbaa !210
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %641, label %642

641:                                              ; preds = %637
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

642:                                              ; preds = %637
  %643 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %644 = load ptr, ptr %643, align 8, !tbaa !197
  %645 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %646 = load ptr, ptr %645, align 8, !tbaa !190
  %647 = load ptr, ptr %631, align 8, !tbaa !191
  %648 = zext i32 %639 to i64
  %649 = call ptr %644(ptr noundef %646, ptr noundef %647, i64 noundef %648, i64 noundef %633) #38
  %650 = icmp eq ptr %649, null
  br i1 %650, label %654, label %651

651:                                              ; preds = %642
  store ptr %649, ptr %631, align 8, !tbaa !191
  store i64 %633, ptr %634, align 8, !tbaa !209
  br label %652

652:                                              ; preds = %629, %651
  %653 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %630, i64 0, i32 2, i32 1
  store i64 %633, ptr %653, align 8, !tbaa !211
  br label %656

654:                                              ; preds = %642
  %655 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %655, align 4, !tbaa !189
  br label %974

656:                                              ; preds = %652, %627
  %657 = load ptr, ptr %17, align 8, !tbaa !196
  %658 = load ptr, ptr %18, align 8, !tbaa !205
  %659 = load ptr, ptr %279, align 8, !tbaa !184
  %660 = load ptr, ptr %659, align 8, !tbaa !212
  %661 = call i64 %657(ptr noundef %658, i64 noundef %548, ptr noundef %660, i64 noundef %566) #38
  %662 = icmp eq i64 %661, %566
  br i1 %662, label %665, label %663

663:                                              ; preds = %656
  %664 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %664, align 4, !tbaa !189
  br label %974

665:                                              ; preds = %656
  %666 = load i32, ptr %218, align 8, !tbaa !207
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %971, label %668

668:                                              ; preds = %665
  %669 = load ptr, ptr %279, align 8, !tbaa !184
  %670 = load ptr, ptr %669, align 8, !tbaa !212
  %671 = add i64 %548, 46
  br label %672

672:                                              ; preds = %668, %963
  %673 = phi i64 [ 0, %668 ], [ %967, %963 ]
  %674 = phi ptr [ %670, %668 ], [ %966, %963 ]
  %675 = phi i32 [ %552, %668 ], [ %964, %963 ]
  %676 = icmp ult i32 %675, 46
  br i1 %676, label %696, label %677

677:                                              ; preds = %672
  %678 = load i8, ptr %674, align 1, !tbaa !3
  %679 = zext i8 %678 to i32
  %680 = getelementptr inbounds i8, ptr %674, i64 1
  %681 = load i8, ptr %680, align 1, !tbaa !3
  %682 = zext i8 %681 to i32
  %683 = shl nuw nsw i32 %682, 8
  %684 = or i32 %683, %679
  %685 = getelementptr inbounds i8, ptr %674, i64 2
  %686 = load i8, ptr %685, align 1, !tbaa !3
  %687 = zext i8 %686 to i32
  %688 = shl nuw nsw i32 %687, 16
  %689 = or i32 %684, %688
  %690 = getelementptr inbounds i8, ptr %674, i64 3
  %691 = load i8, ptr %690, align 1, !tbaa !3
  %692 = zext i8 %691 to i32
  %693 = shl nuw i32 %692, 24
  %694 = or i32 %689, %693
  %695 = icmp eq i32 %694, 33639248
  br i1 %695, label %698, label %696

696:                                              ; preds = %677, %672
  %697 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %697, align 4, !tbaa !189
  br label %974

698:                                              ; preds = %677
  %699 = load ptr, ptr %279, align 8, !tbaa !184
  %700 = load ptr, ptr %699, align 8, !tbaa !212
  %701 = ptrtoint ptr %674 to i64
  %702 = ptrtoint ptr %700 to i64
  %703 = sub i64 %701, %702
  %704 = trunc i64 %703 to i32
  %705 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %699, i64 0, i32 1
  %706 = load ptr, ptr %705, align 8, !tbaa !213
  %707 = getelementptr inbounds i32, ptr %706, i64 %673
  store i32 %704, ptr %707, align 4, !tbaa !12
  br i1 %8, label %708, label %713

708:                                              ; preds = %698
  %709 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %699, i64 0, i32 2
  %710 = load ptr, ptr %709, align 8, !tbaa !214
  %711 = getelementptr inbounds i32, ptr %710, i64 %673
  %712 = trunc i64 %673 to i32
  store i32 %712, ptr %711, align 4, !tbaa !12
  br label %713

713:                                              ; preds = %708, %698
  %714 = getelementptr inbounds i8, ptr %674, i64 20
  %715 = load i8, ptr %714, align 1, !tbaa !3
  %716 = zext i8 %715 to i64
  %717 = getelementptr inbounds i8, ptr %674, i64 21
  %718 = load i8, ptr %717, align 1, !tbaa !3
  %719 = zext i8 %718 to i64
  %720 = shl nuw nsw i64 %719, 8
  %721 = or i64 %720, %716
  %722 = getelementptr inbounds i8, ptr %674, i64 22
  %723 = load i8, ptr %722, align 1, !tbaa !3
  %724 = zext i8 %723 to i64
  %725 = shl nuw nsw i64 %724, 16
  %726 = or i64 %721, %725
  %727 = getelementptr inbounds i8, ptr %674, i64 23
  %728 = load i8, ptr %727, align 1, !tbaa !3
  %729 = zext i8 %728 to i64
  %730 = shl nuw nsw i64 %729, 24
  %731 = or i64 %726, %730
  %732 = getelementptr inbounds i8, ptr %674, i64 24
  %733 = load i8, ptr %732, align 1, !tbaa !3
  %734 = zext i8 %733 to i64
  %735 = getelementptr inbounds i8, ptr %674, i64 25
  %736 = load i8, ptr %735, align 1, !tbaa !3
  %737 = zext i8 %736 to i64
  %738 = shl nuw nsw i64 %737, 8
  %739 = or i64 %738, %734
  %740 = getelementptr inbounds i8, ptr %674, i64 26
  %741 = load i8, ptr %740, align 1, !tbaa !3
  %742 = zext i8 %741 to i64
  %743 = shl nuw nsw i64 %742, 16
  %744 = or i64 %739, %743
  %745 = getelementptr inbounds i8, ptr %674, i64 27
  %746 = load i8, ptr %745, align 1, !tbaa !3
  %747 = zext i8 %746 to i64
  %748 = shl nuw nsw i64 %747, 24
  %749 = or i64 %744, %748
  %750 = getelementptr inbounds i8, ptr %674, i64 42
  %751 = getelementptr inbounds i8, ptr %674, i64 43
  %752 = getelementptr inbounds i8, ptr %674, i64 44
  %753 = getelementptr inbounds i8, ptr %674, i64 45
  %754 = getelementptr inbounds i8, ptr %674, i64 28
  %755 = load i8, ptr %754, align 1, !tbaa !3
  %756 = zext i8 %755 to i32
  %757 = getelementptr inbounds i8, ptr %674, i64 29
  %758 = load i8, ptr %757, align 1, !tbaa !3
  %759 = zext i8 %758 to i32
  %760 = shl nuw nsw i32 %759, 8
  %761 = or i32 %760, %756
  %762 = getelementptr inbounds i8, ptr %674, i64 30
  %763 = load i8, ptr %762, align 1, !tbaa !3
  %764 = zext i8 %763 to i32
  %765 = getelementptr inbounds i8, ptr %674, i64 31
  %766 = load i8, ptr %765, align 1, !tbaa !3
  %767 = zext i8 %766 to i32
  %768 = shl nuw nsw i32 %767, 8
  %769 = or i32 %768, %764
  %770 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %699, i64 0, i32 5
  %771 = load i32, ptr %770, align 8, !tbaa !203
  %772 = icmp eq i32 %771, 0
  %773 = icmp ne i32 %769, 0
  %774 = select i1 %772, i1 %773, i1 false
  br i1 %774, label %775, label %859

775:                                              ; preds = %713
  %776 = load i8, ptr %751, align 1, !tbaa !3
  %777 = zext i8 %776 to i64
  %778 = shl nuw nsw i64 %777, 8
  %779 = load i8, ptr %750, align 1, !tbaa !3
  %780 = zext i8 %779 to i64
  %781 = or i64 %778, %780
  %782 = load i8, ptr %752, align 1, !tbaa !3
  %783 = zext i8 %782 to i64
  %784 = shl nuw nsw i64 %783, 16
  %785 = or i64 %781, %784
  %786 = load i8, ptr %753, align 1, !tbaa !3
  %787 = zext i8 %786 to i64
  %788 = shl nuw nsw i64 %787, 24
  %789 = or i64 %785, %788
  %790 = call i64 @llvm.umax.i64(i64 %731, i64 %749)
  %791 = call i64 @llvm.umax.i64(i64 %790, i64 %789)
  %792 = icmp eq i64 %791, 4294967295
  br i1 %792, label %793, label %859

793:                                              ; preds = %775
  %794 = add nuw nsw i32 %761, 46
  %795 = add nuw nsw i32 %794, %769
  %796 = icmp ugt i32 %795, %675
  br i1 %796, label %797, label %812

797:                                              ; preds = %793
  %798 = zext i32 %769 to i64
  %799 = call noalias ptr @malloc(i64 noundef %798) #39
  %800 = icmp eq ptr %799, null
  br i1 %800, label %801, label %803

801:                                              ; preds = %797
  %802 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %802, align 4, !tbaa !189
  br label %974

803:                                              ; preds = %797
  %804 = load ptr, ptr %17, align 8, !tbaa !196
  %805 = load ptr, ptr %18, align 8, !tbaa !205
  %806 = zext i32 %761 to i64
  %807 = add i64 %671, %806
  %808 = call i64 %804(ptr noundef %805, i64 noundef %807, ptr noundef nonnull %799, i64 noundef %798) #38
  %809 = icmp eq i64 %808, %798
  br i1 %809, label %816, label %810

810:                                              ; preds = %803
  call void @free(ptr noundef nonnull %799) #38
  %811 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %811, align 4, !tbaa !189
  br label %974

812:                                              ; preds = %793
  %813 = getelementptr inbounds i8, ptr %674, i64 46
  %814 = zext i32 %761 to i64
  %815 = getelementptr inbounds i8, ptr %813, i64 %814
  br label %816

816:                                              ; preds = %803, %812
  %817 = phi ptr [ %815, %812 ], [ %799, %803 ]
  %818 = phi ptr [ null, %812 ], [ %799, %803 ]
  br label %819

819:                                              ; preds = %852, %816
  %820 = phi i32 [ %769, %816 ], [ %856, %852 ]
  %821 = phi ptr [ %817, %816 ], [ %853, %852 ]
  %822 = zext i32 %820 to i64
  %823 = icmp ult i32 %820, 4
  br i1 %823, label %824, label %826

824:                                              ; preds = %819
  call void @free(ptr noundef %818) #38
  %825 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %825, align 4, !tbaa !189
  br label %974

826:                                              ; preds = %819
  %827 = getelementptr inbounds i8, ptr %821, i64 2
  %828 = load i8, ptr %827, align 1, !tbaa !3
  %829 = zext i8 %828 to i64
  %830 = getelementptr inbounds i8, ptr %821, i64 3
  %831 = load i8, ptr %830, align 1, !tbaa !3
  %832 = zext i8 %831 to i64
  %833 = shl nuw nsw i64 %832, 8
  %834 = or i64 %833, %829
  %835 = add nuw nsw i64 %834, 4
  %836 = icmp ugt i64 %835, %822
  br i1 %836, label %837, label %839

837:                                              ; preds = %826
  call void @free(ptr noundef %818) #38
  %838 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %838, align 4, !tbaa !189
  br label %974

839:                                              ; preds = %826
  %840 = load i8, ptr %821, align 1, !tbaa !3
  %841 = zext i8 %840 to i32
  %842 = getelementptr inbounds i8, ptr %821, i64 1
  %843 = load i8, ptr %842, align 1, !tbaa !3
  %844 = zext i8 %843 to i32
  %845 = shl nuw nsw i32 %844, 8
  %846 = or i32 %845, %841
  %847 = icmp eq i32 %846, 1
  br i1 %847, label %848, label %852

848:                                              ; preds = %839
  %849 = load ptr, ptr %279, align 8, !tbaa !184
  %850 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %849, i64 0, i32 4
  store i32 1, ptr %850, align 4, !tbaa !202
  %851 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %849, i64 0, i32 5
  store i32 1, ptr %851, align 8, !tbaa !203
  br label %858

852:                                              ; preds = %839
  %853 = getelementptr inbounds i8, ptr %821, i64 %835
  %854 = add nuw nsw i64 %822, 4294967292
  %855 = sub nuw nsw i64 %854, %834
  %856 = trunc i64 %855 to i32
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %858, label %819, !llvm.loop !215

858:                                              ; preds = %852, %848
  call void @free(ptr noundef %818) #38
  br label %859

859:                                              ; preds = %858, %775, %713
  %860 = icmp ne i64 %731, 4294967295
  %861 = icmp ne i64 %749, 4294967295
  %862 = select i1 %860, i1 %861, i1 false
  br i1 %862, label %863, label %891

863:                                              ; preds = %859
  %864 = getelementptr inbounds i8, ptr %674, i64 10
  %865 = load i8, ptr %864, align 1, !tbaa !3
  %866 = zext i8 %865 to i32
  %867 = getelementptr inbounds i8, ptr %674, i64 11
  %868 = load i8, ptr %867, align 1, !tbaa !3
  %869 = zext i8 %868 to i32
  %870 = shl nuw nsw i32 %869, 8
  %871 = or i32 %870, %866
  %872 = getelementptr inbounds i8, ptr %674, i64 12
  %873 = load i8, ptr %872, align 1, !tbaa !3
  %874 = zext i8 %873 to i32
  %875 = shl nuw nsw i32 %874, 16
  %876 = or i32 %871, %875
  %877 = getelementptr inbounds i8, ptr %674, i64 13
  %878 = load i8, ptr %877, align 1, !tbaa !3
  %879 = zext i8 %878 to i32
  %880 = shl nuw i32 %879, 24
  %881 = or i32 %876, %880
  %882 = icmp ne i32 %881, 0
  %883 = icmp eq i64 %749, %731
  %884 = select i1 %882, i1 true, i1 %883
  br i1 %884, label %885, label %889

885:                                              ; preds = %863
  %886 = icmp eq i64 %749, 0
  %887 = icmp ne i64 %731, 0
  %888 = select i1 %886, i1 true, i1 %887
  br i1 %888, label %891, label %889

889:                                              ; preds = %885, %863
  %890 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %890, align 4, !tbaa !189
  br label %974

891:                                              ; preds = %885, %859
  %892 = getelementptr inbounds i8, ptr %674, i64 34
  %893 = load i8, ptr %892, align 1, !tbaa !3
  %894 = zext i8 %893 to i32
  %895 = getelementptr inbounds i8, ptr %674, i64 35
  %896 = load i8, ptr %895, align 1, !tbaa !3
  %897 = zext i8 %896 to i32
  %898 = shl nuw nsw i32 %897, 8
  %899 = or i32 %898, %894
  %900 = icmp eq i32 %899, 65535
  br i1 %900, label %905, label %901

901:                                              ; preds = %891
  %902 = icmp ne i32 %899, %550
  %903 = icmp ne i32 %899, 1
  %904 = and i1 %902, %903
  br i1 %904, label %905, label %907

905:                                              ; preds = %891, %901
  %906 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 10, ptr %906, align 4, !tbaa !189
  br label %974

907:                                              ; preds = %901
  br i1 %860, label %908, label %929

908:                                              ; preds = %907
  %909 = load i8, ptr %750, align 1, !tbaa !3
  %910 = zext i8 %909 to i64
  %911 = load i8, ptr %751, align 1, !tbaa !3
  %912 = zext i8 %911 to i64
  %913 = shl nuw nsw i64 %912, 8
  %914 = or i64 %913, %910
  %915 = load i8, ptr %752, align 1, !tbaa !3
  %916 = zext i8 %915 to i64
  %917 = shl nuw nsw i64 %916, 16
  %918 = or i64 %914, %917
  %919 = load i8, ptr %753, align 1, !tbaa !3
  %920 = zext i8 %919 to i64
  %921 = shl nuw nsw i64 %920, 24
  %922 = or i64 %918, %921
  %923 = add nuw nsw i64 %731, 30
  %924 = add nuw nsw i64 %923, %922
  %925 = load i64, ptr %0, align 8, !tbaa !204
  %926 = icmp ugt i64 %924, %925
  br i1 %926, label %927, label %929

927:                                              ; preds = %908
  %928 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %928, align 4, !tbaa !189
  br label %974

929:                                              ; preds = %908, %907
  %930 = getelementptr inbounds i8, ptr %674, i64 9
  %931 = load i8, ptr %930, align 1, !tbaa !3
  %932 = and i8 %931, 32
  %933 = icmp eq i8 %932, 0
  br i1 %933, label %936, label %934

934:                                              ; preds = %929
  %935 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 5, ptr %935, align 4, !tbaa !189
  br label %974

936:                                              ; preds = %929
  %937 = load i8, ptr %754, align 1, !tbaa !3
  %938 = zext i8 %937 to i32
  %939 = load i8, ptr %757, align 1, !tbaa !3
  %940 = zext i8 %939 to i32
  %941 = shl nuw nsw i32 %940, 8
  %942 = or i32 %941, %938
  %943 = add nuw nsw i32 %942, 46
  %944 = load i8, ptr %762, align 1, !tbaa !3
  %945 = zext i8 %944 to i32
  %946 = load i8, ptr %765, align 1, !tbaa !3
  %947 = zext i8 %946 to i32
  %948 = shl nuw nsw i32 %947, 8
  %949 = or i32 %948, %945
  %950 = add nuw nsw i32 %943, %949
  %951 = getelementptr inbounds i8, ptr %674, i64 32
  %952 = load i8, ptr %951, align 1, !tbaa !3
  %953 = zext i8 %952 to i32
  %954 = getelementptr inbounds i8, ptr %674, i64 33
  %955 = load i8, ptr %954, align 1, !tbaa !3
  %956 = zext i8 %955 to i32
  %957 = shl nuw nsw i32 %956, 8
  %958 = or i32 %957, %953
  %959 = add nuw nsw i32 %950, %958
  %960 = icmp ult i32 %675, %959
  br i1 %960, label %961, label %963

961:                                              ; preds = %936
  %962 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %962, align 4, !tbaa !189
  br label %974

963:                                              ; preds = %936
  %964 = sub i32 %675, %959
  %965 = zext i32 %959 to i64
  %966 = getelementptr inbounds i8, ptr %674, i64 %965
  %967 = add nuw nsw i64 %673, 1
  %968 = load i32, ptr %218, align 8, !tbaa !207
  %969 = zext i32 %968 to i64
  %970 = icmp ult i64 %967, %969
  br i1 %970, label %672, label %971, !llvm.loop !216

971:                                              ; preds = %963, %665
  br i1 %8, label %973, label %974

972:                                              ; preds = %578
  br i1 %8, label %973, label %974

973:                                              ; preds = %971, %972
  call fastcc void @mz_zip_reader_sort_central_dir_offsets_by_filename(ptr noundef nonnull %0)
  br label %974

974:                                              ; preds = %837, %824, %810, %801, %961, %934, %905, %889, %927, %696, %625, %654, %663, %435, %457, %461, %465, %469, %78, %76, %971, %972, %973, %576, %570, %563, %554, %179, %108, %87, %11
  %975 = phi i32 [ 0, %11 ], [ 0, %87 ], [ 0, %108 ], [ 0, %179 ], [ 0, %554 ], [ 0, %563 ], [ 0, %570 ], [ 0, %576 ], [ 1, %971 ], [ 1, %973 ], [ 1, %972 ], [ 0, %76 ], [ 0, %78 ], [ 0, %469 ], [ 0, %465 ], [ 0, %461 ], [ 0, %457 ], [ 0, %435 ], [ 0, %663 ], [ 0, %654 ], [ 0, %625 ], [ 0, %696 ], [ 0, %927 ], [ 0, %889 ], [ 0, %905 ], [ 0, %934 ], [ 0, %961 ], [ 0, %801 ], [ 0, %810 ], [ 0, %824 ], [ 0, %837 ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %6) #38
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %5) #38
  call void @llvm.lifetime.end.p0(i64 4096, ptr nonnull %4) #38
  ret i32 %975
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_init_mem(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = icmp eq ptr %1, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = icmp eq ptr %0, null
  br i1 %7, label %68, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %9, align 4, !tbaa !189
  br label %68

10:                                               ; preds = %4
  %11 = icmp ult i64 %2, 22
  %12 = icmp eq ptr %0, null
  br i1 %11, label %13, label %16

13:                                               ; preds = %10
  br i1 %12, label %68, label %14

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 8, ptr %15, align 4, !tbaa !189
  br label %68

16:                                               ; preds = %10
  br i1 %12, label %68, label %17

17:                                               ; preds = %16
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %19 = load ptr, ptr %18, align 8, !tbaa !184
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %23 = load i32, ptr %22, align 4, !tbaa !188
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21, %17
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %26, align 4, !tbaa !189
  br label %68

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %29 = load ptr, ptr %28, align 8, !tbaa !186
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  store ptr @miniz_def_alloc_func, ptr %28, align 8, !tbaa !186
  br label %32

32:                                               ; preds = %31, %27
  %33 = phi ptr [ @miniz_def_alloc_func, %31 ], [ %29, %27 ]
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %35 = load ptr, ptr %34, align 8, !tbaa !187
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store ptr @miniz_def_free_func, ptr %34, align 8, !tbaa !187
  br label %38

38:                                               ; preds = %37, %32
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %40 = load ptr, ptr %39, align 8, !tbaa !197
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  store ptr @miniz_def_realloc_func, ptr %39, align 8, !tbaa !197
  br label %43

43:                                               ; preds = %42, %38
  %44 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 0, ptr %44, align 4, !tbaa !189
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %0, i8 0, i64 20, i1 false)
  %46 = load ptr, ptr %45, align 8, !tbaa !190
  %47 = tail call ptr %33(ptr noundef %46, i64 noundef 1, i64 noundef 152) #38
  store ptr %47, ptr %18, align 8, !tbaa !184
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  store i32 16, ptr %44, align 4, !tbaa !189
  br label %68

50:                                               ; preds = %43
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %47, i8 0, i64 152, i1 false)
  %51 = load ptr, ptr %18, align 8, !tbaa !184
  %52 = getelementptr inbounds %struct.mz_zip_array, ptr %51, i64 0, i32 3
  store i32 1, ptr %52, align 8, !tbaa !198
  %53 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 1, i32 3
  store i32 4, ptr %53, align 8, !tbaa !199
  %54 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 2, i32 3
  store i32 4, ptr %54, align 8, !tbaa !200
  %55 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 3
  store i32 %3, ptr %55, align 8, !tbaa !201
  %56 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 4
  store i32 0, ptr %56, align 4, !tbaa !202
  %57 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 5
  store i32 0, ptr %57, align 8, !tbaa !203
  store i32 1, ptr %22, align 4, !tbaa !188
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 2, ptr %58, align 8, !tbaa !195
  store i64 %2, ptr %0, align 8, !tbaa !204
  %59 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  store ptr @mz_zip_mem_read_func, ptr %59, align 8, !tbaa !196
  %60 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  store ptr %0, ptr %60, align 8, !tbaa !205
  %61 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 13
  store ptr null, ptr %61, align 8, !tbaa !217
  %62 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 8
  store ptr %1, ptr %62, align 8, !tbaa !218
  %63 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 9
  store i64 %2, ptr %63, align 8, !tbaa !219
  %64 = tail call fastcc i32 @mz_zip_reader_read_central_dir(ptr noundef nonnull %0, i32 noundef %3)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %50
  %67 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %0, i32 noundef 0)
  br label %68

68:                                               ; preds = %25, %16, %49, %14, %13, %8, %6, %50, %66
  %69 = phi i32 [ 0, %66 ], [ 1, %50 ], [ 0, %6 ], [ 0, %8 ], [ 0, %13 ], [ 0, %14 ], [ 0, %49 ], [ 0, %16 ], [ 0, %25 ]
  ret i32 %69
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal i64 @mz_zip_mem_read_func(ptr nocapture noundef readonly %0, i64 noundef %1, ptr nocapture noundef writeonly %2, i64 noundef %3) #11 {
  %5 = load i64, ptr %0, align 8, !tbaa !204
  %6 = icmp ugt i64 %5, %1
  %7 = sub i64 %5, %1
  %8 = tail call i64 @llvm.umin.i64(i64 %7, i64 %3)
  %9 = select i1 %6, i64 %8, i64 0
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %11 = load ptr, ptr %10, align 8, !tbaa !184
  %12 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %11, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !218
  %14 = getelementptr inbounds i8, ptr %13, i64 %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %2, ptr align 1 %14, i64 %9, i1 false)
  ret i64 %9
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_init_file(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = tail call i32 @mz_zip_reader_init_file_v2(ptr noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef 0, i64 noundef 0)
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_init_file_v2(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i64 noundef %3, i64 noundef %4) local_unnamed_addr #8 {
  %6 = icmp ne ptr %0, null
  %7 = icmp ne ptr %1, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = icmp eq i64 %4, 0
  %11 = add i64 %4, -1
  %12 = icmp ult i64 %11, 21
  br i1 %12, label %15, label %17

13:                                               ; preds = %5
  %14 = icmp eq ptr %0, null
  br i1 %14, label %88, label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %16, align 4, !tbaa !189
  br label %88

17:                                               ; preds = %9
  %18 = tail call noalias ptr @fopen(ptr noundef nonnull %1, ptr noundef nonnull @.str.18)
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 17, ptr %21, align 4, !tbaa !189
  br label %88

22:                                               ; preds = %17
  br i1 %10, label %23, label %35

23:                                               ; preds = %22
  %24 = tail call i32 @fseeko(ptr noundef nonnull %18, i64 noundef 0, i32 noundef 2)
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = tail call i32 @fclose(ptr noundef nonnull %18)
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 22, ptr %28, align 4, !tbaa !189
  br label %88

29:                                               ; preds = %23
  %30 = tail call i64 @ftello(ptr noundef nonnull %18)
  %31 = icmp ult i64 %30, 22
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = tail call i32 @fclose(ptr noundef nonnull %18)
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 8, ptr %34, align 4, !tbaa !189
  br label %88

35:                                               ; preds = %22, %29
  %36 = phi i64 [ %30, %29 ], [ %4, %22 ]
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %38 = load ptr, ptr %37, align 8, !tbaa !184
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %42 = load i32, ptr %41, align 4, !tbaa !188
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %40, %35
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %45, align 4, !tbaa !189
  br label %69

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %48 = load ptr, ptr %47, align 8, !tbaa !186
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  store ptr @miniz_def_alloc_func, ptr %47, align 8, !tbaa !186
  br label %51

51:                                               ; preds = %50, %46
  %52 = phi ptr [ @miniz_def_alloc_func, %50 ], [ %48, %46 ]
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %54 = load ptr, ptr %53, align 8, !tbaa !187
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  store ptr @miniz_def_free_func, ptr %53, align 8, !tbaa !187
  br label %57

57:                                               ; preds = %56, %51
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %59 = load ptr, ptr %58, align 8, !tbaa !197
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  store ptr @miniz_def_realloc_func, ptr %58, align 8, !tbaa !197
  br label %62

62:                                               ; preds = %61, %57
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 0, ptr %63, align 4, !tbaa !189
  %64 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %0, i8 0, i64 20, i1 false)
  %65 = load ptr, ptr %64, align 8, !tbaa !190
  %66 = tail call ptr %52(ptr noundef %65, i64 noundef 1, i64 noundef 152) #38
  store ptr %66, ptr %37, align 8, !tbaa !184
  %67 = icmp eq ptr %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  store i32 16, ptr %63, align 4, !tbaa !189
  br label %69

69:                                               ; preds = %68, %44
  %70 = tail call i32 @fclose(ptr noundef nonnull %18)
  br label %88

71:                                               ; preds = %62
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %66, i8 0, i64 152, i1 false)
  %72 = load ptr, ptr %37, align 8, !tbaa !184
  %73 = getelementptr inbounds %struct.mz_zip_array, ptr %72, i64 0, i32 3
  store i32 1, ptr %73, align 8, !tbaa !198
  %74 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 1, i32 3
  store i32 4, ptr %74, align 8, !tbaa !199
  %75 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 2, i32 3
  store i32 4, ptr %75, align 8, !tbaa !200
  %76 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 3
  store i32 %2, ptr %76, align 8, !tbaa !201
  %77 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 4
  store i32 0, ptr %77, align 4, !tbaa !202
  %78 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 5
  store i32 0, ptr %78, align 8, !tbaa !203
  store i32 1, ptr %41, align 4, !tbaa !188
  %79 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 4, ptr %79, align 8, !tbaa !195
  %80 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %80, align 8, !tbaa !196
  %81 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  store ptr %0, ptr %81, align 8, !tbaa !205
  %82 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 6
  store ptr %18, ptr %82, align 8, !tbaa !193
  store i64 %36, ptr %0, align 8, !tbaa !204
  %83 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 7
  store i64 %3, ptr %83, align 8, !tbaa !220
  %84 = tail call fastcc i32 @mz_zip_reader_read_central_dir(ptr noundef nonnull %0, i32 noundef %2)
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %71
  %87 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %0, i32 noundef 0)
  br label %88

88:                                               ; preds = %15, %13, %71, %86, %69, %32, %26, %20
  %89 = phi i32 [ 0, %32 ], [ 0, %86 ], [ 0, %69 ], [ 0, %26 ], [ 0, %20 ], [ 1, %71 ], [ 0, %13 ], [ 0, %15 ]
  ret i32 %89
}

; Function Attrs: nofree nounwind
declare dso_local noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #19

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fseeko(ptr nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: nofree nounwind
declare dso_local noundef i64 @ftello(ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: nofree nounwind uwtable
define internal i64 @mz_zip_file_read_func(ptr nocapture noundef readonly %0, i64 noundef %1, ptr nocapture noundef %2, i64 noundef %3) #20 {
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !193
  %9 = tail call i64 @ftello(ptr noundef %8)
  %10 = load ptr, ptr %5, align 8, !tbaa !184
  %11 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %10, i64 0, i32 7
  %12 = load i64, ptr %11, align 8, !tbaa !220
  %13 = add i64 %12, %1
  %14 = icmp slt i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %4
  %16 = icmp eq i64 %9, %13
  br i1 %16, label %24, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %10, i64 0, i32 6
  %19 = load ptr, ptr %18, align 8, !tbaa !193
  %20 = tail call i32 @fseeko(ptr noundef %19, i64 noundef %13, i32 noundef 0)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = load ptr, ptr %5, align 8, !tbaa !184
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi ptr [ %23, %22 ], [ %10, %15 ]
  %26 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %25, i64 0, i32 6
  %27 = load ptr, ptr %26, align 8, !tbaa !193
  %28 = tail call i64 @fread(ptr noundef %2, i64 noundef 1, i64 noundef %3, ptr noundef %27)
  br label %29

29:                                               ; preds = %4, %17, %24
  %30 = phi i64 [ %28, %24 ], [ 0, %17 ], [ 0, %4 ]
  ret i64 %30
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_init_file_v2_rpb(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2, i64 noundef %3, i64 noundef %4) local_unnamed_addr #8 {
  %6 = icmp ne ptr %0, null
  %7 = icmp ne ptr %1, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = icmp eq i64 %4, 0
  %11 = add i64 %4, -1
  %12 = icmp ult i64 %11, 21
  br i1 %12, label %15, label %17

13:                                               ; preds = %5
  %14 = icmp eq ptr %0, null
  br i1 %14, label %88, label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %16, align 4, !tbaa !189
  br label %88

17:                                               ; preds = %9
  %18 = tail call noalias ptr @fopen(ptr noundef nonnull %1, ptr noundef nonnull @.str.19)
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 17, ptr %21, align 4, !tbaa !189
  br label %88

22:                                               ; preds = %17
  br i1 %10, label %23, label %35

23:                                               ; preds = %22
  %24 = tail call i32 @fseeko(ptr noundef nonnull %18, i64 noundef 0, i32 noundef 2)
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = tail call i32 @fclose(ptr noundef nonnull %18)
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 22, ptr %28, align 4, !tbaa !189
  br label %88

29:                                               ; preds = %23
  %30 = tail call i64 @ftello(ptr noundef nonnull %18)
  %31 = icmp ult i64 %30, 22
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = tail call i32 @fclose(ptr noundef nonnull %18)
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 8, ptr %34, align 4, !tbaa !189
  br label %88

35:                                               ; preds = %22, %29
  %36 = phi i64 [ %30, %29 ], [ %4, %22 ]
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %38 = load ptr, ptr %37, align 8, !tbaa !184
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %42 = load i32, ptr %41, align 4, !tbaa !188
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %40, %35
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %45, align 4, !tbaa !189
  br label %69

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %48 = load ptr, ptr %47, align 8, !tbaa !186
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  store ptr @miniz_def_alloc_func, ptr %47, align 8, !tbaa !186
  br label %51

51:                                               ; preds = %50, %46
  %52 = phi ptr [ @miniz_def_alloc_func, %50 ], [ %48, %46 ]
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %54 = load ptr, ptr %53, align 8, !tbaa !187
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  store ptr @miniz_def_free_func, ptr %53, align 8, !tbaa !187
  br label %57

57:                                               ; preds = %56, %51
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %59 = load ptr, ptr %58, align 8, !tbaa !197
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  store ptr @miniz_def_realloc_func, ptr %58, align 8, !tbaa !197
  br label %62

62:                                               ; preds = %61, %57
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 0, ptr %63, align 4, !tbaa !189
  %64 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %0, i8 0, i64 20, i1 false)
  %65 = load ptr, ptr %64, align 8, !tbaa !190
  %66 = tail call ptr %52(ptr noundef %65, i64 noundef 1, i64 noundef 152) #38
  store ptr %66, ptr %37, align 8, !tbaa !184
  %67 = icmp eq ptr %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  store i32 16, ptr %63, align 4, !tbaa !189
  br label %69

69:                                               ; preds = %68, %44
  %70 = tail call i32 @fclose(ptr noundef nonnull %18)
  br label %88

71:                                               ; preds = %62
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %66, i8 0, i64 152, i1 false)
  %72 = load ptr, ptr %37, align 8, !tbaa !184
  %73 = getelementptr inbounds %struct.mz_zip_array, ptr %72, i64 0, i32 3
  store i32 1, ptr %73, align 8, !tbaa !198
  %74 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 1, i32 3
  store i32 4, ptr %74, align 8, !tbaa !199
  %75 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 2, i32 3
  store i32 4, ptr %75, align 8, !tbaa !200
  %76 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 3
  store i32 %2, ptr %76, align 8, !tbaa !201
  %77 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 4
  store i32 0, ptr %77, align 4, !tbaa !202
  %78 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 5
  store i32 0, ptr %78, align 8, !tbaa !203
  store i32 1, ptr %41, align 4, !tbaa !188
  %79 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 4, ptr %79, align 8, !tbaa !195
  %80 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %80, align 8, !tbaa !196
  %81 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  store ptr %0, ptr %81, align 8, !tbaa !205
  %82 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 6
  store ptr %18, ptr %82, align 8, !tbaa !193
  store i64 %36, ptr %0, align 8, !tbaa !204
  %83 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %72, i64 0, i32 7
  store i64 %3, ptr %83, align 8, !tbaa !220
  %84 = tail call fastcc i32 @mz_zip_reader_read_central_dir(ptr noundef nonnull %0, i32 noundef %2)
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %71
  %87 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %0, i32 noundef 0)
  br label %88

88:                                               ; preds = %15, %13, %71, %86, %69, %32, %26, %20
  %89 = phi i32 [ 0, %32 ], [ 0, %86 ], [ 0, %69 ], [ 0, %26 ], [ 0, %20 ], [ 1, %71 ], [ 0, %13 ], [ 0, %15 ]
  ret i32 %89
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_init_cfile(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = icmp ne ptr %0, null
  %6 = icmp ne ptr %1, null
  %7 = and i1 %5, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = icmp eq ptr %0, null
  br i1 %9, label %77, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 17, ptr %11, align 4, !tbaa !189
  br label %77

12:                                               ; preds = %4
  %13 = tail call i64 @ftello(ptr noundef nonnull %1)
  %14 = icmp eq i64 %2, 0
  br i1 %14, label %15, label %26

15:                                               ; preds = %12
  %16 = tail call i32 @fseeko(ptr noundef nonnull %1, i64 noundef 0, i32 noundef 2)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 22, ptr %19, align 4, !tbaa !189
  br label %77

20:                                               ; preds = %15
  %21 = tail call i64 @ftello(ptr noundef nonnull %1)
  %22 = sub i64 %21, %13
  %23 = icmp ult i64 %22, 22
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 8, ptr %25, align 4, !tbaa !189
  br label %77

26:                                               ; preds = %12, %20
  %27 = phi i64 [ %2, %12 ], [ %22, %20 ]
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %29 = load ptr, ptr %28, align 8, !tbaa !184
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %33 = load i32, ptr %32, align 4, !tbaa !188
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %31, %26
  %36 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %36, align 4, !tbaa !189
  br label %77

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %39 = load ptr, ptr %38, align 8, !tbaa !186
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  store ptr @miniz_def_alloc_func, ptr %38, align 8, !tbaa !186
  br label %42

42:                                               ; preds = %41, %37
  %43 = phi ptr [ @miniz_def_alloc_func, %41 ], [ %39, %37 ]
  %44 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %45 = load ptr, ptr %44, align 8, !tbaa !187
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  store ptr @miniz_def_free_func, ptr %44, align 8, !tbaa !187
  br label %48

48:                                               ; preds = %47, %42
  %49 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %50 = load ptr, ptr %49, align 8, !tbaa !197
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  store ptr @miniz_def_realloc_func, ptr %49, align 8, !tbaa !197
  br label %53

53:                                               ; preds = %52, %48
  %54 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 0, ptr %54, align 4, !tbaa !189
  %55 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %0, i8 0, i64 20, i1 false)
  %56 = load ptr, ptr %55, align 8, !tbaa !190
  %57 = tail call ptr %43(ptr noundef %56, i64 noundef 1, i64 noundef 152) #38
  store ptr %57, ptr %28, align 8, !tbaa !184
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %53
  store i32 16, ptr %54, align 4, !tbaa !189
  br label %77

60:                                               ; preds = %53
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %57, i8 0, i64 152, i1 false)
  %61 = load ptr, ptr %28, align 8, !tbaa !184
  %62 = getelementptr inbounds %struct.mz_zip_array, ptr %61, i64 0, i32 3
  store i32 1, ptr %62, align 8, !tbaa !198
  %63 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %61, i64 0, i32 1, i32 3
  store i32 4, ptr %63, align 8, !tbaa !199
  %64 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %61, i64 0, i32 2, i32 3
  store i32 4, ptr %64, align 8, !tbaa !200
  %65 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %61, i64 0, i32 3
  store i32 %3, ptr %65, align 8, !tbaa !201
  %66 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %61, i64 0, i32 4
  store i32 0, ptr %66, align 4, !tbaa !202
  %67 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %61, i64 0, i32 5
  store i32 0, ptr %67, align 8, !tbaa !203
  store i32 1, ptr %32, align 4, !tbaa !188
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 5, ptr %68, align 8, !tbaa !195
  %69 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %69, align 8, !tbaa !196
  %70 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  store ptr %0, ptr %70, align 8, !tbaa !205
  %71 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %61, i64 0, i32 6
  store ptr %1, ptr %71, align 8, !tbaa !193
  store i64 %27, ptr %0, align 8, !tbaa !204
  %72 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %61, i64 0, i32 7
  store i64 %13, ptr %72, align 8, !tbaa !220
  %73 = tail call fastcc i32 @mz_zip_reader_read_central_dir(ptr noundef nonnull %0, i32 noundef %3)
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %60
  %76 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %0, i32 noundef 0)
  br label %77

77:                                               ; preds = %35, %59, %10, %8, %60, %75, %24, %18
  %78 = phi i32 [ 0, %75 ], [ 0, %18 ], [ 0, %24 ], [ 1, %60 ], [ 0, %8 ], [ 0, %10 ], [ 0, %59 ], [ 0, %35 ]
  ret i32 %78
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @mz_zip_reader_is_file_encrypted(ptr noundef %0, i32 noundef %1) local_unnamed_addr #21 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = icmp eq ptr %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %10 = load i32, ptr %9, align 8, !tbaa !207
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = load ptr, ptr %6, align 8, !tbaa !212
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %4, %8, %12
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %16, align 4, !tbaa !189
  br label %30

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !213
  %20 = zext i32 %1 to i64
  %21 = getelementptr inbounds i32, ptr %19, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !12
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, ptr %13, i64 %23
  %25 = getelementptr inbounds i8, ptr %24, i64 8
  %26 = load i8, ptr %25, align 1, !tbaa !3
  %27 = and i8 %26, 65
  %28 = icmp ne i8 %27, 0
  %29 = zext i1 %28 to i32
  br label %30

30:                                               ; preds = %15, %2, %17
  %31 = phi i32 [ %29, %17 ], [ 0, %2 ], [ 0, %15 ]
  ret i32 %31
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @mz_zip_reader_is_file_supported(ptr noundef %0, i32 noundef %1) local_unnamed_addr #21 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %45, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = icmp eq ptr %6, null
  br i1 %7, label %42, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %10 = load i32, ptr %9, align 8, !tbaa !207
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %42

12:                                               ; preds = %8
  %13 = load ptr, ptr %6, align 8, !tbaa !212
  %14 = icmp eq ptr %13, null
  br i1 %14, label %42, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !213
  %18 = zext i32 %1 to i64
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !12
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, ptr %13, i64 %21
  %23 = getelementptr inbounds i8, ptr %22, i64 10
  %24 = load i8, ptr %23, align 1, !tbaa !3
  %25 = getelementptr inbounds i8, ptr %22, i64 11
  %26 = load i8, ptr %25, align 1, !tbaa !3
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 8
  %29 = getelementptr inbounds i8, ptr %22, i64 8
  %30 = load i8, ptr %29, align 1, !tbaa !3
  %31 = zext i8 %30 to i32
  %32 = and i8 %24, -9
  %33 = zext i8 %32 to i32
  %34 = or i32 %28, %33
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %15
  %37 = and i32 %31, 65
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = and i32 %31, 32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39, %36, %15, %12, %8, %4
  %43 = phi i32 [ 24, %4 ], [ 24, %8 ], [ 24, %12 ], [ 4, %15 ], [ 5, %36 ], [ 6, %39 ]
  %44 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 %43, ptr %44, align 4, !tbaa !189
  br label %45

45:                                               ; preds = %42, %2, %39
  %46 = phi i32 [ 1, %39 ], [ 0, %2 ], [ 0, %42 ]
  ret i32 %46
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @mz_zip_reader_is_file_a_directory(ptr noundef %0, i32 noundef %1) local_unnamed_addr #21 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %47, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = icmp eq ptr %6, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %10 = load i32, ptr %9, align 8, !tbaa !207
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8
  %13 = load ptr, ptr %6, align 8, !tbaa !212
  %14 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !213
  %16 = zext i32 %1 to i64
  %17 = getelementptr inbounds i32, ptr %15, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !12
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, ptr %13, i64 %19
  %21 = icmp eq ptr %13, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %4, %8, %12
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %23, align 4, !tbaa !189
  br label %47

24:                                               ; preds = %12
  %25 = getelementptr inbounds i8, ptr %20, i64 28
  %26 = load i8, ptr %25, align 1, !tbaa !3
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds i8, ptr %20, i64 29
  %29 = load i8, ptr %28, align 1, !tbaa !3
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = or i32 %31, %27
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds i8, ptr %20, i64 46
  %36 = zext i32 %32 to i64
  %37 = getelementptr inbounds i8, ptr %35, i64 %36
  %38 = getelementptr inbounds i8, ptr %37, i64 -1
  %39 = load i8, ptr %38, align 1, !tbaa !3
  %40 = icmp eq i8 %39, 47
  br i1 %40, label %47, label %41

41:                                               ; preds = %34, %24
  %42 = getelementptr inbounds i8, ptr %20, i64 38
  %43 = load i8, ptr %42, align 1, !tbaa !3
  %44 = lshr i8 %43, 4
  %45 = and i8 %44, 1
  %46 = zext i8 %45 to i32
  br label %47

47:                                               ; preds = %22, %2, %41, %34
  %48 = phi i32 [ 1, %34 ], [ %46, %41 ], [ 0, %2 ], [ 0, %22 ]
  ret i32 %48
}

; Function Attrs: nofree nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @mz_zip_reader_locate_file(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #22 {
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #38
  %6 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef nonnull %5)
  %7 = icmp eq i32 %6, 0
  %8 = load i32, ptr %5, align 4
  %9 = select i1 %7, i32 -1, i32 %8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #38
  ret i32 %9
}

; Function Attrs: nofree nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2, i32 noundef %3, ptr noundef writeonly %4) local_unnamed_addr #22 {
  %6 = icmp eq ptr %4, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  store i32 0, ptr %4, align 4, !tbaa !12
  br label %8

8:                                                ; preds = %7, %5
  %9 = icmp eq ptr %0, null
  br i1 %9, label %287, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %12 = load ptr, ptr %11, align 8, !tbaa !184
  %13 = icmp ne ptr %12, null
  %14 = icmp ne ptr %1, null
  %15 = and i1 %14, %13
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %17, align 4, !tbaa !189
  br label %287

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %12, i64 0, i32 3
  %20 = load i32, ptr %19, align 8, !tbaa !201
  %21 = and i32 %20, 2048
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %125

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %25 = load i32, ptr %24, align 4, !tbaa !188
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %125

27:                                               ; preds = %23
  %28 = and i32 %3, 768
  %29 = icmp ne i32 %28, 0
  %30 = icmp ne ptr %2, null
  %31 = or i1 %30, %29
  br i1 %31, label %125, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %12, i64 0, i32 2, i32 1
  %34 = load i64, ptr %33, align 8, !tbaa !221
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %128, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %12, i64 0, i32 1
  %38 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %12, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !214
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %41 = load i32, ptr %40, align 8, !tbaa !207
  %42 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #42
  %43 = trunc i64 %42 to i32
  br i1 %6, label %45, label %44

44:                                               ; preds = %36
  store i32 0, ptr %4, align 4, !tbaa !12
  br label %45

45:                                               ; preds = %44, %36
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %123, label %47

47:                                               ; preds = %45
  %48 = zext i32 %41 to i64
  %49 = add nsw i64 %48, -1
  %50 = load ptr, ptr %12, align 8, !tbaa !191
  %51 = load ptr, ptr %37, align 8, !tbaa !191
  br label %52

52:                                               ; preds = %116, %47
  %53 = phi i64 [ 0, %47 ], [ %121, %116 ]
  %54 = phi i64 [ %49, %47 ], [ %120, %116 ]
  %55 = sub nsw i64 %54, %53
  %56 = ashr i64 %55, 1
  %57 = add nsw i64 %56, %53
  %58 = and i64 %57, 4294967295
  %59 = getelementptr inbounds i32, ptr %39, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !12
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i32, ptr %51, i64 %61
  %63 = load i32, ptr %62, align 4, !tbaa !12
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i8, ptr %50, i64 %64
  %66 = getelementptr inbounds i8, ptr %65, i64 28
  %67 = load i8, ptr %66, align 1, !tbaa !3
  %68 = zext i8 %67 to i32
  %69 = getelementptr inbounds i8, ptr %66, i64 1
  %70 = load i8, ptr %69, align 1, !tbaa !3
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = or i32 %72, %68
  %74 = getelementptr inbounds i8, ptr %65, i64 46
  %75 = tail call i32 @llvm.umin.i32(i32 %73, i32 %43)
  %76 = add nuw nsw i32 %75, 46
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i8, ptr %65, i64 %77
  %79 = icmp eq i32 %75, 0
  br i1 %79, label %107, label %80

80:                                               ; preds = %52, %98
  %81 = phi ptr [ %100, %98 ], [ %1, %52 ]
  %82 = phi ptr [ %99, %98 ], [ %74, %52 ]
  %83 = load i8, ptr %82, align 1, !tbaa !3
  %84 = zext i8 %83 to i32
  %85 = add i8 %83, -65
  %86 = icmp ult i8 %85, 26
  %87 = add nuw nsw i32 %84, 32
  %88 = select i1 %86, i32 %87, i32 %84
  %89 = load i8, ptr %81, align 1, !tbaa !3
  %90 = zext i8 %89 to i32
  %91 = add i8 %89, -65
  %92 = icmp ult i8 %91, 26
  %93 = add nuw nsw i32 %90, 32
  %94 = select i1 %92, i32 %93, i32 %90
  %95 = xor i32 %94, %88
  %96 = and i32 %95, 255
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %80
  %99 = getelementptr inbounds i8, ptr %82, i64 1
  %100 = getelementptr inbounds i8, ptr %81, i64 1
  %101 = icmp ult ptr %99, %78
  br i1 %101, label %80, label %102, !llvm.loop !222

102:                                              ; preds = %98, %80
  %103 = phi ptr [ %99, %98 ], [ %82, %80 ]
  %104 = and i32 %88, 255
  %105 = and i32 %94, 255
  %106 = sub nsw i32 %104, %105
  br label %107

107:                                              ; preds = %102, %52
  %108 = phi ptr [ %74, %52 ], [ %103, %102 ]
  %109 = phi i32 [ 0, %52 ], [ %106, %102 ]
  %110 = icmp eq ptr %108, %78
  %111 = sub i32 %73, %43
  %112 = select i1 %110, i32 %111, i32 %109
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %107
  br i1 %6, label %287, label %115

115:                                              ; preds = %114
  store i32 %60, ptr %4, align 4, !tbaa !12
  br label %287

116:                                              ; preds = %107
  %117 = icmp slt i32 %112, 0
  %118 = add nsw i64 %57, 1
  %119 = add nsw i64 %57, -1
  %120 = select i1 %117, i64 %54, i64 %119
  %121 = select i1 %117, i64 %118, i64 %53
  %122 = icmp slt i64 %120, %121
  br i1 %122, label %123, label %52, !llvm.loop !223

123:                                              ; preds = %116, %45
  %124 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 28, ptr %124, align 4, !tbaa !189
  br label %287

125:                                              ; preds = %27, %23, %18
  %126 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #42
  %127 = icmp ugt i64 %126, 65535
  br i1 %127, label %131, label %133

128:                                              ; preds = %32
  %129 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #42
  %130 = icmp ugt i64 %129, 65535
  br i1 %130, label %131, label %138

131:                                              ; preds = %128, %125
  %132 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %132, align 4, !tbaa !189
  br label %287

133:                                              ; preds = %125
  %134 = icmp eq ptr %2, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %133
  %136 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #42
  %137 = icmp ugt i64 %136, 65535
  br i1 %137, label %154, label %138

138:                                              ; preds = %128, %133, %135
  %139 = phi i64 [ %136, %135 ], [ 0, %133 ], [ 0, %128 ]
  %140 = phi i64 [ %126, %135 ], [ %126, %133 ], [ %129, %128 ]
  %141 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %142 = load i32, ptr %141, align 8, !tbaa !207
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %285, label %144

144:                                              ; preds = %138
  %145 = load ptr, ptr %12, align 8, !tbaa !212
  %146 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %12, i64 0, i32 1
  %147 = load ptr, ptr %146, align 8, !tbaa !213
  %148 = icmp eq i64 %139, 0
  %149 = and i32 %3, 256
  %150 = icmp eq i32 %149, 0
  %151 = and i32 %3, 512
  %152 = icmp ne i32 %151, 0
  %153 = zext i32 %142 to i64
  br label %156

154:                                              ; preds = %135
  %155 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %155, align 4, !tbaa !189
  br label %287

156:                                              ; preds = %144, %282
  %157 = phi i64 [ 0, %144 ], [ %283, %282 ]
  %158 = getelementptr inbounds i32, ptr %147, i64 %157
  %159 = load i32, ptr %158, align 4, !tbaa !12
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds i8, ptr %145, i64 %160
  %162 = getelementptr inbounds i8, ptr %161, i64 28
  %163 = load i8, ptr %162, align 1, !tbaa !3
  %164 = zext i8 %163 to i32
  %165 = getelementptr inbounds i8, ptr %162, i64 1
  %166 = load i8, ptr %165, align 1, !tbaa !3
  %167 = zext i8 %166 to i32
  %168 = shl nuw nsw i32 %167, 8
  %169 = or i32 %168, %164
  %170 = getelementptr inbounds i8, ptr %161, i64 46
  %171 = zext i32 %169 to i64
  %172 = icmp ugt i64 %140, %171
  br i1 %172, label %282, label %173

173:                                              ; preds = %156
  br i1 %148, label %221, label %174

174:                                              ; preds = %173
  %175 = getelementptr inbounds i8, ptr %161, i64 32
  %176 = load i8, ptr %175, align 1, !tbaa !3
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds i8, ptr %175, i64 1
  %179 = load i8, ptr %178, align 1, !tbaa !3
  %180 = zext i8 %179 to i32
  %181 = shl nuw nsw i32 %180, 8
  %182 = or i32 %181, %177
  %183 = zext i32 %182 to i64
  %184 = icmp eq i64 %139, %183
  br i1 %184, label %185, label %282

185:                                              ; preds = %174
  %186 = getelementptr inbounds i8, ptr %170, i64 %171
  %187 = getelementptr inbounds i8, ptr %161, i64 30
  %188 = getelementptr inbounds i8, ptr %187, i64 1
  %189 = load i8, ptr %188, align 1, !tbaa !3
  %190 = zext i8 %189 to i64
  %191 = shl nuw nsw i64 %190, 8
  %192 = load i8, ptr %187, align 1, !tbaa !3
  %193 = zext i8 %192 to i64
  %194 = or i64 %191, %193
  %195 = getelementptr inbounds i8, ptr %186, i64 %194
  br i1 %150, label %196, label %218

196:                                              ; preds = %185
  %197 = icmp eq i32 %182, 0
  br i1 %197, label %221, label %201

198:                                              ; preds = %201
  %199 = add nuw nsw i64 %202, 1
  %200 = icmp eq i64 %199, %139
  br i1 %200, label %221, label %201, !llvm.loop !224

201:                                              ; preds = %196, %198
  %202 = phi i64 [ %199, %198 ], [ 0, %196 ]
  %203 = getelementptr inbounds i8, ptr %2, i64 %202
  %204 = load i8, ptr %203, align 1, !tbaa !3
  %205 = sext i8 %204 to i32
  %206 = add i8 %204, -65
  %207 = icmp ult i8 %206, 26
  %208 = add nsw i32 %205, 32
  %209 = select i1 %207, i32 %208, i32 %205
  %210 = getelementptr inbounds i8, ptr %195, i64 %202
  %211 = load i8, ptr %210, align 1, !tbaa !3
  %212 = sext i8 %211 to i32
  %213 = add i8 %211, -65
  %214 = icmp ult i8 %213, 26
  %215 = add nsw i32 %212, 32
  %216 = select i1 %214, i32 %215, i32 %212
  %217 = icmp eq i32 %209, %216
  br i1 %217, label %198, label %282

218:                                              ; preds = %185
  %219 = tail call i32 @bcmp(ptr %2, ptr nonnull %195, i64 %139)
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %280

221:                                              ; preds = %198, %196, %218, %173
  %222 = icmp ne i32 %169, 0
  %223 = select i1 %152, i1 %222, i1 false
  br i1 %223, label %224, label %240

224:                                              ; preds = %221, %230
  %225 = phi i64 [ %226, %230 ], [ %171, %221 ]
  %226 = add nsw i64 %225, -1
  %227 = and i64 %226, 4294967295
  %228 = getelementptr inbounds i8, ptr %170, i64 %227
  %229 = load i8, ptr %228, align 1, !tbaa !3
  switch i8 %229, label %230 [
    i8 47, label %232
    i8 92, label %232
    i8 58, label %232
  ]

230:                                              ; preds = %224
  %231 = icmp sgt i64 %225, 1
  br i1 %231, label %224, label %234, !llvm.loop !225

232:                                              ; preds = %224, %224, %224
  %233 = trunc i64 %225 to i32
  br label %234

234:                                              ; preds = %230, %232
  %235 = phi i32 [ %233, %232 ], [ 0, %230 ]
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i8, ptr %170, i64 %236
  %238 = sub i32 %169, %235
  %239 = zext i32 %238 to i64
  br label %240

240:                                              ; preds = %234, %221
  %241 = phi i64 [ %239, %234 ], [ %171, %221 ]
  %242 = phi i32 [ %238, %234 ], [ %169, %221 ]
  %243 = phi ptr [ %237, %234 ], [ %170, %221 ]
  %244 = icmp eq i64 %140, %241
  br i1 %244, label %245, label %282

245:                                              ; preds = %240
  br i1 %150, label %246, label %248

246:                                              ; preds = %245
  %247 = icmp eq i32 %242, 0
  br i1 %247, label %272, label %255

248:                                              ; preds = %245
  %249 = tail call i32 @bcmp(ptr nonnull %1, ptr nonnull %243, i64 %140)
  %250 = icmp eq i32 %249, 0
  %251 = zext i1 %250 to i32
  br label %272

252:                                              ; preds = %255
  %253 = add nuw nsw i64 %256, 1
  %254 = icmp eq i64 %253, %140
  br i1 %254, label %272, label %255, !llvm.loop !224

255:                                              ; preds = %246, %252
  %256 = phi i64 [ %253, %252 ], [ 0, %246 ]
  %257 = getelementptr inbounds i8, ptr %1, i64 %256
  %258 = load i8, ptr %257, align 1, !tbaa !3
  %259 = sext i8 %258 to i32
  %260 = add i8 %258, -65
  %261 = icmp ult i8 %260, 26
  %262 = add nsw i32 %259, 32
  %263 = select i1 %261, i32 %262, i32 %259
  %264 = getelementptr inbounds i8, ptr %243, i64 %256
  %265 = load i8, ptr %264, align 1, !tbaa !3
  %266 = sext i8 %265 to i32
  %267 = add i8 %265, -65
  %268 = icmp ult i8 %267, 26
  %269 = add nsw i32 %266, 32
  %270 = select i1 %268, i32 %269, i32 %266
  %271 = icmp eq i32 %263, %270
  br i1 %271, label %252, label %282

272:                                              ; preds = %252, %246, %248
  %273 = phi i32 [ %251, %248 ], [ 1, %246 ], [ 1, %252 ]
  %274 = icmp eq i32 %273, 0
  %275 = or i1 %6, %274
  %276 = xor i1 %274, true
  %277 = zext i1 %276 to i32
  br i1 %275, label %280, label %278

278:                                              ; preds = %272
  %279 = trunc i64 %157 to i32
  store i32 %279, ptr %4, align 4, !tbaa !12
  br label %287

280:                                              ; preds = %272, %218
  %281 = phi i32 [ 4, %218 ], [ %277, %272 ]
  switch i32 %281, label %287 [
    i32 0, label %282
    i32 4, label %282
  ]

282:                                              ; preds = %201, %255, %174, %240, %156, %280, %280
  %283 = add nuw nsw i64 %157, 1
  %284 = icmp eq i64 %283, %153
  br i1 %284, label %285, label %156, !llvm.loop !226

285:                                              ; preds = %282, %138
  %286 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 28, ptr %286, align 4, !tbaa !189
  br label %287

287:                                              ; preds = %280, %8, %278, %123, %115, %114, %16, %285, %154, %131
  %288 = phi i32 [ 0, %131 ], [ 0, %154 ], [ 0, %285 ], [ 0, %16 ], [ 1, %114 ], [ 1, %115 ], [ 0, %123 ], [ 1, %278 ], [ 0, %8 ], [ 1, %280 ]
  ret i32 %288
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare dso_local i64 @strlen(ptr nocapture noundef) local_unnamed_addr #23

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_to_mem_no_alloc(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, i64 noundef %6) local_unnamed_addr #8 {
  %8 = tail call fastcc i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, i64 noundef %6, ptr noundef null)
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, i64 noundef %6, ptr noundef readonly %7) unnamed_addr #8 {
  %9 = alloca %struct.mz_zip_archive_file_stat, align 8
  %10 = alloca [8 x i32], align 16
  %11 = alloca %struct.tinfl_decompressor_tag, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %9) #38
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #38
  call void @llvm.lifetime.start.p0(i64 8376, ptr nonnull %11) #38
  %14 = icmp eq ptr %0, null
  br i1 %14, label %255, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %17 = load ptr, ptr %16, align 8, !tbaa !184
  %18 = icmp eq ptr %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %15
  %20 = icmp eq i64 %3, 0
  %21 = icmp ne ptr %2, null
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = icmp eq i64 %6, 0
  %25 = icmp ne ptr %5, null
  %26 = or i1 %25, %24
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  %29 = load ptr, ptr %28, align 8, !tbaa !196
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %23, %19, %27, %15
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %32, align 4, !tbaa !189
  br label %255

33:                                               ; preds = %27
  %34 = icmp eq ptr %7, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %33
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(1112) %9, ptr noundef nonnull align 8 dereferenceable(1112) %7, i64 1112, i1 false), !tbaa.struct !227
  br label %53

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %38 = load i32, ptr %37, align 8, !tbaa !207
  %39 = icmp ugt i32 %38, %1
  br i1 %39, label %40, label %49

40:                                               ; preds = %36
  %41 = load ptr, ptr %17, align 8, !tbaa !212
  %42 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %17, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !213
  %44 = zext i32 %1 to i64
  %45 = getelementptr inbounds i32, ptr %43, i64 %44
  %46 = load i32, ptr %45, align 4, !tbaa !12
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, ptr %41, i64 %47
  br label %49

49:                                               ; preds = %36, %40
  %50 = phi ptr [ %48, %40 ], [ null, %36 ]
  %51 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %1, ptr noundef %50, ptr noundef nonnull %9, ptr noundef null)
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %255, label %53

53:                                               ; preds = %49, %35
  %54 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %9, i64 0, i32 13
  %55 = load i32, ptr %54, align 4, !tbaa !228
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %9, i64 0, i32 7
  %58 = load i64, ptr %57, align 8
  %59 = icmp ne i64 %58, 0
  %60 = select i1 %56, i1 %59, i1 false
  br i1 %60, label %61, label %255

61:                                               ; preds = %53
  %62 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %9, i64 0, i32 4
  %63 = load i16, ptr %62, align 4, !tbaa !230
  %64 = and i16 %63, 97
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 5, ptr %67, align 4, !tbaa !189
  br label %255

68:                                               ; preds = %61
  %69 = and i32 %4, 1024
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %9, i64 0, i32 5
  br i1 %70, label %72, label %76

72:                                               ; preds = %68
  %73 = load i16, ptr %71, align 2
  switch i16 %73, label %74 [
    i16 8, label %76
    i16 0, label %76
  ]

74:                                               ; preds = %72
  %75 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 4, ptr %75, align 4, !tbaa !189
  br label %255

76:                                               ; preds = %72, %72, %68
  %77 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %9, i64 0, i32 8
  %78 = load i64, ptr %77, align 8
  %79 = select i1 %70, i64 %78, i64 %58
  %80 = icmp ugt i64 %79, %3
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 26, ptr %82, align 4, !tbaa !189
  br label %255

83:                                               ; preds = %76
  %84 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %9, i64 0, i32 11
  %85 = load i64, ptr %84, align 8, !tbaa !231
  %86 = load ptr, ptr %28, align 8, !tbaa !196
  %87 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %88 = load ptr, ptr %87, align 8, !tbaa !205
  %89 = call i64 %86(ptr noundef %88, i64 noundef %85, ptr noundef nonnull %10, i64 noundef 30) #38
  %90 = icmp eq i64 %89, 30
  br i1 %90, label %93, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %92, align 4, !tbaa !189
  br label %255

93:                                               ; preds = %83
  %94 = load i8, ptr %10, align 16, !tbaa !3
  %95 = zext i8 %94 to i32
  %96 = getelementptr inbounds i8, ptr %10, i64 1
  %97 = load i8, ptr %96, align 1, !tbaa !3
  %98 = zext i8 %97 to i32
  %99 = shl nuw nsw i32 %98, 8
  %100 = or i32 %99, %95
  %101 = getelementptr inbounds i8, ptr %10, i64 2
  %102 = load i8, ptr %101, align 2, !tbaa !3
  %103 = zext i8 %102 to i32
  %104 = shl nuw nsw i32 %103, 16
  %105 = or i32 %100, %104
  %106 = getelementptr inbounds i8, ptr %10, i64 3
  %107 = load i8, ptr %106, align 1, !tbaa !3
  %108 = zext i8 %107 to i32
  %109 = shl nuw i32 %108, 24
  %110 = or i32 %105, %109
  %111 = icmp eq i32 %110, 67324752
  br i1 %111, label %114, label %112

112:                                              ; preds = %93
  %113 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %113, align 4, !tbaa !189
  br label %255

114:                                              ; preds = %93
  %115 = getelementptr inbounds i8, ptr %10, i64 26
  %116 = load i8, ptr %115, align 2, !tbaa !3
  %117 = zext i8 %116 to i64
  %118 = getelementptr inbounds i8, ptr %10, i64 27
  %119 = load i8, ptr %118, align 1, !tbaa !3
  %120 = zext i8 %119 to i64
  %121 = shl nuw nsw i64 %120, 8
  %122 = or i64 %121, %117
  %123 = getelementptr inbounds i8, ptr %10, i64 28
  %124 = load i8, ptr %123, align 4, !tbaa !3
  %125 = zext i8 %124 to i64
  %126 = getelementptr inbounds i8, ptr %10, i64 29
  %127 = load i8, ptr %126, align 1, !tbaa !3
  %128 = zext i8 %127 to i64
  %129 = shl nuw nsw i64 %128, 8
  %130 = or i64 %129, %125
  %131 = add i64 %85, 30
  %132 = add i64 %131, %122
  %133 = add i64 %132, %130
  %134 = load i64, ptr %57, align 8, !tbaa !232
  %135 = add i64 %133, %134
  %136 = load i64, ptr %0, align 8, !tbaa !204
  %137 = icmp ugt i64 %135, %136
  br i1 %137, label %138, label %140

138:                                              ; preds = %114
  %139 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %139, align 4, !tbaa !189
  br label %255

140:                                              ; preds = %114
  %141 = load i16, ptr %71, align 2
  %142 = icmp ne i16 %141, 0
  %143 = select i1 %70, i1 %142, i1 false
  br i1 %143, label %161, label %144

144:                                              ; preds = %140
  %145 = load ptr, ptr %28, align 8, !tbaa !196
  %146 = load ptr, ptr %87, align 8, !tbaa !205
  %147 = call i64 %145(ptr noundef %146, i64 noundef %133, ptr noundef %2, i64 noundef %79) #38
  %148 = icmp eq i64 %147, %79
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %150, align 4, !tbaa !189
  br label %255

151:                                              ; preds = %144
  br i1 %70, label %152, label %255

152:                                              ; preds = %151
  %153 = load i64, ptr %77, align 8, !tbaa !233
  %154 = call i64 @mz_crc32(i64 noundef 0, ptr noundef %2, i64 noundef %153)
  %155 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %9, i64 0, i32 6
  %156 = load i32, ptr %155, align 8, !tbaa !234
  %157 = zext i32 %156 to i64
  %158 = icmp eq i64 %154, %157
  br i1 %158, label %255, label %159

159:                                              ; preds = %152
  %160 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 14, ptr %160, align 4, !tbaa !189
  br label %255

161:                                              ; preds = %140
  store i32 0, ptr %11, align 8, !tbaa !79
  %162 = load ptr, ptr %16, align 8, !tbaa !184
  %163 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %162, i64 0, i32 8
  %164 = load ptr, ptr %163, align 8, !tbaa !218
  %165 = icmp eq ptr %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds i8, ptr %164, i64 %133
  br label %182

168:                                              ; preds = %161
  br i1 %25, label %169, label %170

169:                                              ; preds = %168
  br i1 %24, label %255, label %182

170:                                              ; preds = %168
  %171 = call i64 @llvm.umin.i64(i64 %134, i64 65536)
  %172 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %173 = load ptr, ptr %172, align 8, !tbaa !186
  %174 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %175 = load ptr, ptr %174, align 8, !tbaa !190
  %176 = call ptr %173(ptr noundef %175, i64 noundef 1, i64 noundef %171) #38
  %177 = icmp eq ptr %176, null
  br i1 %177, label %178, label %180

178:                                              ; preds = %170
  %179 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %179, align 4, !tbaa !189
  br label %255

180:                                              ; preds = %170
  %181 = load i64, ptr %57, align 8, !tbaa !232
  br label %182

182:                                              ; preds = %169, %180, %166
  %183 = phi i64 [ 0, %166 ], [ %181, %180 ], [ %134, %169 ]
  %184 = phi i64 [ %134, %166 ], [ %171, %180 ], [ %6, %169 ]
  %185 = phi i64 [ %134, %166 ], [ 0, %180 ], [ 0, %169 ]
  %186 = phi ptr [ %167, %166 ], [ %176, %180 ], [ %5, %169 ]
  br label %187

187:                                              ; preds = %212, %182
  %188 = phi i64 [ %133, %182 ], [ %213, %212 ]
  %189 = phi i64 [ %183, %182 ], [ %214, %212 ]
  %190 = phi i64 [ 0, %182 ], [ %226, %212 ]
  %191 = phi i64 [ 0, %182 ], [ %224, %212 ]
  %192 = phi i64 [ %185, %182 ], [ %223, %212 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #38
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #38
  %193 = load i64, ptr %77, align 8, !tbaa !233
  %194 = sub i64 %193, %190
  store i64 %194, ptr %13, align 8, !tbaa !46
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %212

196:                                              ; preds = %187
  %197 = load ptr, ptr %16, align 8, !tbaa !184
  %198 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %197, i64 0, i32 8
  %199 = load ptr, ptr %198, align 8, !tbaa !218
  %200 = icmp eq ptr %199, null
  br i1 %200, label %201, label %212

201:                                              ; preds = %196
  %202 = call i64 @llvm.umin.i64(i64 %184, i64 %189)
  %203 = load ptr, ptr %28, align 8, !tbaa !196
  %204 = load ptr, ptr %87, align 8, !tbaa !205
  %205 = call i64 %203(ptr noundef %204, i64 noundef %188, ptr noundef %186, i64 noundef %202) #38
  %206 = icmp eq i64 %205, %202
  br i1 %206, label %209, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 11, ptr %208, align 4, !tbaa !189
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #38
  br label %240

209:                                              ; preds = %201
  %210 = add i64 %202, %188
  %211 = sub i64 %189, %202
  br label %212

212:                                              ; preds = %187, %196, %209
  %213 = phi i64 [ %188, %187 ], [ %188, %196 ], [ %210, %209 ]
  %214 = phi i64 [ %189, %187 ], [ %189, %196 ], [ %211, %209 ]
  %215 = phi i64 [ %191, %187 ], [ %191, %196 ], [ 0, %209 ]
  %216 = phi i64 [ %192, %187 ], [ 0, %196 ], [ %202, %209 ]
  store i64 %216, ptr %12, align 8, !tbaa !46
  %217 = getelementptr inbounds i8, ptr %186, i64 %215
  %218 = getelementptr inbounds i8, ptr %2, i64 %190
  %219 = icmp eq i64 %214, 0
  %220 = select i1 %219, i32 4, i32 6
  %221 = call i32 @tinfl_decompress(ptr noundef nonnull %11, ptr noundef %217, ptr noundef nonnull %12, ptr noundef %2, ptr noundef %218, ptr noundef nonnull %13, i32 noundef %220)
  %222 = load i64, ptr %12, align 8, !tbaa !46
  %223 = sub i64 %216, %222
  %224 = add i64 %222, %215
  %225 = load i64, ptr %13, align 8, !tbaa !46
  %226 = add i64 %225, %190
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #38
  switch i32 %221, label %240 [
    i32 1, label %187
    i32 0, label %227
  ]

227:                                              ; preds = %212
  %228 = load i64, ptr %77, align 8, !tbaa !233
  %229 = icmp eq i64 %226, %228
  br i1 %229, label %232, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 13, ptr %231, align 4, !tbaa !189
  br label %240

232:                                              ; preds = %227
  %233 = call i64 @mz_crc32(i64 noundef 0, ptr noundef %2, i64 noundef %226)
  %234 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %9, i64 0, i32 6
  %235 = load i32, ptr %234, align 8, !tbaa !234
  %236 = zext i32 %235 to i64
  %237 = icmp eq i64 %233, %236
  br i1 %237, label %240, label %238

238:                                              ; preds = %232
  %239 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 14, ptr %239, align 4, !tbaa !189
  br label %240

240:                                              ; preds = %212, %207, %230, %238, %232
  %241 = phi i32 [ -1, %230 ], [ -1, %238 ], [ 0, %232 ], [ -1, %207 ], [ %221, %212 ]
  %242 = load ptr, ptr %16, align 8, !tbaa !184
  %243 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %242, i64 0, i32 8
  %244 = load ptr, ptr %243, align 8, !tbaa !218
  %245 = icmp ne ptr %244, null
  %246 = or i1 %25, %245
  br i1 %246, label %252, label %247

247:                                              ; preds = %240
  %248 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %249 = load ptr, ptr %248, align 8, !tbaa !187
  %250 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %251 = load ptr, ptr %250, align 8, !tbaa !190
  call void %249(ptr noundef %251, ptr noundef %186) #38
  br label %252

252:                                              ; preds = %247, %240
  %253 = icmp eq i32 %241, 0
  %254 = zext i1 %253 to i32
  br label %255

255:                                              ; preds = %31, %8, %169, %151, %152, %53, %49, %252, %178, %159, %149, %138, %112, %91, %81, %74, %66
  %256 = phi i32 [ 0, %66 ], [ 0, %74 ], [ 0, %81 ], [ 0, %91 ], [ 0, %112 ], [ 0, %138 ], [ %254, %252 ], [ 0, %178 ], [ 0, %149 ], [ 0, %159 ], [ 0, %49 ], [ 1, %53 ], [ 1, %152 ], [ 1, %151 ], [ 0, %169 ], [ 0, %8 ], [ 0, %31 ]
  call void @llvm.lifetime.end.p0(i64 8376, ptr nonnull %11) #38
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #38
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %9) #38
  ret i32 %256
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_mem_no_alloc(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, i64 noundef %6) local_unnamed_addr #8 {
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #38
  %9 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef %1, ptr noundef null, i32 noundef %4, ptr noundef nonnull %8)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = load i32, ptr %8, align 4, !tbaa !12
  %13 = call fastcc i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %0, i32 noundef %12, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, i64 noundef %6, ptr noundef null)
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %7 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #38
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_to_mem(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = tail call fastcc i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %0, i32 noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef null, i64 noundef 0, ptr noundef null)
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_mem(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #38
  %7 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef %1, ptr noundef null, i32 noundef %4, ptr noundef nonnull %6)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = load i32, ptr %6, align 4, !tbaa !12
  %11 = call fastcc i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef %0, i32 noundef %10, ptr noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef null, i64 noundef 0, ptr noundef null)
  br label %12

12:                                               ; preds = %5, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #38
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define dso_local ptr @mz_zip_reader_extract_to_heap(ptr noundef %0, i32 noundef %1, ptr noundef writeonly %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca %struct.mz_zip_archive_file_stat, align 8
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %5) #38
  %6 = icmp eq ptr %2, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, ptr %2, align 8, !tbaa !46
  br label %8

8:                                                ; preds = %7, %4
  %9 = icmp eq ptr %0, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %12 = load ptr, ptr %11, align 8, !tbaa !184
  %13 = icmp eq ptr %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %16 = load i32, ptr %15, align 8, !tbaa !207
  %17 = icmp ugt i32 %16, %1
  br i1 %17, label %18, label %27

18:                                               ; preds = %14
  %19 = load ptr, ptr %12, align 8, !tbaa !212
  %20 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !213
  %22 = zext i32 %1 to i64
  %23 = getelementptr inbounds i32, ptr %21, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !12
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %19, i64 %25
  br label %27

27:                                               ; preds = %8, %10, %14, %18
  %28 = phi ptr [ %26, %18 ], [ null, %14 ], [ null, %10 ], [ null, %8 ]
  %29 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef %0, i32 noundef %1, ptr noundef %28, ptr noundef nonnull %5, ptr noundef null)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %56, label %31

31:                                               ; preds = %27
  %32 = and i32 %3, 1024
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 7
  %35 = load i64, ptr %34, align 8
  %36 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 8
  %37 = load i64, ptr %36, align 8
  %38 = select i1 %33, i64 %37, i64 %35
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %40 = load ptr, ptr %39, align 8, !tbaa !186
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %42 = load ptr, ptr %41, align 8, !tbaa !190
  %43 = call ptr %40(ptr noundef %42, i64 noundef 1, i64 noundef %38) #38
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %46, align 4, !tbaa !189
  br label %56

47:                                               ; preds = %31
  %48 = call fastcc i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef nonnull %0, i32 noundef %1, ptr noundef nonnull %43, i64 noundef %38, i32 noundef %3, ptr noundef null, i64 noundef 0, ptr noundef nonnull %5)
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %52 = load ptr, ptr %51, align 8, !tbaa !187
  %53 = load ptr, ptr %41, align 8, !tbaa !190
  call void %52(ptr noundef %53, ptr noundef nonnull %43) #38
  br label %56

54:                                               ; preds = %47
  br i1 %6, label %56, label %55

55:                                               ; preds = %54
  store i64 %38, ptr %2, align 8, !tbaa !46
  br label %56

56:                                               ; preds = %54, %55, %27, %50, %45
  %57 = phi ptr [ null, %45 ], [ null, %50 ], [ null, %27 ], [ %43, %55 ], [ %43, %54 ]
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %5) #38
  ret ptr %57
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @mz_zip_reader_file_stat(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #20 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %7 = load ptr, ptr %6, align 8, !tbaa !184
  %8 = icmp eq ptr %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !207
  %12 = icmp ugt i32 %11, %1
  br i1 %12, label %13, label %22

13:                                               ; preds = %9
  %14 = load ptr, ptr %7, align 8, !tbaa !212
  %15 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !213
  %17 = zext i32 %1 to i64
  %18 = getelementptr inbounds i32, ptr %16, i64 %17
  %19 = load i32, ptr %18, align 4, !tbaa !12
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, ptr %14, i64 %20
  br label %22

22:                                               ; preds = %3, %5, %9, %13
  %23 = phi ptr [ %21, %13 ], [ null, %9 ], [ null, %5 ], [ null, %3 ]
  %24 = tail call fastcc i32 @mz_zip_file_stat_internal(ptr noundef %0, i32 noundef %1, ptr noundef %23, ptr noundef %2, ptr noundef null)
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define dso_local ptr @mz_zip_reader_extract_file_to_heap(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #38
  %6 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef %1, ptr noundef null, i32 noundef %3, ptr noundef nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = icmp eq ptr %2, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %8
  store i64 0, ptr %2, align 8, !tbaa !46
  br label %14

11:                                               ; preds = %4
  %12 = load i32, ptr %5, align 4, !tbaa !12
  %13 = call ptr @mz_zip_reader_extract_to_heap(ptr noundef %0, i32 noundef %12, ptr noundef %2, i32 noundef %3)
  br label %14

14:                                               ; preds = %8, %10, %11
  %15 = phi ptr [ %13, %11 ], [ null, %10 ], [ null, %8 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #38
  ret ptr %15
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_to_callback(ptr noundef %0, i32 noundef %1, ptr noundef readonly %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = alloca %struct.mz_zip_archive_file_stat, align 8
  %7 = alloca [8 x i32], align 16
  %8 = alloca %struct.tinfl_decompressor_tag, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %6) #38
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #38
  %11 = icmp eq ptr %0, null
  br i1 %11, label %306, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %14 = load ptr, ptr %13, align 8, !tbaa !184
  %15 = icmp ne ptr %14, null
  %16 = icmp ne ptr %2, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  %20 = load ptr, ptr %19, align 8, !tbaa !196
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %18, %12
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %23, align 4, !tbaa !189
  br label %306

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %26 = load i32, ptr %25, align 8, !tbaa !207
  %27 = icmp ugt i32 %26, %1
  br i1 %27, label %28, label %37

28:                                               ; preds = %24
  %29 = load ptr, ptr %14, align 8, !tbaa !212
  %30 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %14, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !213
  %32 = zext i32 %1 to i64
  %33 = getelementptr inbounds i32, ptr %31, i64 %32
  %34 = load i32, ptr %33, align 4, !tbaa !12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, ptr %29, i64 %35
  br label %37

37:                                               ; preds = %24, %28
  %38 = phi ptr [ %36, %28 ], [ null, %24 ]
  %39 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %1, ptr noundef %38, ptr noundef nonnull %6, ptr noundef null)
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %306, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 13
  %43 = load i32, ptr %42, align 4, !tbaa !228
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 7
  %46 = load i64, ptr %45, align 8
  %47 = icmp ne i64 %46, 0
  %48 = select i1 %44, i1 %47, i1 false
  br i1 %48, label %49, label %306

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 4
  %51 = load i16, ptr %50, align 4, !tbaa !230
  %52 = and i16 %51, 97
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 5, ptr %55, align 4, !tbaa !189
  br label %306

56:                                               ; preds = %49
  %57 = and i32 %4, 1024
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 5
  br i1 %58, label %60, label %64

60:                                               ; preds = %56
  %61 = load i16, ptr %59, align 2
  switch i16 %61, label %62 [
    i16 8, label %64
    i16 0, label %64
  ]

62:                                               ; preds = %60
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 4, ptr %63, align 4, !tbaa !189
  br label %306

64:                                               ; preds = %60, %60, %56
  %65 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 11
  %66 = load i64, ptr %65, align 8, !tbaa !231
  %67 = load ptr, ptr %19, align 8, !tbaa !196
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %69 = load ptr, ptr %68, align 8, !tbaa !205
  %70 = call i64 %67(ptr noundef %69, i64 noundef %66, ptr noundef nonnull %7, i64 noundef 30) #38
  %71 = icmp eq i64 %70, 30
  br i1 %71, label %74, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %73, align 4, !tbaa !189
  br label %306

74:                                               ; preds = %64
  %75 = load i8, ptr %7, align 16, !tbaa !3
  %76 = zext i8 %75 to i32
  %77 = getelementptr inbounds i8, ptr %7, i64 1
  %78 = load i8, ptr %77, align 1, !tbaa !3
  %79 = zext i8 %78 to i32
  %80 = shl nuw nsw i32 %79, 8
  %81 = or i32 %80, %76
  %82 = getelementptr inbounds i8, ptr %7, i64 2
  %83 = load i8, ptr %82, align 2, !tbaa !3
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 16
  %86 = or i32 %81, %85
  %87 = getelementptr inbounds i8, ptr %7, i64 3
  %88 = load i8, ptr %87, align 1, !tbaa !3
  %89 = zext i8 %88 to i32
  %90 = shl nuw i32 %89, 24
  %91 = or i32 %86, %90
  %92 = icmp eq i32 %91, 67324752
  br i1 %92, label %95, label %93

93:                                               ; preds = %74
  %94 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %94, align 4, !tbaa !189
  br label %306

95:                                               ; preds = %74
  %96 = getelementptr inbounds i8, ptr %7, i64 26
  %97 = load i8, ptr %96, align 2, !tbaa !3
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds i8, ptr %7, i64 27
  %100 = load i8, ptr %99, align 1, !tbaa !3
  %101 = zext i8 %100 to i64
  %102 = shl nuw nsw i64 %101, 8
  %103 = or i64 %102, %98
  %104 = getelementptr inbounds i8, ptr %7, i64 28
  %105 = load i8, ptr %104, align 4, !tbaa !3
  %106 = zext i8 %105 to i64
  %107 = getelementptr inbounds i8, ptr %7, i64 29
  %108 = load i8, ptr %107, align 1, !tbaa !3
  %109 = zext i8 %108 to i64
  %110 = shl nuw nsw i64 %109, 8
  %111 = or i64 %110, %106
  %112 = add i64 %66, 30
  %113 = add i64 %112, %103
  %114 = add i64 %113, %111
  %115 = load i64, ptr %45, align 8, !tbaa !232
  %116 = add i64 %114, %115
  %117 = load i64, ptr %0, align 8, !tbaa !204
  %118 = icmp ugt i64 %116, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %95
  %120 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %120, align 4, !tbaa !189
  br label %306

121:                                              ; preds = %95
  %122 = load ptr, ptr %13, align 8, !tbaa !184
  %123 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %122, i64 0, i32 8
  %124 = load ptr, ptr %123, align 8, !tbaa !218
  %125 = icmp eq ptr %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds i8, ptr %124, i64 %114
  br label %140

128:                                              ; preds = %121
  %129 = call i64 @llvm.umin.i64(i64 %115, i64 65536)
  %130 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %131 = load ptr, ptr %130, align 8, !tbaa !186
  %132 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %133 = load ptr, ptr %132, align 8, !tbaa !190
  %134 = call ptr %131(ptr noundef %133, i64 noundef 1, i64 noundef %129) #38
  %135 = icmp eq ptr %134, null
  br i1 %135, label %136, label %138

136:                                              ; preds = %128
  %137 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %137, align 4, !tbaa !189
  br label %306

138:                                              ; preds = %128
  %139 = load i64, ptr %45, align 8, !tbaa !232
  br label %140

140:                                              ; preds = %138, %126
  %141 = phi i64 [ %115, %126 ], [ %139, %138 ]
  %142 = phi i64 [ %115, %126 ], [ %129, %138 ]
  %143 = phi i64 [ %115, %126 ], [ 0, %138 ]
  %144 = phi i64 [ 0, %126 ], [ %139, %138 ]
  %145 = phi ptr [ %127, %126 ], [ %134, %138 ]
  %146 = load i16, ptr %59, align 2
  %147 = icmp ne i16 %146, 0
  %148 = select i1 %58, i1 %147, i1 false
  br i1 %148, label %194, label %149

149:                                              ; preds = %140
  %150 = load ptr, ptr %13, align 8, !tbaa !184
  %151 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %150, i64 0, i32 8
  %152 = load ptr, ptr %151, align 8, !tbaa !218
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %156

154:                                              ; preds = %149
  %155 = icmp eq i64 %144, 0
  br i1 %155, label %265, label %166

156:                                              ; preds = %149
  %157 = call i64 %2(ptr noundef %3, i64 noundef 0, ptr noundef %145, i64 noundef %141) #38
  %158 = load i64, ptr %45, align 8, !tbaa !232
  %159 = icmp eq i64 %157, %158
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 31, ptr %161, align 4, !tbaa !189
  br label %284

162:                                              ; preds = %156
  br i1 %58, label %163, label %284

163:                                              ; preds = %162
  %164 = call i64 @mz_crc32(i64 noundef 0, ptr noundef %145, i64 noundef %157)
  %165 = trunc i64 %164 to i32
  br label %269

166:                                              ; preds = %154, %189
  %167 = phi i64 [ %190, %189 ], [ %114, %154 ]
  %168 = phi i64 [ %191, %189 ], [ 0, %154 ]
  %169 = phi i64 [ %192, %189 ], [ %144, %154 ]
  %170 = phi i32 [ %184, %189 ], [ 0, %154 ]
  %171 = call i64 @llvm.umin.i64(i64 %142, i64 %169)
  %172 = load ptr, ptr %19, align 8, !tbaa !196
  %173 = load ptr, ptr %68, align 8, !tbaa !205
  %174 = call i64 %172(ptr noundef %173, i64 noundef %167, ptr noundef %145, i64 noundef %171) #38
  %175 = icmp eq i64 %174, %171
  br i1 %175, label %178, label %176

176:                                              ; preds = %166
  %177 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %177, align 4, !tbaa !189
  br label %284

178:                                              ; preds = %166
  br i1 %58, label %179, label %183

179:                                              ; preds = %178
  %180 = zext i32 %170 to i64
  %181 = call i64 @mz_crc32(i64 noundef %180, ptr noundef %145, i64 noundef %171)
  %182 = trunc i64 %181 to i32
  br label %183

183:                                              ; preds = %179, %178
  %184 = phi i32 [ %170, %178 ], [ %182, %179 ]
  %185 = call i64 %2(ptr noundef %3, i64 noundef %168, ptr noundef %145, i64 noundef %171) #38
  %186 = icmp eq i64 %185, %171
  br i1 %186, label %189, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 31, ptr %188, align 4, !tbaa !189
  br label %284

189:                                              ; preds = %183
  %190 = add i64 %167, %171
  %191 = add i64 %168, %171
  %192 = sub i64 %169, %171
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %265, label %166, !llvm.loop !235

194:                                              ; preds = %140
  call void @llvm.lifetime.start.p0(i64 8376, ptr nonnull %8) #38
  store i32 0, ptr %8, align 8, !tbaa !79
  %195 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %196 = load ptr, ptr %195, align 8, !tbaa !186
  %197 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %198 = load ptr, ptr %197, align 8, !tbaa !190
  %199 = call ptr %196(ptr noundef %198, i64 noundef 1, i64 noundef 32768) #38
  %200 = icmp eq ptr %199, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 8
  br label %205

203:                                              ; preds = %194
  %204 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %204, align 4, !tbaa !189
  br label %262

205:                                              ; preds = %201, %257
  %206 = phi i32 [ %258, %257 ], [ 0, %201 ]
  %207 = phi i64 [ %241, %257 ], [ 0, %201 ]
  %208 = phi i64 [ %240, %257 ], [ %143, %201 ]
  %209 = phi i64 [ %233, %257 ], [ %144, %201 ]
  %210 = phi i64 [ %259, %257 ], [ 0, %201 ]
  %211 = phi i64 [ %234, %257 ], [ %114, %201 ]
  %212 = and i64 %210, 32767
  %213 = getelementptr inbounds i8, ptr %199, i64 %212
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #38
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #38
  %214 = sub nuw nsw i64 32768, %212
  store i64 %214, ptr %10, align 8, !tbaa !46
  %215 = icmp eq i64 %208, 0
  br i1 %215, label %216, label %230

216:                                              ; preds = %205
  %217 = load ptr, ptr %13, align 8, !tbaa !184
  %218 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %217, i64 0, i32 8
  %219 = load ptr, ptr %218, align 8, !tbaa !218
  %220 = icmp eq ptr %219, null
  br i1 %220, label %221, label %230

221:                                              ; preds = %216
  %222 = call i64 @llvm.umin.i64(i64 %142, i64 %209)
  %223 = load ptr, ptr %19, align 8, !tbaa !196
  %224 = load ptr, ptr %68, align 8, !tbaa !205
  %225 = call i64 %223(ptr noundef %224, i64 noundef %211, ptr noundef %145, i64 noundef %222) #38
  %226 = icmp eq i64 %225, %222
  br i1 %226, label %227, label %254

227:                                              ; preds = %221
  %228 = add i64 %211, %222
  %229 = sub i64 %209, %222
  br label %230

230:                                              ; preds = %227, %216, %205
  %231 = phi i64 [ %207, %205 ], [ %207, %216 ], [ 0, %227 ]
  %232 = phi i64 [ %208, %205 ], [ 0, %216 ], [ %222, %227 ]
  %233 = phi i64 [ %209, %205 ], [ %209, %216 ], [ %229, %227 ]
  %234 = phi i64 [ %211, %205 ], [ %211, %216 ], [ %228, %227 ]
  store i64 %232, ptr %9, align 8, !tbaa !46
  %235 = getelementptr inbounds i8, ptr %145, i64 %231
  %236 = icmp eq i64 %233, 0
  %237 = select i1 %236, i32 0, i32 2
  %238 = call i32 @tinfl_decompress(ptr noundef nonnull %8, ptr noundef %235, ptr noundef nonnull %9, ptr noundef nonnull %199, ptr noundef nonnull %213, ptr noundef nonnull %10, i32 noundef %237)
  %239 = load i64, ptr %9, align 8, !tbaa !46
  %240 = sub i64 %232, %239
  %241 = add i64 %239, %231
  %242 = load i64, ptr %10, align 8, !tbaa !46
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %257, label %244

244:                                              ; preds = %230
  %245 = call i64 %2(ptr noundef %3, i64 noundef %210, ptr noundef nonnull %213, i64 noundef %242) #38
  %246 = icmp eq i64 %245, %242
  br i1 %246, label %247, label %254

247:                                              ; preds = %244
  %248 = zext i32 %206 to i64
  %249 = call i64 @mz_crc32(i64 noundef %248, ptr noundef nonnull %213, i64 noundef %242)
  %250 = trunc i64 %249 to i32
  %251 = add i64 %242, %210
  %252 = load i64, ptr %202, align 8, !tbaa !233
  %253 = icmp ugt i64 %251, %252
  br i1 %253, label %254, label %257

254:                                              ; preds = %247, %244, %221
  %255 = phi i32 [ 20, %221 ], [ 31, %244 ], [ 11, %247 ]
  %256 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 %255, ptr %256, align 4, !tbaa !189
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #38
  br label %262

257:                                              ; preds = %230, %247
  %258 = phi i32 [ %250, %247 ], [ %206, %230 ]
  %259 = phi i64 [ %251, %247 ], [ %210, %230 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #38
  %260 = add i32 %238, -1
  %261 = icmp ult i32 %260, 2
  br i1 %261, label %205, label %263, !llvm.loop !236

262:                                              ; preds = %203, %254
  call void @llvm.lifetime.end.p0(i64 8376, ptr nonnull %8) #38
  br label %284

263:                                              ; preds = %257
  call void @llvm.lifetime.end.p0(i64 8376, ptr nonnull %8) #38
  %264 = icmp eq i32 %238, 0
  br i1 %264, label %265, label %284

265:                                              ; preds = %189, %154, %263
  %266 = phi ptr [ %199, %263 ], [ null, %154 ], [ null, %189 ]
  %267 = phi i64 [ %259, %263 ], [ 0, %154 ], [ %191, %189 ]
  %268 = phi i32 [ %258, %263 ], [ 0, %154 ], [ %184, %189 ]
  br i1 %58, label %269, label %284

269:                                              ; preds = %163, %265
  %270 = phi i32 [ %165, %163 ], [ %268, %265 ]
  %271 = phi i64 [ %157, %163 ], [ %267, %265 ]
  %272 = phi ptr [ null, %163 ], [ %266, %265 ]
  %273 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 8
  %274 = load i64, ptr %273, align 8, !tbaa !233
  %275 = icmp eq i64 %271, %274
  br i1 %275, label %278, label %276

276:                                              ; preds = %269
  %277 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 13, ptr %277, align 4, !tbaa !189
  br label %284

278:                                              ; preds = %269
  %279 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 6
  %280 = load i32, ptr %279, align 8, !tbaa !234
  %281 = icmp eq i32 %270, %280
  br i1 %281, label %284, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 11, ptr %283, align 4, !tbaa !189
  br label %284

284:                                              ; preds = %162, %160, %187, %176, %262, %276, %282, %278, %265, %263
  %285 = phi ptr [ %266, %265 ], [ %272, %276 ], [ %272, %282 ], [ %272, %278 ], [ %199, %263 ], [ %199, %262 ], [ null, %176 ], [ null, %187 ], [ null, %160 ], [ null, %162 ]
  %286 = phi i32 [ 0, %265 ], [ -1, %276 ], [ -1, %282 ], [ 0, %278 ], [ %238, %263 ], [ -1, %262 ], [ -1, %176 ], [ -1, %187 ], [ -1, %160 ], [ 0, %162 ]
  %287 = load ptr, ptr %13, align 8, !tbaa !184
  %288 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %287, i64 0, i32 8
  %289 = load ptr, ptr %288, align 8, !tbaa !218
  %290 = icmp eq ptr %289, null
  br i1 %290, label %291, label %296

291:                                              ; preds = %284
  %292 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %293 = load ptr, ptr %292, align 8, !tbaa !187
  %294 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %295 = load ptr, ptr %294, align 8, !tbaa !190
  call void %293(ptr noundef %295, ptr noundef %145) #38
  br label %296

296:                                              ; preds = %291, %284
  %297 = icmp eq ptr %285, null
  br i1 %297, label %303, label %298

298:                                              ; preds = %296
  %299 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %300 = load ptr, ptr %299, align 8, !tbaa !187
  %301 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %302 = load ptr, ptr %301, align 8, !tbaa !190
  call void %300(ptr noundef %302, ptr noundef nonnull %285) #38
  br label %303

303:                                              ; preds = %298, %296
  %304 = icmp eq i32 %286, 0
  %305 = zext i1 %304 to i32
  br label %306

306:                                              ; preds = %22, %5, %41, %37, %303, %136, %119, %93, %72, %62, %54
  %307 = phi i32 [ 0, %54 ], [ 0, %62 ], [ 0, %72 ], [ 0, %93 ], [ 0, %119 ], [ %305, %303 ], [ 0, %136 ], [ 0, %37 ], [ 1, %41 ], [ 0, %5 ], [ 0, %22 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %6) #38
  ret i32 %307
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_callback(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #38
  %7 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef %1, ptr noundef null, i32 noundef %4, ptr noundef nonnull %6)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = load i32, ptr %6, align 4, !tbaa !12
  %11 = call i32 @mz_zip_reader_extract_to_callback(ptr noundef %0, i32 noundef %10, ptr noundef %2, ptr noundef %3, i32 noundef %4)
  br label %12

12:                                               ; preds = %5, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #38
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define dso_local ptr @mz_zip_reader_extract_iter_new(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = alloca [8 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #38
  %5 = icmp eq ptr %0, null
  br i1 %5, label %200, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %8 = load ptr, ptr %7, align 8, !tbaa !184
  %9 = icmp eq ptr %8, null
  br i1 %9, label %200, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %12 = load ptr, ptr %11, align 8, !tbaa !186
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %14 = load ptr, ptr %13, align 8, !tbaa !190
  %15 = tail call ptr %12(ptr noundef %14, i64 noundef 1, i64 noundef 9584) #38
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %18, align 4, !tbaa !189
  br label %200

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 9
  %21 = load ptr, ptr %7, align 8, !tbaa !184
  %22 = icmp eq ptr %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %25 = load i32, ptr %24, align 8, !tbaa !207
  %26 = icmp ugt i32 %25, %1
  br i1 %26, label %27, label %36

27:                                               ; preds = %23
  %28 = load ptr, ptr %21, align 8, !tbaa !212
  %29 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %21, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !213
  %31 = zext i32 %1 to i64
  %32 = getelementptr inbounds i32, ptr %30, i64 %31
  %33 = load i32, ptr %32, align 4, !tbaa !12
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8, ptr %28, i64 %34
  br label %36

36:                                               ; preds = %19, %23, %27
  %37 = phi ptr [ %35, %27 ], [ null, %23 ], [ null, %19 ]
  %38 = tail call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %1, ptr noundef %37, ptr noundef nonnull %20, ptr noundef null)
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %42 = load ptr, ptr %41, align 8, !tbaa !187
  %43 = load ptr, ptr %13, align 8, !tbaa !190
  tail call void %42(ptr noundef %43, ptr noundef nonnull %15) #38
  br label %200

44:                                               ; preds = %36
  %45 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 9, i32 4
  %46 = load i16, ptr %45, align 4, !tbaa !237
  %47 = and i16 %46, 97
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 5, ptr %50, align 4, !tbaa !189
  %51 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %52 = load ptr, ptr %51, align 8, !tbaa !187
  %53 = load ptr, ptr %13, align 8, !tbaa !190
  tail call void %52(ptr noundef %53, ptr noundef nonnull %15) #38
  br label %200

54:                                               ; preds = %44
  %55 = and i32 %2, 1024
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 9, i32 5
  %59 = load i16, ptr %58, align 2, !tbaa !239
  switch i16 %59, label %60 [
    i16 0, label %65
    i16 8, label %65
  ]

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 4, ptr %61, align 4, !tbaa !189
  %62 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %63 = load ptr, ptr %62, align 8, !tbaa !187
  %64 = load ptr, ptr %13, align 8, !tbaa !190
  tail call void %63(ptr noundef %64, ptr noundef nonnull %15) #38
  br label %200

65:                                               ; preds = %57, %57, %54
  store ptr %0, ptr %15, align 8, !tbaa !240
  %66 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 1
  store i32 %2, ptr %66, align 8, !tbaa !241
  %67 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 2
  store i32 0, ptr %67, align 4, !tbaa !242
  %68 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 14
  store i32 0, ptr %68, align 8, !tbaa !243
  %69 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 4
  store i64 0, ptr %69, align 8, !tbaa !244
  %70 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 7
  store i64 0, ptr %70, align 8, !tbaa !245
  %71 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 10
  %72 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 11
  %73 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 9, i32 11
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %71, i8 0, i64 24, i1 false)
  %74 = load i64, ptr %73, align 8, !tbaa !246
  %75 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 8
  store i64 %74, ptr %75, align 8, !tbaa !247
  %76 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  %77 = load ptr, ptr %76, align 8, !tbaa !196
  %78 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %79 = load ptr, ptr %78, align 8, !tbaa !205
  %80 = call i64 %77(ptr noundef %79, i64 noundef %74, ptr noundef nonnull %4, i64 noundef 30) #38
  %81 = icmp eq i64 %80, 30
  br i1 %81, label %87, label %82

82:                                               ; preds = %65
  %83 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %83, align 4, !tbaa !189
  %84 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %85 = load ptr, ptr %84, align 8, !tbaa !187
  %86 = load ptr, ptr %13, align 8, !tbaa !190
  call void %85(ptr noundef %86, ptr noundef nonnull %15) #38
  br label %200

87:                                               ; preds = %65
  %88 = load i8, ptr %4, align 16, !tbaa !3
  %89 = zext i8 %88 to i32
  %90 = getelementptr inbounds i8, ptr %4, i64 1
  %91 = load i8, ptr %90, align 1, !tbaa !3
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 8
  %94 = or i32 %93, %89
  %95 = getelementptr inbounds i8, ptr %4, i64 2
  %96 = load i8, ptr %95, align 2, !tbaa !3
  %97 = zext i8 %96 to i32
  %98 = shl nuw nsw i32 %97, 16
  %99 = or i32 %94, %98
  %100 = getelementptr inbounds i8, ptr %4, i64 3
  %101 = load i8, ptr %100, align 1, !tbaa !3
  %102 = zext i8 %101 to i32
  %103 = shl nuw i32 %102, 24
  %104 = or i32 %99, %103
  %105 = icmp eq i32 %104, 67324752
  br i1 %105, label %111, label %106

106:                                              ; preds = %87
  %107 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %107, align 4, !tbaa !189
  %108 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %109 = load ptr, ptr %108, align 8, !tbaa !187
  %110 = load ptr, ptr %13, align 8, !tbaa !190
  call void %109(ptr noundef %110, ptr noundef nonnull %15) #38
  br label %200

111:                                              ; preds = %87
  %112 = getelementptr inbounds i8, ptr %4, i64 26
  %113 = load i8, ptr %112, align 2, !tbaa !3
  %114 = zext i8 %113 to i64
  %115 = getelementptr inbounds i8, ptr %4, i64 27
  %116 = load i8, ptr %115, align 1, !tbaa !3
  %117 = zext i8 %116 to i64
  %118 = shl nuw nsw i64 %117, 8
  %119 = or i64 %118, %114
  %120 = add nuw nsw i64 %119, 30
  %121 = getelementptr inbounds i8, ptr %4, i64 28
  %122 = load i8, ptr %121, align 4, !tbaa !3
  %123 = zext i8 %122 to i64
  %124 = getelementptr inbounds i8, ptr %4, i64 29
  %125 = load i8, ptr %124, align 1, !tbaa !3
  %126 = zext i8 %125 to i64
  %127 = shl nuw nsw i64 %126, 8
  %128 = or i64 %127, %123
  %129 = load i64, ptr %75, align 8, !tbaa !247
  %130 = add i64 %120, %129
  %131 = add i64 %130, %128
  store i64 %131, ptr %75, align 8, !tbaa !247
  %132 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 9, i32 7
  %133 = load i64, ptr %132, align 8, !tbaa !248
  %134 = add i64 %131, %133
  %135 = load i64, ptr %0, align 8, !tbaa !204
  %136 = icmp ugt i64 %134, %135
  br i1 %136, label %137, label %142

137:                                              ; preds = %111
  %138 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %138, align 4, !tbaa !189
  %139 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %140 = load ptr, ptr %139, align 8, !tbaa !187
  %141 = load ptr, ptr %13, align 8, !tbaa !190
  call void %140(ptr noundef %141, ptr noundef nonnull %15) #38
  br label %200

142:                                              ; preds = %111
  %143 = load ptr, ptr %7, align 8, !tbaa !184
  %144 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %143, i64 0, i32 8
  %145 = load ptr, ptr %144, align 8, !tbaa !218
  %146 = icmp eq ptr %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds i8, ptr %145, i64 %131
  store ptr %148, ptr %71, align 8, !tbaa !249
  %149 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 5
  store i64 %133, ptr %149, align 8, !tbaa !250
  %150 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 3
  store i64 %133, ptr %150, align 8, !tbaa !251
  br label %175

151:                                              ; preds = %142
  br i1 %56, label %152, label %170

152:                                              ; preds = %151
  %153 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 9, i32 5
  %154 = load i16, ptr %153, align 2, !tbaa !239
  %155 = icmp eq i16 %154, 0
  br i1 %155, label %170, label %156

156:                                              ; preds = %152
  %157 = call i64 @llvm.umin.i64(i64 %133, i64 65536)
  %158 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 3
  store i64 %157, ptr %158, align 8, !tbaa !251
  %159 = load ptr, ptr %11, align 8, !tbaa !186
  %160 = load ptr, ptr %13, align 8, !tbaa !190
  %161 = call ptr %159(ptr noundef %160, i64 noundef 1, i64 noundef %157) #38
  store ptr %161, ptr %71, align 8, !tbaa !249
  %162 = icmp eq ptr %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %156
  %164 = load i64, ptr %132, align 8, !tbaa !248
  br label %172

165:                                              ; preds = %156
  %166 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %166, align 4, !tbaa !189
  %167 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %168 = load ptr, ptr %167, align 8, !tbaa !187
  %169 = load ptr, ptr %13, align 8, !tbaa !190
  call void %168(ptr noundef %169, ptr noundef nonnull %15) #38
  br label %200

170:                                              ; preds = %152, %151
  %171 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 3
  store i64 0, ptr %171, align 8, !tbaa !251
  br label %172

172:                                              ; preds = %163, %170
  %173 = phi i64 [ %164, %163 ], [ %133, %170 ]
  %174 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 5
  store i64 0, ptr %174, align 8, !tbaa !250
  br label %175

175:                                              ; preds = %172, %147
  %176 = phi i64 [ %173, %172 ], [ %133, %147 ]
  %177 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 6
  store i64 %176, ptr %177, align 8, !tbaa !252
  br i1 %56, label %178, label %200

178:                                              ; preds = %175
  %179 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 9, i32 5
  %180 = load i16, ptr %179, align 2, !tbaa !239
  %181 = icmp eq i16 %180, 0
  br i1 %181, label %200, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %15, i64 0, i32 13
  store i32 0, ptr %183, align 8, !tbaa !253
  %184 = load ptr, ptr %11, align 8, !tbaa !186
  %185 = load ptr, ptr %13, align 8, !tbaa !190
  %186 = call ptr %184(ptr noundef %185, i64 noundef 1, i64 noundef 32768) #38
  store ptr %186, ptr %72, align 8, !tbaa !254
  %187 = icmp eq ptr %186, null
  br i1 %187, label %188, label %200

188:                                              ; preds = %182
  %189 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %189, align 4, !tbaa !189
  %190 = load ptr, ptr %71, align 8, !tbaa !249
  %191 = icmp eq ptr %190, null
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %194 = load ptr, ptr %193, align 8, !tbaa !187
  %195 = load ptr, ptr %13, align 8, !tbaa !190
  call void %194(ptr noundef %195, ptr noundef nonnull %190) #38
  br label %196

196:                                              ; preds = %192, %188
  %197 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %198 = load ptr, ptr %197, align 8, !tbaa !187
  %199 = load ptr, ptr %13, align 8, !tbaa !190
  call void %198(ptr noundef %199, ptr noundef nonnull %15) #38
  br label %200

200:                                              ; preds = %175, %178, %182, %3, %6, %196, %165, %137, %106, %82, %60, %49, %40, %17
  %201 = phi ptr [ null, %49 ], [ null, %82 ], [ null, %106 ], [ null, %137 ], [ null, %196 ], [ null, %165 ], [ null, %60 ], [ null, %40 ], [ null, %17 ], [ null, %6 ], [ null, %3 ], [ %15, %182 ], [ %15, %178 ], [ %15, %175 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #38
  ret ptr %201
}

; Function Attrs: nounwind uwtable
define dso_local ptr @mz_zip_reader_extract_file_iter_new(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #38
  %5 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef %1, ptr noundef null, i32 noundef %2, ptr noundef nonnull %4)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = load i32, ptr %4, align 4, !tbaa !12
  %9 = call ptr @mz_zip_reader_extract_iter_new(ptr noundef %0, i32 noundef %8, i32 noundef %2)
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi ptr [ %9, %7 ], [ null, %3 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #38
  ret ptr %11
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mz_zip_reader_extract_iter_read(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #8 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = icmp eq ptr %0, null
  br i1 %6, label %373, label %7

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !240
  %9 = icmp eq ptr %8, null
  br i1 %9, label %373, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 15
  %12 = load ptr, ptr %11, align 8, !tbaa !184
  %13 = icmp ne ptr %12, null
  %14 = icmp ne ptr %1, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %373

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 1
  %18 = load i32, ptr %17, align 8, !tbaa !241
  %19 = and i32 %18, 1024
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %40

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 9, i32 5
  %23 = load i16, ptr %22, align 2, !tbaa !239
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %40, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 11
  %27 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 7
  %28 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 12
  %29 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 5
  %30 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 3
  %31 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 6
  %32 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 8
  %33 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 10
  %34 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 4
  %35 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 13
  %36 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 2
  %37 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 14
  %38 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 9, i32 8
  %39 = load i64, ptr %28, align 8, !tbaa !255
  br label %189

40:                                               ; preds = %21, %16
  %41 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 6
  %42 = load i64, ptr %41, align 8, !tbaa !252
  %43 = tail call i64 @llvm.umin.i64(i64 %42, i64 %2)
  %44 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %12, i64 0, i32 8
  %45 = load ptr, ptr %44, align 8, !tbaa !218
  %46 = icmp eq ptr %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 10
  %49 = load ptr, ptr %48, align 8, !tbaa !249
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1, ptr align 1 %49, i64 %43, i1 false)
  %50 = load ptr, ptr %48, align 8, !tbaa !249
  %51 = getelementptr inbounds i8, ptr %50, i64 %43
  store ptr %51, ptr %48, align 8, !tbaa !249
  br label %66

52:                                               ; preds = %40
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 11
  %54 = load ptr, ptr %53, align 8, !tbaa !196
  %55 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 14
  %56 = load ptr, ptr %55, align 8, !tbaa !205
  %57 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 8
  %58 = load i64, ptr %57, align 8, !tbaa !247
  %59 = tail call i64 %54(ptr noundef %56, i64 noundef %58, ptr noundef nonnull %1, i64 noundef %43) #38
  %60 = icmp eq i64 %59, %43
  br i1 %60, label %66, label %61

61:                                               ; preds = %52
  %62 = load ptr, ptr %0, align 8, !tbaa !240
  %63 = icmp eq ptr %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.mz_zip_archive, ptr %62, i64 0, i32 5
  store i32 20, ptr %65, align 4, !tbaa !189
  br label %70

66:                                               ; preds = %52, %47
  %67 = load i32, ptr %17, align 8, !tbaa !241
  %68 = and i32 %67, 1024
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %79, label %180

70:                                               ; preds = %64, %61
  %71 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 2
  store i32 -1, ptr %71, align 4, !tbaa !242
  %72 = load i32, ptr %17, align 8, !tbaa !241
  %73 = and i32 %72, 1024
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %180

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 14
  %77 = load i32, ptr %76, align 8, !tbaa !243
  %78 = xor i32 %77, -1
  br label %175

79:                                               ; preds = %66
  %80 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 14
  %81 = load i32, ptr %80, align 8, !tbaa !243
  %82 = xor i32 %81, -1
  %83 = icmp ugt i64 %43, 3
  br i1 %83, label %109, label %84

84:                                               ; preds = %109, %79
  %85 = phi i64 [ %43, %79 ], [ %149, %109 ]
  %86 = phi i32 [ %82, %79 ], [ %147, %109 ]
  %87 = phi ptr [ %1, %79 ], [ %148, %109 ]
  %88 = icmp eq i64 %85, 0
  br i1 %88, label %175, label %89

89:                                               ; preds = %84
  %90 = and i64 %85, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %103, label %92

92:                                               ; preds = %89
  %93 = lshr i32 %86, 8
  %94 = load i8, ptr %87, align 1, !tbaa !3
  %95 = trunc i32 %86 to i8
  %96 = xor i8 %94, %95
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %97
  %99 = load i32, ptr %98, align 4, !tbaa !12
  %100 = xor i32 %99, %93
  %101 = getelementptr inbounds i8, ptr %87, i64 1
  %102 = add i64 %85, -1
  br label %103

103:                                              ; preds = %92, %89
  %104 = phi i32 [ undef, %89 ], [ %100, %92 ]
  %105 = phi ptr [ %87, %89 ], [ %101, %92 ]
  %106 = phi i32 [ %86, %89 ], [ %100, %92 ]
  %107 = phi i64 [ %85, %89 ], [ %102, %92 ]
  %108 = icmp eq i64 %85, 1
  br i1 %108, label %175, label %151

109:                                              ; preds = %79, %109
  %110 = phi ptr [ %148, %109 ], [ %1, %79 ]
  %111 = phi i32 [ %147, %109 ], [ %82, %79 ]
  %112 = phi i64 [ %149, %109 ], [ %43, %79 ]
  %113 = lshr i32 %111, 8
  %114 = load i8, ptr %110, align 1, !tbaa !3
  %115 = trunc i32 %111 to i8
  %116 = xor i8 %114, %115
  %117 = zext i8 %116 to i64
  %118 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %117
  %119 = load i32, ptr %118, align 4, !tbaa !12
  %120 = xor i32 %119, %113
  %121 = lshr i32 %120, 8
  %122 = getelementptr inbounds i8, ptr %110, i64 1
  %123 = load i8, ptr %122, align 1, !tbaa !3
  %124 = trunc i32 %120 to i8
  %125 = xor i8 %123, %124
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !12
  %129 = xor i32 %121, %128
  %130 = lshr i32 %129, 8
  %131 = getelementptr inbounds i8, ptr %110, i64 2
  %132 = load i8, ptr %131, align 1, !tbaa !3
  %133 = trunc i32 %129 to i8
  %134 = xor i8 %132, %133
  %135 = zext i8 %134 to i64
  %136 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %135
  %137 = load i32, ptr %136, align 4, !tbaa !12
  %138 = xor i32 %130, %137
  %139 = lshr i32 %138, 8
  %140 = getelementptr inbounds i8, ptr %110, i64 3
  %141 = load i8, ptr %140, align 1, !tbaa !3
  %142 = trunc i32 %138 to i8
  %143 = xor i8 %141, %142
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %144
  %146 = load i32, ptr %145, align 4, !tbaa !12
  %147 = xor i32 %139, %146
  %148 = getelementptr inbounds i8, ptr %110, i64 4
  %149 = add i64 %112, -4
  %150 = icmp ugt i64 %149, 3
  br i1 %150, label %109, label %84, !llvm.loop !14

151:                                              ; preds = %103, %151
  %152 = phi ptr [ %172, %151 ], [ %105, %103 ]
  %153 = phi i32 [ %171, %151 ], [ %106, %103 ]
  %154 = phi i64 [ %173, %151 ], [ %107, %103 ]
  %155 = lshr i32 %153, 8
  %156 = load i8, ptr %152, align 1, !tbaa !3
  %157 = trunc i32 %153 to i8
  %158 = xor i8 %156, %157
  %159 = zext i8 %158 to i64
  %160 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !12
  %162 = xor i32 %161, %155
  %163 = getelementptr inbounds i8, ptr %152, i64 1
  %164 = lshr i32 %162, 8
  %165 = load i8, ptr %163, align 1, !tbaa !3
  %166 = trunc i32 %162 to i8
  %167 = xor i8 %165, %166
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %168
  %170 = load i32, ptr %169, align 4, !tbaa !12
  %171 = xor i32 %170, %164
  %172 = getelementptr inbounds i8, ptr %152, i64 2
  %173 = add i64 %154, -2
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %151, !llvm.loop !15

175:                                              ; preds = %103, %151, %75, %84
  %176 = phi i64 [ %43, %84 ], [ 0, %75 ], [ %43, %151 ], [ %43, %103 ]
  %177 = phi ptr [ %80, %84 ], [ %76, %75 ], [ %80, %151 ], [ %80, %103 ]
  %178 = phi i32 [ %86, %84 ], [ %78, %75 ], [ %104, %103 ], [ %171, %151 ]
  %179 = xor i32 %178, -1
  store i32 %179, ptr %177, align 8, !tbaa !243
  br label %180

180:                                              ; preds = %70, %175, %66
  %181 = phi i64 [ 0, %70 ], [ %176, %175 ], [ %43, %66 ]
  %182 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 7
  %183 = load <2 x i64>, ptr %182, align 8, !tbaa !46
  %184 = insertelement <2 x i64> poison, i64 %181, i64 0
  %185 = shufflevector <2 x i64> %184, <2 x i64> poison, <2 x i32> zeroinitializer
  %186 = add <2 x i64> %183, %185
  store <2 x i64> %186, ptr %182, align 8, !tbaa !46
  %187 = load i64, ptr %41, align 8, !tbaa !252
  %188 = sub i64 %187, %181
  store i64 %188, ptr %41, align 8, !tbaa !252
  br label %373

189:                                              ; preds = %25, %369
  %190 = phi i64 [ %366, %369 ], [ %39, %25 ]
  %191 = phi i64 [ %367, %369 ], [ 0, %25 ]
  %192 = load ptr, ptr %26, align 8, !tbaa !254
  %193 = load i64, ptr %27, align 8, !tbaa !245
  %194 = and i64 %193, 32767
  %195 = getelementptr inbounds i8, ptr %192, i64 %194
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #38
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #38
  %196 = sub nuw nsw i64 32768, %194
  store i64 %196, ptr %5, align 8, !tbaa !46
  %197 = icmp eq i64 %190, 0
  br i1 %197, label %198, label %247

198:                                              ; preds = %189
  %199 = load i64, ptr %29, align 8, !tbaa !250
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %230

201:                                              ; preds = %198
  %202 = load ptr, ptr %0, align 8, !tbaa !240
  %203 = getelementptr inbounds %struct.mz_zip_archive, ptr %202, i64 0, i32 15
  %204 = load ptr, ptr %203, align 8, !tbaa !184
  %205 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %204, i64 0, i32 8
  %206 = load ptr, ptr %205, align 8, !tbaa !218
  %207 = icmp eq ptr %206, null
  br i1 %207, label %208, label %230

208:                                              ; preds = %201
  %209 = load i64, ptr %30, align 8, !tbaa !251
  %210 = load i64, ptr %31, align 8, !tbaa !252
  %211 = tail call i64 @llvm.umin.i64(i64 %209, i64 %210)
  store i64 %211, ptr %29, align 8, !tbaa !250
  %212 = getelementptr inbounds %struct.mz_zip_archive, ptr %202, i64 0, i32 11
  %213 = load ptr, ptr %212, align 8, !tbaa !196
  %214 = getelementptr inbounds %struct.mz_zip_archive, ptr %202, i64 0, i32 14
  %215 = load ptr, ptr %214, align 8, !tbaa !205
  %216 = load i64, ptr %32, align 8, !tbaa !247
  %217 = load ptr, ptr %33, align 8, !tbaa !249
  %218 = tail call i64 %213(ptr noundef %215, i64 noundef %216, ptr noundef %217, i64 noundef %211) #38
  %219 = load i64, ptr %29, align 8, !tbaa !250
  %220 = icmp eq i64 %218, %219
  br i1 %220, label %224, label %221

221:                                              ; preds = %208
  %222 = load ptr, ptr %0, align 8, !tbaa !240
  %223 = icmp eq ptr %222, null
  br i1 %223, label %364, label %360

224:                                              ; preds = %208
  %225 = load i64, ptr %32, align 8, !tbaa !247
  %226 = add i64 %225, %218
  store i64 %226, ptr %32, align 8, !tbaa !247
  %227 = load i64, ptr %31, align 8, !tbaa !252
  %228 = sub i64 %227, %218
  store i64 %228, ptr %31, align 8, !tbaa !252
  store i64 0, ptr %34, align 8, !tbaa !244
  %229 = load ptr, ptr %26, align 8, !tbaa !254
  br label %230

230:                                              ; preds = %198, %201, %224
  %231 = phi ptr [ %192, %198 ], [ %192, %201 ], [ %229, %224 ]
  %232 = phi i64 [ %199, %198 ], [ 0, %201 ], [ %218, %224 ]
  store i64 %232, ptr %4, align 8, !tbaa !46
  %233 = load ptr, ptr %33, align 8, !tbaa !249
  %234 = load i64, ptr %34, align 8, !tbaa !244
  %235 = getelementptr inbounds i8, ptr %233, i64 %234
  %236 = load i64, ptr %31, align 8, !tbaa !252
  %237 = icmp eq i64 %236, 0
  %238 = select i1 %237, i32 0, i32 2
  %239 = call i32 @tinfl_decompress(ptr noundef nonnull %35, ptr noundef %235, ptr noundef nonnull %4, ptr noundef %231, ptr noundef %195, ptr noundef nonnull %5, i32 noundef %238)
  store i32 %239, ptr %36, align 4, !tbaa !242
  %240 = load i64, ptr %4, align 8, !tbaa !46
  %241 = load i64, ptr %29, align 8, !tbaa !250
  %242 = sub i64 %241, %240
  store i64 %242, ptr %29, align 8, !tbaa !250
  %243 = load i64, ptr %34, align 8, !tbaa !244
  %244 = add i64 %243, %240
  store i64 %244, ptr %34, align 8, !tbaa !244
  %245 = load i64, ptr %5, align 8, !tbaa !46
  store i64 %245, ptr %28, align 8, !tbaa !255
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %365, label %247

247:                                              ; preds = %189, %230
  %248 = phi i64 [ %245, %230 ], [ %190, %189 ]
  %249 = sub i64 %2, %191
  %250 = tail call i64 @llvm.umin.i64(i64 %249, i64 %248)
  %251 = getelementptr inbounds i8, ptr %1, i64 %191
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %251, ptr align 1 %195, i64 %250, i1 false)
  %252 = load i32, ptr %37, align 8, !tbaa !243
  %253 = xor i32 %252, -1
  %254 = icmp ugt i64 %250, 3
  br i1 %254, label %280, label %255

255:                                              ; preds = %280, %247
  %256 = phi i64 [ %250, %247 ], [ %320, %280 ]
  %257 = phi i32 [ %253, %247 ], [ %318, %280 ]
  %258 = phi ptr [ %195, %247 ], [ %319, %280 ]
  %259 = icmp eq i64 %256, 0
  br i1 %259, label %346, label %260

260:                                              ; preds = %255
  %261 = and i64 %256, 1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %274, label %263

263:                                              ; preds = %260
  %264 = lshr i32 %257, 8
  %265 = load i8, ptr %258, align 1, !tbaa !3
  %266 = trunc i32 %257 to i8
  %267 = xor i8 %265, %266
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %268
  %270 = load i32, ptr %269, align 4, !tbaa !12
  %271 = xor i32 %270, %264
  %272 = getelementptr inbounds i8, ptr %258, i64 1
  %273 = add i64 %256, -1
  br label %274

274:                                              ; preds = %263, %260
  %275 = phi i32 [ undef, %260 ], [ %271, %263 ]
  %276 = phi ptr [ %258, %260 ], [ %272, %263 ]
  %277 = phi i32 [ %257, %260 ], [ %271, %263 ]
  %278 = phi i64 [ %256, %260 ], [ %273, %263 ]
  %279 = icmp eq i64 %256, 1
  br i1 %279, label %346, label %322

280:                                              ; preds = %247, %280
  %281 = phi ptr [ %319, %280 ], [ %195, %247 ]
  %282 = phi i32 [ %318, %280 ], [ %253, %247 ]
  %283 = phi i64 [ %320, %280 ], [ %250, %247 ]
  %284 = lshr i32 %282, 8
  %285 = load i8, ptr %281, align 1, !tbaa !3
  %286 = trunc i32 %282 to i8
  %287 = xor i8 %285, %286
  %288 = zext i8 %287 to i64
  %289 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !12
  %291 = xor i32 %290, %284
  %292 = lshr i32 %291, 8
  %293 = getelementptr inbounds i8, ptr %281, i64 1
  %294 = load i8, ptr %293, align 1, !tbaa !3
  %295 = trunc i32 %291 to i8
  %296 = xor i8 %294, %295
  %297 = zext i8 %296 to i64
  %298 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !12
  %300 = xor i32 %292, %299
  %301 = lshr i32 %300, 8
  %302 = getelementptr inbounds i8, ptr %281, i64 2
  %303 = load i8, ptr %302, align 1, !tbaa !3
  %304 = trunc i32 %300 to i8
  %305 = xor i8 %303, %304
  %306 = zext i8 %305 to i64
  %307 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %306
  %308 = load i32, ptr %307, align 4, !tbaa !12
  %309 = xor i32 %301, %308
  %310 = lshr i32 %309, 8
  %311 = getelementptr inbounds i8, ptr %281, i64 3
  %312 = load i8, ptr %311, align 1, !tbaa !3
  %313 = trunc i32 %309 to i8
  %314 = xor i8 %312, %313
  %315 = zext i8 %314 to i64
  %316 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %315
  %317 = load i32, ptr %316, align 4, !tbaa !12
  %318 = xor i32 %310, %317
  %319 = getelementptr inbounds i8, ptr %281, i64 4
  %320 = add i64 %283, -4
  %321 = icmp ugt i64 %320, 3
  br i1 %321, label %280, label %255, !llvm.loop !14

322:                                              ; preds = %274, %322
  %323 = phi ptr [ %343, %322 ], [ %276, %274 ]
  %324 = phi i32 [ %342, %322 ], [ %277, %274 ]
  %325 = phi i64 [ %344, %322 ], [ %278, %274 ]
  %326 = lshr i32 %324, 8
  %327 = load i8, ptr %323, align 1, !tbaa !3
  %328 = trunc i32 %324 to i8
  %329 = xor i8 %327, %328
  %330 = zext i8 %329 to i64
  %331 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %330
  %332 = load i32, ptr %331, align 4, !tbaa !12
  %333 = xor i32 %332, %326
  %334 = getelementptr inbounds i8, ptr %323, i64 1
  %335 = lshr i32 %333, 8
  %336 = load i8, ptr %334, align 1, !tbaa !3
  %337 = trunc i32 %333 to i8
  %338 = xor i8 %336, %337
  %339 = zext i8 %338 to i64
  %340 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %339
  %341 = load i32, ptr %340, align 4, !tbaa !12
  %342 = xor i32 %341, %335
  %343 = getelementptr inbounds i8, ptr %323, i64 2
  %344 = add i64 %325, -2
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %322, !llvm.loop !15

346:                                              ; preds = %274, %322, %255
  %347 = phi i32 [ %257, %255 ], [ %275, %274 ], [ %342, %322 ]
  %348 = xor i32 %347, -1
  store i32 %348, ptr %37, align 8, !tbaa !243
  %349 = load i64, ptr %28, align 8, !tbaa !255
  %350 = sub i64 %349, %250
  store i64 %350, ptr %28, align 8, !tbaa !255
  %351 = load i64, ptr %27, align 8, !tbaa !245
  %352 = add i64 %351, %250
  store i64 %352, ptr %27, align 8, !tbaa !245
  %353 = load i64, ptr %38, align 8, !tbaa !256
  %354 = icmp ugt i64 %352, %353
  br i1 %354, label %355, label %358

355:                                              ; preds = %346
  %356 = load ptr, ptr %0, align 8, !tbaa !240
  %357 = icmp eq ptr %356, null
  br i1 %357, label %364, label %360

358:                                              ; preds = %346
  %359 = add i64 %250, %191
  br label %365

360:                                              ; preds = %355, %221
  %361 = phi ptr [ %222, %221 ], [ %356, %355 ]
  %362 = phi i32 [ 20, %221 ], [ 11, %355 ]
  %363 = getelementptr inbounds %struct.mz_zip_archive, ptr %361, i64 0, i32 5
  store i32 %362, ptr %363, align 4, !tbaa !189
  br label %364

364:                                              ; preds = %360, %355, %221
  store i32 -1, ptr %36, align 4, !tbaa !242
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #38
  br label %373

365:                                              ; preds = %230, %358
  %366 = phi i64 [ %350, %358 ], [ 0, %230 ]
  %367 = phi i64 [ %359, %358 ], [ %191, %230 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #38
  %368 = icmp ult i64 %367, %2
  br i1 %368, label %369, label %373

369:                                              ; preds = %365
  %370 = load i32, ptr %36, align 4, !tbaa !242
  %371 = add i32 %370, -1
  %372 = icmp ult i32 %371, 2
  br i1 %372, label %189, label %373

373:                                              ; preds = %369, %365, %364, %180, %3, %7, %10
  %374 = phi i64 [ 0, %10 ], [ 0, %7 ], [ 0, %3 ], [ %181, %180 ], [ %191, %364 ], [ %367, %365 ], [ %367, %369 ]
  ret i64 %374
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_iter_free(ptr noundef %0) local_unnamed_addr #8 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %64, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr %0, align 8, !tbaa !240
  %5 = icmp eq ptr %4, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 15
  %8 = load ptr, ptr %7, align 8, !tbaa !184
  %9 = icmp eq ptr %8, null
  br i1 %9, label %64, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !242
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %34

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 1
  %16 = load i32, ptr %15, align 8, !tbaa !241
  %17 = and i32 %16, 1024
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %34

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 7
  %21 = load i64, ptr %20, align 8, !tbaa !245
  %22 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 9, i32 8
  %23 = load i64, ptr %22, align 8, !tbaa !256
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 14
  %27 = load i32, ptr %26, align 8, !tbaa !243
  %28 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 9, i32 6
  %29 = load i32, ptr %28, align 8, !tbaa !257
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %34, label %31

31:                                               ; preds = %25, %19
  %32 = phi i32 [ 13, %19 ], [ 11, %25 ]
  %33 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 5
  store i32 %32, ptr %33, align 4, !tbaa !189
  store i32 -1, ptr %11, align 4, !tbaa !242
  br label %34

34:                                               ; preds = %31, %25, %14, %10
  %35 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %8, i64 0, i32 8
  %36 = load ptr, ptr %35, align 8, !tbaa !218
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 8
  %40 = load ptr, ptr %39, align 8, !tbaa !187
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 10
  %42 = load ptr, ptr %41, align 8, !tbaa !190
  %43 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 10
  %44 = load ptr, ptr %43, align 8, !tbaa !249
  tail call void %40(ptr noundef %42, ptr noundef %44) #38
  br label %45

45:                                               ; preds = %38, %34
  %46 = getelementptr inbounds %struct.mz_zip_reader_extract_iter_state, ptr %0, i64 0, i32 11
  %47 = load ptr, ptr %46, align 8, !tbaa !254
  %48 = icmp eq ptr %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  %50 = load ptr, ptr %0, align 8, !tbaa !240
  %51 = getelementptr inbounds %struct.mz_zip_archive, ptr %50, i64 0, i32 8
  %52 = load ptr, ptr %51, align 8, !tbaa !187
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %50, i64 0, i32 10
  %54 = load ptr, ptr %53, align 8, !tbaa !190
  tail call void %52(ptr noundef %54, ptr noundef nonnull %47) #38
  br label %55

55:                                               ; preds = %49, %45
  %56 = load i32, ptr %11, align 4, !tbaa !242
  %57 = load ptr, ptr %0, align 8, !tbaa !240
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %57, i64 0, i32 8
  %59 = load ptr, ptr %58, align 8, !tbaa !187
  %60 = getelementptr inbounds %struct.mz_zip_archive, ptr %57, i64 0, i32 10
  %61 = load ptr, ptr %60, align 8, !tbaa !190
  tail call void %59(ptr noundef %61, ptr noundef nonnull %0) #38
  %62 = icmp eq i32 %56, 0
  %63 = zext i1 %62 to i32
  br label %64

64:                                               ; preds = %1, %3, %6, %55
  %65 = phi i32 [ %63, %55 ], [ 0, %6 ], [ 0, %3 ], [ 0, %1 ]
  ret i32 %65
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_to_file(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca %struct.utimbuf, align 8
  %6 = alloca %struct.mz_zip_archive_file_stat, align 8
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %6) #38
  %7 = icmp eq ptr %0, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %10 = load ptr, ptr %9, align 8, !tbaa !184
  %11 = icmp eq ptr %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 8, !tbaa !207
  %15 = icmp ugt i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = load ptr, ptr %10, align 8, !tbaa !212
  %18 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %10, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !213
  %20 = zext i32 %1 to i64
  %21 = getelementptr inbounds i32, ptr %19, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !12
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, ptr %17, i64 %23
  br label %25

25:                                               ; preds = %4, %8, %12, %16
  %26 = phi ptr [ %24, %16 ], [ null, %12 ], [ null, %8 ], [ null, %4 ]
  %27 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef %0, i32 noundef %1, ptr noundef %26, ptr noundef nonnull %6, ptr noundef null)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %61, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 13
  %31 = load i32, ptr %30, align 4, !tbaa !228
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 15
  %34 = load i32, ptr %33, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %32, i1 %35, i1 false
  br i1 %36, label %40, label %37

37:                                               ; preds = %29
  br i1 %7, label %61, label %38

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 6, ptr %39, align 4, !tbaa !189
  br label %61

40:                                               ; preds = %29
  %41 = call noalias ptr @fopen(ptr noundef %2, ptr noundef nonnull @.str.20)
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  br i1 %7, label %61, label %44

44:                                               ; preds = %43
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 17, ptr %45, align 4, !tbaa !189
  br label %61

46:                                               ; preds = %40
  %47 = call i32 @mz_zip_reader_extract_to_callback(ptr noundef %0, i32 noundef %1, ptr noundef nonnull @mz_zip_file_write_callback, ptr noundef nonnull %41, i32 noundef %3)
  %48 = call i32 @fclose(ptr noundef nonnull %41)
  %49 = icmp eq i32 %48, -1
  %50 = icmp eq i32 %47, 0
  br i1 %49, label %51, label %55

51:                                               ; preds = %46
  %52 = or i1 %7, %50
  br i1 %52, label %61, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 21, ptr %54, align 4, !tbaa !189
  br label %61

55:                                               ; preds = %46
  br i1 %50, label %61, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %6, i64 0, i32 18
  %58 = load i64, ptr %57, align 8, !tbaa !258
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #38
  store i64 %58, ptr %5, align 8, !tbaa !259
  %59 = getelementptr inbounds %struct.utimbuf, ptr %5, i64 0, i32 1
  store i64 %58, ptr %59, align 8, !tbaa !261
  %60 = call i32 @utime(ptr noundef %2, ptr noundef nonnull %5) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #38
  br label %61

61:                                               ; preds = %51, %53, %44, %43, %38, %37, %55, %56, %25
  %62 = phi i32 [ 0, %25 ], [ %47, %56 ], [ 0, %55 ], [ 0, %37 ], [ 0, %38 ], [ 0, %43 ], [ 0, %44 ], [ 0, %51 ], [ 0, %53 ]
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %6) #38
  ret i32 %62
}

; Function Attrs: nofree nounwind uwtable
define internal i64 @mz_zip_file_write_callback(ptr nocapture noundef %0, i64 %1, ptr nocapture noundef %2, i64 noundef %3) #20 {
  %5 = tail call i64 @fwrite(ptr noundef %2, i64 noundef 1, i64 noundef %3, ptr noundef %0)
  ret i64 %5
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_file(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #38
  %6 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef %1, ptr noundef null, i32 noundef %3, ptr noundef nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = load i32, ptr %5, align 4, !tbaa !12
  %10 = call i32 @mz_zip_reader_extract_to_file(ptr noundef %0, i32 noundef %9, ptr noundef %2, i32 noundef %3)
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #38
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_to_cfile(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca %struct.mz_zip_archive_file_stat, align 8
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %5) #38
  %6 = icmp eq ptr %0, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %9 = load ptr, ptr %8, align 8, !tbaa !184
  %10 = icmp eq ptr %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %13 = load i32, ptr %12, align 8, !tbaa !207
  %14 = icmp ugt i32 %13, %1
  br i1 %14, label %15, label %24

15:                                               ; preds = %11
  %16 = load ptr, ptr %9, align 8, !tbaa !212
  %17 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %9, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !213
  %19 = zext i32 %1 to i64
  %20 = getelementptr inbounds i32, ptr %18, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !12
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %16, i64 %22
  br label %24

24:                                               ; preds = %4, %7, %11, %15
  %25 = phi ptr [ %23, %15 ], [ null, %11 ], [ null, %7 ], [ null, %4 ]
  %26 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef %0, i32 noundef %1, ptr noundef %25, ptr noundef nonnull %5, ptr noundef null)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 13
  %30 = load i32, ptr %29, align 4, !tbaa !228
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 15
  %33 = load i32, ptr %32, align 4
  %34 = icmp ne i32 %33, 0
  %35 = select i1 %31, i1 %34, i1 false
  br i1 %35, label %39, label %36

36:                                               ; preds = %28
  br i1 %6, label %41, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 6, ptr %38, align 4, !tbaa !189
  br label %41

39:                                               ; preds = %28
  %40 = call i32 @mz_zip_reader_extract_to_callback(ptr noundef %0, i32 noundef %1, ptr noundef nonnull @mz_zip_file_write_callback, ptr noundef %2, i32 noundef %3)
  br label %41

41:                                               ; preds = %37, %36, %24, %39
  %42 = phi i32 [ %40, %39 ], [ 0, %24 ], [ 0, %36 ], [ 0, %37 ]
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %5) #38
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_reader_extract_file_to_cfile(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca %struct.mz_zip_archive_file_stat, align 8
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #38
  %7 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef %0, ptr noundef %1, ptr noundef null, i32 noundef %3, ptr noundef nonnull %6)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %48, label %9

9:                                                ; preds = %4
  %10 = load i32, ptr %6, align 4, !tbaa !12
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %5) #38
  %11 = icmp eq ptr %0, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %14 = load ptr, ptr %13, align 8, !tbaa !184
  %15 = icmp eq ptr %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %18 = load i32, ptr %17, align 8, !tbaa !207
  %19 = icmp ugt i32 %18, %10
  br i1 %19, label %20, label %29

20:                                               ; preds = %16
  %21 = load ptr, ptr %14, align 8, !tbaa !212
  %22 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %14, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !213
  %24 = zext i32 %10 to i64
  %25 = getelementptr inbounds i32, ptr %23, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !12
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8, ptr %21, i64 %27
  br label %29

29:                                               ; preds = %20, %16, %12, %9
  %30 = phi ptr [ %28, %20 ], [ null, %16 ], [ null, %12 ], [ null, %9 ]
  %31 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef %0, i32 noundef %10, ptr noundef %30, ptr noundef nonnull %5, ptr noundef null)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 13
  %35 = load i32, ptr %34, align 4, !tbaa !228
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 15
  %38 = load i32, ptr %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = select i1 %36, i1 %39, i1 false
  br i1 %40, label %44, label %41

41:                                               ; preds = %33
  br i1 %11, label %46, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 6, ptr %43, align 4, !tbaa !189
  br label %46

44:                                               ; preds = %33
  %45 = call i32 @mz_zip_reader_extract_to_callback(ptr noundef %0, i32 noundef %10, ptr noundef nonnull @mz_zip_file_write_callback, ptr noundef %2, i32 noundef %3)
  br label %46

46:                                               ; preds = %29, %41, %42, %44
  %47 = phi i32 [ %45, %44 ], [ 0, %29 ], [ 0, %41 ], [ 0, %42 ]
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %5) #38
  br label %48

48:                                               ; preds = %4, %46
  %49 = phi i32 [ %47, %46 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #38
  ret i32 %49
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_validate_file(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = alloca %struct.mz_zip_archive_file_stat, align 8
  %5 = alloca i32, align 4
  %6 = alloca [8 x i32], align 16
  %7 = alloca i32, align 4
  %8 = alloca [32 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %4) #38
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #38
  store i32 0, ptr %5, align 4, !tbaa !12
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #38
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #38
  store i32 0, ptr %7, align 4, !tbaa !12
  %9 = icmp eq ptr %0, null
  br i1 %9, label %563, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %12 = load ptr, ptr %11, align 8, !tbaa !184
  %13 = icmp eq ptr %12, null
  br i1 %13, label %26, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %16 = load ptr, ptr %15, align 8, !tbaa !186
  %17 = icmp eq ptr %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %20 = load ptr, ptr %19, align 8, !tbaa !187
  %21 = icmp eq ptr %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  %24 = load ptr, ptr %23, align 8, !tbaa !196
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %22, %18, %14, %10
  %27 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %27, align 4, !tbaa !189
  br label %563

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %30 = load i32, ptr %29, align 8, !tbaa !207
  %31 = icmp ult i32 %30, %1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %33, align 4, !tbaa !189
  br label %563

34:                                               ; preds = %28
  %35 = icmp ugt i32 %30, %1
  br i1 %35, label %36, label %45

36:                                               ; preds = %34
  %37 = load ptr, ptr %12, align 8, !tbaa !212
  %38 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %12, i64 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !213
  %40 = zext i32 %1 to i64
  %41 = getelementptr inbounds i32, ptr %39, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !12
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, ptr %37, i64 %43
  br label %45

45:                                               ; preds = %34, %36
  %46 = phi ptr [ %44, %36 ], [ null, %34 ]
  %47 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %1, ptr noundef %46, ptr noundef nonnull %4, ptr noundef nonnull %5)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %563, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 13
  %51 = load i32, ptr %50, align 4, !tbaa !228
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 8
  %54 = load i64, ptr %53, align 8
  %55 = icmp ne i64 %54, 0
  %56 = select i1 %52, i1 %55, i1 false
  br i1 %56, label %57, label %563

57:                                               ; preds = %49
  %58 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 14
  %59 = load i32, ptr %58, align 8, !tbaa !262
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 5, ptr %62, align 4, !tbaa !189
  br label %563

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 5
  %65 = load i16, ptr %64, align 2, !tbaa !263
  %66 = and i16 %65, -9
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 4, ptr %69, align 4, !tbaa !189
  br label %563

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 15
  %72 = load i32, ptr %71, align 4, !tbaa !264
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 6, ptr %75, align 4, !tbaa !189
  br label %563

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 11
  %78 = load i64, ptr %77, align 8, !tbaa !231
  %79 = load ptr, ptr %23, align 8, !tbaa !196
  %80 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %81 = load ptr, ptr %80, align 8, !tbaa !205
  %82 = call i64 %79(ptr noundef %81, i64 noundef %78, ptr noundef nonnull %6, i64 noundef 30) #38
  %83 = icmp eq i64 %82, 30
  br i1 %83, label %86, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %85, align 4, !tbaa !189
  br label %563

86:                                               ; preds = %76
  %87 = load i8, ptr %6, align 16, !tbaa !3
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds i8, ptr %6, i64 1
  %90 = load i8, ptr %89, align 1, !tbaa !3
  %91 = zext i8 %90 to i32
  %92 = shl nuw nsw i32 %91, 8
  %93 = or i32 %92, %88
  %94 = getelementptr inbounds i8, ptr %6, i64 2
  %95 = load i8, ptr %94, align 2, !tbaa !3
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 16
  %98 = or i32 %93, %97
  %99 = getelementptr inbounds i8, ptr %6, i64 3
  %100 = load i8, ptr %99, align 1, !tbaa !3
  %101 = zext i8 %100 to i32
  %102 = shl nuw i32 %101, 24
  %103 = or i32 %98, %102
  %104 = icmp eq i32 %103, 67324752
  br i1 %104, label %107, label %105

105:                                              ; preds = %86
  %106 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %106, align 4, !tbaa !189
  br label %563

107:                                              ; preds = %86
  %108 = getelementptr inbounds i8, ptr %6, i64 26
  %109 = load i8, ptr %108, align 2, !tbaa !3
  %110 = zext i8 %109 to i32
  %111 = getelementptr inbounds i8, ptr %6, i64 27
  %112 = load i8, ptr %111, align 1, !tbaa !3
  %113 = zext i8 %112 to i32
  %114 = shl nuw nsw i32 %113, 8
  %115 = or i32 %114, %110
  %116 = getelementptr inbounds i8, ptr %6, i64 28
  %117 = load i8, ptr %116, align 4, !tbaa !3
  %118 = zext i8 %117 to i32
  %119 = getelementptr inbounds i8, ptr %6, i64 29
  %120 = load i8, ptr %119, align 1, !tbaa !3
  %121 = zext i8 %120 to i32
  %122 = shl nuw nsw i32 %121, 8
  %123 = or i32 %122, %118
  %124 = getelementptr inbounds i8, ptr %6, i64 18
  %125 = load i8, ptr %124, align 2, !tbaa !3
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds i8, ptr %6, i64 19
  %128 = load i8, ptr %127, align 1, !tbaa !3
  %129 = zext i8 %128 to i64
  %130 = shl nuw nsw i64 %129, 8
  %131 = or i64 %130, %126
  %132 = getelementptr inbounds i8, ptr %6, i64 20
  %133 = load i8, ptr %132, align 4, !tbaa !3
  %134 = zext i8 %133 to i64
  %135 = shl nuw nsw i64 %134, 16
  %136 = or i64 %131, %135
  %137 = getelementptr inbounds i8, ptr %6, i64 21
  %138 = load i8, ptr %137, align 1, !tbaa !3
  %139 = zext i8 %138 to i64
  %140 = shl nuw nsw i64 %139, 24
  %141 = or i64 %136, %140
  %142 = getelementptr inbounds i8, ptr %6, i64 22
  %143 = load i8, ptr %142, align 2, !tbaa !3
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds i8, ptr %6, i64 23
  %146 = load i8, ptr %145, align 1, !tbaa !3
  %147 = zext i8 %146 to i64
  %148 = shl nuw nsw i64 %147, 8
  %149 = or i64 %148, %144
  %150 = getelementptr inbounds i8, ptr %6, i64 24
  %151 = load i8, ptr %150, align 8, !tbaa !3
  %152 = zext i8 %151 to i64
  %153 = shl nuw nsw i64 %152, 16
  %154 = or i64 %149, %153
  %155 = getelementptr inbounds i8, ptr %6, i64 25
  %156 = load i8, ptr %155, align 1, !tbaa !3
  %157 = zext i8 %156 to i64
  %158 = shl nuw nsw i64 %157, 24
  %159 = or i64 %154, %158
  %160 = getelementptr inbounds i8, ptr %6, i64 14
  %161 = load i8, ptr %160, align 2, !tbaa !3
  %162 = zext i8 %161 to i32
  %163 = getelementptr inbounds i8, ptr %6, i64 15
  %164 = load i8, ptr %163, align 1, !tbaa !3
  %165 = zext i8 %164 to i32
  %166 = shl nuw nsw i32 %165, 8
  %167 = or i32 %166, %162
  %168 = getelementptr inbounds i8, ptr %6, i64 16
  %169 = load i8, ptr %168, align 16, !tbaa !3
  %170 = zext i8 %169 to i32
  %171 = shl nuw nsw i32 %170, 16
  %172 = or i32 %167, %171
  %173 = getelementptr inbounds i8, ptr %6, i64 17
  %174 = load i8, ptr %173, align 1, !tbaa !3
  %175 = zext i8 %174 to i32
  %176 = shl nuw i32 %175, 24
  %177 = or i32 %172, %176
  %178 = getelementptr inbounds i8, ptr %6, i64 6
  %179 = load i8, ptr %178, align 2, !tbaa !3
  %180 = zext i32 %115 to i64
  %181 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 16
  %182 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %181) #42
  %183 = icmp eq i64 %182, %180
  br i1 %183, label %186, label %184

184:                                              ; preds = %107
  %185 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %185, align 4, !tbaa !189
  br label %563

186:                                              ; preds = %107
  %187 = add i64 %78, 30
  %188 = add i64 %187, %180
  %189 = zext i32 %123 to i64
  %190 = add i64 %188, %189
  %191 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 7
  %192 = load i64, ptr %191, align 8, !tbaa !232
  %193 = add i64 %192, %190
  %194 = load i64, ptr %0, align 8, !tbaa !204
  %195 = icmp ugt i64 %193, %194
  br i1 %195, label %196, label %198

196:                                              ; preds = %186
  %197 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %197, align 4, !tbaa !189
  br label %563

198:                                              ; preds = %186
  %199 = call i32 @llvm.umax.i32(i32 %115, i32 %123)
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %211, label %201

201:                                              ; preds = %198
  %202 = zext i32 %199 to i64
  %203 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %204 = load ptr, ptr %203, align 8, !tbaa !197
  %205 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %206 = load ptr, ptr %205, align 8, !tbaa !190
  %207 = call ptr %204(ptr noundef %206, ptr noundef null, i64 noundef 1, i64 noundef %202) #38
  %208 = icmp eq ptr %207, null
  br i1 %208, label %209, label %211

209:                                              ; preds = %201
  %210 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %210, align 4, !tbaa !189
  br label %558

211:                                              ; preds = %201, %198
  %212 = phi ptr [ null, %198 ], [ %207, %201 ]
  %213 = icmp eq i32 %115, 0
  br i1 %213, label %226, label %214

214:                                              ; preds = %211
  %215 = load ptr, ptr %23, align 8, !tbaa !196
  %216 = load ptr, ptr %80, align 8, !tbaa !205
  %217 = call i64 %215(ptr noundef %216, i64 noundef %187, ptr noundef %212, i64 noundef %180) #38
  %218 = icmp eq i64 %217, %180
  br i1 %218, label %221, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %220, align 4, !tbaa !189
  br label %558

221:                                              ; preds = %214
  %222 = call i32 @bcmp(ptr nonnull %181, ptr %212, i64 %180)
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 30, ptr %225, align 4, !tbaa !189
  br label %558

226:                                              ; preds = %221, %211
  %227 = icmp eq i32 %123, 0
  br i1 %227, label %354, label %228

228:                                              ; preds = %226
  %229 = icmp eq i64 %141, 4294967295
  %230 = icmp eq i64 %159, 4294967295
  %231 = select i1 %229, i1 true, i1 %230
  br i1 %231, label %232, label %354

232:                                              ; preds = %228
  %233 = load ptr, ptr %23, align 8, !tbaa !196
  %234 = load ptr, ptr %80, align 8, !tbaa !205
  %235 = call i64 %233(ptr noundef %234, i64 noundef %188, ptr noundef %212, i64 noundef %189) #38
  %236 = icmp eq i64 %235, %189
  br i1 %236, label %239, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %238, align 4, !tbaa !189
  br label %558

239:                                              ; preds = %232, %349
  %240 = phi ptr [ %351, %349 ], [ %212, %232 ]
  %241 = phi i32 [ %352, %349 ], [ %123, %232 ]
  %242 = icmp ult i32 %241, 4
  br i1 %242, label %243, label %245

243:                                              ; preds = %239
  %244 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %244, align 4, !tbaa !189
  br label %558

245:                                              ; preds = %239
  %246 = getelementptr inbounds i8, ptr %240, i64 2
  %247 = load i8, ptr %246, align 1, !tbaa !3
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds i8, ptr %240, i64 3
  %250 = load i8, ptr %249, align 1, !tbaa !3
  %251 = zext i8 %250 to i64
  %252 = shl nuw nsw i64 %251, 8
  %253 = or i64 %252, %248
  %254 = trunc i64 %253 to i32
  %255 = add nuw nsw i32 %254, 4
  %256 = icmp ult i32 %241, %255
  br i1 %256, label %257, label %259

257:                                              ; preds = %245
  %258 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %258, align 4, !tbaa !189
  br label %558

259:                                              ; preds = %245
  %260 = load i8, ptr %240, align 1, !tbaa !3
  %261 = zext i8 %260 to i32
  %262 = getelementptr inbounds i8, ptr %240, i64 1
  %263 = load i8, ptr %262, align 1, !tbaa !3
  %264 = zext i8 %263 to i32
  %265 = shl nuw nsw i32 %264, 8
  %266 = or i32 %265, %261
  %267 = icmp eq i32 %266, 1
  br i1 %267, label %268, label %349

268:                                              ; preds = %259
  %269 = icmp ult i64 %253, 16
  br i1 %269, label %270, label %272

270:                                              ; preds = %268
  %271 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %271, align 4, !tbaa !189
  br label %558

272:                                              ; preds = %268
  %273 = getelementptr inbounds i8, ptr %240, i64 4
  %274 = load i8, ptr %273, align 1, !tbaa !3
  %275 = zext i8 %274 to i64
  %276 = getelementptr inbounds i8, ptr %240, i64 5
  %277 = load i8, ptr %276, align 1, !tbaa !3
  %278 = zext i8 %277 to i64
  %279 = shl nuw nsw i64 %278, 8
  %280 = getelementptr inbounds i8, ptr %240, i64 6
  %281 = load i8, ptr %280, align 1, !tbaa !3
  %282 = zext i8 %281 to i64
  %283 = shl nuw nsw i64 %282, 16
  %284 = getelementptr inbounds i8, ptr %240, i64 7
  %285 = load i8, ptr %284, align 1, !tbaa !3
  %286 = zext i8 %285 to i64
  %287 = shl nuw nsw i64 %286, 24
  %288 = getelementptr inbounds i8, ptr %240, i64 8
  %289 = load i8, ptr %288, align 1, !tbaa !3
  %290 = zext i8 %289 to i64
  %291 = getelementptr inbounds i8, ptr %240, i64 9
  %292 = load i8, ptr %291, align 1, !tbaa !3
  %293 = zext i8 %292 to i64
  %294 = getelementptr inbounds i8, ptr %240, i64 10
  %295 = load i8, ptr %294, align 1, !tbaa !3
  %296 = zext i8 %295 to i64
  %297 = getelementptr inbounds i8, ptr %240, i64 11
  %298 = load i8, ptr %297, align 1, !tbaa !3
  %299 = zext i8 %298 to i64
  %300 = shl nuw i64 %299, 56
  %301 = shl nuw nsw i64 %296, 48
  %302 = shl nuw nsw i64 %293, 40
  %303 = shl nuw nsw i64 %290, 32
  %304 = or i64 %279, %275
  %305 = or i64 %304, %283
  %306 = or i64 %305, %287
  %307 = or i64 %306, %303
  %308 = or i64 %307, %302
  %309 = or i64 %308, %301
  %310 = or i64 %309, %300
  %311 = getelementptr inbounds i8, ptr %240, i64 12
  %312 = load i8, ptr %311, align 1, !tbaa !3
  %313 = zext i8 %312 to i64
  %314 = getelementptr inbounds i8, ptr %240, i64 13
  %315 = load i8, ptr %314, align 1, !tbaa !3
  %316 = zext i8 %315 to i64
  %317 = shl nuw nsw i64 %316, 8
  %318 = getelementptr inbounds i8, ptr %240, i64 14
  %319 = load i8, ptr %318, align 1, !tbaa !3
  %320 = zext i8 %319 to i64
  %321 = shl nuw nsw i64 %320, 16
  %322 = getelementptr inbounds i8, ptr %240, i64 15
  %323 = load i8, ptr %322, align 1, !tbaa !3
  %324 = zext i8 %323 to i64
  %325 = shl nuw nsw i64 %324, 24
  %326 = getelementptr inbounds i8, ptr %240, i64 16
  %327 = load i8, ptr %326, align 1, !tbaa !3
  %328 = zext i8 %327 to i64
  %329 = getelementptr inbounds i8, ptr %240, i64 17
  %330 = load i8, ptr %329, align 1, !tbaa !3
  %331 = zext i8 %330 to i64
  %332 = getelementptr inbounds i8, ptr %240, i64 18
  %333 = load i8, ptr %332, align 1, !tbaa !3
  %334 = zext i8 %333 to i64
  %335 = getelementptr inbounds i8, ptr %240, i64 19
  %336 = load i8, ptr %335, align 1, !tbaa !3
  %337 = zext i8 %336 to i64
  %338 = shl nuw i64 %337, 56
  %339 = shl nuw nsw i64 %334, 48
  %340 = shl nuw nsw i64 %331, 40
  %341 = shl nuw nsw i64 %328, 32
  %342 = or i64 %317, %313
  %343 = or i64 %342, %321
  %344 = or i64 %343, %325
  %345 = or i64 %344, %341
  %346 = or i64 %345, %340
  %347 = or i64 %346, %339
  %348 = or i64 %347, %338
  br label %354

349:                                              ; preds = %259
  %350 = zext i32 %255 to i64
  %351 = getelementptr inbounds i8, ptr %240, i64 %350
  %352 = sub i32 %241, %255
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %239, !llvm.loop !265

354:                                              ; preds = %349, %272, %228, %226
  %355 = phi i64 [ %159, %228 ], [ %159, %226 ], [ %310, %272 ], [ %159, %349 ]
  %356 = phi i64 [ %141, %228 ], [ %141, %226 ], [ %348, %272 ], [ %141, %349 ]
  %357 = phi i1 [ false, %228 ], [ false, %226 ], [ true, %272 ], [ false, %349 ]
  %358 = and i8 %179, 8
  %359 = icmp eq i8 %358, 0
  %360 = icmp ne i64 %356, 0
  %361 = select i1 %359, i1 true, i1 %360
  %362 = icmp ne i32 %177, 0
  %363 = select i1 %361, i1 true, i1 %362
  br i1 %363, label %530, label %364

364:                                              ; preds = %354
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #38
  %365 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %12, i64 0, i32 4
  %366 = load i32, ptr %365, align 4, !tbaa !202
  %367 = icmp ne i32 %366, 0
  %368 = or i1 %357, %367
  %369 = load ptr, ptr %23, align 8, !tbaa !196
  %370 = load ptr, ptr %80, align 8, !tbaa !205
  %371 = load i64, ptr %191, align 8, !tbaa !232
  %372 = add i64 %371, %190
  %373 = select i1 %368, i64 24, i64 16
  %374 = call i64 %369(ptr noundef %370, i64 noundef %372, ptr noundef nonnull %8, i64 noundef %373) #38
  %375 = icmp eq i64 %374, %373
  br i1 %375, label %376, label %526

376:                                              ; preds = %364
  %377 = load i8, ptr %8, align 16, !tbaa !3
  %378 = zext i8 %377 to i32
  %379 = getelementptr inbounds i8, ptr %8, i64 1
  %380 = load i8, ptr %379, align 1, !tbaa !3
  %381 = zext i8 %380 to i32
  %382 = shl nuw nsw i32 %381, 8
  %383 = or i32 %382, %378
  %384 = getelementptr inbounds i8, ptr %8, i64 2
  %385 = load i8, ptr %384, align 2, !tbaa !3
  %386 = zext i8 %385 to i32
  %387 = shl nuw nsw i32 %386, 16
  %388 = or i32 %383, %387
  %389 = getelementptr inbounds i8, ptr %8, i64 3
  %390 = load i8, ptr %389, align 1, !tbaa !3
  %391 = zext i8 %390 to i32
  %392 = shl nuw i32 %391, 24
  %393 = or i32 %388, %392
  %394 = icmp eq i32 %393, 134695760
  %395 = select i1 %394, i64 4, i64 0
  %396 = getelementptr i8, ptr %8, i64 %395
  %397 = load i8, ptr %396, align 4, !tbaa !3
  %398 = zext i8 %397 to i32
  %399 = getelementptr inbounds i8, ptr %396, i64 1
  %400 = load i8, ptr %399, align 1, !tbaa !3
  %401 = zext i8 %400 to i32
  %402 = shl nuw nsw i32 %401, 8
  %403 = or i32 %402, %398
  %404 = getelementptr inbounds i8, ptr %396, i64 2
  %405 = load i8, ptr %404, align 2, !tbaa !3
  %406 = zext i8 %405 to i32
  %407 = shl nuw nsw i32 %406, 16
  %408 = or i32 %403, %407
  %409 = getelementptr inbounds i8, ptr %396, i64 3
  %410 = load i8, ptr %409, align 1, !tbaa !3
  %411 = zext i8 %410 to i32
  %412 = shl nuw i32 %411, 24
  %413 = or i32 %408, %412
  %414 = load i32, ptr %365, align 4, !tbaa !202
  %415 = icmp ne i32 %414, 0
  %416 = or i1 %357, %415
  %417 = getelementptr inbounds i8, ptr %396, i64 4
  %418 = load i8, ptr %417, align 4, !tbaa !3
  %419 = zext i8 %418 to i64
  %420 = getelementptr inbounds i8, ptr %417, i64 1
  %421 = load i8, ptr %420, align 1, !tbaa !3
  %422 = zext i8 %421 to i64
  %423 = shl nuw nsw i64 %422, 8
  %424 = getelementptr inbounds i8, ptr %417, i64 2
  %425 = load i8, ptr %424, align 2, !tbaa !3
  %426 = zext i8 %425 to i64
  %427 = shl nuw nsw i64 %426, 16
  %428 = getelementptr inbounds i8, ptr %417, i64 3
  %429 = load i8, ptr %428, align 1, !tbaa !3
  %430 = zext i8 %429 to i64
  %431 = shl nuw nsw i64 %430, 24
  br i1 %416, label %432, label %492

432:                                              ; preds = %376
  %433 = getelementptr inbounds i8, ptr %417, i64 4
  %434 = load i8, ptr %433, align 4, !tbaa !3
  %435 = zext i8 %434 to i64
  %436 = getelementptr inbounds i8, ptr %433, i64 1
  %437 = load i8, ptr %436, align 1, !tbaa !3
  %438 = zext i8 %437 to i64
  %439 = getelementptr inbounds i8, ptr %433, i64 2
  %440 = load i8, ptr %439, align 2, !tbaa !3
  %441 = zext i8 %440 to i64
  %442 = getelementptr inbounds i8, ptr %433, i64 3
  %443 = load i8, ptr %442, align 1, !tbaa !3
  %444 = zext i8 %443 to i64
  %445 = shl nuw i64 %444, 56
  %446 = shl nuw nsw i64 %441, 48
  %447 = shl nuw nsw i64 %438, 40
  %448 = shl nuw nsw i64 %435, 32
  %449 = or i64 %448, %447
  %450 = or i64 %449, %446
  %451 = or i64 %450, %445
  %452 = or i64 %451, %431
  %453 = or i64 %452, %427
  %454 = getelementptr inbounds i8, ptr %417, i64 8
  %455 = load i8, ptr %454, align 4, !tbaa !3
  %456 = zext i8 %455 to i64
  %457 = getelementptr inbounds i8, ptr %454, i64 1
  %458 = load i8, ptr %457, align 1, !tbaa !3
  %459 = zext i8 %458 to i64
  %460 = shl nuw nsw i64 %459, 8
  %461 = getelementptr inbounds i8, ptr %454, i64 2
  %462 = load i8, ptr %461, align 2, !tbaa !3
  %463 = zext i8 %462 to i64
  %464 = shl nuw nsw i64 %463, 16
  %465 = getelementptr inbounds i8, ptr %454, i64 3
  %466 = load i8, ptr %465, align 1, !tbaa !3
  %467 = zext i8 %466 to i64
  %468 = shl nuw nsw i64 %467, 24
  %469 = getelementptr inbounds i8, ptr %454, i64 4
  %470 = load i8, ptr %469, align 4, !tbaa !3
  %471 = zext i8 %470 to i64
  %472 = getelementptr inbounds i8, ptr %469, i64 1
  %473 = load i8, ptr %472, align 1, !tbaa !3
  %474 = zext i8 %473 to i64
  %475 = getelementptr inbounds i8, ptr %469, i64 2
  %476 = load i8, ptr %475, align 2, !tbaa !3
  %477 = zext i8 %476 to i64
  %478 = getelementptr inbounds i8, ptr %469, i64 3
  %479 = load i8, ptr %478, align 1, !tbaa !3
  %480 = zext i8 %479 to i64
  %481 = shl nuw i64 %480, 56
  %482 = shl nuw nsw i64 %477, 48
  %483 = shl nuw nsw i64 %474, 40
  %484 = shl nuw nsw i64 %471, 32
  %485 = or i64 %460, %456
  %486 = or i64 %485, %464
  %487 = or i64 %486, %468
  %488 = or i64 %487, %484
  %489 = or i64 %488, %483
  %490 = or i64 %489, %482
  %491 = or i64 %490, %481
  br label %512

492:                                              ; preds = %376
  %493 = or i64 %427, %431
  %494 = getelementptr inbounds i8, ptr %417, i64 4
  %495 = load i8, ptr %494, align 4, !tbaa !3
  %496 = zext i8 %495 to i64
  %497 = getelementptr inbounds i8, ptr %494, i64 1
  %498 = load i8, ptr %497, align 1, !tbaa !3
  %499 = zext i8 %498 to i64
  %500 = shl nuw nsw i64 %499, 8
  %501 = or i64 %500, %496
  %502 = getelementptr inbounds i8, ptr %494, i64 2
  %503 = load i8, ptr %502, align 2, !tbaa !3
  %504 = zext i8 %503 to i64
  %505 = shl nuw nsw i64 %504, 16
  %506 = or i64 %501, %505
  %507 = getelementptr inbounds i8, ptr %494, i64 3
  %508 = load i8, ptr %507, align 1, !tbaa !3
  %509 = zext i8 %508 to i64
  %510 = shl nuw nsw i64 %509, 24
  %511 = or i64 %506, %510
  br label %512

512:                                              ; preds = %492, %432
  %513 = phi i64 [ %453, %432 ], [ %493, %492 ]
  %514 = phi i64 [ %491, %432 ], [ %511, %492 ]
  %515 = or i64 %513, %419
  %516 = or i64 %515, %423
  %517 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 6
  %518 = load i32, ptr %517, align 8, !tbaa !234
  %519 = icmp eq i32 %413, %518
  %520 = load i64, ptr %191, align 8
  %521 = icmp eq i64 %516, %520
  %522 = select i1 %519, i1 %521, i1 false
  %523 = load i64, ptr %53, align 8
  %524 = icmp eq i64 %514, %523
  %525 = select i1 %522, i1 %524, i1 false
  br i1 %525, label %529, label %526

526:                                              ; preds = %512, %364
  %527 = phi i32 [ 20, %364 ], [ 30, %512 ]
  %528 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 %527, ptr %528, align 4, !tbaa !189
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #38
  br label %558

529:                                              ; preds = %512
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #38
  br label %542

530:                                              ; preds = %354
  %531 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 6
  %532 = load i32, ptr %531, align 8, !tbaa !234
  %533 = icmp eq i32 %177, %532
  %534 = load i64, ptr %191, align 8
  %535 = icmp eq i64 %356, %534
  %536 = select i1 %533, i1 %535, i1 false
  %537 = load i64, ptr %53, align 8
  %538 = icmp eq i64 %355, %537
  %539 = select i1 %536, i1 %538, i1 false
  br i1 %539, label %542, label %540

540:                                              ; preds = %530
  %541 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 30, ptr %541, align 4, !tbaa !189
  br label %558

542:                                              ; preds = %529, %530
  %543 = load ptr, ptr %19, align 8, !tbaa !187
  %544 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %545 = load ptr, ptr %544, align 8, !tbaa !190
  call void %543(ptr noundef %545, ptr noundef %212) #38
  %546 = and i32 %2, 8192
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %563

548:                                              ; preds = %542
  %549 = call i32 @mz_zip_reader_extract_to_callback(ptr noundef nonnull %0, i32 noundef %1, ptr noundef nonnull @mz_zip_compute_crc32_callback, ptr noundef nonnull %7, i32 noundef 0)
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %563, label %551

551:                                              ; preds = %548
  %552 = load i32, ptr %7, align 4, !tbaa !12
  %553 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 6
  %554 = load i32, ptr %553, align 8, !tbaa !234
  %555 = icmp eq i32 %552, %554
  br i1 %555, label %563, label %556

556:                                              ; preds = %551
  %557 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 30, ptr %557, align 4, !tbaa !189
  br label %563

558:                                              ; preds = %270, %257, %243, %526, %237, %540, %224, %219, %209
  %559 = phi ptr [ %212, %540 ], [ %212, %224 ], [ %212, %219 ], [ null, %209 ], [ %212, %237 ], [ %212, %526 ], [ %212, %243 ], [ %212, %257 ], [ %212, %270 ]
  %560 = load ptr, ptr %19, align 8, !tbaa !187
  %561 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %562 = load ptr, ptr %561, align 8, !tbaa !190
  call void %560(ptr noundef %562, ptr noundef %559) #38
  br label %563

563:                                              ; preds = %26, %3, %542, %551, %548, %49, %45, %558, %556, %196, %184, %105, %84, %74, %68, %61, %32
  %564 = phi i32 [ 0, %32 ], [ 0, %61 ], [ 0, %68 ], [ 0, %84 ], [ 0, %105 ], [ 0, %184 ], [ 0, %196 ], [ 0, %558 ], [ 0, %556 ], [ 0, %74 ], [ 0, %45 ], [ 1, %49 ], [ 0, %548 ], [ 1, %551 ], [ 1, %542 ], [ 0, %3 ], [ 0, %26 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #38
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #38
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %4) #38
  ret i32 %564
}

; Function Attrs: nofree nounwind uwtable
define internal fastcc i32 @mz_zip_file_stat_internal(ptr noundef %0, i32 noundef %1, ptr noundef readonly %2, ptr noundef %3, ptr noundef writeonly %4) unnamed_addr #20 {
  %6 = alloca %struct.tm, align 8
  %7 = icmp eq ptr %4, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store i32 0, ptr %4, align 4, !tbaa !12
  br label %9

9:                                                ; preds = %8, %5
  %10 = icmp ne ptr %2, null
  %11 = icmp ne ptr %3, null
  %12 = and i1 %10, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = icmp eq ptr %0, null
  br i1 %14, label %550, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %16, align 4, !tbaa !189
  br label %550

17:                                               ; preds = %9
  store i32 %1, ptr %3, align 8, !tbaa !266
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %19 = load ptr, ptr %18, align 8, !tbaa !184
  %20 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !213
  %22 = zext i32 %1 to i64
  %23 = getelementptr inbounds i32, ptr %21, i64 %22
  %24 = load i32, ptr %23, align 4, !tbaa !12
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 1
  store i64 %25, ptr %26, align 8, !tbaa !267
  %27 = getelementptr inbounds i8, ptr %2, i64 4
  %28 = load i8, ptr %27, align 1, !tbaa !3
  %29 = zext i8 %28 to i16
  %30 = getelementptr inbounds i8, ptr %2, i64 5
  %31 = load i8, ptr %30, align 1, !tbaa !3
  %32 = zext i8 %31 to i16
  %33 = shl nuw i16 %32, 8
  %34 = or i16 %33, %29
  %35 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 2
  store i16 %34, ptr %35, align 8, !tbaa !268
  %36 = getelementptr inbounds i8, ptr %2, i64 6
  %37 = load i8, ptr %36, align 1, !tbaa !3
  %38 = zext i8 %37 to i16
  %39 = getelementptr inbounds i8, ptr %2, i64 7
  %40 = load i8, ptr %39, align 1, !tbaa !3
  %41 = zext i8 %40 to i16
  %42 = shl nuw i16 %41, 8
  %43 = or i16 %42, %38
  %44 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 3
  store i16 %43, ptr %44, align 2, !tbaa !269
  %45 = getelementptr inbounds i8, ptr %2, i64 8
  %46 = load i8, ptr %45, align 1, !tbaa !3
  %47 = zext i8 %46 to i16
  %48 = getelementptr inbounds i8, ptr %2, i64 9
  %49 = load i8, ptr %48, align 1, !tbaa !3
  %50 = zext i8 %49 to i16
  %51 = shl nuw i16 %50, 8
  %52 = or i16 %51, %47
  %53 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 4
  store i16 %52, ptr %53, align 4, !tbaa !230
  %54 = getelementptr inbounds i8, ptr %2, i64 10
  %55 = load i8, ptr %54, align 1, !tbaa !3
  %56 = zext i8 %55 to i16
  %57 = getelementptr inbounds i8, ptr %2, i64 11
  %58 = load i8, ptr %57, align 1, !tbaa !3
  %59 = zext i8 %58 to i16
  %60 = shl nuw i16 %59, 8
  %61 = or i16 %60, %56
  %62 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 5
  store i16 %61, ptr %62, align 2, !tbaa !263
  %63 = getelementptr inbounds i8, ptr %2, i64 12
  %64 = load i8, ptr %63, align 1, !tbaa !3
  %65 = zext i8 %64 to i32
  %66 = getelementptr inbounds i8, ptr %2, i64 13
  %67 = load i8, ptr %66, align 1, !tbaa !3
  %68 = zext i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 8
  %70 = or i32 %69, %65
  %71 = getelementptr inbounds i8, ptr %2, i64 14
  %72 = load i8, ptr %71, align 1, !tbaa !3
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds i8, ptr %2, i64 15
  %75 = load i8, ptr %74, align 1, !tbaa !3
  %76 = zext i8 %75 to i32
  %77 = shl nuw nsw i32 %76, 8
  %78 = or i32 %77, %73
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %6) #38
  %79 = getelementptr inbounds i8, ptr %6, i64 24
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %79, i8 0, i64 32, i1 false)
  %80 = getelementptr inbounds %struct.tm, ptr %6, i64 0, i32 8
  store i32 -1, ptr %80, align 8, !tbaa !270
  %81 = lshr i32 %76, 1
  %82 = add nuw nsw i32 %81, 80
  %83 = getelementptr inbounds %struct.tm, ptr %6, i64 0, i32 5
  store i32 %82, ptr %83, align 4, !tbaa !272
  %84 = lshr i32 %78, 5
  %85 = and i32 %84, 15
  %86 = add nsw i32 %85, -1
  %87 = getelementptr inbounds %struct.tm, ptr %6, i64 0, i32 4
  store i32 %86, ptr %87, align 8, !tbaa !273
  %88 = and i32 %73, 31
  %89 = getelementptr inbounds %struct.tm, ptr %6, i64 0, i32 3
  store i32 %88, ptr %89, align 4, !tbaa !274
  %90 = lshr i32 %68, 3
  %91 = getelementptr inbounds %struct.tm, ptr %6, i64 0, i32 2
  store i32 %90, ptr %91, align 8, !tbaa !275
  %92 = lshr i32 %70, 5
  %93 = and i32 %92, 63
  %94 = getelementptr inbounds %struct.tm, ptr %6, i64 0, i32 1
  store i32 %93, ptr %94, align 4, !tbaa !276
  %95 = shl nuw nsw i32 %65, 1
  %96 = and i32 %95, 62
  store i32 %96, ptr %6, align 8, !tbaa !277
  %97 = call i64 @mktime(ptr noundef nonnull %6) #38
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %6) #38
  %98 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 18
  store i64 %97, ptr %98, align 8, !tbaa !258
  %99 = getelementptr inbounds i8, ptr %2, i64 16
  %100 = load i8, ptr %99, align 1, !tbaa !3
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds i8, ptr %2, i64 17
  %103 = load i8, ptr %102, align 1, !tbaa !3
  %104 = zext i8 %103 to i32
  %105 = shl nuw nsw i32 %104, 8
  %106 = or i32 %105, %101
  %107 = getelementptr inbounds i8, ptr %2, i64 18
  %108 = load i8, ptr %107, align 1, !tbaa !3
  %109 = zext i8 %108 to i32
  %110 = shl nuw nsw i32 %109, 16
  %111 = or i32 %106, %110
  %112 = getelementptr inbounds i8, ptr %2, i64 19
  %113 = load i8, ptr %112, align 1, !tbaa !3
  %114 = zext i8 %113 to i32
  %115 = shl nuw i32 %114, 24
  %116 = or i32 %111, %115
  %117 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 6
  store i32 %116, ptr %117, align 8, !tbaa !234
  %118 = getelementptr inbounds i8, ptr %2, i64 20
  %119 = load i8, ptr %118, align 1, !tbaa !3
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds i8, ptr %2, i64 21
  %122 = load i8, ptr %121, align 1, !tbaa !3
  %123 = zext i8 %122 to i64
  %124 = shl nuw nsw i64 %123, 8
  %125 = or i64 %124, %120
  %126 = getelementptr inbounds i8, ptr %2, i64 22
  %127 = load i8, ptr %126, align 1, !tbaa !3
  %128 = zext i8 %127 to i64
  %129 = shl nuw nsw i64 %128, 16
  %130 = or i64 %125, %129
  %131 = getelementptr inbounds i8, ptr %2, i64 23
  %132 = load i8, ptr %131, align 1, !tbaa !3
  %133 = zext i8 %132 to i64
  %134 = shl nuw nsw i64 %133, 24
  %135 = or i64 %130, %134
  %136 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 7
  store i64 %135, ptr %136, align 8, !tbaa !232
  %137 = getelementptr inbounds i8, ptr %2, i64 24
  %138 = load i8, ptr %137, align 1, !tbaa !3
  %139 = zext i8 %138 to i64
  %140 = getelementptr inbounds i8, ptr %2, i64 25
  %141 = load i8, ptr %140, align 1, !tbaa !3
  %142 = zext i8 %141 to i64
  %143 = shl nuw nsw i64 %142, 8
  %144 = or i64 %143, %139
  %145 = getelementptr inbounds i8, ptr %2, i64 26
  %146 = load i8, ptr %145, align 1, !tbaa !3
  %147 = zext i8 %146 to i64
  %148 = shl nuw nsw i64 %147, 16
  %149 = or i64 %144, %148
  %150 = getelementptr inbounds i8, ptr %2, i64 27
  %151 = load i8, ptr %150, align 1, !tbaa !3
  %152 = zext i8 %151 to i64
  %153 = shl nuw nsw i64 %152, 24
  %154 = or i64 %149, %153
  %155 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 8
  store i64 %154, ptr %155, align 8, !tbaa !233
  %156 = getelementptr inbounds i8, ptr %2, i64 36
  %157 = load i8, ptr %156, align 1, !tbaa !3
  %158 = zext i8 %157 to i16
  %159 = getelementptr inbounds i8, ptr %2, i64 37
  %160 = load i8, ptr %159, align 1, !tbaa !3
  %161 = zext i8 %160 to i16
  %162 = shl nuw i16 %161, 8
  %163 = or i16 %162, %158
  %164 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 9
  store i16 %163, ptr %164, align 8, !tbaa !278
  %165 = getelementptr inbounds i8, ptr %2, i64 38
  %166 = load i8, ptr %165, align 1, !tbaa !3
  %167 = zext i8 %166 to i32
  %168 = getelementptr inbounds i8, ptr %2, i64 39
  %169 = load i8, ptr %168, align 1, !tbaa !3
  %170 = zext i8 %169 to i32
  %171 = shl nuw nsw i32 %170, 8
  %172 = or i32 %171, %167
  %173 = getelementptr inbounds i8, ptr %2, i64 40
  %174 = load i8, ptr %173, align 1, !tbaa !3
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 16
  %177 = or i32 %172, %176
  %178 = getelementptr inbounds i8, ptr %2, i64 41
  %179 = load i8, ptr %178, align 1, !tbaa !3
  %180 = zext i8 %179 to i32
  %181 = shl nuw i32 %180, 24
  %182 = or i32 %177, %181
  %183 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 10
  store i32 %182, ptr %183, align 4, !tbaa !279
  %184 = getelementptr inbounds i8, ptr %2, i64 42
  %185 = load i8, ptr %184, align 1, !tbaa !3
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds i8, ptr %2, i64 43
  %188 = load i8, ptr %187, align 1, !tbaa !3
  %189 = zext i8 %188 to i64
  %190 = shl nuw nsw i64 %189, 8
  %191 = or i64 %190, %186
  %192 = getelementptr inbounds i8, ptr %2, i64 44
  %193 = load i8, ptr %192, align 1, !tbaa !3
  %194 = zext i8 %193 to i64
  %195 = shl nuw nsw i64 %194, 16
  %196 = or i64 %191, %195
  %197 = getelementptr inbounds i8, ptr %2, i64 45
  %198 = load i8, ptr %197, align 1, !tbaa !3
  %199 = zext i8 %198 to i64
  %200 = shl nuw nsw i64 %199, 24
  %201 = or i64 %196, %200
  %202 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 11
  store i64 %201, ptr %202, align 8, !tbaa !231
  %203 = getelementptr inbounds i8, ptr %2, i64 28
  %204 = load i8, ptr %203, align 1, !tbaa !3
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds i8, ptr %2, i64 29
  %207 = load i8, ptr %206, align 1, !tbaa !3
  %208 = zext i8 %207 to i32
  %209 = shl nuw nsw i32 %208, 8
  %210 = or i32 %209, %205
  %211 = tail call i32 @llvm.umin.i32(i32 %210, i32 511)
  %212 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 16
  %213 = getelementptr inbounds i8, ptr %2, i64 46
  %214 = zext i32 %211 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %212, ptr nonnull align 1 %213, i64 %214, i1 false)
  %215 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 16, i64 %214
  store i8 0, ptr %215, align 1, !tbaa !3
  %216 = getelementptr inbounds i8, ptr %2, i64 32
  %217 = load i8, ptr %216, align 1, !tbaa !3
  %218 = zext i8 %217 to i32
  %219 = getelementptr inbounds i8, ptr %2, i64 33
  %220 = load i8, ptr %219, align 1, !tbaa !3
  %221 = zext i8 %220 to i32
  %222 = shl nuw nsw i32 %221, 8
  %223 = or i32 %222, %218
  %224 = tail call i32 @llvm.umin.i32(i32 %223, i32 511)
  %225 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 12
  store i32 %224, ptr %225, align 8, !tbaa !280
  %226 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 17
  %227 = load i8, ptr %203, align 1, !tbaa !3
  %228 = zext i8 %227 to i64
  %229 = load i8, ptr %206, align 1, !tbaa !3
  %230 = zext i8 %229 to i64
  %231 = shl nuw nsw i64 %230, 8
  %232 = or i64 %231, %228
  %233 = getelementptr inbounds i8, ptr %213, i64 %232
  %234 = getelementptr inbounds i8, ptr %2, i64 30
  %235 = load i8, ptr %234, align 1, !tbaa !3
  %236 = zext i8 %235 to i64
  %237 = getelementptr inbounds i8, ptr %2, i64 31
  %238 = load i8, ptr %237, align 1, !tbaa !3
  %239 = zext i8 %238 to i64
  %240 = shl nuw nsw i64 %239, 8
  %241 = or i64 %240, %236
  %242 = getelementptr inbounds i8, ptr %233, i64 %241
  %243 = zext i32 %224 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %226, ptr nonnull align 1 %242, i64 %243, i1 false)
  %244 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 17, i64 %243
  store i8 0, ptr %244, align 1, !tbaa !3
  %245 = load ptr, ptr %18, align 8, !tbaa !184
  %246 = icmp eq ptr %245, null
  br i1 %246, label %308, label %247

247:                                              ; preds = %17
  %248 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %249 = load i32, ptr %248, align 8, !tbaa !207
  %250 = icmp ugt i32 %249, %1
  br i1 %250, label %251, label %283

251:                                              ; preds = %247
  %252 = load ptr, ptr %245, align 8, !tbaa !212
  %253 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %245, i64 0, i32 1
  %254 = load ptr, ptr %253, align 8, !tbaa !213
  %255 = getelementptr inbounds i32, ptr %254, i64 %22
  %256 = load i32, ptr %255, align 4, !tbaa !12
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds i8, ptr %252, i64 %257
  %259 = icmp eq ptr %252, null
  br i1 %259, label %283, label %260

260:                                              ; preds = %251
  %261 = getelementptr inbounds i8, ptr %258, i64 28
  %262 = load i8, ptr %261, align 1, !tbaa !3
  %263 = zext i8 %262 to i32
  %264 = getelementptr inbounds i8, ptr %258, i64 29
  %265 = load i8, ptr %264, align 1, !tbaa !3
  %266 = zext i8 %265 to i32
  %267 = shl nuw nsw i32 %266, 8
  %268 = or i32 %267, %263
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %277, label %270

270:                                              ; preds = %260
  %271 = getelementptr inbounds i8, ptr %258, i64 46
  %272 = zext i32 %268 to i64
  %273 = getelementptr inbounds i8, ptr %271, i64 %272
  %274 = getelementptr inbounds i8, ptr %273, i64 -1
  %275 = load i8, ptr %274, align 1, !tbaa !3
  %276 = icmp eq i8 %275, 47
  br i1 %276, label %285, label %277

277:                                              ; preds = %270, %260
  %278 = getelementptr inbounds i8, ptr %258, i64 38
  %279 = load i8, ptr %278, align 1, !tbaa !3
  %280 = lshr i8 %279, 4
  %281 = and i8 %280, 1
  %282 = zext i8 %281 to i32
  br label %285

283:                                              ; preds = %247, %251
  %284 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %284, align 4, !tbaa !189
  br label %285

285:                                              ; preds = %270, %277, %283
  %286 = phi i32 [ 0, %283 ], [ %282, %277 ], [ 1, %270 ]
  %287 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 13
  store i32 %286, ptr %287, align 4, !tbaa !228
  %288 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %289 = load i32, ptr %288, align 8, !tbaa !207
  %290 = icmp ugt i32 %289, %1
  br i1 %290, label %291, label %306

291:                                              ; preds = %285
  %292 = load ptr, ptr %245, align 8, !tbaa !212
  %293 = icmp eq ptr %292, null
  br i1 %293, label %306, label %294

294:                                              ; preds = %291
  %295 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %245, i64 0, i32 1
  %296 = load ptr, ptr %295, align 8, !tbaa !213
  %297 = getelementptr inbounds i32, ptr %296, i64 %22
  %298 = load i32, ptr %297, align 4, !tbaa !12
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds i8, ptr %292, i64 %299
  %301 = getelementptr inbounds i8, ptr %300, i64 8
  %302 = load i8, ptr %301, align 1, !tbaa !3
  %303 = and i8 %302, 65
  %304 = icmp ne i8 %303, 0
  %305 = zext i1 %304 to i32
  br label %311

306:                                              ; preds = %285, %291
  %307 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %307, align 4, !tbaa !189
  br label %311

308:                                              ; preds = %17
  %309 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 13
  store i32 0, ptr %309, align 4, !tbaa !228
  %310 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 14
  store i32 0, ptr %310, align 8, !tbaa !262
  br label %346

311:                                              ; preds = %306, %294
  %312 = phi i32 [ 0, %306 ], [ %305, %294 ]
  %313 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 14
  store i32 %312, ptr %313, align 8, !tbaa !262
  %314 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %315 = load i32, ptr %314, align 8, !tbaa !207
  %316 = icmp ugt i32 %315, %1
  br i1 %316, label %317, label %346

317:                                              ; preds = %311
  %318 = load ptr, ptr %245, align 8, !tbaa !212
  %319 = icmp eq ptr %318, null
  br i1 %319, label %346, label %320

320:                                              ; preds = %317
  %321 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %245, i64 0, i32 1
  %322 = load ptr, ptr %321, align 8, !tbaa !213
  %323 = getelementptr inbounds i32, ptr %322, i64 %22
  %324 = load i32, ptr %323, align 4, !tbaa !12
  %325 = zext i32 %324 to i64
  %326 = getelementptr inbounds i8, ptr %318, i64 %325
  %327 = getelementptr inbounds i8, ptr %326, i64 10
  %328 = load i8, ptr %327, align 1, !tbaa !3
  %329 = getelementptr inbounds i8, ptr %326, i64 11
  %330 = load i8, ptr %329, align 1, !tbaa !3
  %331 = zext i8 %330 to i32
  %332 = shl nuw nsw i32 %331, 8
  %333 = getelementptr inbounds i8, ptr %326, i64 8
  %334 = load i8, ptr %333, align 1, !tbaa !3
  %335 = zext i8 %334 to i32
  %336 = and i8 %328, -9
  %337 = zext i8 %336 to i32
  %338 = or i32 %332, %337
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %346

340:                                              ; preds = %320
  %341 = and i32 %335, 65
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %340
  %344 = and i32 %335, 32
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %349, label %346

346:                                              ; preds = %308, %343, %340, %320, %317, %311
  %347 = phi i32 [ 24, %308 ], [ 24, %311 ], [ 24, %317 ], [ 4, %320 ], [ 5, %340 ], [ 6, %343 ]
  %348 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 %347, ptr %348, align 4, !tbaa !189
  br label %349

349:                                              ; preds = %343, %346
  %350 = phi i32 [ 1, %343 ], [ 0, %346 ]
  %351 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 15
  store i32 %350, ptr %351, align 4, !tbaa !264
  %352 = tail call i64 @llvm.umax.i64(i64 %135, i64 %154)
  %353 = tail call i64 @llvm.umax.i64(i64 %352, i64 %201)
  %354 = icmp eq i64 %353, 4294967295
  br i1 %354, label %355, label %550

355:                                              ; preds = %349
  %356 = load i8, ptr %234, align 1, !tbaa !3
  %357 = zext i8 %356 to i32
  %358 = load i8, ptr %237, align 1, !tbaa !3
  %359 = zext i8 %358 to i32
  %360 = shl nuw nsw i32 %359, 8
  %361 = or i32 %360, %357
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %550, label %363

363:                                              ; preds = %355
  %364 = load i8, ptr %203, align 1, !tbaa !3
  %365 = zext i8 %364 to i64
  %366 = load i8, ptr %206, align 1, !tbaa !3
  %367 = zext i8 %366 to i64
  %368 = shl nuw nsw i64 %367, 8
  %369 = or i64 %368, %365
  %370 = getelementptr inbounds i8, ptr %213, i64 %369
  br label %371

371:                                              ; preds = %545, %363
  %372 = phi i32 [ %361, %363 ], [ %548, %545 ]
  %373 = phi ptr [ %370, %363 ], [ %546, %545 ]
  %374 = icmp ult i32 %372, 4
  br i1 %374, label %375, label %377

375:                                              ; preds = %371
  %376 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %376, align 4, !tbaa !189
  br label %550

377:                                              ; preds = %371
  %378 = getelementptr inbounds i8, ptr %373, i64 2
  %379 = load i8, ptr %378, align 1, !tbaa !3
  %380 = zext i8 %379 to i32
  %381 = getelementptr inbounds i8, ptr %373, i64 3
  %382 = load i8, ptr %381, align 1, !tbaa !3
  %383 = zext i8 %382 to i32
  %384 = shl nuw nsw i32 %383, 8
  %385 = or i32 %384, %380
  %386 = add nuw nsw i32 %385, 4
  %387 = zext i32 %386 to i64
  %388 = icmp ugt i32 %386, %372
  br i1 %388, label %389, label %391

389:                                              ; preds = %377
  %390 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %390, align 4, !tbaa !189
  br label %550

391:                                              ; preds = %377
  %392 = load i8, ptr %373, align 1, !tbaa !3
  %393 = zext i8 %392 to i32
  %394 = getelementptr inbounds i8, ptr %373, i64 1
  %395 = load i8, ptr %394, align 1, !tbaa !3
  %396 = zext i8 %395 to i32
  %397 = shl nuw nsw i32 %396, 8
  %398 = or i32 %397, %393
  %399 = icmp eq i32 %398, 1
  br i1 %399, label %400, label %545

400:                                              ; preds = %391
  %401 = getelementptr inbounds i8, ptr %373, i64 4
  br i1 %7, label %403, label %402

402:                                              ; preds = %400
  store i32 1, ptr %4, align 4, !tbaa !12
  br label %403

403:                                              ; preds = %402, %400
  %404 = load i64, ptr %155, align 8, !tbaa !233
  %405 = icmp eq i64 %404, 4294967295
  br i1 %405, label %406, label %450

406:                                              ; preds = %403
  %407 = icmp ult i32 %385, 8
  br i1 %407, label %408, label %410

408:                                              ; preds = %406
  %409 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %409, align 4, !tbaa !189
  br label %550

410:                                              ; preds = %406
  %411 = load i8, ptr %401, align 1, !tbaa !3
  %412 = zext i8 %411 to i64
  %413 = getelementptr inbounds i8, ptr %373, i64 5
  %414 = load i8, ptr %413, align 1, !tbaa !3
  %415 = zext i8 %414 to i64
  %416 = shl nuw nsw i64 %415, 8
  %417 = getelementptr inbounds i8, ptr %373, i64 6
  %418 = load i8, ptr %417, align 1, !tbaa !3
  %419 = zext i8 %418 to i64
  %420 = shl nuw nsw i64 %419, 16
  %421 = getelementptr inbounds i8, ptr %373, i64 7
  %422 = load i8, ptr %421, align 1, !tbaa !3
  %423 = zext i8 %422 to i64
  %424 = shl nuw nsw i64 %423, 24
  %425 = getelementptr inbounds i8, ptr %373, i64 8
  %426 = load i8, ptr %425, align 1, !tbaa !3
  %427 = zext i8 %426 to i64
  %428 = getelementptr inbounds i8, ptr %373, i64 9
  %429 = load i8, ptr %428, align 1, !tbaa !3
  %430 = zext i8 %429 to i64
  %431 = getelementptr inbounds i8, ptr %373, i64 10
  %432 = load i8, ptr %431, align 1, !tbaa !3
  %433 = zext i8 %432 to i64
  %434 = getelementptr inbounds i8, ptr %373, i64 11
  %435 = load i8, ptr %434, align 1, !tbaa !3
  %436 = zext i8 %435 to i64
  %437 = shl nuw i64 %436, 56
  %438 = shl nuw nsw i64 %433, 48
  %439 = shl nuw nsw i64 %430, 40
  %440 = shl nuw nsw i64 %427, 32
  %441 = or i64 %416, %412
  %442 = or i64 %441, %420
  %443 = or i64 %442, %424
  %444 = or i64 %443, %440
  %445 = or i64 %444, %439
  %446 = or i64 %445, %438
  %447 = or i64 %446, %437
  store i64 %447, ptr %155, align 8, !tbaa !233
  %448 = getelementptr inbounds i8, ptr %373, i64 12
  %449 = add nsw i32 %385, -8
  br label %450

450:                                              ; preds = %410, %403
  %451 = phi ptr [ %448, %410 ], [ %401, %403 ]
  %452 = phi i32 [ %449, %410 ], [ %385, %403 ]
  %453 = load i64, ptr %136, align 8, !tbaa !232
  %454 = icmp eq i64 %453, 4294967295
  br i1 %454, label %455, label %499

455:                                              ; preds = %450
  %456 = icmp ult i32 %452, 8
  br i1 %456, label %457, label %459

457:                                              ; preds = %455
  %458 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %458, align 4, !tbaa !189
  br label %550

459:                                              ; preds = %455
  %460 = load i8, ptr %451, align 1, !tbaa !3
  %461 = zext i8 %460 to i64
  %462 = getelementptr inbounds i8, ptr %451, i64 1
  %463 = load i8, ptr %462, align 1, !tbaa !3
  %464 = zext i8 %463 to i64
  %465 = shl nuw nsw i64 %464, 8
  %466 = getelementptr inbounds i8, ptr %451, i64 2
  %467 = load i8, ptr %466, align 1, !tbaa !3
  %468 = zext i8 %467 to i64
  %469 = shl nuw nsw i64 %468, 16
  %470 = getelementptr inbounds i8, ptr %451, i64 3
  %471 = load i8, ptr %470, align 1, !tbaa !3
  %472 = zext i8 %471 to i64
  %473 = shl nuw nsw i64 %472, 24
  %474 = getelementptr inbounds i8, ptr %451, i64 4
  %475 = load i8, ptr %474, align 1, !tbaa !3
  %476 = zext i8 %475 to i64
  %477 = getelementptr inbounds i8, ptr %451, i64 5
  %478 = load i8, ptr %477, align 1, !tbaa !3
  %479 = zext i8 %478 to i64
  %480 = getelementptr inbounds i8, ptr %451, i64 6
  %481 = load i8, ptr %480, align 1, !tbaa !3
  %482 = zext i8 %481 to i64
  %483 = getelementptr inbounds i8, ptr %451, i64 7
  %484 = load i8, ptr %483, align 1, !tbaa !3
  %485 = zext i8 %484 to i64
  %486 = shl nuw i64 %485, 56
  %487 = shl nuw nsw i64 %482, 48
  %488 = shl nuw nsw i64 %479, 40
  %489 = shl nuw nsw i64 %476, 32
  %490 = or i64 %465, %461
  %491 = or i64 %490, %469
  %492 = or i64 %491, %473
  %493 = or i64 %492, %489
  %494 = or i64 %493, %488
  %495 = or i64 %494, %487
  %496 = or i64 %495, %486
  store i64 %496, ptr %136, align 8, !tbaa !232
  %497 = getelementptr inbounds i8, ptr %451, i64 8
  %498 = add nsw i32 %452, -8
  br label %499

499:                                              ; preds = %459, %450
  %500 = phi ptr [ %497, %459 ], [ %451, %450 ]
  %501 = phi i32 [ %498, %459 ], [ %452, %450 ]
  %502 = icmp eq i64 %201, 4294967295
  br i1 %502, label %503, label %550

503:                                              ; preds = %499
  %504 = icmp ult i32 %501, 8
  br i1 %504, label %505, label %507

505:                                              ; preds = %503
  %506 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %506, align 4, !tbaa !189
  br label %550

507:                                              ; preds = %503
  %508 = load i8, ptr %500, align 1, !tbaa !3
  %509 = zext i8 %508 to i64
  %510 = getelementptr inbounds i8, ptr %500, i64 1
  %511 = load i8, ptr %510, align 1, !tbaa !3
  %512 = zext i8 %511 to i64
  %513 = shl nuw nsw i64 %512, 8
  %514 = getelementptr inbounds i8, ptr %500, i64 2
  %515 = load i8, ptr %514, align 1, !tbaa !3
  %516 = zext i8 %515 to i64
  %517 = shl nuw nsw i64 %516, 16
  %518 = getelementptr inbounds i8, ptr %500, i64 3
  %519 = load i8, ptr %518, align 1, !tbaa !3
  %520 = zext i8 %519 to i64
  %521 = shl nuw nsw i64 %520, 24
  %522 = getelementptr inbounds i8, ptr %500, i64 4
  %523 = load i8, ptr %522, align 1, !tbaa !3
  %524 = zext i8 %523 to i64
  %525 = getelementptr inbounds i8, ptr %500, i64 5
  %526 = load i8, ptr %525, align 1, !tbaa !3
  %527 = zext i8 %526 to i64
  %528 = getelementptr inbounds i8, ptr %500, i64 6
  %529 = load i8, ptr %528, align 1, !tbaa !3
  %530 = zext i8 %529 to i64
  %531 = getelementptr inbounds i8, ptr %500, i64 7
  %532 = load i8, ptr %531, align 1, !tbaa !3
  %533 = zext i8 %532 to i64
  %534 = shl nuw i64 %533, 56
  %535 = shl nuw nsw i64 %530, 48
  %536 = shl nuw nsw i64 %527, 40
  %537 = shl nuw nsw i64 %524, 32
  %538 = or i64 %513, %509
  %539 = or i64 %538, %517
  %540 = or i64 %539, %521
  %541 = or i64 %540, %537
  %542 = or i64 %541, %536
  %543 = or i64 %542, %535
  %544 = or i64 %543, %534
  store i64 %544, ptr %202, align 8, !tbaa !231
  br label %550

545:                                              ; preds = %391
  %546 = getelementptr inbounds i8, ptr %373, i64 %387
  %547 = add i32 %372, -4
  %548 = sub i32 %547, %385
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %371, !llvm.loop !281

550:                                              ; preds = %545, %505, %457, %408, %389, %375, %499, %507, %349, %355, %15, %13
  %551 = phi i32 [ 0, %13 ], [ 0, %15 ], [ 1, %355 ], [ 1, %349 ], [ 1, %507 ], [ 1, %499 ], [ 0, %375 ], [ 0, %389 ], [ 0, %408 ], [ 0, %457 ], [ 0, %505 ], [ 1, %545 ]
  ret i32 %551
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal i64 @mz_zip_compute_crc32_callback(ptr nocapture noundef %0, i64 %1, ptr nocapture noundef readonly %2, i64 noundef returned %3) #24 {
  %5 = load i32, ptr %0, align 4, !tbaa !12
  %6 = xor i32 %5, -1
  %7 = icmp ugt i64 %3, 3
  br i1 %7, label %33, label %8

8:                                                ; preds = %33, %4
  %9 = phi i64 [ %3, %4 ], [ %73, %33 ]
  %10 = phi i32 [ %6, %4 ], [ %71, %33 ]
  %11 = phi ptr [ %2, %4 ], [ %72, %33 ]
  %12 = icmp eq i64 %9, 0
  br i1 %12, label %99, label %13

13:                                               ; preds = %8
  %14 = and i64 %9, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %13
  %17 = lshr i32 %10, 8
  %18 = load i8, ptr %11, align 1, !tbaa !3
  %19 = trunc i32 %10 to i8
  %20 = xor i8 %18, %19
  %21 = zext i8 %20 to i64
  %22 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %21
  %23 = load i32, ptr %22, align 4, !tbaa !12
  %24 = xor i32 %23, %17
  %25 = getelementptr inbounds i8, ptr %11, i64 1
  %26 = add i64 %9, -1
  br label %27

27:                                               ; preds = %16, %13
  %28 = phi i32 [ undef, %13 ], [ %24, %16 ]
  %29 = phi ptr [ %11, %13 ], [ %25, %16 ]
  %30 = phi i32 [ %10, %13 ], [ %24, %16 ]
  %31 = phi i64 [ %9, %13 ], [ %26, %16 ]
  %32 = icmp eq i64 %9, 1
  br i1 %32, label %99, label %75

33:                                               ; preds = %4, %33
  %34 = phi ptr [ %72, %33 ], [ %2, %4 ]
  %35 = phi i32 [ %71, %33 ], [ %6, %4 ]
  %36 = phi i64 [ %73, %33 ], [ %3, %4 ]
  %37 = lshr i32 %35, 8
  %38 = load i8, ptr %34, align 1, !tbaa !3
  %39 = trunc i32 %35 to i8
  %40 = xor i8 %38, %39
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %41
  %43 = load i32, ptr %42, align 4, !tbaa !12
  %44 = xor i32 %43, %37
  %45 = lshr i32 %44, 8
  %46 = getelementptr inbounds i8, ptr %34, i64 1
  %47 = load i8, ptr %46, align 1, !tbaa !3
  %48 = trunc i32 %44 to i8
  %49 = xor i8 %47, %48
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !12
  %53 = xor i32 %45, %52
  %54 = lshr i32 %53, 8
  %55 = getelementptr inbounds i8, ptr %34, i64 2
  %56 = load i8, ptr %55, align 1, !tbaa !3
  %57 = trunc i32 %53 to i8
  %58 = xor i8 %56, %57
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !12
  %62 = xor i32 %54, %61
  %63 = lshr i32 %62, 8
  %64 = getelementptr inbounds i8, ptr %34, i64 3
  %65 = load i8, ptr %64, align 1, !tbaa !3
  %66 = trunc i32 %62 to i8
  %67 = xor i8 %65, %66
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %68
  %70 = load i32, ptr %69, align 4, !tbaa !12
  %71 = xor i32 %63, %70
  %72 = getelementptr inbounds i8, ptr %34, i64 4
  %73 = add i64 %36, -4
  %74 = icmp ugt i64 %73, 3
  br i1 %74, label %33, label %8, !llvm.loop !14

75:                                               ; preds = %27, %75
  %76 = phi ptr [ %96, %75 ], [ %29, %27 ]
  %77 = phi i32 [ %95, %75 ], [ %30, %27 ]
  %78 = phi i64 [ %97, %75 ], [ %31, %27 ]
  %79 = lshr i32 %77, 8
  %80 = load i8, ptr %76, align 1, !tbaa !3
  %81 = trunc i32 %77 to i8
  %82 = xor i8 %80, %81
  %83 = zext i8 %82 to i64
  %84 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %83
  %85 = load i32, ptr %84, align 4, !tbaa !12
  %86 = xor i32 %85, %79
  %87 = getelementptr inbounds i8, ptr %76, i64 1
  %88 = lshr i32 %86, 8
  %89 = load i8, ptr %87, align 1, !tbaa !3
  %90 = trunc i32 %86 to i8
  %91 = xor i8 %89, %90
  %92 = zext i8 %91 to i64
  %93 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %92
  %94 = load i32, ptr %93, align 4, !tbaa !12
  %95 = xor i32 %94, %88
  %96 = getelementptr inbounds i8, ptr %76, i64 2
  %97 = add i64 %78, -2
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %75, !llvm.loop !15

99:                                               ; preds = %27, %75, %8
  %100 = phi i32 [ %10, %8 ], [ %28, %27 ], [ %95, %75 ]
  %101 = xor i32 %100, -1
  store i32 %101, ptr %0, align 4, !tbaa !12
  ret i64 %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_validate_archive(ptr noundef %0, i32 noundef %1) local_unnamed_addr #8 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.mz_zip_archive_file_stat, align 8
  %5 = icmp eq ptr %0, null
  br i1 %5, label %96, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %8 = load ptr, ptr %7, align 8, !tbaa !184
  %9 = icmp eq ptr %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %12 = load ptr, ptr %11, align 8, !tbaa !186
  %13 = icmp eq ptr %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !187
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  %20 = load ptr, ptr %19, align 8, !tbaa !196
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %18, %14, %10, %6
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %23, align 4, !tbaa !189
  br label %96

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %8, i64 0, i32 4
  %26 = load i32, ptr %25, align 4, !tbaa !202
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %39

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %30 = load i32, ptr %29, align 8, !tbaa !207
  %31 = icmp ugt i32 %30, 65535
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %33, align 4, !tbaa !189
  br label %96

34:                                               ; preds = %28
  %35 = load i64, ptr %0, align 8, !tbaa !204
  %36 = icmp ugt i64 %35, 4294967295
  br i1 %36, label %37, label %48

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %38, align 4, !tbaa !189
  br label %96

39:                                               ; preds = %24
  %40 = getelementptr inbounds %struct.mz_zip_array, ptr %8, i64 0, i32 1
  %41 = load i64, ptr %40, align 8, !tbaa !282
  %42 = icmp ugt i64 %41, 4294967294
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %45 = load i32, ptr %44, align 8, !tbaa !207
  br label %48

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %47, align 4, !tbaa !189
  br label %96

48:                                               ; preds = %43, %34
  %49 = phi i32 [ %45, %43 ], [ %30, %34 ]
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %51 = icmp eq i32 %49, 0
  br i1 %51, label %96, label %52

52:                                               ; preds = %48
  %53 = and i32 %1, 4096
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 16
  br label %61

56:                                               ; preds = %91
  %57 = add nuw nsw i64 %62, 1
  %58 = load i32, ptr %50, align 8, !tbaa !207
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %61, label %96, !llvm.loop !283

61:                                               ; preds = %52, %56
  %62 = phi i64 [ 0, %52 ], [ %57, %56 ]
  br i1 %54, label %63, label %65

63:                                               ; preds = %61
  %64 = trunc i64 %62 to i32
  br label %91

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #38
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %4) #38
  %66 = load ptr, ptr %7, align 8, !tbaa !184
  %67 = icmp eq ptr %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %65
  %69 = load ptr, ptr %66, align 8, !tbaa !212
  %70 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %66, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !213
  %72 = getelementptr inbounds i32, ptr %71, i64 %62
  %73 = load i32, ptr %72, align 4, !tbaa !12
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8, ptr %69, i64 %74
  br label %76

76:                                               ; preds = %65, %68
  %77 = phi ptr [ %75, %68 ], [ null, %65 ]
  %78 = trunc i64 %62 to i32
  %79 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %78, ptr noundef %77, ptr noundef nonnull %4, ptr noundef null)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %95, label %81

81:                                               ; preds = %76
  %82 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef nonnull %0, ptr noundef nonnull %55, ptr noundef null, i32 noundef 0, ptr noundef nonnull %3)
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %81
  %85 = load i32, ptr %3, align 4, !tbaa !12
  %86 = zext i32 %85 to i64
  %87 = icmp eq i64 %62, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 30, ptr %89, align 4, !tbaa !189
  br label %95

90:                                               ; preds = %84
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %4) #38
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #38
  br label %91

91:                                               ; preds = %63, %90
  %92 = phi i32 [ %64, %63 ], [ %78, %90 ]
  %93 = call i32 @mz_zip_validate_file(ptr noundef nonnull %0, i32 noundef %92, i32 noundef %1)
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %56

95:                                               ; preds = %81, %76, %88
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %4) #38
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #38
  br label %96

96:                                               ; preds = %91, %56, %48, %22, %2, %95, %46, %37, %32
  %97 = phi i32 [ 0, %46 ], [ 0, %32 ], [ 0, %37 ], [ 0, %95 ], [ 0, %2 ], [ 0, %22 ], [ 1, %48 ], [ 0, %91 ], [ 1, %56 ]
  ret i32 %97
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_validate_mem_archive(ptr noundef %0, i64 noundef %1, i32 noundef %2, ptr noundef writeonly %3) local_unnamed_addr #8 {
  %5 = alloca %struct.mz_zip_archive, align 8
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %5) #38
  %6 = icmp ne ptr %0, null
  %7 = icmp ne i64 %1, 0
  %8 = and i1 %6, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = icmp eq ptr %3, null
  br i1 %10, label %87, label %84

11:                                               ; preds = %4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %5, i8 0, i64 112, i1 false)
  %12 = call i32 @mz_zip_reader_init_mem(ptr noundef nonnull %5, ptr noundef nonnull %0, i64 noundef %1, i32 noundef %2)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %11
  %15 = icmp eq ptr %3, null
  br i1 %15, label %87, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %5, i64 0, i32 5
  %18 = load i32, ptr %17, align 4, !tbaa !189
  br label %84

19:                                               ; preds = %11
  %20 = call i32 @mz_zip_validate_archive(ptr noundef nonnull %5, i32 noundef %2)
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %5, i64 0, i32 5
  %23 = load i32, ptr %22, align 4
  %24 = xor i1 %21, true
  %25 = select i1 %21, i32 %23, i32 0
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %5, i64 0, i32 15
  %27 = load ptr, ptr %26, align 8, !tbaa !184
  %28 = icmp eq ptr %27, null
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %5, i64 0, i32 7
  %30 = load ptr, ptr %29, align 8
  %31 = icmp eq ptr %30, null
  %32 = select i1 %28, i1 true, i1 %31
  br i1 %32, label %41, label %33

33:                                               ; preds = %19
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %5, i64 0, i32 8
  %35 = load ptr, ptr %34, align 8, !tbaa !187
  %36 = icmp ne ptr %35, null
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %5, i64 0, i32 3
  %38 = load i32, ptr %37, align 4
  %39 = icmp eq i32 %38, 1
  %40 = select i1 %36, i1 %39, i1 false
  br i1 %40, label %43, label %41

41:                                               ; preds = %33, %19
  br i1 %21, label %74, label %42

42:                                               ; preds = %41
  store i32 24, ptr %22, align 4, !tbaa !189
  br label %74

43:                                               ; preds = %33
  store ptr null, ptr %26, align 8, !tbaa !184
  %44 = getelementptr inbounds %struct.mz_zip_archive, ptr %5, i64 0, i32 10
  %45 = load ptr, ptr %44, align 8, !tbaa !190
  %46 = load ptr, ptr %27, align 8, !tbaa !191
  call void %35(ptr noundef %45, ptr noundef %46) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %27, i8 0, i64 32, i1 false)
  %47 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 1
  %48 = load ptr, ptr %34, align 8, !tbaa !187
  %49 = load ptr, ptr %44, align 8, !tbaa !190
  %50 = load ptr, ptr %47, align 8, !tbaa !191
  call void %48(ptr noundef %49, ptr noundef %50) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %47, i8 0, i64 32, i1 false)
  %51 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 2
  %52 = load ptr, ptr %34, align 8, !tbaa !187
  %53 = load ptr, ptr %44, align 8, !tbaa !190
  %54 = load ptr, ptr %51, align 8, !tbaa !191
  call void %52(ptr noundef %53, ptr noundef %54) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %51, i8 0, i64 32, i1 false)
  %55 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 6
  %56 = load ptr, ptr %55, align 8, !tbaa !193
  %57 = icmp eq ptr %56, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %43
  %59 = getelementptr inbounds %struct.mz_zip_archive, ptr %5, i64 0, i32 4
  %60 = load i32, ptr %59, align 8, !tbaa !195
  %61 = icmp eq i32 %60, 4
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = call i32 @fclose(ptr noundef nonnull %56)
  %64 = icmp ne i32 %63, -1
  %65 = select i1 %64, i1 true, i1 %21
  %66 = zext i1 %64 to i32
  br i1 %65, label %68, label %67

67:                                               ; preds = %62
  store i32 21, ptr %22, align 4, !tbaa !189
  br label %68

68:                                               ; preds = %62, %67, %58
  %69 = phi i32 [ %66, %62 ], [ 1, %58 ], [ 0, %67 ]
  store ptr null, ptr %55, align 8, !tbaa !193
  br label %70

70:                                               ; preds = %68, %43
  %71 = phi i32 [ %69, %68 ], [ 1, %43 ]
  %72 = load ptr, ptr %34, align 8, !tbaa !187
  %73 = load ptr, ptr %44, align 8, !tbaa !190
  call void %72(ptr noundef %73, ptr noundef nonnull %27) #38
  br label %74

74:                                               ; preds = %41, %42, %70
  %75 = phi i32 [ %71, %70 ], [ 0, %42 ], [ 0, %41 ]
  %76 = icmp ne i32 %75, 0
  %77 = select i1 %76, i1 %24, i1 false
  %78 = icmp eq ptr %3, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %74
  %80 = icmp eq i32 %25, 0
  %81 = load i32, ptr %22, align 4
  %82 = select i1 %80, i32 %81, i32 %25
  %83 = select i1 %76, i32 %25, i32 %82
  br label %84

84:                                               ; preds = %9, %16, %79
  %85 = phi i32 [ %83, %79 ], [ %18, %16 ], [ 24, %9 ]
  %86 = phi i1 [ %77, %79 ], [ false, %16 ], [ false, %9 ]
  store i32 %85, ptr %3, align 4, !tbaa !3
  br label %87

87:                                               ; preds = %84, %74, %14, %9
  %88 = phi i1 [ false, %9 ], [ false, %14 ], [ %77, %74 ], [ %86, %84 ]
  %89 = zext i1 %88 to i32
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %5) #38
  ret i32 %89
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_validate_file_archive(ptr noundef %0, i32 noundef %1, ptr noundef writeonly %2) local_unnamed_addr #8 {
  %4 = alloca %struct.mz_zip_archive, align 8
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %4) #38
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = icmp eq ptr %2, null
  br i1 %7, label %84, label %81

8:                                                ; preds = %3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %4, i8 0, i64 112, i1 false)
  %9 = call i32 @mz_zip_reader_init_file_v2(ptr noundef nonnull %4, ptr noundef nonnull %0, i32 noundef %1, i64 noundef 0, i64 noundef 0)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = icmp eq ptr %2, null
  br i1 %12, label %84, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 5
  %15 = load i32, ptr %14, align 4, !tbaa !189
  br label %81

16:                                               ; preds = %8
  %17 = call i32 @mz_zip_validate_archive(ptr noundef nonnull %4, i32 noundef %1)
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 5
  %20 = load i32, ptr %19, align 4
  %21 = xor i1 %18, true
  %22 = select i1 %18, i32 %20, i32 0
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 15
  %24 = load ptr, ptr %23, align 8, !tbaa !184
  %25 = icmp eq ptr %24, null
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 7
  %27 = load ptr, ptr %26, align 8
  %28 = icmp eq ptr %27, null
  %29 = select i1 %25, i1 true, i1 %28
  br i1 %29, label %38, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 8
  %32 = load ptr, ptr %31, align 8, !tbaa !187
  %33 = icmp ne ptr %32, null
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 3
  %35 = load i32, ptr %34, align 4
  %36 = icmp eq i32 %35, 1
  %37 = select i1 %33, i1 %36, i1 false
  br i1 %37, label %40, label %38

38:                                               ; preds = %30, %16
  br i1 %18, label %71, label %39

39:                                               ; preds = %38
  store i32 24, ptr %19, align 4, !tbaa !189
  br label %71

40:                                               ; preds = %30
  store ptr null, ptr %23, align 8, !tbaa !184
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 10
  %42 = load ptr, ptr %41, align 8, !tbaa !190
  %43 = load ptr, ptr %24, align 8, !tbaa !191
  call void %32(ptr noundef %42, ptr noundef %43) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %24, i8 0, i64 32, i1 false)
  %44 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %24, i64 0, i32 1
  %45 = load ptr, ptr %31, align 8, !tbaa !187
  %46 = load ptr, ptr %41, align 8, !tbaa !190
  %47 = load ptr, ptr %44, align 8, !tbaa !191
  call void %45(ptr noundef %46, ptr noundef %47) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %44, i8 0, i64 32, i1 false)
  %48 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %24, i64 0, i32 2
  %49 = load ptr, ptr %31, align 8, !tbaa !187
  %50 = load ptr, ptr %41, align 8, !tbaa !190
  %51 = load ptr, ptr %48, align 8, !tbaa !191
  call void %49(ptr noundef %50, ptr noundef %51) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %48, i8 0, i64 32, i1 false)
  %52 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %24, i64 0, i32 6
  %53 = load ptr, ptr %52, align 8, !tbaa !193
  %54 = icmp eq ptr %53, null
  br i1 %54, label %67, label %55

55:                                               ; preds = %40
  %56 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 4
  %57 = load i32, ptr %56, align 8, !tbaa !195
  %58 = icmp eq i32 %57, 4
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = call i32 @fclose(ptr noundef nonnull %53)
  %61 = icmp ne i32 %60, -1
  %62 = select i1 %61, i1 true, i1 %18
  %63 = zext i1 %61 to i32
  br i1 %62, label %65, label %64

64:                                               ; preds = %59
  store i32 21, ptr %19, align 4, !tbaa !189
  br label %65

65:                                               ; preds = %59, %64, %55
  %66 = phi i32 [ %63, %59 ], [ 1, %55 ], [ 0, %64 ]
  store ptr null, ptr %52, align 8, !tbaa !193
  br label %67

67:                                               ; preds = %65, %40
  %68 = phi i32 [ %66, %65 ], [ 1, %40 ]
  %69 = load ptr, ptr %31, align 8, !tbaa !187
  %70 = load ptr, ptr %41, align 8, !tbaa !190
  call void %69(ptr noundef %70, ptr noundef nonnull %24) #38
  br label %71

71:                                               ; preds = %38, %39, %67
  %72 = phi i32 [ %68, %67 ], [ 0, %39 ], [ 0, %38 ]
  %73 = icmp ne i32 %72, 0
  %74 = select i1 %73, i1 %21, i1 false
  %75 = icmp eq ptr %2, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %71
  %77 = icmp eq i32 %22, 0
  %78 = load i32, ptr %19, align 4
  %79 = select i1 %77, i32 %78, i32 %22
  %80 = select i1 %73, i32 %22, i32 %79
  br label %81

81:                                               ; preds = %6, %13, %76
  %82 = phi i32 [ %80, %76 ], [ %15, %13 ], [ 24, %6 ]
  %83 = phi i1 [ %74, %76 ], [ false, %13 ], [ false, %6 ]
  store i32 %82, ptr %2, align 4, !tbaa !3
  br label %84

84:                                               ; preds = %81, %71, %11, %6
  %85 = phi i1 [ false, %6 ], [ false, %11 ], [ %74, %71 ], [ %83, %81 ]
  %86 = zext i1 %85 to i32
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %4) #38
  ret i32 %86
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init_v2(ptr noundef %0, i64 noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = lshr i32 %2, 14
  %5 = and i32 %4, 1
  %6 = icmp eq ptr %0, null
  br i1 %6, label %72, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %9 = load ptr, ptr %8, align 8, !tbaa !184
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %19

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %13 = load ptr, ptr %12, align 8, !tbaa !284
  %14 = icmp eq ptr %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %17 = load i32, ptr %16, align 4, !tbaa !188
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %15, %11, %7
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %20, align 4, !tbaa !189
  br label %72

21:                                               ; preds = %15
  %22 = and i32 %2, 32768
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  %26 = load ptr, ptr %25, align 8, !tbaa !196
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %29, align 4, !tbaa !189
  br label %72

30:                                               ; preds = %24, %21
  %31 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 6
  %32 = load i64, ptr %31, align 8, !tbaa !285
  %33 = icmp eq i64 %32, 0
  %34 = tail call i64 @llvm.ctpop.i64(i64 %32), !range !286
  %35 = icmp ult i64 %34, 2
  %36 = or i1 %33, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %38, align 4, !tbaa !189
  br label %72

39:                                               ; preds = %30
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %41 = load ptr, ptr %40, align 8, !tbaa !186
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  store ptr @miniz_def_alloc_func, ptr %40, align 8, !tbaa !186
  br label %44

44:                                               ; preds = %43, %39
  %45 = phi ptr [ @miniz_def_alloc_func, %43 ], [ %41, %39 ]
  %46 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %47 = load ptr, ptr %46, align 8, !tbaa !187
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  store ptr @miniz_def_free_func, ptr %46, align 8, !tbaa !187
  br label %50

50:                                               ; preds = %49, %44
  %51 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %52 = load ptr, ptr %51, align 8, !tbaa !197
  %53 = icmp eq ptr %52, null
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  store ptr @miniz_def_realloc_func, ptr %51, align 8, !tbaa !197
  br label %55

55:                                               ; preds = %54, %50
  store i64 %1, ptr %0, align 8, !tbaa !204
  %56 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 1
  store i64 0, ptr %56, align 8, !tbaa !208
  %57 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  store i32 0, ptr %57, align 8, !tbaa !207
  %58 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %59 = load ptr, ptr %58, align 8, !tbaa !190
  %60 = tail call ptr %45(ptr noundef %59, i64 noundef 1, i64 noundef 152) #38
  store ptr %60, ptr %8, align 8, !tbaa !184
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %63, align 4, !tbaa !189
  br label %72

64:                                               ; preds = %55
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %60, i8 0, i64 152, i1 false)
  %65 = load ptr, ptr %8, align 8, !tbaa !184
  %66 = getelementptr inbounds %struct.mz_zip_array, ptr %65, i64 0, i32 3
  store i32 1, ptr %66, align 8, !tbaa !198
  %67 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %65, i64 0, i32 1, i32 3
  store i32 4, ptr %67, align 8, !tbaa !199
  %68 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %65, i64 0, i32 2, i32 3
  store i32 4, ptr %68, align 8, !tbaa !200
  %69 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %65, i64 0, i32 4
  store i32 %5, ptr %69, align 4, !tbaa !202
  %70 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %65, i64 0, i32 5
  store i32 %5, ptr %70, align 8, !tbaa !203
  %71 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 1, ptr %71, align 8, !tbaa !195
  store i32 2, ptr %16, align 4, !tbaa !188
  br label %72

72:                                               ; preds = %19, %3, %64, %62, %37, %28
  %73 = phi i32 [ 0, %37 ], [ 0, %62 ], [ 1, %64 ], [ 0, %28 ], [ 0, %3 ], [ 0, %19 ]
  ret i32 %73
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init(ptr noundef %0, i64 noundef %1) local_unnamed_addr #8 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %60, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %10 = load ptr, ptr %9, align 8, !tbaa !284
  %11 = icmp eq ptr %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %14 = load i32, ptr %13, align 4, !tbaa !188
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12, %8, %4
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %17, align 4, !tbaa !189
  br label %60

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 6
  %20 = load i64, ptr %19, align 8, !tbaa !285
  %21 = icmp eq i64 %20, 0
  %22 = tail call i64 @llvm.ctpop.i64(i64 %20), !range !286
  %23 = icmp ult i64 %22, 2
  %24 = or i1 %21, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %26, align 4, !tbaa !189
  br label %60

27:                                               ; preds = %18
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %29 = load ptr, ptr %28, align 8, !tbaa !186
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  store ptr @miniz_def_alloc_func, ptr %28, align 8, !tbaa !186
  br label %32

32:                                               ; preds = %31, %27
  %33 = phi ptr [ @miniz_def_alloc_func, %31 ], [ %29, %27 ]
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %35 = load ptr, ptr %34, align 8, !tbaa !187
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store ptr @miniz_def_free_func, ptr %34, align 8, !tbaa !187
  br label %38

38:                                               ; preds = %37, %32
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %40 = load ptr, ptr %39, align 8, !tbaa !197
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  store ptr @miniz_def_realloc_func, ptr %39, align 8, !tbaa !197
  br label %43

43:                                               ; preds = %42, %38
  store i64 %1, ptr %0, align 8, !tbaa !204
  %44 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 1
  store i64 0, ptr %44, align 8, !tbaa !208
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  store i32 0, ptr %45, align 8, !tbaa !207
  %46 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %47 = load ptr, ptr %46, align 8, !tbaa !190
  %48 = tail call ptr %33(ptr noundef %47, i64 noundef 1, i64 noundef 152) #38
  store ptr %48, ptr %5, align 8, !tbaa !184
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %43
  %51 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %51, align 4, !tbaa !189
  br label %60

52:                                               ; preds = %43
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %48, i8 0, i64 152, i1 false)
  %53 = load ptr, ptr %5, align 8, !tbaa !184
  %54 = getelementptr inbounds %struct.mz_zip_array, ptr %53, i64 0, i32 3
  store i32 1, ptr %54, align 8, !tbaa !198
  %55 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %53, i64 0, i32 1, i32 3
  store i32 4, ptr %55, align 8, !tbaa !199
  %56 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %53, i64 0, i32 2, i32 3
  store i32 4, ptr %56, align 8, !tbaa !200
  %57 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %53, i64 0, i32 4
  store i32 0, ptr %57, align 4, !tbaa !202
  %58 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %53, i64 0, i32 5
  store i32 0, ptr %58, align 8, !tbaa !203
  %59 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 1, ptr %59, align 8, !tbaa !195
  store i32 2, ptr %13, align 4, !tbaa !188
  br label %60

60:                                               ; preds = %2, %16, %25, %50, %52
  %61 = phi i32 [ 0, %25 ], [ 0, %50 ], [ 1, %52 ], [ 0, %2 ], [ 0, %16 ]
  ret i32 %61
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init_heap_v2(ptr noundef %0, i64 noundef %1, i64 noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  store ptr @mz_zip_heap_write_func, ptr %5, align 8, !tbaa !284
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 13
  store ptr null, ptr %6, align 8, !tbaa !217
  %7 = and i32 %3, 32768
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  store ptr @mz_zip_mem_read_func, ptr %10, align 8, !tbaa !196
  br label %11

11:                                               ; preds = %9, %4
  %12 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  store ptr %0, ptr %12, align 8, !tbaa !205
  %13 = tail call i32 @mz_zip_writer_init_v2(ptr noundef nonnull %0, i64 noundef %1, i32 noundef %3)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 3, ptr %16, align 8, !tbaa !195
  %17 = tail call i64 @llvm.umax.i64(i64 %2, i64 %1)
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %21 = load ptr, ptr %20, align 8, !tbaa !186
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %23 = load ptr, ptr %22, align 8, !tbaa !190
  %24 = tail call ptr %21(ptr noundef %23, i64 noundef 1, i64 noundef %17) #38
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %26 = load ptr, ptr %25, align 8, !tbaa !184
  %27 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %26, i64 0, i32 8
  store ptr %24, ptr %27, align 8, !tbaa !218
  %28 = icmp eq ptr %24, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = tail call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %0, i32 noundef 0)
  %31 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %31, align 4, !tbaa !189
  br label %34

32:                                               ; preds = %19
  %33 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %26, i64 0, i32 10
  store i64 %17, ptr %33, align 8, !tbaa !287
  br label %34

34:                                               ; preds = %15, %32, %11, %29
  %35 = phi i32 [ 0, %29 ], [ 0, %11 ], [ 1, %32 ], [ 1, %15 ]
  ret i32 %35
}

; Function Attrs: nounwind uwtable
define internal i64 @mz_zip_heap_write_func(ptr noundef %0, i64 noundef %1, ptr nocapture noundef readonly %2, i64 noundef %3) #8 {
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = add i64 %3, %1
  %8 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 9
  %9 = load i64, ptr %8, align 8, !tbaa !219
  %10 = tail call i64 @llvm.umax.i64(i64 %7, i64 %9)
  %11 = icmp eq i64 %3, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 10
  %14 = load i64, ptr %13, align 8, !tbaa !287
  %15 = icmp ugt i64 %10, %14
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 8
  %18 = load ptr, ptr %17, align 8, !tbaa !218
  br label %37

19:                                               ; preds = %12
  %20 = tail call i64 @llvm.umax.i64(i64 %14, i64 64)
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ %20, %19 ], [ %24, %21 ]
  %23 = icmp ult i64 %22, %10
  %24 = shl i64 %22, 1
  br i1 %23, label %21, label %25, !llvm.loop !288

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %27 = load ptr, ptr %26, align 8, !tbaa !197
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %29 = load ptr, ptr %28, align 8, !tbaa !190
  %30 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !218
  %32 = tail call ptr %27(ptr noundef %29, ptr noundef %31, i64 noundef 1, i64 noundef %22) #38
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %35, align 4, !tbaa !189
  br label %40

36:                                               ; preds = %25
  store ptr %32, ptr %30, align 8, !tbaa !218
  store i64 %22, ptr %13, align 8, !tbaa !287
  br label %37

37:                                               ; preds = %16, %36
  %38 = phi ptr [ %18, %16 ], [ %32, %36 ]
  %39 = getelementptr inbounds i8, ptr %38, i64 %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %39, ptr align 1 %2, i64 %3, i1 false)
  store i64 %10, ptr %8, align 8, !tbaa !219
  br label %40

40:                                               ; preds = %34, %4, %37
  %41 = phi i64 [ %3, %37 ], [ 0, %4 ], [ 0, %34 ]
  ret i64 %41
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mz_zip_writer_end_internal(ptr noundef %0, i32 noundef %1) unnamed_addr #8 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %68, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = icmp eq ptr %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !186
  %11 = icmp eq ptr %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %14 = load ptr, ptr %13, align 8, !tbaa !187
  %15 = icmp eq ptr %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %18 = load i32, ptr %17, align 4, !tbaa !188
  %19 = and i32 %18, -2
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %25, label %21

21:                                               ; preds = %16, %12, %8, %4
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %68, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %24, align 4, !tbaa !189
  br label %68

25:                                               ; preds = %16
  store ptr null, ptr %5, align 8, !tbaa !184
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %27 = load ptr, ptr %26, align 8, !tbaa !190
  %28 = load ptr, ptr %6, align 8, !tbaa !191
  tail call void %14(ptr noundef %27, ptr noundef %28) #38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %6, i8 0, i64 32, i1 false)
  %29 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 1
  %30 = load ptr, ptr %13, align 8, !tbaa !187
  %31 = load ptr, ptr %26, align 8, !tbaa !190
  %32 = load ptr, ptr %29, align 8, !tbaa !191
  tail call void %30(ptr noundef %31, ptr noundef %32) #38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %29, i8 0, i64 32, i1 false)
  %33 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 2
  %34 = load ptr, ptr %13, align 8, !tbaa !187
  %35 = load ptr, ptr %26, align 8, !tbaa !190
  %36 = load ptr, ptr %33, align 8, !tbaa !191
  tail call void %34(ptr noundef %35, ptr noundef %36) #38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %33, i8 0, i64 32, i1 false)
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 6
  %38 = load ptr, ptr %37, align 8, !tbaa !193
  %39 = icmp eq ptr %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %25
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  %42 = load i32, ptr %41, align 8, !tbaa !195
  %43 = icmp eq i32 %42, 4
  br i1 %43, label %44, label %51

44:                                               ; preds = %40
  %45 = tail call i32 @fclose(ptr noundef nonnull %38)
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = icmp eq i32 %1, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 21, ptr %50, align 4, !tbaa !189
  br label %51

51:                                               ; preds = %47, %49, %44, %40
  %52 = phi i32 [ 1, %44 ], [ 1, %40 ], [ 0, %49 ], [ 0, %47 ]
  store ptr null, ptr %37, align 8, !tbaa !193
  br label %53

53:                                               ; preds = %51, %25
  %54 = phi i32 [ %52, %51 ], [ 1, %25 ]
  %55 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %56 = load ptr, ptr %55, align 8, !tbaa !284
  %57 = icmp eq ptr %56, @mz_zip_heap_write_func
  br i1 %57, label %58, label %65

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 8
  %60 = load ptr, ptr %59, align 8, !tbaa !218
  %61 = icmp eq ptr %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = load ptr, ptr %13, align 8, !tbaa !187
  %64 = load ptr, ptr %26, align 8, !tbaa !190
  tail call void %63(ptr noundef %64, ptr noundef nonnull %60) #38
  store ptr null, ptr %59, align 8, !tbaa !218
  br label %65

65:                                               ; preds = %62, %58, %53
  %66 = load ptr, ptr %13, align 8, !tbaa !187
  %67 = load ptr, ptr %26, align 8, !tbaa !190
  tail call void %66(ptr noundef %67, ptr noundef nonnull %6) #38
  store i32 0, ptr %17, align 4, !tbaa !188
  br label %68

68:                                               ; preds = %21, %2, %23, %65
  %69 = phi i32 [ %54, %65 ], [ 0, %21 ], [ 0, %23 ], [ 0, %2 ]
  ret i32 %69
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init_heap(ptr noundef %0, i64 noundef %1, i64 noundef %2) local_unnamed_addr #8 {
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  store ptr @mz_zip_heap_write_func, ptr %4, align 8, !tbaa !284
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 13
  store ptr null, ptr %5, align 8, !tbaa !217
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  store ptr %0, ptr %6, align 8, !tbaa !205
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %8 = load ptr, ptr %7, align 8, !tbaa !184
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %12 = load i32, ptr %11, align 4, !tbaa !188
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10, %3
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %15, align 4, !tbaa !189
  br label %72

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 6
  %18 = load i64, ptr %17, align 8, !tbaa !285
  %19 = icmp eq i64 %18, 0
  %20 = tail call i64 @llvm.ctpop.i64(i64 %18), !range !286
  %21 = icmp ult i64 %20, 2
  %22 = or i1 %19, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %24, align 4, !tbaa !189
  br label %72

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %27 = load ptr, ptr %26, align 8, !tbaa !186
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  store ptr @miniz_def_alloc_func, ptr %26, align 8, !tbaa !186
  br label %30

30:                                               ; preds = %29, %25
  %31 = phi ptr [ @miniz_def_alloc_func, %29 ], [ %27, %25 ]
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %33 = load ptr, ptr %32, align 8, !tbaa !187
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store ptr @miniz_def_free_func, ptr %32, align 8, !tbaa !187
  br label %36

36:                                               ; preds = %35, %30
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %38 = load ptr, ptr %37, align 8, !tbaa !197
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  store ptr @miniz_def_realloc_func, ptr %37, align 8, !tbaa !197
  br label %41

41:                                               ; preds = %40, %36
  store i64 %1, ptr %0, align 8, !tbaa !204
  %42 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 1
  store i64 0, ptr %42, align 8, !tbaa !208
  %43 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  store i32 0, ptr %43, align 8, !tbaa !207
  %44 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %45 = load ptr, ptr %44, align 8, !tbaa !190
  %46 = tail call ptr %31(ptr noundef %45, i64 noundef 1, i64 noundef 152) #38
  store ptr %46, ptr %7, align 8, !tbaa !184
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %49, align 4, !tbaa !189
  br label %72

50:                                               ; preds = %41
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(152) %46, i8 0, i64 152, i1 false)
  %51 = load ptr, ptr %7, align 8, !tbaa !184
  %52 = getelementptr inbounds %struct.mz_zip_array, ptr %51, i64 0, i32 3
  store i32 1, ptr %52, align 8, !tbaa !198
  %53 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 1, i32 3
  store i32 4, ptr %53, align 8, !tbaa !199
  %54 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 2, i32 3
  store i32 4, ptr %54, align 8, !tbaa !200
  %55 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 4
  store i32 0, ptr %55, align 4, !tbaa !202
  %56 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %51, i64 0, i32 5
  store i32 0, ptr %56, align 8, !tbaa !203
  %57 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 2, ptr %11, align 4, !tbaa !188
  store i32 3, ptr %57, align 8, !tbaa !195
  %58 = tail call i64 @llvm.umax.i64(i64 %2, i64 %1)
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %50
  %61 = load ptr, ptr %26, align 8, !tbaa !186
  %62 = load ptr, ptr %44, align 8, !tbaa !190
  %63 = tail call ptr %61(ptr noundef %62, i64 noundef 1, i64 noundef %58) #38
  %64 = load ptr, ptr %7, align 8, !tbaa !184
  %65 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %64, i64 0, i32 8
  store ptr %63, ptr %65, align 8, !tbaa !218
  %66 = icmp eq ptr %63, null
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = tail call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %0, i32 noundef 0)
  %69 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %69, align 4, !tbaa !189
  br label %72

70:                                               ; preds = %60
  %71 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %64, i64 0, i32 10
  store i64 %58, ptr %71, align 8, !tbaa !287
  br label %72

72:                                               ; preds = %14, %48, %23, %50, %67, %70
  %73 = phi i32 [ 0, %67 ], [ 1, %70 ], [ 1, %50 ], [ 0, %23 ], [ 0, %48 ], [ 0, %14 ]
  ret i32 %73
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init_file(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) local_unnamed_addr #8 {
  %4 = tail call i32 @mz_zip_writer_init_file_v2(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef 0)
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init_file_v2(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = alloca [4096 x i8], align 16
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  store ptr @mz_zip_file_write_func, ptr %6, align 8, !tbaa !284
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 13
  store ptr null, ptr %7, align 8, !tbaa !217
  %8 = and i32 %3, 32768
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %11, align 8, !tbaa !196
  br label %12

12:                                               ; preds = %10, %4
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  store ptr %0, ptr %13, align 8, !tbaa !205
  %14 = tail call i32 @mz_zip_writer_init_v2(ptr noundef nonnull %0, i64 noundef %2, i32 noundef %3)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %12
  %17 = select i1 %9, ptr @.str.20, ptr @.str.21
  %18 = tail call noalias ptr @fopen(ptr noundef %1, ptr noundef nonnull %17)
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = tail call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %0, i32 noundef 1)
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 17, ptr %22, align 4, !tbaa !189
  br label %46

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %25 = load ptr, ptr %24, align 8, !tbaa !184
  %26 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %25, i64 0, i32 6
  store ptr %18, ptr %26, align 8, !tbaa !193
  %27 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 4, ptr %27, align 8, !tbaa !195
  %28 = icmp eq i64 %2, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %23
  call void @llvm.lifetime.start.p0(i64 4096, ptr nonnull %5) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(4096) %5, i8 0, i64 4096, i1 false)
  br label %30

30:                                               ; preds = %38, %29
  %31 = phi i64 [ %2, %29 ], [ %40, %38 ]
  %32 = phi i64 [ 0, %29 ], [ %39, %38 ]
  %33 = call i64 @llvm.umin.i64(i64 %31, i64 4096)
  %34 = load ptr, ptr %6, align 8, !tbaa !284
  %35 = load ptr, ptr %13, align 8, !tbaa !205
  %36 = call i64 %34(ptr noundef %35, i64 noundef %32, ptr noundef nonnull %5, i64 noundef %33) #38
  %37 = icmp eq i64 %36, %33
  br i1 %37, label %38, label %43

38:                                               ; preds = %30
  %39 = add i64 %32, %33
  %40 = sub i64 %31, %33
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %30, !llvm.loop !289

42:                                               ; preds = %38
  call void @llvm.lifetime.end.p0(i64 4096, ptr nonnull %5) #38
  br label %46

43:                                               ; preds = %30
  %44 = call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %0, i32 noundef 1)
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %45, align 4, !tbaa !189
  call void @llvm.lifetime.end.p0(i64 4096, ptr nonnull %5) #38
  br label %46

46:                                               ; preds = %23, %42, %43, %12, %20
  %47 = phi i32 [ 0, %20 ], [ 0, %12 ], [ 0, %43 ], [ 1, %42 ], [ 1, %23 ]
  ret i32 %47
}

; Function Attrs: nofree nounwind uwtable
define internal i64 @mz_zip_file_write_func(ptr noundef %0, i64 noundef %1, ptr nocapture noundef %2, i64 noundef %3) #20 {
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !193
  %9 = tail call i64 @ftello(ptr noundef %8)
  %10 = load ptr, ptr %5, align 8, !tbaa !184
  %11 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %10, i64 0, i32 7
  %12 = load i64, ptr %11, align 8, !tbaa !220
  %13 = add i64 %12, %1
  %14 = icmp slt i64 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %4
  %16 = icmp eq i64 %9, %13
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %10, i64 0, i32 6
  %19 = load ptr, ptr %18, align 8, !tbaa !193
  %20 = tail call i32 @fseeko(ptr noundef %19, i64 noundef %13, i32 noundef 0)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = load ptr, ptr %5, align 8, !tbaa !184
  br label %26

24:                                               ; preds = %17, %4
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 22, ptr %25, align 4, !tbaa !189
  br label %31

26:                                               ; preds = %22, %15
  %27 = phi ptr [ %23, %22 ], [ %10, %15 ]
  %28 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 6
  %29 = load ptr, ptr %28, align 8, !tbaa !193
  %30 = tail call i64 @fwrite(ptr noundef %2, i64 noundef 1, i64 noundef %3, ptr noundef %29)
  br label %31

31:                                               ; preds = %26, %24
  %32 = phi i64 [ 0, %24 ], [ %30, %26 ]
  ret i64 %32
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_end(ptr noundef %0) local_unnamed_addr #8 {
  %2 = tail call fastcc i32 @mz_zip_writer_end_internal(ptr noundef %0, i32 noundef 1)
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init_cfile(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  store ptr @mz_zip_file_write_func, ptr %4, align 8, !tbaa !284
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 13
  store ptr null, ptr %5, align 8, !tbaa !217
  %6 = and i32 %2, 32768
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %9, align 8, !tbaa !196
  br label %10

10:                                               ; preds = %8, %3
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  store ptr %0, ptr %11, align 8, !tbaa !205
  %12 = tail call i32 @mz_zip_writer_init_v2(ptr noundef nonnull %0, i64 noundef 0, i32 noundef %2)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %16 = load ptr, ptr %15, align 8, !tbaa !184
  %17 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %16, i64 0, i32 6
  store ptr %1, ptr %17, align 8, !tbaa !193
  %18 = tail call i64 @ftello(ptr noundef %1)
  %19 = load ptr, ptr %15, align 8, !tbaa !184
  %20 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %19, i64 0, i32 7
  store i64 %18, ptr %20, align 8, !tbaa !220
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  store i32 5, ptr %21, align 8, !tbaa !195
  br label %22

22:                                               ; preds = %10, %14
  %23 = phi i32 [ 1, %14 ], [ 0, %10 ]
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init_from_reader_v2(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %104, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %7 = load ptr, ptr %6, align 8, !tbaa !184
  %8 = icmp eq ptr %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %11 = load i32, ptr %10, align 4, !tbaa !188
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %14, align 4, !tbaa !189
  br label %104

15:                                               ; preds = %9
  %16 = and i32 %2, 16384
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 4
  %19 = load i32, ptr %18, align 4, !tbaa !202
  %20 = icmp eq i32 %19, 0
  br i1 %17, label %24, label %21

21:                                               ; preds = %15
  br i1 %20, label %22, label %25

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %23, align 4, !tbaa !189
  br label %104

24:                                               ; preds = %15
  br i1 %20, label %31, label %25

25:                                               ; preds = %21, %24
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %27 = load i32, ptr %26, align 8, !tbaa !207
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %30, align 4, !tbaa !189
  br label %104

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %33 = load i32, ptr %32, align 8, !tbaa !207
  %34 = icmp eq i32 %33, 65535
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %36, align 4, !tbaa !189
  br label %104

37:                                               ; preds = %31
  %38 = load i64, ptr %0, align 8, !tbaa !204
  %39 = add i64 %38, -4294967220
  %40 = icmp ult i64 %39, -4294967296
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 3, ptr %42, align 4, !tbaa !189
  br label %104

43:                                               ; preds = %37, %25
  %44 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 6
  %45 = load ptr, ptr %44, align 8, !tbaa !193
  %46 = icmp eq ptr %45, null
  br i1 %46, label %69, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %49 = load ptr, ptr %48, align 8, !tbaa !205
  %50 = icmp eq ptr %49, %0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %52, align 4, !tbaa !189
  br label %104

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  %55 = load i32, ptr %54, align 8, !tbaa !195
  %56 = icmp eq i32 %55, 4
  br i1 %56, label %57, label %89

57:                                               ; preds = %53
  %58 = icmp eq ptr %1, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %60, align 4, !tbaa !189
  br label %104

61:                                               ; preds = %57
  %62 = tail call ptr @freopen(ptr noundef nonnull %1, ptr noundef nonnull @.str.19, ptr noundef nonnull %45) #38
  store ptr %62, ptr %44, align 8, !tbaa !193
  %63 = icmp eq ptr %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = load ptr, ptr %6, align 8, !tbaa !184
  br label %89

66:                                               ; preds = %61
  %67 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %0, i32 noundef 0)
  %68 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 17, ptr %68, align 4, !tbaa !189
  br label %104

69:                                               ; preds = %43
  %70 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 8
  %71 = load ptr, ptr %70, align 8, !tbaa !218
  %72 = icmp eq ptr %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %75 = load ptr, ptr %74, align 8, !tbaa !205
  %76 = icmp eq ptr %75, %0
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %78, align 4, !tbaa !189
  br label %104

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 9
  %81 = load i64, ptr %80, align 8, !tbaa !219
  %82 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 10
  store i64 %81, ptr %82, align 8, !tbaa !287
  br label %89

83:                                               ; preds = %69
  %84 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %85 = load ptr, ptr %84, align 8, !tbaa !284
  %86 = icmp eq ptr %85, null
  br i1 %86, label %87, label %94

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %88, align 4, !tbaa !189
  br label %104

89:                                               ; preds = %53, %64, %79
  %90 = phi ptr [ @mz_zip_heap_write_func, %79 ], [ @mz_zip_file_write_func, %64 ], [ @mz_zip_file_write_func, %53 ]
  %91 = phi ptr [ %7, %79 ], [ %65, %64 ], [ %7, %53 ]
  %92 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  store ptr %90, ptr %92, align 8, !tbaa !284
  %93 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 13
  store ptr null, ptr %93, align 8, !tbaa !217
  br label %94

94:                                               ; preds = %89, %83
  %95 = phi ptr [ %7, %83 ], [ %91, %89 ]
  %96 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 1
  %97 = load i64, ptr %96, align 8, !tbaa !208
  store i64 %97, ptr %0, align 8, !tbaa !204
  store i64 0, ptr %96, align 8, !tbaa !208
  %98 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %95, i64 0, i32 2
  %99 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %100 = load ptr, ptr %99, align 8, !tbaa !187
  %101 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %102 = load ptr, ptr %101, align 8, !tbaa !190
  %103 = load ptr, ptr %98, align 8, !tbaa !191
  tail call void %100(ptr noundef %102, ptr noundef %103) #38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %98, i8 0, i64 32, i1 false)
  store i32 2, ptr %10, align 4, !tbaa !188
  br label %104

104:                                              ; preds = %13, %3, %94, %87, %77, %66, %59, %51, %41, %35, %29, %22
  %105 = phi i32 [ 0, %29 ], [ 0, %51 ], [ 0, %66 ], [ 1, %94 ], [ 0, %59 ], [ 0, %77 ], [ 0, %87 ], [ 0, %35 ], [ 0, %41 ], [ 0, %22 ], [ 0, %3 ], [ 0, %13 ]
  ret i32 %105
}

declare dso_local ptr @freopen(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #25

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init_from_reader_v2_noreopen(ptr noundef %0, ptr noundef readnone %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %94, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %7 = load ptr, ptr %6, align 8, !tbaa !184
  %8 = icmp eq ptr %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %11 = load i32, ptr %10, align 4, !tbaa !188
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %5
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %14, align 4, !tbaa !189
  br label %94

15:                                               ; preds = %9
  %16 = and i32 %2, 16384
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 4
  %19 = load i32, ptr %18, align 4, !tbaa !202
  %20 = icmp eq i32 %19, 0
  br i1 %17, label %24, label %21

21:                                               ; preds = %15
  br i1 %20, label %22, label %25

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %23, align 4, !tbaa !189
  br label %94

24:                                               ; preds = %15
  br i1 %20, label %31, label %25

25:                                               ; preds = %21, %24
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %27 = load i32, ptr %26, align 8, !tbaa !207
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %30, align 4, !tbaa !189
  br label %94

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %33 = load i32, ptr %32, align 8, !tbaa !207
  %34 = icmp eq i32 %33, 65535
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %36, align 4, !tbaa !189
  br label %94

37:                                               ; preds = %31
  %38 = load i64, ptr %0, align 8, !tbaa !204
  %39 = add i64 %38, -4294967220
  %40 = icmp ult i64 %39, -4294967296
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 3, ptr %42, align 4, !tbaa !189
  br label %94

43:                                               ; preds = %37, %25
  %44 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 6
  %45 = load ptr, ptr %44, align 8, !tbaa !193
  %46 = icmp eq ptr %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %49 = load ptr, ptr %48, align 8, !tbaa !205
  %50 = icmp eq ptr %49, %0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %52, align 4, !tbaa !189
  br label %94

53:                                               ; preds = %47
  %54 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  %55 = load i32, ptr %54, align 8, !tbaa !195
  %56 = icmp ne i32 %55, 4
  %57 = icmp ne ptr %1, null
  %58 = or i1 %57, %56
  br i1 %58, label %81, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %60, align 4, !tbaa !189
  br label %94

61:                                               ; preds = %43
  %62 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 8
  %63 = load ptr, ptr %62, align 8, !tbaa !218
  %64 = icmp eq ptr %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %67 = load ptr, ptr %66, align 8, !tbaa !205
  %68 = icmp eq ptr %67, %0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %70, align 4, !tbaa !189
  br label %94

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 9
  %73 = load i64, ptr %72, align 8, !tbaa !219
  %74 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 10
  store i64 %73, ptr %74, align 8, !tbaa !287
  br label %81

75:                                               ; preds = %61
  %76 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %77 = load ptr, ptr %76, align 8, !tbaa !284
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %80, align 4, !tbaa !189
  br label %94

81:                                               ; preds = %53, %71
  %82 = phi ptr [ @mz_zip_heap_write_func, %71 ], [ @mz_zip_file_write_func, %53 ]
  %83 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  store ptr %82, ptr %83, align 8, !tbaa !284
  %84 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 13
  store ptr null, ptr %84, align 8, !tbaa !217
  br label %85

85:                                               ; preds = %81, %75
  %86 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 1
  %87 = load i64, ptr %86, align 8, !tbaa !208
  store i64 %87, ptr %0, align 8, !tbaa !204
  store i64 0, ptr %86, align 8, !tbaa !208
  %88 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %7, i64 0, i32 2
  %89 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %90 = load ptr, ptr %89, align 8, !tbaa !187
  %91 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %92 = load ptr, ptr %91, align 8, !tbaa !190
  %93 = load ptr, ptr %88, align 8, !tbaa !191
  tail call void %90(ptr noundef %92, ptr noundef %93) #38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %88, i8 0, i64 32, i1 false)
  store i32 2, ptr %10, align 4, !tbaa !188
  br label %94

94:                                               ; preds = %13, %3, %85, %79, %69, %59, %51, %41, %35, %29, %22
  %95 = phi i32 [ 0, %29 ], [ 0, %51 ], [ 1, %85 ], [ 0, %59 ], [ 0, %69 ], [ 0, %79 ], [ 0, %35 ], [ 0, %41 ], [ 0, %22 ], [ 0, %3 ], [ 0, %13 ]
  ret i32 %95
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_init_from_reader(ptr noundef %0, ptr noundef %1) local_unnamed_addr #8 {
  %3 = tail call i32 @mz_zip_writer_init_from_reader_v2(ptr noundef %0, ptr noundef %1, i32 noundef 0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_add_mem(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) local_unnamed_addr #8 {
  %6 = tail call i32 @mz_zip_writer_add_mem_ex_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef null, i16 noundef zeroext 0, i32 noundef %4, i64 noundef 0, i32 noundef 0, ptr noundef null, ptr noundef null, i32 noundef 0, ptr noundef null, i32 noundef 0)
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_add_mem_ex(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %6, i64 noundef %7, i32 noundef %8) local_unnamed_addr #8 {
  %10 = tail call i32 @mz_zip_writer_add_mem_ex_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %6, i64 noundef %7, i32 noundef %8, ptr noundef null, ptr noundef null, i32 noundef 0, ptr noundef null, i32 noundef 0)
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_add_mem_ex_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef readonly %4, i16 noundef zeroext %5, i32 noundef %6, i64 noundef %7, i32 noundef %8, ptr noundef readonly %9, ptr noundef %10, i32 noundef %11, ptr nocapture noundef readonly %12, i32 noundef %13) local_unnamed_addr #8 {
  %15 = alloca i64, align 8
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca [30 x i8], align 16
  %21 = alloca [28 x i8], align 16
  %22 = alloca i64, align 8
  %23 = alloca %struct.mz_zip_writer_add_state, align 8
  %24 = alloca [24 x i8], align 16
  store i64 %7, ptr %15, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %16) #38
  store i16 0, ptr %16, align 2, !tbaa !103
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %17) #38
  store i16 0, ptr %17, align 2, !tbaa !103
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #38
  %25 = load i64, ptr %0, align 8, !tbaa !204
  store i64 %25, ptr %18, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #38
  store i64 0, ptr %19, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %20) #38
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %21) #38
  %26 = icmp slt i32 %6, 0
  %27 = select i1 %26, i32 6, i32 %6
  %28 = icmp eq i64 %7, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %14
  %30 = and i32 %27, 1024
  br label %36

31:                                               ; preds = %14
  %32 = icmp ne i64 %3, 0
  %33 = and i32 %27, 1024
  %34 = icmp eq i32 %33, 0
  %35 = and i1 %32, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %29, %31
  %37 = phi i32 [ %30, %29 ], [ 0, %31 ]
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i32 [ %37, %36 ], [ %33, %31 ]
  %40 = phi i16 [ 8, %36 ], [ 0, %31 ]
  %41 = and i32 %27, 65536
  %42 = icmp eq i32 %41, 0
  %43 = or i16 %40, 2048
  %44 = select i1 %42, i16 %43, i16 %40
  %45 = and i32 %27, 15
  %46 = icmp eq i32 %45, 0
  %47 = icmp ne i32 %39, 0
  %48 = or i1 %46, %47
  %49 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %50 = load ptr, ptr %49, align 8, !tbaa !184
  %51 = icmp eq ptr %50, null
  br i1 %51, label %68, label %52

52:                                               ; preds = %38
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %54 = load i32, ptr %53, align 4, !tbaa !188
  %55 = icmp eq i32 %54, 2
  br i1 %55, label %56, label %68

56:                                               ; preds = %52
  %57 = icmp eq i64 %3, 0
  %58 = icmp ne ptr %2, null
  %59 = or i1 %58, %57
  %60 = icmp ne ptr %1, null
  %61 = and i1 %60, %59
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  %63 = icmp ne i16 %5, 0
  %64 = icmp eq ptr %4, null
  %65 = and i1 %64, %63
  %66 = icmp ugt i32 %45, 10
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62, %56, %52, %38
  %69 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %69, align 4, !tbaa !189
  br label %617

70:                                               ; preds = %62
  %71 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %50, i64 0, i32 4
  %72 = load i32, ptr %71, align 4, !tbaa !202
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %75 = load i32, ptr %74, align 8, !tbaa !207
  br i1 %73, label %80, label %76

76:                                               ; preds = %70
  %77 = icmp eq i32 %75, -1
  br i1 %77, label %78, label %86

78:                                               ; preds = %76
  %79 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %79, align 4, !tbaa !189
  br label %617

80:                                               ; preds = %70
  %81 = icmp eq i32 %75, 65535
  %82 = or i64 %7, %3
  %83 = icmp ugt i64 %82, 4294967295
  %84 = or i1 %83, %81
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  store i32 1, ptr %71, align 4, !tbaa !202
  br label %86

86:                                               ; preds = %85, %80, %76
  %87 = icmp eq i32 %39, 0
  %88 = icmp ne i64 %7, 0
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %91, align 4, !tbaa !189
  br label %617

92:                                               ; preds = %86
  %93 = load i8, ptr %1, align 1, !tbaa !3
  %94 = icmp eq i8 %93, 47
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 25, ptr %96, align 4, !tbaa !189
  br label %617

97:                                               ; preds = %92
  %98 = icmp eq ptr %9, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = load i64, ptr %9, align 8, !tbaa !46
  call fastcc void @mz_zip_time_t_to_dos_time(i64 noundef %100, ptr noundef nonnull %16, ptr noundef nonnull %17)
  br label %104

101:                                              ; preds = %97
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %22) #38
  %102 = call i64 @time(ptr noundef nonnull %22) #38
  %103 = load i64, ptr %22, align 8, !tbaa !46
  call fastcc void @mz_zip_time_t_to_dos_time(i64 noundef %103, ptr noundef nonnull %16, ptr noundef nonnull %17)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %22) #38
  br label %104

104:                                              ; preds = %101, %99
  br i1 %47, label %111, label %105

105:                                              ; preds = %104
  %106 = call i64 @mz_crc32(i64 noundef 0, ptr noundef %2, i64 noundef %3)
  %107 = trunc i64 %106 to i32
  store i64 %3, ptr %15, align 8, !tbaa !46
  %108 = icmp ult i64 %3, 4
  %109 = select i1 %108, i32 0, i32 %45
  %110 = or i1 %108, %48
  br label %111

111:                                              ; preds = %105, %104
  %112 = phi i32 [ %45, %104 ], [ %109, %105 ]
  %113 = phi i32 [ %8, %104 ], [ %107, %105 ]
  %114 = phi i1 [ true, %104 ], [ %110, %105 ]
  %115 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #42
  %116 = icmp ugt i64 %115, 65535
  br i1 %116, label %117, label %119

117:                                              ; preds = %111
  %118 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 25, ptr %118, align 4, !tbaa !189
  br label %617

119:                                              ; preds = %111
  %120 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 6
  %121 = load i64, ptr %120, align 8, !tbaa !285
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %130, label %123

123:                                              ; preds = %119
  %124 = load i64, ptr %0, align 8, !tbaa !204
  %125 = add i64 %121, -1
  %126 = and i64 %124, %125
  %127 = sub i64 %121, %126
  %128 = and i64 %127, %125
  %129 = trunc i64 %128 to i32
  br label %130

130:                                              ; preds = %119, %123
  %131 = phi i32 [ %129, %123 ], [ 0, %119 ]
  %132 = getelementptr inbounds %struct.mz_zip_array, ptr %50, i64 0, i32 1
  %133 = load i64, ptr %132, align 8, !tbaa !282
  %134 = zext i16 %5 to i64
  %135 = add nuw nsw i64 %115, %134
  %136 = add nuw nsw i64 %135, 74
  %137 = add i64 %136, %133
  %138 = icmp ugt i64 %137, 4294967294
  br i1 %138, label %139, label %141

139:                                              ; preds = %130
  %140 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 15, ptr %140, align 4, !tbaa !189
  br label %617

141:                                              ; preds = %130
  %142 = load i32, ptr %71, align 4, !tbaa !202
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %159

144:                                              ; preds = %141
  %145 = load i64, ptr %0, align 8, !tbaa !204
  %146 = zext i32 %131 to i64
  %147 = zext i32 %11 to i64
  %148 = zext i32 %13 to i64
  %149 = shl nuw nsw i64 %115, 1
  %150 = add i64 %133, %134
  %151 = add i64 %150, -4294967182
  %152 = add i64 %151, %147
  %153 = add i64 %152, %148
  %154 = add i64 %153, %149
  %155 = add i64 %154, %146
  %156 = add i64 %155, %145
  %157 = icmp ult i64 %156, -4294967296
  br i1 %157, label %158, label %159

158:                                              ; preds = %144
  store i32 1, ptr %71, align 4, !tbaa !202
  br label %159

159:                                              ; preds = %144, %158, %141
  %160 = phi i32 [ 0, %144 ], [ 1, %158 ], [ %142, %141 ]
  %161 = icmp eq i64 %115, 0
  br i1 %161, label %174, label %162

162:                                              ; preds = %159
  %163 = add nsw i64 %115, -1
  %164 = getelementptr inbounds i8, ptr %1, i64 %163
  %165 = load i8, ptr %164, align 1, !tbaa !3
  %166 = icmp eq i8 %165, 47
  br i1 %166, label %167, label %174

167:                                              ; preds = %162
  %168 = icmp ne i64 %3, 0
  %169 = load i64, ptr %15, align 8
  %170 = icmp ne i64 %169, 0
  %171 = select i1 %168, i1 true, i1 %170
  br i1 %171, label %172, label %174

172:                                              ; preds = %167
  %173 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %173, align 4, !tbaa !189
  br label %617

174:                                              ; preds = %167, %162, %159
  %175 = phi i32 [ 16, %167 ], [ 0, %162 ], [ 0, %159 ]
  %176 = icmp eq i32 %160, 0
  %177 = select i1 %176, i64 0, i64 28
  %178 = add nuw nsw i64 %134, 46
  %179 = add nuw nsw i64 %178, %115
  %180 = add i64 %179, %133
  %181 = add i64 %180, %177
  %182 = getelementptr inbounds %struct.mz_zip_array, ptr %50, i64 0, i32 2
  %183 = load i64, ptr %182, align 8, !tbaa !209
  %184 = icmp ult i64 %183, %181
  br i1 %184, label %185, label %207

185:                                              ; preds = %174
  %186 = getelementptr inbounds %struct.mz_zip_array, ptr %50, i64 0, i32 3
  %187 = load i32, ptr %186, align 8, !tbaa !210
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %185
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

190:                                              ; preds = %185
  %191 = icmp eq i64 %183, 0
  %192 = select i1 %191, i64 1, i64 %183
  br label %193

193:                                              ; preds = %193, %190
  %194 = phi i64 [ %192, %190 ], [ %196, %193 ]
  %195 = icmp ult i64 %194, %181
  %196 = shl i64 %194, 1
  br i1 %195, label %193, label %197, !llvm.loop !290

197:                                              ; preds = %193
  %198 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %199 = load ptr, ptr %198, align 8, !tbaa !197
  %200 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %201 = load ptr, ptr %200, align 8, !tbaa !190
  %202 = load ptr, ptr %50, align 8, !tbaa !191
  %203 = zext i32 %187 to i64
  %204 = call ptr %199(ptr noundef %201, ptr noundef %202, i64 noundef %203, i64 noundef %194) #38
  %205 = icmp eq ptr %204, null
  br i1 %205, label %237, label %206

206:                                              ; preds = %197
  store ptr %204, ptr %50, align 8, !tbaa !191
  store i64 %194, ptr %182, align 8, !tbaa !209
  br label %207

207:                                              ; preds = %206, %174
  %208 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %50, i64 0, i32 1
  %209 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %50, i64 0, i32 1, i32 1
  %210 = load i64, ptr %209, align 8, !tbaa !211
  %211 = add i64 %210, 1
  %212 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %50, i64 0, i32 1, i32 2
  %213 = load i64, ptr %212, align 8, !tbaa !209
  %214 = icmp ult i64 %213, %211
  br i1 %214, label %215, label %239

215:                                              ; preds = %207
  %216 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %50, i64 0, i32 1, i32 3
  %217 = load i32, ptr %216, align 8, !tbaa !210
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %215
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

220:                                              ; preds = %215
  %221 = icmp eq i64 %213, 0
  %222 = select i1 %221, i64 1, i64 %213
  br label %223

223:                                              ; preds = %223, %220
  %224 = phi i64 [ %222, %220 ], [ %226, %223 ]
  %225 = icmp ult i64 %224, %211
  %226 = shl i64 %224, 1
  br i1 %225, label %223, label %227, !llvm.loop !290

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %229 = load ptr, ptr %228, align 8, !tbaa !197
  %230 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %231 = load ptr, ptr %230, align 8, !tbaa !190
  %232 = load ptr, ptr %208, align 8, !tbaa !191
  %233 = zext i32 %217 to i64
  %234 = call ptr %229(ptr noundef %231, ptr noundef %232, i64 noundef %233, i64 noundef %224) #38
  %235 = icmp eq ptr %234, null
  br i1 %235, label %237, label %236

236:                                              ; preds = %227
  store ptr %234, ptr %208, align 8, !tbaa !191
  store i64 %224, ptr %212, align 8, !tbaa !209
  br label %239

237:                                              ; preds = %227, %197
  %238 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %238, align 4, !tbaa !189
  br label %617

239:                                              ; preds = %236, %207
  %240 = or i1 %57, %114
  br i1 %240, label %250, label %241

241:                                              ; preds = %239
  %242 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %243 = load ptr, ptr %242, align 8, !tbaa !186
  %244 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %245 = load ptr, ptr %244, align 8, !tbaa !190
  %246 = call ptr %243(ptr noundef %245, i64 noundef 1, i64 noundef 319352) #38
  %247 = icmp eq ptr %246, null
  br i1 %247, label %248, label %250

248:                                              ; preds = %241
  %249 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %249, align 4, !tbaa !189
  br label %617

250:                                              ; preds = %241, %239
  %251 = phi ptr [ %246, %241 ], [ null, %239 ]
  %252 = call fastcc i32 @mz_zip_writer_write_zeros(ptr noundef nonnull %0, i64 noundef %25, i32 noundef %131)
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %259

254:                                              ; preds = %250
  %255 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %256 = load ptr, ptr %255, align 8, !tbaa !187
  %257 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %258 = load ptr, ptr %257, align 8, !tbaa !190
  call void %256(ptr noundef %258, ptr noundef %251) #38
  br label %617

259:                                              ; preds = %250
  %260 = zext i32 %131 to i64
  %261 = load i64, ptr %18, align 8, !tbaa !46
  %262 = add i64 %261, %260
  store i64 %262, ptr %18, align 8, !tbaa !46
  %263 = load i64, ptr %120, align 8, !tbaa !285
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %270, label %265

265:                                              ; preds = %259
  %266 = add i64 %263, -1
  %267 = and i64 %266, %262
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %270, label %269

269:                                              ; preds = %265
  call void @__assert_fail(ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.12, i32 noundef 8634, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_writer_add_mem_ex_v2) #41
  unreachable

270:                                              ; preds = %265, %259
  %271 = add i64 %25, %260
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(30) %20, i8 0, i64 30, i1 false)
  %272 = xor i1 %114, true
  %273 = or i1 %47, %272
  %274 = select i1 %273, i16 8, i16 0
  %275 = load i32, ptr %71, align 4, !tbaa !202
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %360, label %277

277:                                              ; preds = %270
  %278 = load i64, ptr %15, align 8, !tbaa !46
  %279 = icmp ugt i64 %278, 4294967294
  %280 = icmp ugt i64 %262, 4294967294
  %281 = select i1 %279, i1 true, i1 %280
  br i1 %281, label %282, label %288

282:                                              ; preds = %277
  %283 = select i1 %279, ptr %15, ptr null
  %284 = select i1 %279, ptr %19, ptr null
  %285 = select i1 %280, ptr %18, ptr null
  %286 = call fastcc i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef nonnull %21, ptr noundef %283, ptr noundef %284, ptr noundef %285)
  %287 = load i64, ptr %18, align 8, !tbaa !46
  br label %288

288:                                              ; preds = %277, %282
  %289 = phi i64 [ %287, %282 ], [ %262, %277 ]
  %290 = phi ptr [ %21, %282 ], [ null, %277 ]
  %291 = phi i32 [ %286, %282 ], [ 0, %277 ]
  %292 = add i32 %291, %11
  %293 = load i16, ptr %16, align 2, !tbaa !103
  %294 = load i16, ptr %17, align 2, !tbaa !103
  store <4 x i8> <i8 80, i8 75, i8 3, i8 4>, ptr %20, align 16, !tbaa !3
  %295 = getelementptr inbounds i8, ptr %20, i64 4
  %296 = select i1 %273, i8 20, i8 0
  store i8 %296, ptr %295, align 4, !tbaa !3
  %297 = getelementptr inbounds i8, ptr %20, i64 5
  store i8 0, ptr %297, align 1, !tbaa !3
  %298 = getelementptr inbounds i8, ptr %20, i64 6
  %299 = trunc i16 %44 to i8
  store i8 %299, ptr %298, align 2, !tbaa !3
  %300 = lshr i16 %44, 8
  %301 = trunc i16 %300 to i8
  %302 = getelementptr inbounds i8, ptr %20, i64 7
  store i8 %301, ptr %302, align 1, !tbaa !3
  %303 = getelementptr inbounds i8, ptr %20, i64 8
  %304 = trunc i16 %274 to i8
  store i8 %304, ptr %303, align 8, !tbaa !3
  %305 = getelementptr inbounds i8, ptr %20, i64 9
  store i8 0, ptr %305, align 1, !tbaa !3
  %306 = getelementptr inbounds i8, ptr %20, i64 10
  %307 = trunc i16 %293 to i8
  store i8 %307, ptr %306, align 2, !tbaa !3
  %308 = lshr i16 %293, 8
  %309 = trunc i16 %308 to i8
  %310 = getelementptr inbounds i8, ptr %20, i64 11
  store i8 %309, ptr %310, align 1, !tbaa !3
  %311 = getelementptr inbounds i8, ptr %20, i64 12
  %312 = trunc i16 %294 to i8
  store i8 %312, ptr %311, align 4, !tbaa !3
  %313 = lshr i16 %294, 8
  %314 = trunc i16 %313 to i8
  %315 = getelementptr inbounds i8, ptr %20, i64 13
  store i8 %314, ptr %315, align 1, !tbaa !3
  %316 = getelementptr inbounds i8, ptr %20, i64 14
  %317 = getelementptr inbounds i8, ptr %20, i64 26
  %318 = trunc i64 %115 to i8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(12) %316, i8 0, i64 12, i1 false)
  store i8 %318, ptr %317, align 2, !tbaa !3
  %319 = lshr i64 %115, 8
  %320 = trunc i64 %319 to i8
  %321 = getelementptr inbounds i8, ptr %20, i64 27
  store i8 %320, ptr %321, align 1, !tbaa !3
  %322 = getelementptr inbounds i8, ptr %20, i64 28
  %323 = trunc i32 %292 to i8
  store i8 %323, ptr %322, align 4, !tbaa !3
  %324 = lshr i32 %292, 8
  %325 = trunc i32 %324 to i8
  %326 = getelementptr inbounds i8, ptr %20, i64 29
  store i8 %325, ptr %326, align 1, !tbaa !3
  %327 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %328 = load ptr, ptr %327, align 8, !tbaa !284
  %329 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %330 = load ptr, ptr %329, align 8, !tbaa !205
  %331 = call i64 %328(ptr noundef %330, i64 noundef %289, ptr noundef nonnull %20, i64 noundef 30) #38
  %332 = icmp eq i64 %331, 30
  br i1 %332, label %335, label %333

333:                                              ; preds = %288
  %334 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %334, align 4, !tbaa !189
  br label %617

335:                                              ; preds = %288
  %336 = add i64 %271, 30
  %337 = load ptr, ptr %327, align 8, !tbaa !284
  %338 = load ptr, ptr %329, align 8, !tbaa !205
  %339 = call i64 %337(ptr noundef %338, i64 noundef %336, ptr noundef nonnull %1, i64 noundef %115) #38
  %340 = icmp eq i64 %339, %115
  br i1 %340, label %347, label %341

341:                                              ; preds = %335
  %342 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %343 = load ptr, ptr %342, align 8, !tbaa !187
  %344 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %345 = load ptr, ptr %344, align 8, !tbaa !190
  call void %343(ptr noundef %345, ptr noundef %251) #38
  %346 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %346, align 4, !tbaa !189
  br label %617

347:                                              ; preds = %335
  %348 = add i64 %336, %115
  %349 = icmp eq ptr %290, null
  br i1 %349, label %422, label %350

350:                                              ; preds = %347
  %351 = load ptr, ptr %327, align 8, !tbaa !284
  %352 = load ptr, ptr %329, align 8, !tbaa !205
  %353 = zext i32 %291 to i64
  %354 = call i64 %351(ptr noundef %352, i64 noundef %348, ptr noundef nonnull %21, i64 noundef %353) #38
  %355 = icmp eq i64 %354, %353
  br i1 %355, label %358, label %356

356:                                              ; preds = %350
  %357 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %357, align 4, !tbaa !189
  br label %617

358:                                              ; preds = %350
  %359 = add i64 %348, %353
  br label %422

360:                                              ; preds = %270
  %361 = load i64, ptr %19, align 8, !tbaa !46
  %362 = icmp ugt i64 %361, 4294967295
  %363 = icmp ugt i64 %271, 4294967295
  %364 = select i1 %362, i1 true, i1 %363
  br i1 %364, label %365, label %367

365:                                              ; preds = %360
  %366 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %366, align 4, !tbaa !189
  br label %617

367:                                              ; preds = %360
  %368 = load i16, ptr %16, align 2, !tbaa !103
  %369 = load i16, ptr %17, align 2, !tbaa !103
  store <4 x i8> <i8 80, i8 75, i8 3, i8 4>, ptr %20, align 16, !tbaa !3
  %370 = getelementptr inbounds i8, ptr %20, i64 4
  %371 = select i1 %273, i8 20, i8 0
  store i8 %371, ptr %370, align 4, !tbaa !3
  %372 = getelementptr inbounds i8, ptr %20, i64 6
  %373 = trunc i16 %44 to i8
  store i8 %373, ptr %372, align 2, !tbaa !3
  %374 = lshr i16 %44, 8
  %375 = trunc i16 %374 to i8
  %376 = getelementptr inbounds i8, ptr %20, i64 7
  store i8 %375, ptr %376, align 1, !tbaa !3
  %377 = getelementptr inbounds i8, ptr %20, i64 8
  %378 = trunc i16 %274 to i8
  store i8 %378, ptr %377, align 8, !tbaa !3
  %379 = getelementptr inbounds i8, ptr %20, i64 10
  %380 = trunc i16 %368 to i8
  store i8 %380, ptr %379, align 2, !tbaa !3
  %381 = lshr i16 %368, 8
  %382 = trunc i16 %381 to i8
  %383 = getelementptr inbounds i8, ptr %20, i64 11
  store i8 %382, ptr %383, align 1, !tbaa !3
  %384 = getelementptr inbounds i8, ptr %20, i64 12
  %385 = trunc i16 %369 to i8
  store i8 %385, ptr %384, align 4, !tbaa !3
  %386 = lshr i16 %369, 8
  %387 = trunc i16 %386 to i8
  %388 = getelementptr inbounds i8, ptr %20, i64 13
  store i8 %387, ptr %388, align 1, !tbaa !3
  %389 = getelementptr inbounds i8, ptr %20, i64 14
  %390 = getelementptr inbounds i8, ptr %20, i64 26
  %391 = trunc i64 %115 to i8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(12) %389, i8 0, i64 12, i1 false)
  store i8 %391, ptr %390, align 2, !tbaa !3
  %392 = lshr i64 %115, 8
  %393 = trunc i64 %392 to i8
  %394 = getelementptr inbounds i8, ptr %20, i64 27
  store i8 %393, ptr %394, align 1, !tbaa !3
  %395 = getelementptr inbounds i8, ptr %20, i64 28
  %396 = trunc i32 %11 to i8
  store i8 %396, ptr %395, align 4, !tbaa !3
  %397 = lshr i32 %11, 8
  %398 = trunc i32 %397 to i8
  %399 = getelementptr inbounds i8, ptr %20, i64 29
  store i8 %398, ptr %399, align 1, !tbaa !3
  %400 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %401 = load ptr, ptr %400, align 8, !tbaa !284
  %402 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %403 = load ptr, ptr %402, align 8, !tbaa !205
  %404 = call i64 %401(ptr noundef %403, i64 noundef %262, ptr noundef nonnull %20, i64 noundef 30) #38
  %405 = icmp eq i64 %404, 30
  br i1 %405, label %408, label %406

406:                                              ; preds = %367
  %407 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %407, align 4, !tbaa !189
  br label %617

408:                                              ; preds = %367
  %409 = add nuw nsw i64 %271, 30
  %410 = load ptr, ptr %400, align 8, !tbaa !284
  %411 = load ptr, ptr %402, align 8, !tbaa !205
  %412 = call i64 %410(ptr noundef %411, i64 noundef %409, ptr noundef nonnull %1, i64 noundef %115) #38
  %413 = icmp eq i64 %412, %115
  br i1 %413, label %420, label %414

414:                                              ; preds = %408
  %415 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %416 = load ptr, ptr %415, align 8, !tbaa !187
  %417 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %418 = load ptr, ptr %417, align 8, !tbaa !190
  call void %416(ptr noundef %418, ptr noundef %251) #38
  %419 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %419, align 4, !tbaa !189
  br label %617

420:                                              ; preds = %408
  %421 = add i64 %409, %115
  br label %422

422:                                              ; preds = %347, %358, %420
  %423 = phi i16 [ %294, %358 ], [ %294, %347 ], [ %369, %420 ]
  %424 = phi i16 [ %293, %358 ], [ %293, %347 ], [ %368, %420 ]
  %425 = phi i64 [ %359, %358 ], [ %348, %347 ], [ %421, %420 ]
  %426 = phi ptr [ %290, %358 ], [ null, %347 ], [ null, %420 ]
  %427 = phi i32 [ %291, %358 ], [ %291, %347 ], [ 0, %420 ]
  %428 = icmp eq i32 %11, 0
  br i1 %428, label %441, label %429

429:                                              ; preds = %422
  %430 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %431 = load ptr, ptr %430, align 8, !tbaa !284
  %432 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %433 = load ptr, ptr %432, align 8, !tbaa !205
  %434 = zext i32 %11 to i64
  %435 = call i64 %431(ptr noundef %433, i64 noundef %425, ptr noundef %10, i64 noundef %434) #38
  %436 = icmp eq i64 %435, %434
  br i1 %436, label %439, label %437

437:                                              ; preds = %429
  %438 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %438, align 4, !tbaa !189
  br label %617

439:                                              ; preds = %429
  %440 = add i64 %425, %434
  br label %441

441:                                              ; preds = %439, %422
  %442 = phi i64 [ %440, %439 ], [ %425, %422 ]
  br i1 %114, label %443, label %458

443:                                              ; preds = %441
  %444 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %445 = load ptr, ptr %444, align 8, !tbaa !284
  %446 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %447 = load ptr, ptr %446, align 8, !tbaa !205
  %448 = call i64 %445(ptr noundef %447, i64 noundef %442, ptr noundef %2, i64 noundef %3) #38
  %449 = icmp eq i64 %448, %3
  br i1 %449, label %456, label %450

450:                                              ; preds = %443
  %451 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %452 = load ptr, ptr %451, align 8, !tbaa !187
  %453 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %454 = load ptr, ptr %453, align 8, !tbaa !190
  call void %452(ptr noundef %454, ptr noundef %251) #38
  %455 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %455, align 4, !tbaa !189
  br label %617

456:                                              ; preds = %443
  %457 = add i64 %442, %3
  store i64 %3, ptr %19, align 8, !tbaa !46
  br label %484

458:                                              ; preds = %441
  br i1 %57, label %484, label %459

459:                                              ; preds = %458
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %23) #38
  store ptr %0, ptr %23, align 8, !tbaa !291
  %460 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %23, i64 0, i32 1
  store i64 %442, ptr %460, align 8, !tbaa !293
  %461 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %23, i64 0, i32 2
  store i64 0, ptr %461, align 8, !tbaa !294
  %462 = call i32 @llvm.smin.i32(i32 %112, i32 10)
  %463 = zext i32 %462 to i64
  %464 = getelementptr inbounds [11 x i32], ptr @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %463
  %465 = load i32, ptr %464, align 4, !tbaa !12
  %466 = icmp slt i32 %112, 4
  %467 = select i1 %466, i32 16384, i32 0
  %468 = or i32 %465, %467
  %469 = icmp eq i32 %112, 0
  %470 = or i32 %468, 524288
  %471 = select i1 %469, i32 %470, i32 %468
  %472 = call i32 @tdefl_init(ptr noundef %251, ptr noundef nonnull @mz_zip_writer_add_put_buf_callback, ptr noundef nonnull %23, i32 noundef %471)
  %473 = call i32 @tdefl_compress_buffer(ptr noundef %251, ptr noundef %2, i64 noundef %3, i32 noundef 4)
  %474 = icmp eq i32 %473, 1
  br i1 %474, label %475, label %478

475:                                              ; preds = %459
  %476 = load i64, ptr %461, align 8, !tbaa !294
  store i64 %476, ptr %19, align 8, !tbaa !46
  %477 = load i64, ptr %460, align 8, !tbaa !293
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %23) #38
  br label %484

478:                                              ; preds = %459
  %479 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %480 = load ptr, ptr %479, align 8, !tbaa !187
  %481 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %482 = load ptr, ptr %481, align 8, !tbaa !190
  call void %480(ptr noundef %482, ptr noundef %251) #38
  %483 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 12, ptr %483, align 4, !tbaa !189
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %23) #38
  br label %617

484:                                              ; preds = %475, %458, %456
  %485 = phi i64 [ %457, %456 ], [ %442, %458 ], [ %477, %475 ]
  %486 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %487 = load ptr, ptr %486, align 8, !tbaa !187
  %488 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %489 = load ptr, ptr %488, align 8, !tbaa !190
  call void %487(ptr noundef %489, ptr noundef %251) #38
  %490 = load i64, ptr %15, align 8, !tbaa !46
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %592, label %492

492:                                              ; preds = %484
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %24) #38
  %493 = and i16 %44, 8
  %494 = icmp eq i16 %493, 0
  br i1 %494, label %495, label %496

495:                                              ; preds = %492
  call void @__assert_fail(ptr noundef nonnull @.str.23, ptr noundef nonnull @.str.12, i32 noundef 8752, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_writer_add_mem_ex_v2) #41
  unreachable

496:                                              ; preds = %492
  store <4 x i8> <i8 80, i8 75, i8 7, i8 8>, ptr %24, align 16, !tbaa !3
  %497 = getelementptr inbounds i8, ptr %24, i64 4
  %498 = trunc i32 %113 to i8
  store i8 %498, ptr %497, align 4, !tbaa !3
  %499 = lshr i32 %113, 8
  %500 = trunc i32 %499 to i8
  %501 = getelementptr inbounds i8, ptr %24, i64 5
  store i8 %500, ptr %501, align 1, !tbaa !3
  %502 = lshr i32 %113, 16
  %503 = trunc i32 %502 to i8
  %504 = getelementptr inbounds i8, ptr %24, i64 6
  store i8 %503, ptr %504, align 2, !tbaa !3
  %505 = lshr i32 %113, 24
  %506 = trunc i32 %505 to i8
  %507 = getelementptr inbounds i8, ptr %24, i64 7
  store i8 %506, ptr %507, align 1, !tbaa !3
  %508 = icmp eq ptr %426, null
  br i1 %508, label %509, label %527

509:                                              ; preds = %496
  %510 = load i64, ptr %19, align 8, !tbaa !46
  %511 = icmp ugt i64 %510, 4294967295
  br i1 %511, label %512, label %514

512:                                              ; preds = %509
  %513 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %513, align 4, !tbaa !189
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %24) #38
  br label %617

514:                                              ; preds = %509
  %515 = getelementptr inbounds i8, ptr %24, i64 8
  %516 = trunc i64 %510 to i8
  store i8 %516, ptr %515, align 8, !tbaa !3
  %517 = lshr i64 %510, 8
  %518 = trunc i64 %517 to i8
  %519 = getelementptr inbounds i8, ptr %24, i64 9
  store i8 %518, ptr %519, align 1, !tbaa !3
  %520 = lshr i64 %510, 16
  %521 = trunc i64 %520 to i8
  %522 = getelementptr inbounds i8, ptr %24, i64 10
  store i8 %521, ptr %522, align 2, !tbaa !3
  %523 = lshr i64 %510, 24
  %524 = trunc i64 %523 to i8
  %525 = getelementptr inbounds i8, ptr %24, i64 11
  store i8 %524, ptr %525, align 1, !tbaa !3
  %526 = getelementptr inbounds i8, ptr %24, i64 12
  br label %565

527:                                              ; preds = %496
  %528 = getelementptr inbounds i8, ptr %24, i64 8
  %529 = load i64, ptr %19, align 8, !tbaa !46
  %530 = trunc i64 %529 to i8
  store i8 %530, ptr %528, align 8, !tbaa !3
  %531 = lshr i64 %529, 8
  %532 = trunc i64 %531 to i8
  %533 = getelementptr inbounds i8, ptr %24, i64 9
  store i8 %532, ptr %533, align 1, !tbaa !3
  %534 = lshr i64 %529, 16
  %535 = trunc i64 %534 to i8
  %536 = getelementptr inbounds i8, ptr %24, i64 10
  store i8 %535, ptr %536, align 2, !tbaa !3
  %537 = lshr i64 %529, 24
  %538 = trunc i64 %537 to i8
  %539 = getelementptr inbounds i8, ptr %24, i64 11
  store i8 %538, ptr %539, align 1, !tbaa !3
  %540 = getelementptr inbounds i8, ptr %24, i64 12
  %541 = lshr i64 %529, 32
  %542 = trunc i64 %541 to i8
  store i8 %542, ptr %540, align 4, !tbaa !3
  %543 = lshr i64 %529, 40
  %544 = trunc i64 %543 to i8
  %545 = getelementptr inbounds i8, ptr %24, i64 13
  store i8 %544, ptr %545, align 1, !tbaa !3
  %546 = lshr i64 %529, 48
  %547 = trunc i64 %546 to i8
  %548 = getelementptr inbounds i8, ptr %24, i64 14
  store i8 %547, ptr %548, align 2, !tbaa !3
  %549 = lshr i64 %529, 56
  %550 = trunc i64 %549 to i8
  %551 = getelementptr inbounds i8, ptr %24, i64 15
  store i8 %550, ptr %551, align 1, !tbaa !3
  %552 = getelementptr inbounds i8, ptr %24, i64 16
  %553 = trunc i64 %490 to i8
  store i8 %553, ptr %552, align 16, !tbaa !3
  %554 = lshr i64 %490, 8
  %555 = trunc i64 %554 to i8
  %556 = getelementptr inbounds i8, ptr %24, i64 17
  store i8 %555, ptr %556, align 1, !tbaa !3
  %557 = lshr i64 %490, 16
  %558 = trunc i64 %557 to i8
  %559 = getelementptr inbounds i8, ptr %24, i64 18
  store i8 %558, ptr %559, align 2, !tbaa !3
  %560 = lshr i64 %490, 24
  %561 = trunc i64 %560 to i8
  %562 = getelementptr inbounds i8, ptr %24, i64 19
  store i8 %561, ptr %562, align 1, !tbaa !3
  %563 = getelementptr inbounds i8, ptr %24, i64 20
  %564 = lshr i64 %490, 32
  br label %565

565:                                              ; preds = %514, %527
  %566 = phi i64 [ %490, %514 ], [ %564, %527 ]
  %567 = phi ptr [ %526, %514 ], [ %563, %527 ]
  %568 = phi i64 [ 8, %514 ], [ 40, %527 ]
  %569 = phi i64 [ 13, %514 ], [ 21, %527 ]
  %570 = phi i64 [ 16, %514 ], [ 48, %527 ]
  %571 = phi i64 [ 14, %514 ], [ 22, %527 ]
  %572 = phi i64 [ 24, %514 ], [ 56, %527 ]
  %573 = phi i64 [ 15, %514 ], [ 23, %527 ]
  %574 = phi i64 [ 16, %514 ], [ 24, %527 ]
  %575 = trunc i64 %566 to i8
  store i8 %575, ptr %567, align 4, !tbaa !3
  %576 = lshr i64 %490, %568
  %577 = trunc i64 %576 to i8
  %578 = getelementptr inbounds i8, ptr %24, i64 %569
  store i8 %577, ptr %578, align 1, !tbaa !3
  %579 = lshr i64 %490, %570
  %580 = trunc i64 %579 to i8
  %581 = getelementptr inbounds i8, ptr %24, i64 %571
  store i8 %580, ptr %581, align 2, !tbaa !3
  %582 = lshr i64 %490, %572
  %583 = trunc i64 %582 to i8
  %584 = getelementptr inbounds i8, ptr %24, i64 %573
  store i8 %583, ptr %584, align 1, !tbaa !3
  %585 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %586 = load ptr, ptr %585, align 8, !tbaa !284
  %587 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %588 = load ptr, ptr %587, align 8, !tbaa !205
  %589 = call i64 %586(ptr noundef %588, i64 noundef %485, ptr noundef nonnull %24, i64 noundef %574) #38
  %590 = icmp eq i64 %589, %574
  %591 = add i64 %574, %485
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %24) #38
  br i1 %590, label %592, label %617

592:                                              ; preds = %565, %484
  %593 = phi i64 [ %591, %565 ], [ %485, %484 ]
  %594 = icmp eq ptr %426, null
  br i1 %594, label %604, label %595

595:                                              ; preds = %592
  %596 = load i64, ptr %15, align 8, !tbaa !46
  %597 = icmp ugt i64 %596, 4294967294
  %598 = select i1 %597, ptr %15, ptr null
  %599 = select i1 %597, ptr %19, ptr null
  %600 = load i64, ptr %18, align 8, !tbaa !46
  %601 = icmp ugt i64 %600, 4294967294
  %602 = select i1 %601, ptr %18, ptr null
  %603 = call fastcc i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef nonnull %21, ptr noundef %598, ptr noundef %599, ptr noundef %602)
  br label %604

604:                                              ; preds = %595, %592
  %605 = phi i32 [ %603, %595 ], [ %427, %592 ]
  %606 = trunc i64 %115 to i16
  %607 = trunc i32 %605 to i16
  %608 = load i64, ptr %15, align 8, !tbaa !46
  %609 = load i64, ptr %19, align 8, !tbaa !46
  %610 = load i64, ptr %18, align 8, !tbaa !46
  %611 = call fastcc i32 @mz_zip_writer_add_to_central_dir(ptr noundef nonnull %0, ptr noundef nonnull %1, i16 noundef zeroext %606, ptr noundef %426, i16 noundef zeroext %607, ptr noundef %4, i16 noundef zeroext %5, i64 noundef %608, i64 noundef %609, i32 noundef %113, i16 noundef zeroext %274, i16 noundef zeroext %44, i16 noundef zeroext %424, i16 noundef zeroext %423, i64 noundef %610, i32 noundef %175, ptr noundef %12, i32 noundef %13)
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %617, label %613

613:                                              ; preds = %604
  %614 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %615 = load i32, ptr %614, align 8, !tbaa !207
  %616 = add i32 %615, 1
  store i32 %616, ptr %614, align 8, !tbaa !207
  store i64 %593, ptr %0, align 8, !tbaa !204
  br label %617

617:                                              ; preds = %512, %478, %604, %565, %613, %450, %437, %414, %406, %365, %356, %341, %333, %254, %248, %237, %172, %139, %117, %95, %90, %78, %68
  %618 = phi i32 [ 0, %68 ], [ 0, %78 ], [ 0, %90 ], [ 0, %117 ], [ 0, %139 ], [ 0, %172 ], [ 0, %248 ], [ 0, %333 ], [ 0, %341 ], [ 0, %356 ], [ 0, %437 ], [ 0, %450 ], [ 1, %613 ], [ 0, %565 ], [ 0, %478 ], [ 0, %365 ], [ 0, %406 ], [ 0, %414 ], [ 0, %254 ], [ 0, %237 ], [ 0, %95 ], [ 0, %604 ], [ 0, %512 ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %21) #38
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %20) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #38
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %17) #38
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %16) #38
  ret i32 %618
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mz_zip_time_t_to_dos_time(i64 noundef %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef writeonly %2) unnamed_addr #8 {
  %4 = alloca i64, align 8
  store i64 %0, ptr %4, align 8, !tbaa !46
  %5 = call ptr @localtime(ptr noundef nonnull %4) #38
  %6 = getelementptr inbounds %struct.tm, ptr %5, i64 0, i32 2
  %7 = load i32, ptr %6, align 8, !tbaa !275
  %8 = shl i32 %7, 11
  %9 = getelementptr inbounds %struct.tm, ptr %5, i64 0, i32 1
  %10 = load i32, ptr %9, align 4, !tbaa !276
  %11 = shl i32 %10, 5
  %12 = add nsw i32 %11, %8
  %13 = load i32, ptr %5, align 8, !tbaa !277
  %14 = lshr i32 %13, 1
  %15 = add i32 %12, %14
  %16 = trunc i32 %15 to i16
  store i16 %16, ptr %1, align 2, !tbaa !103
  %17 = getelementptr inbounds %struct.tm, ptr %5, i64 0, i32 5
  %18 = load i32, ptr %17, align 4, !tbaa !272
  %19 = shl i32 %18, 9
  %20 = getelementptr inbounds %struct.tm, ptr %5, i64 0, i32 4
  %21 = load i32, ptr %20, align 8, !tbaa !273
  %22 = shl i32 %21, 5
  %23 = getelementptr inbounds %struct.tm, ptr %5, i64 0, i32 3
  %24 = load i32, ptr %23, align 4, !tbaa !274
  %25 = add i32 %19, 24608
  %26 = add i32 %25, %22
  %27 = add i32 %26, %24
  %28 = trunc i32 %27 to i16
  store i16 %28, ptr %2, align 2, !tbaa !103
  ret void
}

; Function Attrs: nounwind
declare dso_local i64 @time(ptr noundef) local_unnamed_addr #26

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mz_zip_writer_write_zeros(ptr noundef %0, i64 noundef %1, i32 noundef %2) unnamed_addr #8 {
  %4 = alloca [4096 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 4096, ptr nonnull %4) #38
  %5 = tail call i32 @llvm.umin.i32(i32 %2, i32 4096)
  %6 = zext i32 %5 to i64
  call void @llvm.memset.p0.i64(ptr nonnull align 16 %4, i8 0, i64 %6, i1 false)
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  br label %11

11:                                               ; preds = %8, %22
  %12 = phi i32 [ %2, %8 ], [ %24, %22 ]
  %13 = phi i64 [ %1, %8 ], [ %23, %22 ]
  %14 = call i32 @llvm.umin.i32(i32 %12, i32 4096)
  %15 = load ptr, ptr %9, align 8, !tbaa !284
  %16 = load ptr, ptr %10, align 8, !tbaa !205
  %17 = zext i32 %14 to i64
  %18 = call i64 %15(ptr noundef %16, i64 noundef %13, ptr noundef nonnull %4, i64 noundef %17) #38
  %19 = icmp eq i64 %18, %17
  br i1 %19, label %22, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %21, align 4, !tbaa !189
  br label %26

22:                                               ; preds = %11
  %23 = add i64 %13, %17
  %24 = sub i32 %12, %14
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %11

26:                                               ; preds = %22, %3, %20
  %27 = phi i32 [ 0, %20 ], [ 1, %3 ], [ 1, %22 ]
  call void @llvm.lifetime.end.p0(i64 4096, ptr nonnull %4) #38
  ret i32 %27
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal fastcc i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef %0, ptr noundef readonly %1, ptr noundef readonly %2, ptr noundef readonly %3) unnamed_addr #14 {
  store <4 x i8> <i8 1, i8 0, i8 0, i8 0>, ptr %0, align 1, !tbaa !3
  %5 = getelementptr inbounds i8, ptr %0, i64 4
  %6 = icmp eq ptr %1, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %4
  %8 = load i64, ptr %1, align 8, !tbaa !46
  %9 = trunc i64 %8 to i8
  store i8 %9, ptr %5, align 1, !tbaa !3
  %10 = lshr i64 %8, 8
  %11 = trunc i64 %10 to i8
  %12 = getelementptr inbounds i8, ptr %0, i64 5
  store i8 %11, ptr %12, align 1, !tbaa !3
  %13 = lshr i64 %8, 16
  %14 = trunc i64 %13 to i8
  %15 = getelementptr inbounds i8, ptr %0, i64 6
  store i8 %14, ptr %15, align 1, !tbaa !3
  %16 = lshr i64 %8, 24
  %17 = trunc i64 %16 to i8
  %18 = getelementptr inbounds i8, ptr %0, i64 7
  store i8 %17, ptr %18, align 1, !tbaa !3
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = lshr i64 %8, 32
  %21 = trunc i64 %20 to i8
  store i8 %21, ptr %19, align 1, !tbaa !3
  %22 = lshr i64 %8, 40
  %23 = trunc i64 %22 to i8
  %24 = getelementptr inbounds i8, ptr %0, i64 9
  store i8 %23, ptr %24, align 1, !tbaa !3
  %25 = lshr i64 %8, 48
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds i8, ptr %0, i64 10
  store i8 %26, ptr %27, align 1, !tbaa !3
  %28 = lshr i64 %8, 56
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds i8, ptr %0, i64 11
  store i8 %29, ptr %30, align 1, !tbaa !3
  %31 = getelementptr inbounds i8, ptr %0, i64 12
  br label %32

32:                                               ; preds = %7, %4
  %33 = phi ptr [ %31, %7 ], [ %5, %4 ]
  %34 = phi i32 [ 8, %7 ], [ 0, %4 ]
  %35 = icmp eq ptr %2, null
  br i1 %35, label %62, label %36

36:                                               ; preds = %32
  %37 = load i64, ptr %2, align 8, !tbaa !46
  %38 = trunc i64 %37 to i8
  store i8 %38, ptr %33, align 1, !tbaa !3
  %39 = lshr i64 %37, 8
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds i8, ptr %33, i64 1
  store i8 %40, ptr %41, align 1, !tbaa !3
  %42 = lshr i64 %37, 16
  %43 = trunc i64 %42 to i8
  %44 = getelementptr inbounds i8, ptr %33, i64 2
  store i8 %43, ptr %44, align 1, !tbaa !3
  %45 = lshr i64 %37, 24
  %46 = trunc i64 %45 to i8
  %47 = getelementptr inbounds i8, ptr %33, i64 3
  store i8 %46, ptr %47, align 1, !tbaa !3
  %48 = getelementptr inbounds i8, ptr %33, i64 4
  %49 = lshr i64 %37, 32
  %50 = trunc i64 %49 to i8
  store i8 %50, ptr %48, align 1, !tbaa !3
  %51 = lshr i64 %37, 40
  %52 = trunc i64 %51 to i8
  %53 = getelementptr inbounds i8, ptr %33, i64 5
  store i8 %52, ptr %53, align 1, !tbaa !3
  %54 = lshr i64 %37, 48
  %55 = trunc i64 %54 to i8
  %56 = getelementptr inbounds i8, ptr %33, i64 6
  store i8 %55, ptr %56, align 1, !tbaa !3
  %57 = lshr i64 %37, 56
  %58 = trunc i64 %57 to i8
  %59 = getelementptr inbounds i8, ptr %33, i64 7
  store i8 %58, ptr %59, align 1, !tbaa !3
  %60 = getelementptr inbounds i8, ptr %33, i64 8
  %61 = add nuw nsw i32 %34, 8
  br label %62

62:                                               ; preds = %36, %32
  %63 = phi ptr [ %60, %36 ], [ %33, %32 ]
  %64 = phi i32 [ %61, %36 ], [ %34, %32 ]
  %65 = icmp eq ptr %3, null
  br i1 %65, label %92, label %66

66:                                               ; preds = %62
  %67 = load i64, ptr %3, align 8, !tbaa !46
  %68 = trunc i64 %67 to i8
  store i8 %68, ptr %63, align 1, !tbaa !3
  %69 = lshr i64 %67, 8
  %70 = trunc i64 %69 to i8
  %71 = getelementptr inbounds i8, ptr %63, i64 1
  store i8 %70, ptr %71, align 1, !tbaa !3
  %72 = lshr i64 %67, 16
  %73 = trunc i64 %72 to i8
  %74 = getelementptr inbounds i8, ptr %63, i64 2
  store i8 %73, ptr %74, align 1, !tbaa !3
  %75 = lshr i64 %67, 24
  %76 = trunc i64 %75 to i8
  %77 = getelementptr inbounds i8, ptr %63, i64 3
  store i8 %76, ptr %77, align 1, !tbaa !3
  %78 = getelementptr inbounds i8, ptr %63, i64 4
  %79 = lshr i64 %67, 32
  %80 = trunc i64 %79 to i8
  store i8 %80, ptr %78, align 1, !tbaa !3
  %81 = lshr i64 %67, 40
  %82 = trunc i64 %81 to i8
  %83 = getelementptr inbounds i8, ptr %63, i64 5
  store i8 %82, ptr %83, align 1, !tbaa !3
  %84 = lshr i64 %67, 48
  %85 = trunc i64 %84 to i8
  %86 = getelementptr inbounds i8, ptr %63, i64 6
  store i8 %85, ptr %86, align 1, !tbaa !3
  %87 = lshr i64 %67, 56
  %88 = trunc i64 %87 to i8
  %89 = getelementptr inbounds i8, ptr %63, i64 7
  store i8 %88, ptr %89, align 1, !tbaa !3
  %90 = getelementptr inbounds i8, ptr %63, i64 8
  %91 = add nuw nsw i32 %64, 8
  br label %92

92:                                               ; preds = %66, %62
  %93 = phi ptr [ %90, %66 ], [ %63, %62 ]
  %94 = phi i32 [ %91, %66 ], [ %64, %62 ]
  %95 = getelementptr inbounds i8, ptr %0, i64 3
  %96 = getelementptr inbounds i8, ptr %0, i64 2
  %97 = trunc i32 %94 to i8
  store i8 %97, ptr %96, align 1, !tbaa !3
  store i8 0, ptr %95, align 1, !tbaa !3
  %98 = ptrtoint ptr %93 to i64
  %99 = ptrtoint ptr %0 to i64
  %100 = sub i64 %98, %99
  %101 = trunc i64 %100 to i32
  ret i32 %101
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: write) uwtable
define internal fastcc void @mz_zip_writer_create_local_dir_header(ptr nocapture noundef writeonly %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i64 noundef %3, i64 noundef %4, i32 noundef %5, i16 noundef zeroext %6, i16 noundef zeroext %7, i16 noundef zeroext %8, i16 noundef zeroext %9) unnamed_addr #10 {
  store <4 x i8> <i8 80, i8 75, i8 3, i8 4>, ptr %0, align 1, !tbaa !3
  %11 = getelementptr inbounds i8, ptr %0, i64 4
  %12 = icmp eq i16 %6, 0
  %13 = select i1 %12, i8 0, i8 20
  store i8 %13, ptr %11, align 1, !tbaa !3
  %14 = getelementptr inbounds i8, ptr %0, i64 5
  store i8 0, ptr %14, align 1, !tbaa !3
  %15 = getelementptr inbounds i8, ptr %0, i64 6
  %16 = trunc i16 %7 to i8
  store i8 %16, ptr %15, align 1, !tbaa !3
  %17 = lshr i16 %7, 8
  %18 = trunc i16 %17 to i8
  %19 = getelementptr inbounds i8, ptr %0, i64 7
  store i8 %18, ptr %19, align 1, !tbaa !3
  %20 = getelementptr inbounds i8, ptr %0, i64 8
  %21 = trunc i16 %6 to i8
  store i8 %21, ptr %20, align 1, !tbaa !3
  %22 = lshr i16 %6, 8
  %23 = trunc i16 %22 to i8
  %24 = getelementptr inbounds i8, ptr %0, i64 9
  store i8 %23, ptr %24, align 1, !tbaa !3
  %25 = getelementptr inbounds i8, ptr %0, i64 10
  %26 = trunc i16 %8 to i8
  store i8 %26, ptr %25, align 1, !tbaa !3
  %27 = lshr i16 %8, 8
  %28 = trunc i16 %27 to i8
  %29 = getelementptr inbounds i8, ptr %0, i64 11
  store i8 %28, ptr %29, align 1, !tbaa !3
  %30 = getelementptr inbounds i8, ptr %0, i64 12
  %31 = trunc i16 %9 to i8
  store i8 %31, ptr %30, align 1, !tbaa !3
  %32 = lshr i16 %9, 8
  %33 = trunc i16 %32 to i8
  %34 = getelementptr inbounds i8, ptr %0, i64 13
  store i8 %33, ptr %34, align 1, !tbaa !3
  %35 = getelementptr inbounds i8, ptr %0, i64 14
  %36 = trunc i32 %5 to i8
  store i8 %36, ptr %35, align 1, !tbaa !3
  %37 = lshr i32 %5, 8
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds i8, ptr %0, i64 15
  store i8 %38, ptr %39, align 1, !tbaa !3
  %40 = lshr i32 %5, 16
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds i8, ptr %0, i64 16
  store i8 %41, ptr %42, align 1, !tbaa !3
  %43 = lshr i32 %5, 24
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds i8, ptr %0, i64 17
  store i8 %44, ptr %45, align 1, !tbaa !3
  %46 = getelementptr inbounds i8, ptr %0, i64 18
  %47 = tail call i64 @llvm.umin.i64(i64 %4, i64 4294967295)
  %48 = trunc i64 %47 to i8
  store i8 %48, ptr %46, align 1, !tbaa !3
  %49 = lshr i64 %47, 8
  %50 = trunc i64 %49 to i8
  %51 = getelementptr inbounds i8, ptr %0, i64 19
  store i8 %50, ptr %51, align 1, !tbaa !3
  %52 = lshr i64 %47, 16
  %53 = trunc i64 %52 to i8
  %54 = getelementptr inbounds i8, ptr %0, i64 20
  store i8 %53, ptr %54, align 1, !tbaa !3
  %55 = lshr i64 %47, 24
  %56 = trunc i64 %55 to i8
  %57 = getelementptr inbounds i8, ptr %0, i64 21
  store i8 %56, ptr %57, align 1, !tbaa !3
  %58 = getelementptr inbounds i8, ptr %0, i64 22
  %59 = tail call i64 @llvm.umin.i64(i64 %3, i64 4294967295)
  %60 = trunc i64 %59 to i8
  store i8 %60, ptr %58, align 1, !tbaa !3
  %61 = lshr i64 %59, 8
  %62 = trunc i64 %61 to i8
  %63 = getelementptr inbounds i8, ptr %0, i64 23
  store i8 %62, ptr %63, align 1, !tbaa !3
  %64 = lshr i64 %59, 16
  %65 = trunc i64 %64 to i8
  %66 = getelementptr inbounds i8, ptr %0, i64 24
  store i8 %65, ptr %66, align 1, !tbaa !3
  %67 = lshr i64 %59, 24
  %68 = trunc i64 %67 to i8
  %69 = getelementptr inbounds i8, ptr %0, i64 25
  store i8 %68, ptr %69, align 1, !tbaa !3
  %70 = getelementptr inbounds i8, ptr %0, i64 26
  %71 = trunc i16 %1 to i8
  store i8 %71, ptr %70, align 1, !tbaa !3
  %72 = lshr i16 %1, 8
  %73 = trunc i16 %72 to i8
  %74 = getelementptr inbounds i8, ptr %0, i64 27
  store i8 %73, ptr %74, align 1, !tbaa !3
  %75 = getelementptr inbounds i8, ptr %0, i64 28
  %76 = trunc i16 %2 to i8
  store i8 %76, ptr %75, align 1, !tbaa !3
  %77 = lshr i16 %2, 8
  %78 = trunc i16 %77 to i8
  %79 = getelementptr inbounds i8, ptr %0, i64 29
  store i8 %78, ptr %79, align 1, !tbaa !3
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_writer_add_put_buf_callback(ptr noundef %0, i32 noundef %1, ptr nocapture noundef %2) #8 {
  %4 = load ptr, ptr %2, align 8, !tbaa !291
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 12
  %6 = load ptr, ptr %5, align 8, !tbaa !284
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 14
  %8 = load ptr, ptr %7, align 8, !tbaa !205
  %9 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %2, i64 0, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !293
  %11 = sext i32 %1 to i64
  %12 = tail call i64 %6(ptr noundef %8, i64 noundef %10, ptr noundef %0, i64 noundef %11) #38
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %15, label %20

15:                                               ; preds = %3
  %16 = load <2 x i64>, ptr %9, align 8, !tbaa !46
  %17 = insertelement <2 x i64> poison, i64 %11, i64 0
  %18 = shufflevector <2 x i64> %17, <2 x i64> poison, <2 x i32> zeroinitializer
  %19 = add <2 x i64> %16, %18
  store <2 x i64> %19, ptr %9, align 8, !tbaa !46
  br label %20

20:                                               ; preds = %3, %15
  %21 = phi i32 [ 1, %15 ], [ 0, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mz_zip_writer_add_to_central_dir(ptr noundef %0, ptr nocapture noundef readonly %1, i16 noundef zeroext %2, ptr nocapture noundef readonly %3, i16 noundef zeroext %4, ptr nocapture noundef readonly %5, i16 noundef zeroext %6, i64 noundef %7, i64 noundef %8, i32 noundef %9, i16 noundef zeroext %10, i16 noundef zeroext %11, i16 noundef zeroext %12, i16 noundef zeroext %13, i64 noundef %14, i32 noundef %15, ptr nocapture noundef readonly %16, i32 noundef %17) unnamed_addr #8 {
  %19 = alloca i32, align 4
  %20 = alloca [46 x i8], align 16
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %22 = load ptr, ptr %21, align 8, !tbaa !184
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19)
  %23 = getelementptr inbounds %struct.mz_zip_array, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %23, align 8, !tbaa !282
  %25 = trunc i64 %24 to i32
  store i32 %25, ptr %19, align 4, !tbaa !12
  call void @llvm.lifetime.start.p0(i64 46, ptr nonnull %20)
  %26 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %22, i64 0, i32 4
  %27 = load i32, ptr %26, align 4, !tbaa !202
  %28 = icmp eq i32 %27, 0
  %29 = icmp ugt i64 %14, 4294967295
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %33

31:                                               ; preds = %18
  %32 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 3, ptr %32, align 4, !tbaa !189
  br label %389

33:                                               ; preds = %18
  %34 = add i64 %24, 46
  %35 = zext i16 %2 to i64
  %36 = zext i16 %4 to i64
  %37 = zext i32 %17 to i64
  %38 = zext i16 %6 to i64
  %39 = add nuw nsw i64 %36, %35
  %40 = add nuw nsw i64 %39, %38
  %41 = add nuw nsw i64 %40, %37
  %42 = add i64 %41, %34
  %43 = icmp ugt i64 %42, 4294967294
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 15, ptr %45, align 4, !tbaa !189
  br label %389

46:                                               ; preds = %33
  %47 = trunc i32 %17 to i16
  %48 = add i16 %47, %4
  %49 = getelementptr inbounds i8, ptr %20, i64 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(34) %49, i8 0, i64 34, i1 false)
  store <4 x i8> <i8 80, i8 75, i8 1, i8 2>, ptr %20, align 16, !tbaa !3
  %50 = icmp eq i16 %10, 0
  %51 = select i1 %50, i8 0, i8 20
  %52 = getelementptr inbounds i8, ptr %20, i64 6
  store i8 %51, ptr %52, align 2, !tbaa !3
  %53 = trunc i16 %11 to i8
  %54 = getelementptr inbounds i8, ptr %20, i64 8
  store i8 %53, ptr %54, align 8, !tbaa !3
  %55 = lshr i16 %11, 8
  %56 = trunc i16 %55 to i8
  %57 = getelementptr inbounds i8, ptr %20, i64 9
  store i8 %56, ptr %57, align 1, !tbaa !3
  %58 = trunc i16 %10 to i8
  %59 = getelementptr inbounds i8, ptr %20, i64 10
  store i8 %58, ptr %59, align 2, !tbaa !3
  %60 = lshr i16 %10, 8
  %61 = trunc i16 %60 to i8
  %62 = getelementptr inbounds i8, ptr %20, i64 11
  store i8 %61, ptr %62, align 1, !tbaa !3
  %63 = trunc i16 %12 to i8
  %64 = getelementptr inbounds i8, ptr %20, i64 12
  store i8 %63, ptr %64, align 4, !tbaa !3
  %65 = lshr i16 %12, 8
  %66 = trunc i16 %65 to i8
  %67 = getelementptr inbounds i8, ptr %20, i64 13
  store i8 %66, ptr %67, align 1, !tbaa !3
  %68 = trunc i16 %13 to i8
  %69 = getelementptr inbounds i8, ptr %20, i64 14
  store i8 %68, ptr %69, align 2, !tbaa !3
  %70 = lshr i16 %13, 8
  %71 = trunc i16 %70 to i8
  %72 = getelementptr inbounds i8, ptr %20, i64 15
  store i8 %71, ptr %72, align 1, !tbaa !3
  %73 = trunc i32 %9 to i8
  %74 = getelementptr inbounds i8, ptr %20, i64 16
  store i8 %73, ptr %74, align 16, !tbaa !3
  %75 = lshr i32 %9, 8
  %76 = trunc i32 %75 to i8
  %77 = getelementptr inbounds i8, ptr %20, i64 17
  store i8 %76, ptr %77, align 1, !tbaa !3
  %78 = lshr i32 %9, 16
  %79 = trunc i32 %78 to i8
  %80 = getelementptr inbounds i8, ptr %20, i64 18
  store i8 %79, ptr %80, align 2, !tbaa !3
  %81 = lshr i32 %9, 24
  %82 = trunc i32 %81 to i8
  %83 = getelementptr inbounds i8, ptr %20, i64 19
  store i8 %82, ptr %83, align 1, !tbaa !3
  %84 = tail call i64 @llvm.umin.i64(i64 %8, i64 4294967295)
  %85 = trunc i64 %84 to i8
  %86 = getelementptr inbounds i8, ptr %20, i64 20
  store i8 %85, ptr %86, align 4, !tbaa !3
  %87 = lshr i64 %84, 8
  %88 = trunc i64 %87 to i8
  %89 = getelementptr inbounds i8, ptr %20, i64 21
  store i8 %88, ptr %89, align 1, !tbaa !3
  %90 = lshr i64 %84, 16
  %91 = trunc i64 %90 to i8
  %92 = getelementptr inbounds i8, ptr %20, i64 22
  store i8 %91, ptr %92, align 2, !tbaa !3
  %93 = lshr i64 %84, 24
  %94 = trunc i64 %93 to i8
  %95 = getelementptr inbounds i8, ptr %20, i64 23
  store i8 %94, ptr %95, align 1, !tbaa !3
  %96 = tail call i64 @llvm.umin.i64(i64 %7, i64 4294967295)
  %97 = trunc i64 %96 to i8
  %98 = getelementptr inbounds i8, ptr %20, i64 24
  store i8 %97, ptr %98, align 8, !tbaa !3
  %99 = lshr i64 %96, 8
  %100 = trunc i64 %99 to i8
  %101 = getelementptr inbounds i8, ptr %20, i64 25
  store i8 %100, ptr %101, align 1, !tbaa !3
  %102 = lshr i64 %96, 16
  %103 = trunc i64 %102 to i8
  %104 = getelementptr inbounds i8, ptr %20, i64 26
  store i8 %103, ptr %104, align 2, !tbaa !3
  %105 = lshr i64 %96, 24
  %106 = trunc i64 %105 to i8
  %107 = getelementptr inbounds i8, ptr %20, i64 27
  store i8 %106, ptr %107, align 1, !tbaa !3
  %108 = trunc i16 %2 to i8
  %109 = getelementptr inbounds i8, ptr %20, i64 28
  store i8 %108, ptr %109, align 4, !tbaa !3
  %110 = lshr i16 %2, 8
  %111 = trunc i16 %110 to i8
  %112 = getelementptr inbounds i8, ptr %20, i64 29
  store i8 %111, ptr %112, align 1, !tbaa !3
  %113 = trunc i16 %48 to i8
  %114 = getelementptr inbounds i8, ptr %20, i64 30
  store i8 %113, ptr %114, align 2, !tbaa !3
  %115 = lshr i16 %48, 8
  %116 = trunc i16 %115 to i8
  %117 = getelementptr inbounds i8, ptr %20, i64 31
  store i8 %116, ptr %117, align 1, !tbaa !3
  %118 = trunc i16 %6 to i8
  %119 = getelementptr inbounds i8, ptr %20, i64 32
  store i8 %118, ptr %119, align 16, !tbaa !3
  %120 = lshr i16 %6, 8
  %121 = trunc i16 %120 to i8
  %122 = getelementptr inbounds i8, ptr %20, i64 33
  store i8 %121, ptr %122, align 1, !tbaa !3
  %123 = trunc i32 %15 to i8
  %124 = getelementptr inbounds i8, ptr %20, i64 38
  store i8 %123, ptr %124, align 2, !tbaa !3
  %125 = lshr i32 %15, 8
  %126 = trunc i32 %125 to i8
  %127 = getelementptr inbounds i8, ptr %20, i64 39
  store i8 %126, ptr %127, align 1, !tbaa !3
  %128 = lshr i32 %15, 16
  %129 = trunc i32 %128 to i8
  %130 = getelementptr inbounds i8, ptr %20, i64 40
  store i8 %129, ptr %130, align 8, !tbaa !3
  %131 = lshr i32 %15, 24
  %132 = trunc i32 %131 to i8
  %133 = getelementptr inbounds i8, ptr %20, i64 41
  store i8 %132, ptr %133, align 1, !tbaa !3
  %134 = tail call i64 @llvm.umin.i64(i64 %14, i64 4294967295)
  %135 = trunc i64 %134 to i8
  %136 = getelementptr inbounds i8, ptr %20, i64 42
  store i8 %135, ptr %136, align 2, !tbaa !3
  %137 = lshr i64 %134, 8
  %138 = trunc i64 %137 to i8
  %139 = getelementptr inbounds i8, ptr %20, i64 43
  store i8 %138, ptr %139, align 1, !tbaa !3
  %140 = lshr i64 %134, 16
  %141 = trunc i64 %140 to i8
  %142 = getelementptr inbounds i8, ptr %20, i64 44
  store i8 %141, ptr %142, align 4, !tbaa !3
  %143 = lshr i64 %134, 24
  %144 = trunc i64 %143 to i8
  %145 = getelementptr inbounds i8, ptr %20, i64 45
  store i8 %144, ptr %145, align 1, !tbaa !3
  %146 = getelementptr inbounds %struct.mz_zip_array, ptr %22, i64 0, i32 2
  %147 = load i64, ptr %146, align 8, !tbaa !209
  %148 = icmp ult i64 %147, %34
  br i1 %148, label %151, label %149

149:                                              ; preds = %46
  %150 = load ptr, ptr %22, align 8, !tbaa !191
  br label %173

151:                                              ; preds = %46
  %152 = getelementptr inbounds %struct.mz_zip_array, ptr %22, i64 0, i32 3
  %153 = load i32, ptr %152, align 8, !tbaa !210
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %151
  tail call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

156:                                              ; preds = %151
  %157 = icmp eq i64 %147, 0
  %158 = select i1 %157, i64 1, i64 %147
  br label %159

159:                                              ; preds = %159, %156
  %160 = phi i64 [ %158, %156 ], [ %162, %159 ]
  %161 = icmp ult i64 %160, %34
  %162 = shl i64 %160, 1
  br i1 %161, label %159, label %163, !llvm.loop !290

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %165 = load ptr, ptr %164, align 8, !tbaa !197
  %166 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %167 = load ptr, ptr %166, align 8, !tbaa !190
  %168 = load ptr, ptr %22, align 8, !tbaa !191
  %169 = zext i32 %153 to i64
  %170 = tail call ptr %165(ptr noundef %167, ptr noundef %168, i64 noundef %169, i64 noundef %160) #38
  %171 = icmp eq ptr %170, null
  br i1 %171, label %368, label %172

172:                                              ; preds = %163
  store ptr %170, ptr %22, align 8, !tbaa !191
  store i64 %160, ptr %146, align 8, !tbaa !209
  br label %173

173:                                              ; preds = %149, %172
  %174 = phi ptr [ %150, %149 ], [ %170, %172 ]
  store i64 %34, ptr %23, align 8, !tbaa !211
  %175 = getelementptr inbounds %struct.mz_zip_array, ptr %22, i64 0, i32 3
  %176 = load i32, ptr %175, align 8, !tbaa !210
  %177 = zext i32 %176 to i64
  %178 = mul i64 %24, %177
  %179 = getelementptr inbounds i8, ptr %174, i64 %178
  %180 = mul nuw nsw i64 %177, 46
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %179, ptr nonnull align 16 %20, i64 %180, i1 false)
  %181 = load i64, ptr %23, align 8, !tbaa !211
  %182 = add i64 %181, %35
  %183 = load i64, ptr %146, align 8, !tbaa !209
  %184 = icmp ult i64 %183, %182
  br i1 %184, label %185, label %206

185:                                              ; preds = %173
  %186 = load i32, ptr %175, align 8, !tbaa !210
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  tail call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

189:                                              ; preds = %185
  %190 = icmp eq i64 %183, 0
  %191 = select i1 %190, i64 1, i64 %183
  br label %192

192:                                              ; preds = %192, %189
  %193 = phi i64 [ %191, %189 ], [ %195, %192 ]
  %194 = icmp ult i64 %193, %182
  %195 = shl i64 %193, 1
  br i1 %194, label %192, label %196, !llvm.loop !290

196:                                              ; preds = %192
  %197 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %198 = load ptr, ptr %197, align 8, !tbaa !197
  %199 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %200 = load ptr, ptr %199, align 8, !tbaa !190
  %201 = load ptr, ptr %22, align 8, !tbaa !191
  %202 = zext i32 %186 to i64
  %203 = tail call ptr %198(ptr noundef %200, ptr noundef %201, i64 noundef %202, i64 noundef %193) #38
  %204 = icmp eq ptr %203, null
  br i1 %204, label %368, label %205

205:                                              ; preds = %196
  store ptr %203, ptr %22, align 8, !tbaa !191
  store i64 %193, ptr %146, align 8, !tbaa !209
  br label %206

206:                                              ; preds = %205, %173
  %207 = phi i64 [ %193, %205 ], [ %183, %173 ]
  store i64 %182, ptr %23, align 8, !tbaa !211
  %208 = icmp eq i16 %2, 0
  br i1 %208, label %218, label %209

209:                                              ; preds = %206
  %210 = load ptr, ptr %22, align 8, !tbaa !191
  %211 = load i32, ptr %175, align 8, !tbaa !210
  %212 = zext i32 %211 to i64
  %213 = mul i64 %181, %212
  %214 = getelementptr inbounds i8, ptr %210, i64 %213
  %215 = mul nuw nsw i64 %212, %35
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %214, ptr align 1 %1, i64 %215, i1 false)
  %216 = load i64, ptr %23, align 8, !tbaa !211
  %217 = load i64, ptr %146, align 8, !tbaa !209
  br label %218

218:                                              ; preds = %209, %206
  %219 = phi i64 [ %217, %209 ], [ %207, %206 ]
  %220 = phi i64 [ %216, %209 ], [ %182, %206 ]
  %221 = add i64 %220, %36
  %222 = icmp ult i64 %219, %221
  br i1 %222, label %223, label %244

223:                                              ; preds = %218
  %224 = load i32, ptr %175, align 8, !tbaa !210
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  tail call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

227:                                              ; preds = %223
  %228 = icmp eq i64 %219, 0
  %229 = select i1 %228, i64 1, i64 %219
  br label %230

230:                                              ; preds = %230, %227
  %231 = phi i64 [ %229, %227 ], [ %233, %230 ]
  %232 = icmp ult i64 %231, %221
  %233 = shl i64 %231, 1
  br i1 %232, label %230, label %234, !llvm.loop !290

234:                                              ; preds = %230
  %235 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %236 = load ptr, ptr %235, align 8, !tbaa !197
  %237 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %238 = load ptr, ptr %237, align 8, !tbaa !190
  %239 = load ptr, ptr %22, align 8, !tbaa !191
  %240 = zext i32 %224 to i64
  %241 = tail call ptr %236(ptr noundef %238, ptr noundef %239, i64 noundef %240, i64 noundef %231) #38
  %242 = icmp eq ptr %241, null
  br i1 %242, label %368, label %243

243:                                              ; preds = %234
  store ptr %241, ptr %22, align 8, !tbaa !191
  store i64 %231, ptr %146, align 8, !tbaa !209
  br label %244

244:                                              ; preds = %243, %218
  %245 = phi i64 [ %231, %243 ], [ %219, %218 ]
  store i64 %221, ptr %23, align 8, !tbaa !211
  %246 = icmp eq i16 %4, 0
  br i1 %246, label %256, label %247

247:                                              ; preds = %244
  %248 = load ptr, ptr %22, align 8, !tbaa !191
  %249 = load i32, ptr %175, align 8, !tbaa !210
  %250 = zext i32 %249 to i64
  %251 = mul i64 %220, %250
  %252 = getelementptr inbounds i8, ptr %248, i64 %251
  %253 = mul nuw nsw i64 %250, %36
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %252, ptr align 1 %3, i64 %253, i1 false)
  %254 = load i64, ptr %23, align 8, !tbaa !211
  %255 = load i64, ptr %146, align 8, !tbaa !209
  br label %256

256:                                              ; preds = %247, %244
  %257 = phi i64 [ %255, %247 ], [ %245, %244 ]
  %258 = phi i64 [ %254, %247 ], [ %221, %244 ]
  %259 = add i64 %258, %37
  %260 = icmp ult i64 %257, %259
  br i1 %260, label %261, label %282

261:                                              ; preds = %256
  %262 = load i32, ptr %175, align 8, !tbaa !210
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  tail call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

265:                                              ; preds = %261
  %266 = icmp eq i64 %257, 0
  %267 = select i1 %266, i64 1, i64 %257
  br label %268

268:                                              ; preds = %268, %265
  %269 = phi i64 [ %267, %265 ], [ %271, %268 ]
  %270 = icmp ult i64 %269, %259
  %271 = shl i64 %269, 1
  br i1 %270, label %268, label %272, !llvm.loop !290

272:                                              ; preds = %268
  %273 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %274 = load ptr, ptr %273, align 8, !tbaa !197
  %275 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %276 = load ptr, ptr %275, align 8, !tbaa !190
  %277 = load ptr, ptr %22, align 8, !tbaa !191
  %278 = zext i32 %262 to i64
  %279 = tail call ptr %274(ptr noundef %276, ptr noundef %277, i64 noundef %278, i64 noundef %269) #38
  %280 = icmp eq ptr %279, null
  br i1 %280, label %368, label %281

281:                                              ; preds = %272
  store ptr %279, ptr %22, align 8, !tbaa !191
  store i64 %269, ptr %146, align 8, !tbaa !209
  br label %282

282:                                              ; preds = %281, %256
  %283 = phi i64 [ %269, %281 ], [ %257, %256 ]
  store i64 %259, ptr %23, align 8, !tbaa !211
  %284 = icmp eq i32 %17, 0
  br i1 %284, label %294, label %285

285:                                              ; preds = %282
  %286 = load ptr, ptr %22, align 8, !tbaa !191
  %287 = load i32, ptr %175, align 8, !tbaa !210
  %288 = zext i32 %287 to i64
  %289 = mul i64 %258, %288
  %290 = getelementptr inbounds i8, ptr %286, i64 %289
  %291 = mul nuw i64 %288, %37
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %290, ptr align 1 %16, i64 %291, i1 false)
  %292 = load i64, ptr %23, align 8, !tbaa !211
  %293 = load i64, ptr %146, align 8, !tbaa !209
  br label %294

294:                                              ; preds = %285, %282
  %295 = phi i64 [ %293, %285 ], [ %283, %282 ]
  %296 = phi i64 [ %292, %285 ], [ %259, %282 ]
  %297 = add i64 %296, %38
  %298 = icmp ult i64 %295, %297
  br i1 %298, label %299, label %320

299:                                              ; preds = %294
  %300 = load i32, ptr %175, align 8, !tbaa !210
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %299
  tail call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

303:                                              ; preds = %299
  %304 = icmp eq i64 %295, 0
  %305 = select i1 %304, i64 1, i64 %295
  br label %306

306:                                              ; preds = %306, %303
  %307 = phi i64 [ %305, %303 ], [ %309, %306 ]
  %308 = icmp ult i64 %307, %297
  %309 = shl i64 %307, 1
  br i1 %308, label %306, label %310, !llvm.loop !290

310:                                              ; preds = %306
  %311 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %312 = load ptr, ptr %311, align 8, !tbaa !197
  %313 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %314 = load ptr, ptr %313, align 8, !tbaa !190
  %315 = load ptr, ptr %22, align 8, !tbaa !191
  %316 = zext i32 %300 to i64
  %317 = tail call ptr %312(ptr noundef %314, ptr noundef %315, i64 noundef %316, i64 noundef %307) #38
  %318 = icmp eq ptr %317, null
  br i1 %318, label %368, label %319

319:                                              ; preds = %310
  store ptr %317, ptr %22, align 8, !tbaa !191
  store i64 %307, ptr %146, align 8, !tbaa !209
  br label %320

320:                                              ; preds = %319, %294
  store i64 %297, ptr %23, align 8, !tbaa !211
  %321 = icmp eq i16 %6, 0
  br i1 %321, label %329, label %322

322:                                              ; preds = %320
  %323 = load ptr, ptr %22, align 8, !tbaa !191
  %324 = load i32, ptr %175, align 8, !tbaa !210
  %325 = zext i32 %324 to i64
  %326 = mul i64 %296, %325
  %327 = getelementptr inbounds i8, ptr %323, i64 %326
  %328 = mul nuw nsw i64 %325, %38
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %327, ptr align 1 %5, i64 %328, i1 false)
  br label %329

329:                                              ; preds = %322, %320
  %330 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %22, i64 0, i32 1
  %331 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %22, i64 0, i32 1, i32 1
  %332 = load i64, ptr %331, align 8, !tbaa !211
  %333 = add i64 %332, 1
  %334 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %22, i64 0, i32 1, i32 2
  %335 = load i64, ptr %334, align 8, !tbaa !209
  %336 = icmp ult i64 %335, %333
  br i1 %336, label %339, label %337

337:                                              ; preds = %329
  %338 = load ptr, ptr %330, align 8, !tbaa !191
  br label %361

339:                                              ; preds = %329
  %340 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %22, i64 0, i32 1, i32 3
  %341 = load i32, ptr %340, align 8, !tbaa !210
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %339
  tail call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

344:                                              ; preds = %339
  %345 = icmp eq i64 %335, 0
  %346 = select i1 %345, i64 1, i64 %335
  br label %347

347:                                              ; preds = %347, %344
  %348 = phi i64 [ %346, %344 ], [ %350, %347 ]
  %349 = icmp ult i64 %348, %333
  %350 = shl i64 %348, 1
  br i1 %349, label %347, label %351, !llvm.loop !290

351:                                              ; preds = %347
  %352 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %353 = load ptr, ptr %352, align 8, !tbaa !197
  %354 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %355 = load ptr, ptr %354, align 8, !tbaa !190
  %356 = load ptr, ptr %330, align 8, !tbaa !191
  %357 = zext i32 %341 to i64
  %358 = tail call ptr %353(ptr noundef %355, ptr noundef %356, i64 noundef %357, i64 noundef %348) #38
  %359 = icmp eq ptr %358, null
  br i1 %359, label %368, label %360

360:                                              ; preds = %351
  store ptr %358, ptr %330, align 8, !tbaa !191
  store i64 %348, ptr %334, align 8, !tbaa !209
  br label %361

361:                                              ; preds = %337, %360
  %362 = phi ptr [ %338, %337 ], [ %358, %360 ]
  store i64 %333, ptr %331, align 8, !tbaa !211
  %363 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %22, i64 0, i32 1, i32 3
  %364 = load i32, ptr %363, align 8, !tbaa !210
  %365 = zext i32 %364 to i64
  %366 = mul i64 %332, %365
  %367 = getelementptr inbounds i8, ptr %362, i64 %366
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %367, ptr nonnull align 4 %19, i64 %365, i1 false)
  br label %389

368:                                              ; preds = %351, %163, %310, %272, %234, %196
  %369 = load i64, ptr %146, align 8, !tbaa !209
  %370 = icmp ult i64 %369, %24
  br i1 %370, label %371, label %386

371:                                              ; preds = %368
  %372 = getelementptr inbounds %struct.mz_zip_array, ptr %22, i64 0, i32 3
  %373 = load i32, ptr %372, align 8, !tbaa !210
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %371
  tail call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

376:                                              ; preds = %371
  %377 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %378 = load ptr, ptr %377, align 8, !tbaa !197
  %379 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %380 = load ptr, ptr %379, align 8, !tbaa !190
  %381 = load ptr, ptr %22, align 8, !tbaa !191
  %382 = zext i32 %373 to i64
  %383 = tail call ptr %378(ptr noundef %380, ptr noundef %381, i64 noundef %382, i64 noundef %24) #38
  %384 = icmp eq ptr %383, null
  br i1 %384, label %387, label %385

385:                                              ; preds = %376
  store ptr %383, ptr %22, align 8, !tbaa !191
  store i64 %24, ptr %146, align 8, !tbaa !209
  br label %386

386:                                              ; preds = %385, %368
  store i64 %24, ptr %23, align 8, !tbaa !211
  br label %387

387:                                              ; preds = %376, %386
  %388 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %388, align 4, !tbaa !189
  br label %389

389:                                              ; preds = %361, %387, %44, %31
  %390 = phi i32 [ 0, %31 ], [ 0, %44 ], [ 0, %387 ], [ 1, %361 ]
  call void @llvm.lifetime.end.p0(i64 46, ptr nonnull %20)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19)
  ret i32 %390
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_add_read_buf_callback(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3, i64 noundef %4, ptr noundef readonly %5, ptr noundef readonly %6, i16 noundef zeroext %7, i32 noundef %8, i32 noundef %9, ptr noundef %10, i32 noundef %11, ptr nocapture noundef readonly %12, i32 noundef %13) local_unnamed_addr #8 {
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca [30 x i8], align 16
  %21 = alloca [28 x i8], align 16
  %22 = alloca %struct.mz_zip_writer_add_state, align 8
  %23 = alloca [24 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %15) #38
  store i16 0, ptr %15, align 2, !tbaa !103
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %16) #38
  store i16 0, ptr %16, align 2, !tbaa !103
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #38
  %24 = load i64, ptr %0, align 8, !tbaa !204
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %18) #38
  store i64 0, ptr %18, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %19) #38
  store i64 0, ptr %19, align 8, !tbaa !46
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %20) #38
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %21) #38
  %25 = icmp slt i32 %8, 0
  %26 = select i1 %25, i32 6, i32 %8
  %27 = and i32 %26, 15
  %28 = and i32 %26, 131072
  %29 = icmp eq i32 %28, 0
  %30 = lshr exact i32 %28, 14
  %31 = trunc i32 %30 to i16
  %32 = xor i16 %31, 8
  %33 = and i32 %26, 65536
  %34 = icmp eq i32 %33, 0
  %35 = or i16 %32, 2048
  %36 = select i1 %34, i16 %35, i16 %32
  %37 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %38 = load ptr, ptr %37, align 8, !tbaa !184
  %39 = icmp eq ptr %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %14
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %42 = load i32, ptr %41, align 4, !tbaa !188
  %43 = icmp eq i32 %42, 2
  %44 = icmp ne ptr %1, null
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = icmp ne i16 %7, 0
  %48 = icmp eq ptr %6, null
  %49 = and i1 %48, %47
  %50 = icmp ugt i32 %27, 10
  %51 = or i1 %49, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %46, %40, %14
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %53, align 4, !tbaa !189
  br label %668

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %38, i64 0, i32 4
  %56 = load i32, ptr %55, align 4, !tbaa !202
  %57 = icmp eq i32 %56, 0
  %58 = icmp ugt i64 %4, 4294967295
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %61

60:                                               ; preds = %54
  store i32 1, ptr %55, align 4, !tbaa !202
  br label %61

61:                                               ; preds = %60, %54
  %62 = phi i32 [ 1, %60 ], [ %56, %54 ]
  %63 = and i32 %26, 1024
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %66, align 4, !tbaa !189
  br label %668

67:                                               ; preds = %61
  %68 = load i8, ptr %1, align 1, !tbaa !3
  %69 = icmp eq i8 %68, 47
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 25, ptr %71, align 4, !tbaa !189
  br label %668

72:                                               ; preds = %67
  %73 = icmp eq i32 %62, 0
  %74 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %75 = load i32, ptr %74, align 8, !tbaa !207
  br i1 %73, label %80, label %76

76:                                               ; preds = %72
  %77 = icmp eq i32 %75, -1
  br i1 %77, label %78, label %83

78:                                               ; preds = %76
  %79 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %79, align 4, !tbaa !189
  br label %668

80:                                               ; preds = %72
  %81 = icmp eq i32 %75, 65535
  br i1 %81, label %82, label %83

82:                                               ; preds = %80
  store i32 1, ptr %55, align 4, !tbaa !202
  br label %83

83:                                               ; preds = %80, %82, %76
  %84 = phi i1 [ true, %80 ], [ false, %82 ], [ false, %76 ]
  %85 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #42
  %86 = icmp ugt i64 %85, 65535
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 25, ptr %88, align 4, !tbaa !189
  br label %668

89:                                               ; preds = %83
  %90 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 6
  %91 = load i64, ptr %90, align 8, !tbaa !285
  %92 = icmp eq i64 %91, 0
  %93 = add i64 %91, -1
  %94 = and i64 %93, %24
  %95 = sub i64 %91, %94
  %96 = and i64 %95, %93
  %97 = trunc i64 %96 to i32
  %98 = select i1 %92, i32 0, i32 %97
  %99 = getelementptr inbounds %struct.mz_zip_array, ptr %38, i64 0, i32 1
  %100 = load i64, ptr %99, align 8, !tbaa !282
  %101 = zext i16 %7 to i64
  %102 = add nuw nsw i64 %101, 74
  %103 = add nuw nsw i64 %102, %85
  %104 = add i64 %103, %100
  %105 = icmp ugt i64 %104, 4294967294
  br i1 %105, label %106, label %108

106:                                              ; preds = %89
  %107 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 15, ptr %107, align 4, !tbaa !189
  br label %668

108:                                              ; preds = %89
  br i1 %84, label %109, label %123

109:                                              ; preds = %108
  %110 = zext i32 %98 to i64
  %111 = zext i32 %11 to i64
  %112 = zext i32 %13 to i64
  %113 = shl nuw nsw i64 %85, 1
  %114 = add nuw nsw i64 %101, 1138
  %115 = add nuw nsw i64 %114, %111
  %116 = add nuw nsw i64 %115, %112
  %117 = add i64 %116, %24
  %118 = add i64 %117, %113
  %119 = add i64 %118, %100
  %120 = add i64 %119, %110
  %121 = icmp ugt i64 %120, 4294967295
  br i1 %121, label %122, label %123

122:                                              ; preds = %109
  store i32 1, ptr %55, align 4, !tbaa !202
  br label %123

123:                                              ; preds = %109, %122, %108
  %124 = icmp eq ptr %5, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = load i64, ptr %5, align 8, !tbaa !46
  call fastcc void @mz_zip_time_t_to_dos_time(i64 noundef %126, ptr noundef nonnull %15, ptr noundef nonnull %16)
  br label %127

127:                                              ; preds = %125, %123
  %128 = icmp ult i64 %4, 4
  %129 = select i1 %128, i32 0, i32 %27
  %130 = tail call fastcc i32 @mz_zip_writer_write_zeros(ptr noundef nonnull %0, i64 noundef %24, i32 noundef %98)
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %133, align 4, !tbaa !189
  br label %668

134:                                              ; preds = %127
  %135 = zext i32 %98 to i64
  %136 = add i64 %24, %135
  store i64 %136, ptr %17, align 8, !tbaa !46
  %137 = load i64, ptr %90, align 8, !tbaa !285
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %134
  %140 = add i64 %137, -1
  %141 = and i64 %140, %136
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %144, label %143

143:                                              ; preds = %139
  tail call void @__assert_fail(ptr noundef nonnull @.str.24, ptr noundef nonnull @.str.12, i32 noundef 8905, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_writer_add_read_buf_callback) #41
  unreachable

144:                                              ; preds = %139, %134
  %145 = icmp eq i64 %4, 0
  %146 = icmp eq i32 %129, 0
  %147 = or i1 %145, %146
  %148 = select i1 %147, i16 0, i16 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(30) %20, i8 0, i64 30, i1 false)
  %149 = load i32, ptr %55, align 4, !tbaa !202
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %229, label %151

151:                                              ; preds = %144
  %152 = icmp ugt i64 %4, 4294967294
  %153 = icmp ugt i64 %136, 4294967294
  %154 = select i1 %152, i1 true, i1 %153
  br i1 %154, label %155, label %164

155:                                              ; preds = %151
  br i1 %29, label %161, label %156

156:                                              ; preds = %155
  %157 = select i1 %152, ptr %18, ptr null
  %158 = select i1 %152, ptr %19, ptr null
  %159 = select i1 %153, ptr %17, ptr null
  %160 = call fastcc i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef nonnull %21, ptr noundef %157, ptr noundef %158, ptr noundef %159)
  br label %164

161:                                              ; preds = %155
  %162 = select i1 %153, ptr %17, ptr null
  %163 = call fastcc i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef nonnull %21, ptr noundef null, ptr noundef null, ptr noundef %162)
  br label %164

164:                                              ; preds = %156, %161, %151
  %165 = phi ptr [ %21, %156 ], [ %21, %161 ], [ null, %151 ]
  %166 = phi i32 [ %160, %156 ], [ %163, %161 ], [ 0, %151 ]
  %167 = add i32 %166, %11
  %168 = load i16, ptr %15, align 2, !tbaa !103
  %169 = load i16, ptr %16, align 2, !tbaa !103
  store <4 x i8> <i8 80, i8 75, i8 3, i8 4>, ptr %20, align 16, !tbaa !3
  %170 = getelementptr inbounds i8, ptr %20, i64 4
  %171 = select i1 %147, i8 0, i8 20
  store i8 %171, ptr %170, align 4, !tbaa !3
  %172 = getelementptr inbounds i8, ptr %20, i64 5
  store i8 0, ptr %172, align 1, !tbaa !3
  %173 = getelementptr inbounds i8, ptr %20, i64 6
  %174 = trunc i16 %36 to i8
  store i8 %174, ptr %173, align 2, !tbaa !3
  %175 = lshr i16 %36, 8
  %176 = trunc i16 %175 to i8
  %177 = getelementptr inbounds i8, ptr %20, i64 7
  store i8 %176, ptr %177, align 1, !tbaa !3
  %178 = getelementptr inbounds i8, ptr %20, i64 8
  %179 = trunc i16 %148 to i8
  store i8 %179, ptr %178, align 8, !tbaa !3
  %180 = getelementptr inbounds i8, ptr %20, i64 9
  store i8 0, ptr %180, align 1, !tbaa !3
  %181 = getelementptr inbounds i8, ptr %20, i64 10
  %182 = trunc i16 %168 to i8
  store i8 %182, ptr %181, align 2, !tbaa !3
  %183 = lshr i16 %168, 8
  %184 = trunc i16 %183 to i8
  %185 = getelementptr inbounds i8, ptr %20, i64 11
  store i8 %184, ptr %185, align 1, !tbaa !3
  %186 = getelementptr inbounds i8, ptr %20, i64 12
  %187 = trunc i16 %169 to i8
  store i8 %187, ptr %186, align 4, !tbaa !3
  %188 = lshr i16 %169, 8
  %189 = trunc i16 %188 to i8
  %190 = getelementptr inbounds i8, ptr %20, i64 13
  store i8 %189, ptr %190, align 1, !tbaa !3
  %191 = getelementptr inbounds i8, ptr %20, i64 14
  %192 = getelementptr inbounds i8, ptr %20, i64 26
  %193 = trunc i64 %85 to i8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(12) %191, i8 0, i64 12, i1 false)
  store i8 %193, ptr %192, align 2, !tbaa !3
  %194 = lshr i64 %85, 8
  %195 = trunc i64 %194 to i8
  %196 = getelementptr inbounds i8, ptr %20, i64 27
  store i8 %195, ptr %196, align 1, !tbaa !3
  %197 = getelementptr inbounds i8, ptr %20, i64 28
  %198 = trunc i32 %167 to i8
  store i8 %198, ptr %197, align 4, !tbaa !3
  %199 = lshr i32 %167, 8
  %200 = trunc i32 %199 to i8
  %201 = getelementptr inbounds i8, ptr %20, i64 29
  store i8 %200, ptr %201, align 1, !tbaa !3
  %202 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %203 = load ptr, ptr %202, align 8, !tbaa !284
  %204 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %205 = load ptr, ptr %204, align 8, !tbaa !205
  %206 = call i64 %203(ptr noundef %205, i64 noundef %136, ptr noundef nonnull %20, i64 noundef 30) #38
  %207 = icmp eq i64 %206, 30
  br i1 %207, label %210, label %208

208:                                              ; preds = %164
  %209 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %209, align 4, !tbaa !189
  br label %668

210:                                              ; preds = %164
  %211 = add i64 %136, 30
  %212 = load ptr, ptr %202, align 8, !tbaa !284
  %213 = load ptr, ptr %204, align 8, !tbaa !205
  %214 = call i64 %212(ptr noundef %213, i64 noundef %211, ptr noundef nonnull %1, i64 noundef %85) #38
  %215 = icmp eq i64 %214, %85
  br i1 %215, label %218, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %217, align 4, !tbaa !189
  br label %668

218:                                              ; preds = %210
  %219 = add i64 %211, %85
  %220 = load ptr, ptr %202, align 8, !tbaa !284
  %221 = load ptr, ptr %204, align 8, !tbaa !205
  %222 = zext i32 %166 to i64
  %223 = call i64 %220(ptr noundef %221, i64 noundef %219, ptr noundef nonnull %21, i64 noundef %222) #38
  %224 = icmp eq i64 %223, %222
  br i1 %224, label %227, label %225

225:                                              ; preds = %218
  %226 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %226, align 4, !tbaa !189
  br label %668

227:                                              ; preds = %218
  %228 = add i64 %219, %222
  br label %287

229:                                              ; preds = %144
  %230 = load i64, ptr %19, align 8, !tbaa !46
  %231 = icmp ugt i64 %230, 4294967295
  %232 = icmp ugt i64 %136, 4294967295
  %233 = select i1 %231, i1 true, i1 %232
  br i1 %233, label %234, label %236

234:                                              ; preds = %229
  %235 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %235, align 4, !tbaa !189
  br label %668

236:                                              ; preds = %229
  %237 = load i16, ptr %15, align 2, !tbaa !103
  %238 = load i16, ptr %16, align 2, !tbaa !103
  store <4 x i8> <i8 80, i8 75, i8 3, i8 4>, ptr %20, align 16, !tbaa !3
  %239 = getelementptr inbounds i8, ptr %20, i64 4
  %240 = select i1 %147, i8 0, i8 20
  store i8 %240, ptr %239, align 4, !tbaa !3
  %241 = getelementptr inbounds i8, ptr %20, i64 6
  %242 = trunc i16 %36 to i8
  store i8 %242, ptr %241, align 2, !tbaa !3
  %243 = lshr i16 %36, 8
  %244 = trunc i16 %243 to i8
  %245 = getelementptr inbounds i8, ptr %20, i64 7
  store i8 %244, ptr %245, align 1, !tbaa !3
  %246 = getelementptr inbounds i8, ptr %20, i64 8
  %247 = trunc i16 %148 to i8
  store i8 %247, ptr %246, align 8, !tbaa !3
  %248 = getelementptr inbounds i8, ptr %20, i64 10
  %249 = trunc i16 %237 to i8
  store i8 %249, ptr %248, align 2, !tbaa !3
  %250 = lshr i16 %237, 8
  %251 = trunc i16 %250 to i8
  %252 = getelementptr inbounds i8, ptr %20, i64 11
  store i8 %251, ptr %252, align 1, !tbaa !3
  %253 = getelementptr inbounds i8, ptr %20, i64 12
  %254 = trunc i16 %238 to i8
  store i8 %254, ptr %253, align 4, !tbaa !3
  %255 = lshr i16 %238, 8
  %256 = trunc i16 %255 to i8
  %257 = getelementptr inbounds i8, ptr %20, i64 13
  store i8 %256, ptr %257, align 1, !tbaa !3
  %258 = getelementptr inbounds i8, ptr %20, i64 14
  %259 = getelementptr inbounds i8, ptr %20, i64 26
  %260 = trunc i64 %85 to i8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(12) %258, i8 0, i64 12, i1 false)
  store i8 %260, ptr %259, align 2, !tbaa !3
  %261 = lshr i64 %85, 8
  %262 = trunc i64 %261 to i8
  %263 = getelementptr inbounds i8, ptr %20, i64 27
  store i8 %262, ptr %263, align 1, !tbaa !3
  %264 = getelementptr inbounds i8, ptr %20, i64 28
  %265 = trunc i32 %11 to i8
  store i8 %265, ptr %264, align 4, !tbaa !3
  %266 = lshr i32 %11, 8
  %267 = trunc i32 %266 to i8
  %268 = getelementptr inbounds i8, ptr %20, i64 29
  store i8 %267, ptr %268, align 1, !tbaa !3
  %269 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %270 = load ptr, ptr %269, align 8, !tbaa !284
  %271 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %272 = load ptr, ptr %271, align 8, !tbaa !205
  %273 = call i64 %270(ptr noundef %272, i64 noundef %136, ptr noundef nonnull %20, i64 noundef 30) #38
  %274 = icmp eq i64 %273, 30
  br i1 %274, label %277, label %275

275:                                              ; preds = %236
  %276 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %276, align 4, !tbaa !189
  br label %668

277:                                              ; preds = %236
  %278 = add nuw nsw i64 %136, 30
  %279 = load ptr, ptr %269, align 8, !tbaa !284
  %280 = load ptr, ptr %271, align 8, !tbaa !205
  %281 = call i64 %279(ptr noundef %280, i64 noundef %278, ptr noundef nonnull %1, i64 noundef %85) #38
  %282 = icmp eq i64 %281, %85
  br i1 %282, label %285, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %284, align 4, !tbaa !189
  br label %668

285:                                              ; preds = %277
  %286 = add nuw nsw i64 %278, %85
  br label %287

287:                                              ; preds = %285, %227
  %288 = phi i16 [ %169, %227 ], [ %238, %285 ]
  %289 = phi i16 [ %168, %227 ], [ %237, %285 ]
  %290 = phi i64 [ %228, %227 ], [ %286, %285 ]
  %291 = phi ptr [ %165, %227 ], [ null, %285 ]
  %292 = phi i32 [ %166, %227 ], [ 0, %285 ]
  %293 = icmp eq i32 %11, 0
  br i1 %293, label %306, label %294

294:                                              ; preds = %287
  %295 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %296 = load ptr, ptr %295, align 8, !tbaa !284
  %297 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %298 = load ptr, ptr %297, align 8, !tbaa !205
  %299 = zext i32 %11 to i64
  %300 = call i64 %296(ptr noundef %298, i64 noundef %290, ptr noundef %10, i64 noundef %299) #38
  %301 = icmp eq i64 %300, %299
  br i1 %301, label %304, label %302

302:                                              ; preds = %294
  %303 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %303, align 4, !tbaa !189
  br label %668

304:                                              ; preds = %294
  %305 = add i64 %290, %299
  br label %306

306:                                              ; preds = %304, %287
  %307 = phi i64 [ %305, %304 ], [ %290, %287 ]
  br i1 %145, label %427, label %308

308:                                              ; preds = %306
  %309 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %310 = load ptr, ptr %309, align 8, !tbaa !186
  %311 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %312 = load ptr, ptr %311, align 8, !tbaa !190
  %313 = call ptr %310(ptr noundef %312, i64 noundef 1, i64 noundef 65536) #38
  %314 = icmp eq ptr %313, null
  br i1 %314, label %315, label %317

315:                                              ; preds = %308
  %316 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %316, align 4, !tbaa !189
  br label %668

317:                                              ; preds = %308
  br i1 %146, label %318, label %360

318:                                              ; preds = %317
  %319 = call i64 %2(ptr noundef %3, i64 noundef 0, ptr noundef nonnull %313, i64 noundef 65536) #38
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %356, label %321

321:                                              ; preds = %318
  %322 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %323 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  br label %324

324:                                              ; preds = %321, %348
  %325 = phi i64 [ %319, %321 ], [ %352, %348 ]
  %326 = phi i64 [ 0, %321 ], [ %350, %348 ]
  %327 = phi i64 [ 0, %321 ], [ %331, %348 ]
  %328 = phi i64 [ %307, %321 ], [ %351, %348 ]
  %329 = icmp ugt i64 %325, 65536
  br i1 %329, label %333, label %330

330:                                              ; preds = %324
  %331 = add i64 %325, %327
  %332 = icmp ugt i64 %331, %4
  br i1 %332, label %333, label %338

333:                                              ; preds = %330, %324
  %334 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %335 = load ptr, ptr %334, align 8, !tbaa !187
  %336 = load ptr, ptr %311, align 8, !tbaa !190
  call void %335(ptr noundef %336, ptr noundef nonnull %313) #38
  %337 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %337, align 4, !tbaa !189
  br label %668

338:                                              ; preds = %330
  %339 = load ptr, ptr %322, align 8, !tbaa !284
  %340 = load ptr, ptr %323, align 8, !tbaa !205
  %341 = call i64 %339(ptr noundef %340, i64 noundef %328, ptr noundef nonnull %313, i64 noundef %325) #38
  %342 = icmp eq i64 %341, %325
  br i1 %342, label %348, label %343

343:                                              ; preds = %338
  %344 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %345 = load ptr, ptr %344, align 8, !tbaa !187
  %346 = load ptr, ptr %311, align 8, !tbaa !190
  call void %345(ptr noundef %346, ptr noundef nonnull %313) #38
  %347 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %347, align 4, !tbaa !189
  br label %668

348:                                              ; preds = %338
  %349 = and i64 %326, 4294967295
  %350 = call i64 @mz_crc32(i64 noundef %349, ptr noundef nonnull %313, i64 noundef %325)
  %351 = add i64 %325, %328
  %352 = call i64 %2(ptr noundef %3, i64 noundef %331, ptr noundef nonnull %313, i64 noundef 65536) #38
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %354, label %324

354:                                              ; preds = %348
  %355 = trunc i64 %350 to i32
  br label %356

356:                                              ; preds = %354, %318
  %357 = phi i64 [ %351, %354 ], [ %307, %318 ]
  %358 = phi i64 [ %331, %354 ], [ 0, %318 ]
  %359 = phi i32 [ %355, %354 ], [ 0, %318 ]
  store i64 %358, ptr %18, align 8, !tbaa !46
  store i64 %358, ptr %19, align 8, !tbaa !46
  br label %421

360:                                              ; preds = %317
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %22) #38
  %361 = load ptr, ptr %309, align 8, !tbaa !186
  %362 = load ptr, ptr %311, align 8, !tbaa !190
  %363 = call ptr %361(ptr noundef %362, i64 noundef 1, i64 noundef 319352) #38
  %364 = icmp eq ptr %363, null
  br i1 %364, label %365, label %370

365:                                              ; preds = %360
  %366 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %367 = load ptr, ptr %366, align 8, !tbaa !187
  %368 = load ptr, ptr %311, align 8, !tbaa !190
  call void %367(ptr noundef %368, ptr noundef nonnull %313) #38
  %369 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %369, align 4, !tbaa !189
  br label %413

370:                                              ; preds = %360
  store ptr %0, ptr %22, align 8, !tbaa !291
  %371 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %22, i64 0, i32 1
  store i64 %307, ptr %371, align 8, !tbaa !293
  %372 = getelementptr inbounds %struct.mz_zip_writer_add_state, ptr %22, i64 0, i32 2
  store i64 0, ptr %372, align 8, !tbaa !294
  %373 = zext i32 %129 to i64
  %374 = getelementptr inbounds [11 x i32], ptr @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %373
  %375 = load i32, ptr %374, align 4, !tbaa !12
  %376 = icmp ult i32 %129, 4
  %377 = select i1 %376, i32 16384, i32 0
  %378 = or i32 %375, %377
  %379 = call i32 @tdefl_init(ptr noundef nonnull %363, ptr noundef nonnull @mz_zip_writer_add_put_buf_callback, ptr noundef nonnull %22, i32 noundef %378)
  %380 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 13
  %381 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  br label %382

382:                                              ; preds = %400, %370
  %383 = phi i64 [ 0, %370 ], [ %388, %400 ]
  %384 = phi i64 [ 0, %370 ], [ %392, %400 ]
  %385 = call i64 %2(ptr noundef %3, i64 noundef %383, ptr noundef nonnull %313, i64 noundef 65536) #38
  %386 = icmp ugt i64 %385, 65536
  br i1 %386, label %405, label %387

387:                                              ; preds = %382
  %388 = add i64 %385, %383
  %389 = icmp ugt i64 %388, %4
  br i1 %389, label %405, label %390

390:                                              ; preds = %387
  %391 = and i64 %384, 4294967295
  %392 = call i64 @mz_crc32(i64 noundef %391, ptr noundef nonnull %313, i64 noundef %385)
  %393 = load ptr, ptr %380, align 8, !tbaa !217
  %394 = icmp eq ptr %393, null
  br i1 %394, label %400, label %395

395:                                              ; preds = %390
  %396 = load ptr, ptr %381, align 8, !tbaa !205
  %397 = call i32 %393(ptr noundef %396) #38
  %398 = icmp eq i32 %397, 0
  %399 = select i1 %398, i32 0, i32 3
  br label %400

400:                                              ; preds = %395, %390
  %401 = phi i32 [ 0, %390 ], [ %399, %395 ]
  %402 = icmp eq i64 %385, 0
  %403 = select i1 %402, i32 4, i32 %401
  %404 = call i32 @tdefl_compress_buffer(ptr noundef nonnull %363, ptr noundef nonnull %313, i64 noundef %385, i32 noundef %403)
  switch i32 %404, label %405 [
    i32 1, label %414
    i32 0, label %382
  ]

405:                                              ; preds = %400, %387, %382
  %406 = phi i32 [ 20, %382 ], [ 20, %387 ], [ 12, %400 ]
  %407 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 %406, ptr %407, align 4, !tbaa !189
  %408 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %409 = load ptr, ptr %408, align 8, !tbaa !187
  %410 = load ptr, ptr %311, align 8, !tbaa !190
  call void %409(ptr noundef %410, ptr noundef nonnull %363) #38
  %411 = load ptr, ptr %408, align 8, !tbaa !187
  %412 = load ptr, ptr %311, align 8, !tbaa !190
  call void %411(ptr noundef %412, ptr noundef nonnull %313) #38
  br label %413

413:                                              ; preds = %405, %365
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %22) #38
  br label %668

414:                                              ; preds = %400
  %415 = trunc i64 %392 to i32
  %416 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %417 = load ptr, ptr %416, align 8, !tbaa !187
  %418 = load ptr, ptr %311, align 8, !tbaa !190
  call void %417(ptr noundef %418, ptr noundef nonnull %363) #38
  store i64 %388, ptr %18, align 8, !tbaa !46
  %419 = load i64, ptr %372, align 8, !tbaa !294
  store i64 %419, ptr %19, align 8, !tbaa !46
  %420 = load i64, ptr %371, align 8, !tbaa !293
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %22) #38
  br label %421

421:                                              ; preds = %356, %414
  %422 = phi i64 [ %420, %414 ], [ %357, %356 ]
  %423 = phi i32 [ %415, %414 ], [ %359, %356 ]
  %424 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %425 = load ptr, ptr %424, align 8, !tbaa !187
  %426 = load ptr, ptr %311, align 8, !tbaa !190
  call void %425(ptr noundef %426, ptr noundef nonnull %313) #38
  br label %427

427:                                              ; preds = %421, %306
  %428 = phi i64 [ %422, %421 ], [ %307, %306 ]
  %429 = phi i32 [ %423, %421 ], [ 0, %306 ]
  br i1 %29, label %430, label %529

430:                                              ; preds = %427
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %23) #38
  store <4 x i8> <i8 80, i8 75, i8 7, i8 8>, ptr %23, align 16, !tbaa !3
  %431 = getelementptr inbounds i8, ptr %23, i64 4
  %432 = trunc i32 %429 to i8
  store i8 %432, ptr %431, align 4, !tbaa !3
  %433 = lshr i32 %429, 8
  %434 = trunc i32 %433 to i8
  %435 = getelementptr inbounds i8, ptr %23, i64 5
  store i8 %434, ptr %435, align 1, !tbaa !3
  %436 = lshr i32 %429, 16
  %437 = trunc i32 %436 to i8
  %438 = getelementptr inbounds i8, ptr %23, i64 6
  store i8 %437, ptr %438, align 2, !tbaa !3
  %439 = lshr i32 %429, 24
  %440 = trunc i32 %439 to i8
  %441 = getelementptr inbounds i8, ptr %23, i64 7
  store i8 %440, ptr %441, align 1, !tbaa !3
  %442 = icmp eq ptr %291, null
  br i1 %442, label %443, label %470

443:                                              ; preds = %430
  %444 = load i64, ptr %19, align 8, !tbaa !46
  %445 = icmp ugt i64 %444, 4294967295
  br i1 %445, label %446, label %448

446:                                              ; preds = %443
  %447 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %447, align 4, !tbaa !189
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %23) #38
  br label %668

448:                                              ; preds = %443
  %449 = getelementptr inbounds i8, ptr %23, i64 8
  %450 = trunc i64 %444 to i8
  store i8 %450, ptr %449, align 8, !tbaa !3
  %451 = lshr i64 %444, 8
  %452 = trunc i64 %451 to i8
  %453 = getelementptr inbounds i8, ptr %23, i64 9
  store i8 %452, ptr %453, align 1, !tbaa !3
  %454 = lshr i64 %444, 16
  %455 = trunc i64 %454 to i8
  %456 = getelementptr inbounds i8, ptr %23, i64 10
  store i8 %455, ptr %456, align 2, !tbaa !3
  %457 = lshr i64 %444, 24
  %458 = trunc i64 %457 to i8
  %459 = getelementptr inbounds i8, ptr %23, i64 11
  store i8 %458, ptr %459, align 1, !tbaa !3
  %460 = getelementptr inbounds i8, ptr %23, i64 12
  %461 = load i64, ptr %18, align 8, !tbaa !46
  %462 = trunc i64 %461 to i8
  store i8 %462, ptr %460, align 4, !tbaa !3
  %463 = lshr i64 %461, 8
  %464 = trunc i64 %463 to i8
  %465 = getelementptr inbounds i8, ptr %23, i64 13
  store i8 %464, ptr %465, align 1, !tbaa !3
  %466 = lshr i64 %461, 16
  %467 = trunc i64 %466 to i8
  %468 = getelementptr inbounds i8, ptr %23, i64 14
  store i8 %467, ptr %468, align 2, !tbaa !3
  %469 = lshr i64 %461, 24
  br label %517

470:                                              ; preds = %430
  %471 = getelementptr inbounds i8, ptr %23, i64 8
  %472 = load i64, ptr %19, align 8, !tbaa !46
  %473 = trunc i64 %472 to i8
  store i8 %473, ptr %471, align 8, !tbaa !3
  %474 = lshr i64 %472, 8
  %475 = trunc i64 %474 to i8
  %476 = getelementptr inbounds i8, ptr %23, i64 9
  store i8 %475, ptr %476, align 1, !tbaa !3
  %477 = lshr i64 %472, 16
  %478 = trunc i64 %477 to i8
  %479 = getelementptr inbounds i8, ptr %23, i64 10
  store i8 %478, ptr %479, align 2, !tbaa !3
  %480 = lshr i64 %472, 24
  %481 = trunc i64 %480 to i8
  %482 = getelementptr inbounds i8, ptr %23, i64 11
  store i8 %481, ptr %482, align 1, !tbaa !3
  %483 = getelementptr inbounds i8, ptr %23, i64 12
  %484 = lshr i64 %472, 32
  %485 = trunc i64 %484 to i8
  store i8 %485, ptr %483, align 4, !tbaa !3
  %486 = lshr i64 %472, 40
  %487 = trunc i64 %486 to i8
  %488 = getelementptr inbounds i8, ptr %23, i64 13
  store i8 %487, ptr %488, align 1, !tbaa !3
  %489 = lshr i64 %472, 48
  %490 = trunc i64 %489 to i8
  %491 = getelementptr inbounds i8, ptr %23, i64 14
  store i8 %490, ptr %491, align 2, !tbaa !3
  %492 = lshr i64 %472, 56
  %493 = trunc i64 %492 to i8
  %494 = getelementptr inbounds i8, ptr %23, i64 15
  store i8 %493, ptr %494, align 1, !tbaa !3
  %495 = getelementptr inbounds i8, ptr %23, i64 16
  %496 = load i64, ptr %18, align 8, !tbaa !46
  %497 = trunc i64 %496 to i8
  store i8 %497, ptr %495, align 16, !tbaa !3
  %498 = lshr i64 %496, 8
  %499 = trunc i64 %498 to i8
  %500 = getelementptr inbounds i8, ptr %23, i64 17
  store i8 %499, ptr %500, align 1, !tbaa !3
  %501 = lshr i64 %496, 16
  %502 = trunc i64 %501 to i8
  %503 = getelementptr inbounds i8, ptr %23, i64 18
  store i8 %502, ptr %503, align 2, !tbaa !3
  %504 = lshr i64 %496, 24
  %505 = trunc i64 %504 to i8
  %506 = getelementptr inbounds i8, ptr %23, i64 19
  store i8 %505, ptr %506, align 1, !tbaa !3
  %507 = getelementptr inbounds i8, ptr %23, i64 20
  %508 = lshr i64 %496, 32
  %509 = trunc i64 %508 to i8
  store i8 %509, ptr %507, align 4, !tbaa !3
  %510 = lshr i64 %496, 40
  %511 = trunc i64 %510 to i8
  %512 = getelementptr inbounds i8, ptr %23, i64 21
  store i8 %511, ptr %512, align 1, !tbaa !3
  %513 = lshr i64 %496, 48
  %514 = trunc i64 %513 to i8
  %515 = getelementptr inbounds i8, ptr %23, i64 22
  store i8 %514, ptr %515, align 2, !tbaa !3
  %516 = lshr i64 %496, 56
  br label %517

517:                                              ; preds = %448, %470
  %518 = phi i64 [ %469, %448 ], [ %516, %470 ]
  %519 = phi i64 [ 15, %448 ], [ 23, %470 ]
  %520 = phi i64 [ 16, %448 ], [ 24, %470 ]
  %521 = trunc i64 %518 to i8
  %522 = getelementptr inbounds i8, ptr %23, i64 %519
  store i8 %521, ptr %522, align 1, !tbaa !3
  %523 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %524 = load ptr, ptr %523, align 8, !tbaa !284
  %525 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %526 = load ptr, ptr %525, align 8, !tbaa !205
  %527 = call i64 %524(ptr noundef %526, i64 noundef %428, ptr noundef nonnull %23, i64 noundef %520) #38
  %528 = icmp eq i64 %527, %520
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %23) #38
  br i1 %528, label %640, label %668

529:                                              ; preds = %427
  %530 = icmp eq ptr %291, null
  br i1 %530, label %539, label %531

531:                                              ; preds = %529
  %532 = icmp ugt i64 %4, 4294967294
  %533 = select i1 %532, ptr %18, ptr null
  %534 = select i1 %532, ptr %19, ptr null
  %535 = load i64, ptr %17, align 8, !tbaa !46
  %536 = icmp ugt i64 %535, 4294967294
  %537 = select i1 %536, ptr %17, ptr null
  %538 = call fastcc i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef nonnull %21, ptr noundef %533, ptr noundef %534, ptr noundef %537)
  br label %539

539:                                              ; preds = %531, %529
  %540 = phi i32 [ %538, %531 ], [ %292, %529 ]
  %541 = add i32 %540, %11
  %542 = icmp ugt i64 %4, 4294967294
  %543 = load i64, ptr %18, align 8
  %544 = load i64, ptr %19, align 8
  store <4 x i8> <i8 80, i8 75, i8 3, i8 4>, ptr %20, align 16, !tbaa !3
  %545 = getelementptr inbounds i8, ptr %20, i64 4
  %546 = select i1 %147, i8 0, i8 20
  store i8 %546, ptr %545, align 4, !tbaa !3
  %547 = getelementptr inbounds i8, ptr %20, i64 5
  store i8 0, ptr %547, align 1, !tbaa !3
  %548 = getelementptr inbounds i8, ptr %20, i64 6
  %549 = trunc i16 %36 to i8
  store i8 %549, ptr %548, align 2, !tbaa !3
  %550 = lshr i16 %36, 8
  %551 = trunc i16 %550 to i8
  %552 = getelementptr inbounds i8, ptr %20, i64 7
  store i8 %551, ptr %552, align 1, !tbaa !3
  %553 = getelementptr inbounds i8, ptr %20, i64 8
  %554 = trunc i16 %148 to i8
  store i8 %554, ptr %553, align 8, !tbaa !3
  %555 = getelementptr inbounds i8, ptr %20, i64 9
  store i8 0, ptr %555, align 1, !tbaa !3
  %556 = getelementptr inbounds i8, ptr %20, i64 10
  %557 = trunc i16 %289 to i8
  store i8 %557, ptr %556, align 2, !tbaa !3
  %558 = lshr i16 %289, 8
  %559 = trunc i16 %558 to i8
  %560 = getelementptr inbounds i8, ptr %20, i64 11
  store i8 %559, ptr %560, align 1, !tbaa !3
  %561 = getelementptr inbounds i8, ptr %20, i64 12
  %562 = trunc i16 %288 to i8
  store i8 %562, ptr %561, align 4, !tbaa !3
  %563 = lshr i16 %288, 8
  %564 = trunc i16 %563 to i8
  %565 = getelementptr inbounds i8, ptr %20, i64 13
  store i8 %564, ptr %565, align 1, !tbaa !3
  %566 = getelementptr inbounds i8, ptr %20, i64 14
  %567 = trunc i32 %429 to i8
  store i8 %567, ptr %566, align 2, !tbaa !3
  %568 = lshr i32 %429, 8
  %569 = trunc i32 %568 to i8
  %570 = getelementptr inbounds i8, ptr %20, i64 15
  store i8 %569, ptr %570, align 1, !tbaa !3
  %571 = lshr i32 %429, 16
  %572 = trunc i32 %571 to i8
  %573 = getelementptr inbounds i8, ptr %20, i64 16
  store i8 %572, ptr %573, align 16, !tbaa !3
  %574 = lshr i32 %429, 24
  %575 = trunc i32 %574 to i8
  %576 = getelementptr inbounds i8, ptr %20, i64 17
  store i8 %575, ptr %576, align 1, !tbaa !3
  %577 = getelementptr inbounds i8, ptr %20, i64 18
  %578 = call i64 @llvm.umin.i64(i64 %544, i64 4294967295)
  %579 = select i1 %542, i64 4294967295, i64 %578
  %580 = trunc i64 %579 to i8
  store i8 %580, ptr %577, align 2, !tbaa !3
  %581 = lshr i64 %579, 8
  %582 = trunc i64 %581 to i8
  %583 = getelementptr inbounds i8, ptr %20, i64 19
  store i8 %582, ptr %583, align 1, !tbaa !3
  %584 = lshr i64 %579, 16
  %585 = trunc i64 %584 to i8
  %586 = getelementptr inbounds i8, ptr %20, i64 20
  store i8 %585, ptr %586, align 4, !tbaa !3
  %587 = lshr i64 %579, 24
  %588 = trunc i64 %587 to i8
  %589 = getelementptr inbounds i8, ptr %20, i64 21
  store i8 %588, ptr %589, align 1, !tbaa !3
  %590 = getelementptr inbounds i8, ptr %20, i64 22
  %591 = call i64 @llvm.umin.i64(i64 %543, i64 4294967295)
  %592 = select i1 %542, i64 4294967295, i64 %591
  %593 = trunc i64 %592 to i8
  store i8 %593, ptr %590, align 2, !tbaa !3
  %594 = lshr i64 %592, 8
  %595 = trunc i64 %594 to i8
  %596 = getelementptr inbounds i8, ptr %20, i64 23
  store i8 %595, ptr %596, align 1, !tbaa !3
  %597 = lshr i64 %592, 16
  %598 = trunc i64 %597 to i8
  %599 = getelementptr inbounds i8, ptr %20, i64 24
  store i8 %598, ptr %599, align 8, !tbaa !3
  %600 = lshr i64 %592, 24
  %601 = trunc i64 %600 to i8
  %602 = getelementptr inbounds i8, ptr %20, i64 25
  store i8 %601, ptr %602, align 1, !tbaa !3
  %603 = getelementptr inbounds i8, ptr %20, i64 26
  %604 = trunc i64 %85 to i8
  store i8 %604, ptr %603, align 2, !tbaa !3
  %605 = lshr i64 %85, 8
  %606 = trunc i64 %605 to i8
  %607 = getelementptr inbounds i8, ptr %20, i64 27
  store i8 %606, ptr %607, align 1, !tbaa !3
  %608 = getelementptr inbounds i8, ptr %20, i64 28
  %609 = trunc i32 %541 to i8
  store i8 %609, ptr %608, align 4, !tbaa !3
  %610 = lshr i32 %541, 8
  %611 = trunc i32 %610 to i8
  %612 = getelementptr inbounds i8, ptr %20, i64 29
  store i8 %611, ptr %612, align 1, !tbaa !3
  %613 = load i64, ptr %17, align 8, !tbaa !46
  %614 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %615 = load ptr, ptr %614, align 8, !tbaa !284
  %616 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %617 = load ptr, ptr %616, align 8, !tbaa !205
  %618 = call i64 %615(ptr noundef %617, i64 noundef %613, ptr noundef nonnull %20, i64 noundef 30) #38
  %619 = icmp eq i64 %618, 30
  br i1 %619, label %622, label %620

620:                                              ; preds = %539
  %621 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %621, align 4, !tbaa !189
  br label %668

622:                                              ; preds = %539
  br i1 %530, label %652, label %623

623:                                              ; preds = %622
  %624 = add i64 %613, 30
  %625 = load ptr, ptr %614, align 8, !tbaa !284
  %626 = load ptr, ptr %616, align 8, !tbaa !205
  %627 = call i64 %625(ptr noundef %626, i64 noundef %624, ptr noundef nonnull %1, i64 noundef %85) #38
  %628 = icmp eq i64 %627, %85
  br i1 %628, label %631, label %629

629:                                              ; preds = %623
  %630 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %630, align 4, !tbaa !189
  br label %668

631:                                              ; preds = %623
  %632 = add i64 %624, %85
  %633 = load ptr, ptr %614, align 8, !tbaa !284
  %634 = load ptr, ptr %616, align 8, !tbaa !205
  %635 = zext i32 %540 to i64
  %636 = call i64 %633(ptr noundef %634, i64 noundef %632, ptr noundef nonnull %21, i64 noundef %635) #38
  %637 = icmp eq i64 %636, %635
  br i1 %637, label %642, label %638

638:                                              ; preds = %631
  %639 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %639, align 4, !tbaa !189
  br label %668

640:                                              ; preds = %517
  %641 = add i64 %520, %428
  br i1 %442, label %652, label %642

642:                                              ; preds = %631, %640
  %643 = phi i64 [ %641, %640 ], [ %428, %631 ]
  %644 = load i64, ptr %18, align 8, !tbaa !46
  %645 = icmp ugt i64 %644, 4294967294
  %646 = select i1 %645, ptr %18, ptr null
  %647 = select i1 %645, ptr %19, ptr null
  %648 = load i64, ptr %17, align 8, !tbaa !46
  %649 = icmp ugt i64 %648, 4294967294
  %650 = select i1 %649, ptr %17, ptr null
  %651 = call fastcc i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef nonnull %21, ptr noundef %646, ptr noundef %647, ptr noundef %650)
  br label %652

652:                                              ; preds = %622, %642, %640
  %653 = phi i64 [ %643, %642 ], [ %641, %640 ], [ %428, %622 ]
  %654 = phi i32 [ %651, %642 ], [ %292, %640 ], [ %540, %622 ]
  %655 = trunc i64 %85 to i16
  %656 = trunc i32 %654 to i16
  %657 = load i64, ptr %18, align 8, !tbaa !46
  %658 = load i64, ptr %19, align 8, !tbaa !46
  %659 = load i16, ptr %15, align 2, !tbaa !103
  %660 = load i16, ptr %16, align 2, !tbaa !103
  %661 = load i64, ptr %17, align 8, !tbaa !46
  %662 = call fastcc i32 @mz_zip_writer_add_to_central_dir(ptr noundef nonnull %0, ptr noundef nonnull %1, i16 noundef zeroext %655, ptr noundef %291, i16 noundef zeroext %656, ptr noundef %6, i16 noundef zeroext %7, i64 noundef %657, i64 noundef %658, i32 noundef %429, i16 noundef zeroext %148, i16 noundef zeroext %36, i16 noundef zeroext %659, i16 noundef zeroext %660, i64 noundef %661, i32 noundef %9, ptr noundef %12, i32 noundef %13)
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %668, label %664

664:                                              ; preds = %652
  %665 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %666 = load i32, ptr %665, align 8, !tbaa !207
  %667 = add i32 %666, 1
  store i32 %667, ptr %665, align 8, !tbaa !207
  store i64 %653, ptr %0, align 8, !tbaa !204
  br label %668

668:                                              ; preds = %343, %333, %413, %315, %446, %652, %517, %664, %638, %629, %620, %302, %283, %275, %234, %225, %216, %208, %132, %106, %87, %78, %70, %65, %52
  %669 = phi i32 [ 0, %52 ], [ 0, %65 ], [ 0, %78 ], [ 0, %87 ], [ 0, %106 ], [ 0, %208 ], [ 0, %216 ], [ 0, %225 ], [ 0, %302 ], [ 0, %620 ], [ 0, %629 ], [ 0, %638 ], [ 1, %664 ], [ 0, %517 ], [ 0, %234 ], [ 0, %275 ], [ 0, %283 ], [ 0, %132 ], [ 0, %70 ], [ 0, %652 ], [ 0, %446 ], [ 0, %315 ], [ 0, %413 ], [ 0, %333 ], [ 0, %343 ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %21) #38
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %20) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %19) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %18) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #38
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %16) #38
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %15) #38
  ret i32 %669
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_add_cfile(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, ptr noundef %5, i16 noundef zeroext %6, i32 noundef %7, i32 noundef %8, ptr noundef %9, i32 noundef %10, ptr nocapture noundef readonly %11, i32 noundef %12) local_unnamed_addr #8 {
  %14 = tail call i32 @mz_zip_writer_add_read_buf_callback(ptr noundef %0, ptr noundef %1, ptr noundef nonnull @mz_file_read_func_stdio, ptr noundef %2, i64 noundef %3, ptr noundef %4, ptr noundef %5, i16 noundef zeroext %6, i32 noundef %7, i32 noundef %8, ptr noundef %9, i32 noundef %10, ptr noundef %11, i32 noundef %12)
  ret i32 %14
}

; Function Attrs: nofree nounwind uwtable
define internal i64 @mz_file_read_func_stdio(ptr nocapture noundef %0, i64 noundef %1, ptr nocapture noundef %2, i64 noundef %3) #20 {
  %5 = tail call i64 @ftello(ptr noundef %0)
  %6 = icmp slt i64 %1, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = icmp eq i64 %5, %1
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = tail call i32 @fseeko(ptr noundef %0, i64 noundef %1, i32 noundef 0)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9, %7
  %13 = tail call i64 @fread(ptr noundef %2, i64 noundef 1, i64 noundef %3, ptr noundef %0)
  br label %14

14:                                               ; preds = %4, %9, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %9 ], [ 0, %4 ]
  ret i64 %15
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_add_file(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3, i16 noundef zeroext %4, i32 noundef %5, i32 noundef %6) local_unnamed_addr #8 {
  %8 = alloca %struct.stat, align 8
  %9 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #38
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %8) #38
  %10 = call i32 @stat(ptr noundef %2, ptr noundef nonnull %8) #38
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %8) #38
  %13 = icmp eq ptr %0, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 23, ptr %15, align 4, !tbaa !189
  br label %31

16:                                               ; preds = %7
  %17 = getelementptr inbounds %struct.stat, ptr %8, i64 0, i32 12
  %18 = load i64, ptr %17, align 8, !tbaa !295
  store i64 %18, ptr %9, align 8, !tbaa !46
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %8) #38
  %19 = tail call noalias ptr @fopen(ptr noundef %2, ptr noundef nonnull @.str.18)
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = icmp eq ptr %0, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 17, ptr %24, align 4, !tbaa !189
  br label %31

25:                                               ; preds = %16
  %26 = tail call i32 @fseeko(ptr noundef nonnull %19, i64 noundef 0, i32 noundef 2)
  %27 = tail call i64 @ftello(ptr noundef nonnull %19)
  %28 = tail call i32 @fseeko(ptr noundef nonnull %19, i64 noundef 0, i32 noundef 0)
  %29 = call i32 @mz_zip_writer_add_read_buf_callback(ptr noundef %0, ptr noundef %1, ptr noundef nonnull @mz_file_read_func_stdio, ptr noundef nonnull %19, i64 noundef %27, ptr noundef nonnull %9, ptr noundef %3, i16 noundef zeroext %4, i32 noundef %5, i32 noundef %6, ptr noundef null, i32 noundef 0, ptr noundef null, i32 noundef 0)
  %30 = call i32 @fclose(ptr noundef nonnull %19)
  br label %31

31:                                               ; preds = %23, %21, %14, %12, %25
  %32 = phi i32 [ %29, %25 ], [ 0, %12 ], [ 0, %14 ], [ 0, %21 ], [ 0, %23 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #38
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_add_from_zip_reader(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca [8 x i32], align 16
  %7 = alloca [46 x i8], align 16
  %8 = alloca %struct.mz_zip_archive_file_stat, align 8
  %9 = alloca %struct.mz_zip_array, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #38
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #38
  call void @llvm.lifetime.start.p0(i64 46, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %8) #38
  %10 = icmp eq ptr %0, null
  br i1 %10, label %938, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %13 = load ptr, ptr %12, align 8, !tbaa !184
  %14 = icmp eq ptr %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %17 = load i32, ptr %16, align 4, !tbaa !188
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 11
  %21 = load ptr, ptr %20, align 8, !tbaa !196
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %19, %15, %11
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %24, align 4, !tbaa !189
  br label %938

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 15
  %27 = load ptr, ptr %26, align 8, !tbaa !184
  %28 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 4
  %29 = load i32, ptr %28, align 4, !tbaa !202
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %13, i64 0, i32 4
  %33 = load i32, ptr %32, align 4, !tbaa !202
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %36, align 4, !tbaa !189
  br label %938

37:                                               ; preds = %31, %25
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 2
  %39 = load i32, ptr %38, align 8, !tbaa !207
  %40 = icmp ugt i32 %39, %2
  br i1 %40, label %41, label %51

41:                                               ; preds = %37
  %42 = load ptr, ptr %27, align 8, !tbaa !212
  %43 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !213
  %45 = zext i32 %2 to i64
  %46 = getelementptr inbounds i32, ptr %44, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !12
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, ptr %42, i64 %48
  %50 = icmp eq ptr %42, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %37, %41
  %52 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %52, align 4, !tbaa !189
  br label %938

53:                                               ; preds = %41
  %54 = load i8, ptr %49, align 1, !tbaa !3
  %55 = zext i8 %54 to i32
  %56 = getelementptr inbounds i8, ptr %49, i64 1
  %57 = load i8, ptr %56, align 1, !tbaa !3
  %58 = zext i8 %57 to i32
  %59 = shl nuw nsw i32 %58, 8
  %60 = or i32 %59, %55
  %61 = getelementptr inbounds i8, ptr %49, i64 2
  %62 = load i8, ptr %61, align 1, !tbaa !3
  %63 = zext i8 %62 to i32
  %64 = shl nuw nsw i32 %63, 16
  %65 = or i32 %60, %64
  %66 = getelementptr inbounds i8, ptr %49, i64 3
  %67 = load i8, ptr %66, align 1, !tbaa !3
  %68 = zext i8 %67 to i32
  %69 = shl nuw i32 %68, 24
  %70 = or i32 %65, %69
  %71 = icmp eq i32 %70, 33639248
  br i1 %71, label %74, label %72

72:                                               ; preds = %53
  %73 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %73, align 4, !tbaa !189
  br label %938

74:                                               ; preds = %53
  %75 = getelementptr inbounds i8, ptr %49, i64 28
  %76 = load i8, ptr %75, align 1, !tbaa !3
  %77 = zext i8 %76 to i32
  %78 = getelementptr inbounds i8, ptr %49, i64 29
  %79 = load i8, ptr %78, align 1, !tbaa !3
  %80 = zext i8 %79 to i32
  %81 = shl nuw nsw i32 %80, 8
  %82 = or i32 %81, %77
  %83 = getelementptr inbounds i8, ptr %49, i64 32
  %84 = load i8, ptr %83, align 1, !tbaa !3
  %85 = zext i8 %84 to i32
  %86 = getelementptr inbounds i8, ptr %49, i64 33
  %87 = load i8, ptr %86, align 1, !tbaa !3
  %88 = zext i8 %87 to i32
  %89 = shl nuw nsw i32 %88, 8
  %90 = or i32 %89, %85
  %91 = getelementptr inbounds i8, ptr %49, i64 30
  %92 = load i8, ptr %91, align 1, !tbaa !3
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds i8, ptr %49, i64 31
  %95 = load i8, ptr %94, align 1, !tbaa !3
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 8
  %98 = or i32 %97, %93
  %99 = add nuw nsw i32 %90, %82
  %100 = add nuw nsw i32 %99, %98
  %101 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 1
  %102 = load i64, ptr %101, align 8, !tbaa !282
  %103 = zext i32 %100 to i64
  %104 = add i64 %102, -4294967217
  %105 = add i64 %104, %103
  %106 = icmp ult i64 %105, -4294967295
  br i1 %106, label %107, label %109

107:                                              ; preds = %74
  %108 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 15, ptr %108, align 4, !tbaa !189
  br label %938

109:                                              ; preds = %74
  %110 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 6
  %111 = load i64, ptr %110, align 8, !tbaa !285
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %109
  %114 = load i64, ptr %0, align 8, !tbaa !204
  %115 = add i64 %111, -1
  %116 = and i64 %114, %115
  %117 = sub i64 %111, %116
  %118 = and i64 %117, %115
  %119 = trunc i64 %118 to i32
  br label %120

120:                                              ; preds = %109, %113
  %121 = phi i32 [ %119, %113 ], [ 0, %109 ]
  %122 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %13, i64 0, i32 4
  %123 = load i32, ptr %122, align 4, !tbaa !202
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %126 = load i32, ptr %125, align 8, !tbaa !207
  br i1 %124, label %127, label %131

127:                                              ; preds = %120
  %128 = icmp eq i32 %126, 65535
  br i1 %128, label %129, label %135

129:                                              ; preds = %127
  %130 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %130, align 4, !tbaa !189
  br label %938

131:                                              ; preds = %120
  %132 = icmp eq i32 %126, -1
  br i1 %132, label %133, label %135

133:                                              ; preds = %131
  %134 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %134, align 4, !tbaa !189
  br label %938

135:                                              ; preds = %131, %127
  %136 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %1, i32 noundef %2, ptr noundef nonnull %49, ptr noundef nonnull %8, ptr noundef null)
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %938, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %8, i64 0, i32 11
  %140 = load i64, ptr %139, align 8, !tbaa !231
  %141 = load i64, ptr %0, align 8, !tbaa !204
  %142 = load ptr, ptr %20, align 8, !tbaa !196
  %143 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 14
  %144 = load ptr, ptr %143, align 8, !tbaa !205
  %145 = call i64 %142(ptr noundef %144, i64 noundef %140, ptr noundef nonnull %6, i64 noundef 30) #38
  %146 = icmp eq i64 %145, 30
  br i1 %146, label %149, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %148, align 4, !tbaa !189
  br label %938

149:                                              ; preds = %138
  %150 = load i8, ptr %6, align 16, !tbaa !3
  %151 = zext i8 %150 to i32
  %152 = getelementptr inbounds i8, ptr %6, i64 1
  %153 = load i8, ptr %152, align 1, !tbaa !3
  %154 = zext i8 %153 to i32
  %155 = shl nuw nsw i32 %154, 8
  %156 = or i32 %155, %151
  %157 = getelementptr inbounds i8, ptr %6, i64 2
  %158 = load i8, ptr %157, align 2, !tbaa !3
  %159 = zext i8 %158 to i32
  %160 = shl nuw nsw i32 %159, 16
  %161 = or i32 %156, %160
  %162 = getelementptr inbounds i8, ptr %6, i64 3
  %163 = load i8, ptr %162, align 1, !tbaa !3
  %164 = zext i8 %163 to i32
  %165 = shl nuw i32 %164, 24
  %166 = or i32 %161, %165
  %167 = icmp eq i32 %166, 67324752
  br i1 %167, label %170, label %168

168:                                              ; preds = %149
  %169 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %169, align 4, !tbaa !189
  br label %938

170:                                              ; preds = %149
  %171 = add i64 %140, 30
  %172 = getelementptr inbounds i8, ptr %6, i64 26
  %173 = load i8, ptr %172, align 2, !tbaa !3
  %174 = zext i8 %173 to i32
  %175 = getelementptr inbounds i8, ptr %6, i64 27
  %176 = load i8, ptr %175, align 1, !tbaa !3
  %177 = zext i8 %176 to i32
  %178 = shl nuw nsw i32 %177, 8
  %179 = or i32 %178, %174
  %180 = getelementptr inbounds i8, ptr %6, i64 28
  %181 = load i8, ptr %180, align 4, !tbaa !3
  %182 = zext i8 %181 to i32
  %183 = getelementptr inbounds i8, ptr %6, i64 29
  %184 = load i8, ptr %183, align 1, !tbaa !3
  %185 = zext i8 %184 to i32
  %186 = shl nuw nsw i32 %185, 8
  %187 = or i32 %186, %182
  %188 = add nuw nsw i32 %187, %179
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %8, i64 0, i32 7
  %191 = load i64, ptr %190, align 8, !tbaa !232
  %192 = add i64 %191, %189
  %193 = icmp eq i32 %187, 0
  br i1 %193, label %310, label %194

194:                                              ; preds = %170
  %195 = getelementptr inbounds i8, ptr %6, i64 25
  %196 = load i8, ptr %195, align 1, !tbaa !3
  %197 = getelementptr inbounds i8, ptr %6, i64 24
  %198 = load i8, ptr %197, align 8, !tbaa !3
  %199 = getelementptr inbounds i8, ptr %6, i64 22
  %200 = load i8, ptr %199, align 2, !tbaa !3
  %201 = getelementptr inbounds i8, ptr %6, i64 23
  %202 = load i8, ptr %201, align 1, !tbaa !3
  %203 = zext i8 %202 to i64
  %204 = shl nuw nsw i64 %203, 8
  %205 = zext i8 %200 to i64
  %206 = zext i8 %198 to i64
  %207 = shl nuw nsw i64 %206, 16
  %208 = zext i8 %196 to i64
  %209 = shl nuw nsw i64 %208, 24
  %210 = or i64 %209, %205
  %211 = or i64 %210, %207
  %212 = or i64 %211, %204
  %213 = getelementptr inbounds i8, ptr %6, i64 21
  %214 = load i8, ptr %213, align 1, !tbaa !3
  %215 = getelementptr inbounds i8, ptr %6, i64 20
  %216 = load i8, ptr %215, align 4, !tbaa !3
  %217 = getelementptr inbounds i8, ptr %6, i64 18
  %218 = load i8, ptr %217, align 2, !tbaa !3
  %219 = getelementptr inbounds i8, ptr %6, i64 19
  %220 = load i8, ptr %219, align 1, !tbaa !3
  %221 = zext i8 %220 to i64
  %222 = shl nuw nsw i64 %221, 8
  %223 = zext i8 %218 to i64
  %224 = zext i8 %216 to i64
  %225 = shl nuw nsw i64 %224, 16
  %226 = zext i8 %214 to i64
  %227 = shl nuw nsw i64 %226, 24
  %228 = or i64 %227, %223
  %229 = or i64 %228, %225
  %230 = or i64 %229, %222
  %231 = icmp eq i64 %230, 4294967295
  %232 = icmp eq i64 %212, 4294967295
  %233 = select i1 %231, i1 true, i1 %232
  br i1 %233, label %234, label %310

234:                                              ; preds = %194
  %235 = zext i32 %187 to i64
  %236 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %237 = load ptr, ptr %236, align 8, !tbaa !197
  %238 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %239 = load ptr, ptr %238, align 8, !tbaa !190
  %240 = call ptr %237(ptr noundef %239, ptr noundef null, i64 noundef 1, i64 noundef %235) #38
  %241 = icmp eq ptr %240, null
  br i1 %241, label %242, label %244

242:                                              ; preds = %234
  %243 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %243, align 4, !tbaa !189
  br label %938

244:                                              ; preds = %234
  %245 = load ptr, ptr %20, align 8, !tbaa !196
  %246 = load ptr, ptr %143, align 8, !tbaa !205
  %247 = load i64, ptr %139, align 8, !tbaa !231
  %248 = add nuw nsw i32 %179, 30
  %249 = zext i32 %248 to i64
  %250 = add i64 %247, %249
  %251 = call i64 %245(ptr noundef %246, i64 noundef %250, ptr noundef nonnull %240, i64 noundef %235) #38
  %252 = icmp eq i64 %251, %235
  br i1 %252, label %258, label %253

253:                                              ; preds = %244
  %254 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %255 = load ptr, ptr %254, align 8, !tbaa !187
  %256 = load ptr, ptr %238, align 8, !tbaa !190
  call void %255(ptr noundef %256, ptr noundef nonnull %240) #38
  %257 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %257, align 4, !tbaa !189
  br label %938

258:                                              ; preds = %244, %300
  %259 = phi i32 [ %303, %300 ], [ %187, %244 ]
  %260 = phi ptr [ %302, %300 ], [ %240, %244 ]
  %261 = icmp ult i32 %259, 4
  br i1 %261, label %262, label %267

262:                                              ; preds = %258
  %263 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %264 = load ptr, ptr %263, align 8, !tbaa !187
  %265 = load ptr, ptr %238, align 8, !tbaa !190
  call void %264(ptr noundef %265, ptr noundef nonnull %240) #38
  %266 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %266, align 4, !tbaa !189
  br label %938

267:                                              ; preds = %258
  %268 = getelementptr inbounds i8, ptr %260, i64 2
  %269 = load i8, ptr %268, align 1, !tbaa !3
  %270 = zext i8 %269 to i64
  %271 = getelementptr inbounds i8, ptr %260, i64 3
  %272 = load i8, ptr %271, align 1, !tbaa !3
  %273 = zext i8 %272 to i64
  %274 = shl nuw nsw i64 %273, 8
  %275 = or i64 %274, %270
  %276 = trunc i64 %275 to i32
  %277 = add nuw nsw i32 %276, 4
  %278 = icmp ult i32 %259, %277
  br i1 %278, label %279, label %284

279:                                              ; preds = %267
  %280 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %281 = load ptr, ptr %280, align 8, !tbaa !187
  %282 = load ptr, ptr %238, align 8, !tbaa !190
  call void %281(ptr noundef %282, ptr noundef nonnull %240) #38
  %283 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %283, align 4, !tbaa !189
  br label %938

284:                                              ; preds = %267
  %285 = load i8, ptr %260, align 1, !tbaa !3
  %286 = zext i8 %285 to i32
  %287 = getelementptr inbounds i8, ptr %260, i64 1
  %288 = load i8, ptr %287, align 1, !tbaa !3
  %289 = zext i8 %288 to i32
  %290 = shl nuw nsw i32 %289, 8
  %291 = or i32 %290, %286
  %292 = icmp eq i32 %291, 1
  br i1 %292, label %293, label %300

293:                                              ; preds = %284
  %294 = icmp ult i64 %275, 16
  br i1 %294, label %295, label %305

295:                                              ; preds = %293
  %296 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %297 = load ptr, ptr %296, align 8, !tbaa !187
  %298 = load ptr, ptr %238, align 8, !tbaa !190
  call void %297(ptr noundef %298, ptr noundef nonnull %240) #38
  %299 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 9, ptr %299, align 4, !tbaa !189
  br label %938

300:                                              ; preds = %284
  %301 = zext i32 %277 to i64
  %302 = getelementptr inbounds i8, ptr %260, i64 %301
  %303 = sub i32 %259, %277
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %258, !llvm.loop !298

305:                                              ; preds = %300, %293
  %306 = phi i32 [ 1, %293 ], [ 0, %300 ]
  %307 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %308 = load ptr, ptr %307, align 8, !tbaa !187
  %309 = load ptr, ptr %238, align 8, !tbaa !190
  call void %308(ptr noundef %309, ptr noundef nonnull %240) #38
  br label %310

310:                                              ; preds = %305, %194, %170
  %311 = phi i32 [ %306, %305 ], [ 0, %194 ], [ 0, %170 ]
  %312 = load i32, ptr %122, align 4, !tbaa !202
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %325

314:                                              ; preds = %310
  %315 = zext i32 %121 to i64
  %316 = load i64, ptr %101, align 8, !tbaa !282
  %317 = add nuw nsw i64 %103, 178
  %318 = add nuw nsw i64 %317, %315
  %319 = add i64 %318, %141
  %320 = add i64 %319, %192
  %321 = add i64 %320, %316
  %322 = icmp ult i64 %321, 4294967295
  br i1 %322, label %325, label %323

323:                                              ; preds = %314
  %324 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %324, align 4, !tbaa !189
  br label %938

325:                                              ; preds = %314, %310
  %326 = call fastcc i32 @mz_zip_writer_write_zeros(ptr noundef nonnull %0, i64 noundef %141, i32 noundef %121)
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %938, label %328

328:                                              ; preds = %325
  %329 = zext i32 %121 to i64
  %330 = add i64 %141, %329
  store i64 %330, ptr %5, align 8, !tbaa !46
  %331 = load i64, ptr %110, align 8, !tbaa !285
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %338, label %333

333:                                              ; preds = %328
  %334 = add i64 %331, -1
  %335 = and i64 %334, %330
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %338, label %337

337:                                              ; preds = %333
  call void @__assert_fail(ptr noundef nonnull @.str.22, ptr noundef nonnull @.str.12, i32 noundef 9514, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_writer_add_from_zip_reader) #41
  unreachable

338:                                              ; preds = %333, %328
  %339 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %340 = load ptr, ptr %339, align 8, !tbaa !284
  %341 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %342 = load ptr, ptr %341, align 8, !tbaa !205
  %343 = call i64 %340(ptr noundef %342, i64 noundef %330, ptr noundef nonnull %6, i64 noundef 30) #38
  %344 = icmp eq i64 %343, 30
  br i1 %344, label %347, label %345

345:                                              ; preds = %338
  %346 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %346, align 4, !tbaa !189
  br label %938

347:                                              ; preds = %338
  %348 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 7
  %349 = load ptr, ptr %348, align 8, !tbaa !186
  %350 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 10
  %351 = load ptr, ptr %350, align 8, !tbaa !190
  %352 = call i64 @llvm.umin.i64(i64 %192, i64 65536)
  %353 = call i64 @llvm.umax.i64(i64 %352, i64 32)
  %354 = call ptr %349(ptr noundef %351, i64 noundef 1, i64 noundef %353) #38
  %355 = icmp eq ptr %354, null
  br i1 %355, label %359, label %356

356:                                              ; preds = %347
  %357 = add i64 %330, 30
  %358 = icmp eq i64 %192, 0
  br i1 %358, label %392, label %361

359:                                              ; preds = %347
  %360 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %360, align 4, !tbaa !189
  br label %938

361:                                              ; preds = %356, %385
  %362 = phi i64 [ %388, %385 ], [ %192, %356 ]
  %363 = phi i64 [ %386, %385 ], [ %171, %356 ]
  %364 = phi i64 [ %387, %385 ], [ %357, %356 ]
  %365 = call i64 @llvm.umin.i64(i64 %362, i64 65536)
  %366 = load ptr, ptr %20, align 8, !tbaa !196
  %367 = load ptr, ptr %143, align 8, !tbaa !205
  %368 = call i64 %366(ptr noundef %367, i64 noundef %363, ptr noundef %354, i64 noundef %365) #38
  %369 = icmp eq i64 %368, %365
  br i1 %369, label %375, label %370

370:                                              ; preds = %361
  %371 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %372 = load ptr, ptr %371, align 8, !tbaa !187
  %373 = load ptr, ptr %350, align 8, !tbaa !190
  call void %372(ptr noundef %373, ptr noundef %354) #38
  %374 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %374, align 4, !tbaa !189
  br label %938

375:                                              ; preds = %361
  %376 = load ptr, ptr %339, align 8, !tbaa !284
  %377 = load ptr, ptr %341, align 8, !tbaa !205
  %378 = call i64 %376(ptr noundef %377, i64 noundef %364, ptr noundef %354, i64 noundef %365) #38
  %379 = icmp eq i64 %378, %365
  br i1 %379, label %385, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %382 = load ptr, ptr %381, align 8, !tbaa !187
  %383 = load ptr, ptr %350, align 8, !tbaa !190
  call void %382(ptr noundef %383, ptr noundef %354) #38
  %384 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %384, align 4, !tbaa !189
  br label %938

385:                                              ; preds = %375
  %386 = add i64 %365, %363
  %387 = add i64 %365, %364
  %388 = sub i64 %362, %365
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %390, label %361, !llvm.loop !299

390:                                              ; preds = %385
  %391 = trunc i64 %365 to i32
  br label %392

392:                                              ; preds = %390, %356
  %393 = phi i32 [ %391, %390 ], [ undef, %356 ]
  %394 = phi i64 [ %387, %390 ], [ %357, %356 ]
  %395 = phi i64 [ %386, %390 ], [ %171, %356 ]
  store i32 %393, ptr %4, align 4, !tbaa !12
  %396 = getelementptr inbounds i8, ptr %6, i64 6
  %397 = load i8, ptr %396, align 2, !tbaa !3
  %398 = and i8 %397, 8
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %493, label %400

400:                                              ; preds = %392
  %401 = load ptr, ptr %26, align 8, !tbaa !184
  %402 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %401, i64 0, i32 4
  %403 = load i32, ptr %402, align 4, !tbaa !202
  %404 = or i32 %403, %311
  %405 = icmp eq i32 %404, 0
  %406 = load ptr, ptr %20, align 8, !tbaa !196
  %407 = load ptr, ptr %143, align 8, !tbaa !205
  br i1 %405, label %436, label %408

408:                                              ; preds = %400
  %409 = call i64 %406(ptr noundef %407, i64 noundef %395, ptr noundef %354, i64 noundef 24) #38
  %410 = icmp eq i64 %409, 24
  br i1 %410, label %416, label %411

411:                                              ; preds = %408
  %412 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %413 = load ptr, ptr %412, align 8, !tbaa !187
  %414 = load ptr, ptr %350, align 8, !tbaa !190
  call void %413(ptr noundef %414, ptr noundef %354) #38
  %415 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %415, align 4, !tbaa !189
  br label %938

416:                                              ; preds = %408
  %417 = load i8, ptr %354, align 1, !tbaa !3
  %418 = zext i8 %417 to i32
  %419 = getelementptr inbounds i8, ptr %354, i64 1
  %420 = load i8, ptr %419, align 1, !tbaa !3
  %421 = zext i8 %420 to i32
  %422 = shl nuw nsw i32 %421, 8
  %423 = or i32 %422, %418
  %424 = getelementptr inbounds i8, ptr %354, i64 2
  %425 = load i8, ptr %424, align 1, !tbaa !3
  %426 = zext i8 %425 to i32
  %427 = shl nuw nsw i32 %426, 16
  %428 = or i32 %423, %427
  %429 = getelementptr inbounds i8, ptr %354, i64 3
  %430 = load i8, ptr %429, align 1, !tbaa !3
  %431 = zext i8 %430 to i32
  %432 = shl nuw i32 %431, 24
  %433 = or i32 %428, %432
  %434 = icmp eq i32 %433, 134695760
  %435 = select i1 %434, i32 24, i32 20
  br label %479

436:                                              ; preds = %400
  %437 = call i64 %406(ptr noundef %407, i64 noundef %395, ptr noundef %354, i64 noundef 16) #38
  %438 = icmp eq i64 %437, 16
  br i1 %438, label %439, label %474

439:                                              ; preds = %436
  %440 = load i8, ptr %354, align 1, !tbaa !3
  %441 = zext i8 %440 to i32
  %442 = getelementptr inbounds i8, ptr %354, i64 1
  %443 = load i8, ptr %442, align 1, !tbaa !3
  %444 = zext i8 %443 to i32
  %445 = shl nuw nsw i32 %444, 8
  %446 = or i32 %445, %441
  %447 = getelementptr inbounds i8, ptr %354, i64 2
  %448 = load i8, ptr %447, align 1, !tbaa !3
  %449 = zext i8 %448 to i32
  %450 = shl nuw nsw i32 %449, 16
  %451 = or i32 %446, %450
  %452 = getelementptr inbounds i8, ptr %354, i64 3
  %453 = load i8, ptr %452, align 1, !tbaa !3
  %454 = zext i8 %453 to i32
  %455 = shl nuw i32 %454, 24
  %456 = or i32 %451, %455
  %457 = icmp eq i32 %456, 134695760
  %458 = load ptr, ptr %12, align 8, !tbaa !184
  %459 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %458, i64 0, i32 4
  %460 = load i32, ptr %459, align 4, !tbaa !202
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %472, label %462

462:                                              ; preds = %439
  %463 = select i1 %457, i64 4, i64 0
  %464 = getelementptr inbounds i8, ptr %354, i64 %463
  %465 = getelementptr inbounds i8, ptr %464, i64 8
  %466 = getelementptr inbounds i8, ptr %354, i64 4
  %467 = load <8 x i8>, ptr %464, align 1, !tbaa !3
  store <4 x i8> <i8 80, i8 75, i8 7, i8 8>, ptr %354, align 1, !tbaa !3
  %468 = getelementptr inbounds i8, ptr %354, i64 12
  %469 = getelementptr inbounds i8, ptr %354, i64 16
  %470 = load <4 x i8>, ptr %465, align 1, !tbaa !3
  store <8 x i8> %467, ptr %466, align 1, !tbaa !3
  store i32 0, ptr %468, align 1
  store <4 x i8> %470, ptr %469, align 1, !tbaa !3
  %471 = getelementptr inbounds i8, ptr %354, i64 20
  store i32 0, ptr %471, align 1
  br label %479

472:                                              ; preds = %439
  %473 = select i1 %457, i32 16, i32 12
  br label %479

474:                                              ; preds = %436
  %475 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %476 = load ptr, ptr %475, align 8, !tbaa !187
  %477 = load ptr, ptr %350, align 8, !tbaa !190
  call void %476(ptr noundef %477, ptr noundef %354) #38
  %478 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 20, ptr %478, align 4, !tbaa !189
  br label %938

479:                                              ; preds = %472, %462, %416
  %480 = phi i32 [ %435, %416 ], [ %473, %472 ], [ 24, %462 ]
  store i32 %480, ptr %4, align 4, !tbaa !12
  %481 = load ptr, ptr %339, align 8, !tbaa !284
  %482 = load ptr, ptr %341, align 8, !tbaa !205
  %483 = zext i32 %480 to i64
  %484 = call i64 %481(ptr noundef %482, i64 noundef %394, ptr noundef nonnull %354, i64 noundef %483) #38
  %485 = icmp eq i64 %484, %483
  br i1 %485, label %491, label %486

486:                                              ; preds = %479
  %487 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %488 = load ptr, ptr %487, align 8, !tbaa !187
  %489 = load ptr, ptr %350, align 8, !tbaa !190
  call void %488(ptr noundef %489, ptr noundef nonnull %354) #38
  %490 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %490, align 4, !tbaa !189
  br label %938

491:                                              ; preds = %479
  %492 = add i64 %394, %483
  br label %493

493:                                              ; preds = %491, %392
  %494 = phi i64 [ %492, %491 ], [ %394, %392 ]
  %495 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 8
  %496 = load ptr, ptr %495, align 8, !tbaa !187
  %497 = load ptr, ptr %350, align 8, !tbaa !190
  call void %496(ptr noundef %497, ptr noundef %354) #38
  %498 = load i64, ptr %101, align 8, !tbaa !282
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(46) %7, ptr noundef nonnull align 1 dereferenceable(46) %49, i64 46, i1 false)
  %499 = load i32, ptr %122, align 4, !tbaa !202
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %740, label %501

501:                                              ; preds = %493
  %502 = getelementptr inbounds i8, ptr %49, i64 46
  %503 = zext i32 %82 to i64
  %504 = getelementptr inbounds i8, ptr %502, i64 %503
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %9, i8 0, i64 32, i1 false)
  %505 = getelementptr inbounds %struct.mz_zip_array, ptr %9, i64 0, i32 3
  store i32 1, ptr %505, align 8, !tbaa !210
  %506 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %8, i64 0, i32 8
  %507 = getelementptr inbounds i8, ptr %7, i64 20
  store i64 -1, ptr %507, align 4
  %508 = getelementptr inbounds i8, ptr %7, i64 42
  store i32 -1, ptr %508, align 2
  %509 = call fastcc i32 @mz_zip_writer_update_zip64_extension_block(ptr noundef nonnull %9, ptr noundef nonnull %0, ptr noundef nonnull %504, i32 noundef %98, ptr noundef nonnull %190, ptr noundef nonnull %506, ptr noundef nonnull %5)
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %515

511:                                              ; preds = %501
  %512 = load ptr, ptr %495, align 8, !tbaa !187
  %513 = load ptr, ptr %350, align 8, !tbaa !190
  %514 = load ptr, ptr %9, align 8, !tbaa !191
  call void %512(ptr noundef %513, ptr noundef %514) #38
  br label %739

515:                                              ; preds = %501
  %516 = getelementptr inbounds %struct.mz_zip_array, ptr %9, i64 0, i32 1
  %517 = load i64, ptr %516, align 8, !tbaa !211
  %518 = trunc i64 %517 to i8
  %519 = getelementptr inbounds i8, ptr %7, i64 30
  store i8 %518, ptr %519, align 2, !tbaa !3
  %520 = lshr i64 %517, 8
  %521 = trunc i64 %520 to i8
  %522 = getelementptr inbounds i8, ptr %7, i64 31
  store i8 %521, ptr %522, align 1, !tbaa !3
  %523 = load i64, ptr %101, align 8, !tbaa !211
  %524 = add i64 %523, 46
  %525 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 2
  %526 = load i64, ptr %525, align 8, !tbaa !209
  %527 = icmp ult i64 %526, %524
  br i1 %527, label %530, label %528

528:                                              ; preds = %515
  %529 = load ptr, ptr %13, align 8, !tbaa !191
  br label %556

530:                                              ; preds = %515
  %531 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 3
  %532 = load i32, ptr %531, align 8, !tbaa !210
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %534, label %535

534:                                              ; preds = %530
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

535:                                              ; preds = %530
  %536 = icmp eq i64 %526, 0
  %537 = select i1 %536, i64 1, i64 %526
  br label %538

538:                                              ; preds = %538, %535
  %539 = phi i64 [ %537, %535 ], [ %541, %538 ]
  %540 = icmp ult i64 %539, %524
  %541 = shl i64 %539, 1
  br i1 %540, label %538, label %542, !llvm.loop !290

542:                                              ; preds = %538
  %543 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %544 = load ptr, ptr %543, align 8, !tbaa !197
  %545 = load ptr, ptr %350, align 8, !tbaa !190
  %546 = load ptr, ptr %13, align 8, !tbaa !191
  %547 = zext i32 %532 to i64
  %548 = call ptr %544(ptr noundef %545, ptr noundef %546, i64 noundef %547, i64 noundef %539) #38
  %549 = icmp eq ptr %548, null
  br i1 %549, label %551, label %550

550:                                              ; preds = %542
  store ptr %548, ptr %13, align 8, !tbaa !191
  store i64 %539, ptr %525, align 8, !tbaa !209
  br label %556

551:                                              ; preds = %542
  %552 = load ptr, ptr %495, align 8, !tbaa !187
  %553 = load ptr, ptr %350, align 8, !tbaa !190
  %554 = load ptr, ptr %9, align 8, !tbaa !191
  call void %552(ptr noundef %553, ptr noundef %554) #38
  %555 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %555, align 4, !tbaa !189
  br label %739

556:                                              ; preds = %528, %550
  %557 = phi ptr [ %529, %528 ], [ %548, %550 ]
  store i64 %524, ptr %101, align 8, !tbaa !211
  %558 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 3
  %559 = load i32, ptr %558, align 8, !tbaa !210
  %560 = zext i32 %559 to i64
  %561 = mul i64 %523, %560
  %562 = getelementptr inbounds i8, ptr %557, i64 %561
  %563 = mul nuw nsw i64 %560, 46
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %562, ptr nonnull align 16 %7, i64 %563, i1 false)
  %564 = load i64, ptr %101, align 8, !tbaa !211
  %565 = add i64 %564, %503
  %566 = load i64, ptr %525, align 8, !tbaa !209
  %567 = icmp ult i64 %566, %565
  br i1 %567, label %568, label %588

568:                                              ; preds = %556
  %569 = load i32, ptr %558, align 8, !tbaa !210
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %572

571:                                              ; preds = %568
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

572:                                              ; preds = %568
  %573 = icmp eq i64 %566, 0
  %574 = select i1 %573, i64 1, i64 %566
  br label %575

575:                                              ; preds = %575, %572
  %576 = phi i64 [ %574, %572 ], [ %578, %575 ]
  %577 = icmp ult i64 %576, %565
  %578 = shl i64 %576, 1
  br i1 %577, label %575, label %579, !llvm.loop !290

579:                                              ; preds = %575
  %580 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %581 = load ptr, ptr %580, align 8, !tbaa !197
  %582 = load ptr, ptr %350, align 8, !tbaa !190
  %583 = load ptr, ptr %13, align 8, !tbaa !191
  %584 = zext i32 %569 to i64
  %585 = call ptr %581(ptr noundef %582, ptr noundef %583, i64 noundef %584, i64 noundef %576) #38
  %586 = icmp eq ptr %585, null
  br i1 %586, label %600, label %587

587:                                              ; preds = %579
  store ptr %585, ptr %13, align 8, !tbaa !191
  store i64 %576, ptr %525, align 8, !tbaa !209
  br label %588

588:                                              ; preds = %587, %556
  %589 = phi i64 [ %576, %587 ], [ %566, %556 ]
  store i64 %565, ptr %101, align 8, !tbaa !211
  %590 = icmp eq i32 %82, 0
  br i1 %590, label %621, label %591

591:                                              ; preds = %588
  %592 = load ptr, ptr %13, align 8, !tbaa !191
  %593 = load i32, ptr %558, align 8, !tbaa !210
  %594 = zext i32 %593 to i64
  %595 = mul i64 %564, %594
  %596 = getelementptr inbounds i8, ptr %592, i64 %595
  %597 = mul nuw nsw i64 %594, %503
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %596, ptr nonnull align 1 %502, i64 %597, i1 false)
  %598 = load i64, ptr %101, align 8, !tbaa !211
  %599 = load i64, ptr %525, align 8, !tbaa !209
  br label %621

600:                                              ; preds = %579
  %601 = load ptr, ptr %495, align 8, !tbaa !187
  %602 = load ptr, ptr %350, align 8, !tbaa !190
  %603 = load ptr, ptr %9, align 8, !tbaa !191
  call void %601(ptr noundef %602, ptr noundef %603) #38
  %604 = load i64, ptr %525, align 8, !tbaa !209
  %605 = icmp ult i64 %604, %498
  br i1 %605, label %606, label %618

606:                                              ; preds = %600
  %607 = load i32, ptr %558, align 8, !tbaa !210
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %610

609:                                              ; preds = %606
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

610:                                              ; preds = %606
  %611 = load ptr, ptr %580, align 8, !tbaa !197
  %612 = load ptr, ptr %350, align 8, !tbaa !190
  %613 = load ptr, ptr %13, align 8, !tbaa !191
  %614 = zext i32 %607 to i64
  %615 = call ptr %611(ptr noundef %612, ptr noundef %613, i64 noundef %614, i64 noundef %498) #38
  %616 = icmp eq ptr %615, null
  br i1 %616, label %619, label %617

617:                                              ; preds = %610
  store ptr %615, ptr %13, align 8, !tbaa !191
  store i64 %498, ptr %525, align 8, !tbaa !209
  br label %618

618:                                              ; preds = %617, %600
  store i64 %498, ptr %101, align 8, !tbaa !211
  br label %619

619:                                              ; preds = %610, %618
  %620 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %620, align 4, !tbaa !189
  br label %739

621:                                              ; preds = %591, %588
  %622 = phi i64 [ %599, %591 ], [ %589, %588 ]
  %623 = phi i64 [ %598, %591 ], [ %565, %588 ]
  %624 = load ptr, ptr %9, align 8, !tbaa !191
  %625 = add i64 %623, %517
  %626 = icmp ult i64 %622, %625
  br i1 %626, label %627, label %647

627:                                              ; preds = %621
  %628 = load i32, ptr %558, align 8, !tbaa !210
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %631

630:                                              ; preds = %627
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

631:                                              ; preds = %627
  %632 = icmp eq i64 %622, 0
  %633 = select i1 %632, i64 1, i64 %622
  br label %634

634:                                              ; preds = %634, %631
  %635 = phi i64 [ %633, %631 ], [ %637, %634 ]
  %636 = icmp ult i64 %635, %625
  %637 = shl i64 %635, 1
  br i1 %636, label %634, label %638, !llvm.loop !290

638:                                              ; preds = %634
  %639 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %640 = load ptr, ptr %639, align 8, !tbaa !197
  %641 = load ptr, ptr %350, align 8, !tbaa !190
  %642 = load ptr, ptr %13, align 8, !tbaa !191
  %643 = zext i32 %628 to i64
  %644 = call ptr %640(ptr noundef %641, ptr noundef %642, i64 noundef %643, i64 noundef %635) #38
  %645 = icmp eq ptr %644, null
  br i1 %645, label %659, label %646

646:                                              ; preds = %638
  store ptr %644, ptr %13, align 8, !tbaa !191
  store i64 %635, ptr %525, align 8, !tbaa !209
  br label %647

647:                                              ; preds = %646, %621
  %648 = phi i64 [ %635, %646 ], [ %622, %621 ]
  store i64 %625, ptr %101, align 8, !tbaa !211
  %649 = icmp eq i64 %517, 0
  br i1 %649, label %679, label %650

650:                                              ; preds = %647
  %651 = load ptr, ptr %13, align 8, !tbaa !191
  %652 = load i32, ptr %558, align 8, !tbaa !210
  %653 = zext i32 %652 to i64
  %654 = mul i64 %623, %653
  %655 = getelementptr inbounds i8, ptr %651, i64 %654
  %656 = mul i64 %517, %653
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %655, ptr align 1 %624, i64 %656, i1 false)
  %657 = load i64, ptr %101, align 8, !tbaa !211
  %658 = load i64, ptr %525, align 8, !tbaa !209
  br label %679

659:                                              ; preds = %638
  %660 = load ptr, ptr %495, align 8, !tbaa !187
  %661 = load ptr, ptr %350, align 8, !tbaa !190
  call void %660(ptr noundef %661, ptr noundef %624) #38
  %662 = load i64, ptr %525, align 8, !tbaa !209
  %663 = icmp ult i64 %662, %498
  br i1 %663, label %664, label %676

664:                                              ; preds = %659
  %665 = load i32, ptr %558, align 8, !tbaa !210
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %667, label %668

667:                                              ; preds = %664
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

668:                                              ; preds = %664
  %669 = load ptr, ptr %639, align 8, !tbaa !197
  %670 = load ptr, ptr %350, align 8, !tbaa !190
  %671 = load ptr, ptr %13, align 8, !tbaa !191
  %672 = zext i32 %665 to i64
  %673 = call ptr %669(ptr noundef %670, ptr noundef %671, i64 noundef %672, i64 noundef %498) #38
  %674 = icmp eq ptr %673, null
  br i1 %674, label %677, label %675

675:                                              ; preds = %668
  store ptr %673, ptr %13, align 8, !tbaa !191
  store i64 %498, ptr %525, align 8, !tbaa !209
  br label %676

676:                                              ; preds = %675, %659
  store i64 %498, ptr %101, align 8, !tbaa !211
  br label %677

677:                                              ; preds = %668, %676
  %678 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %678, align 4, !tbaa !189
  br label %739

679:                                              ; preds = %650, %647
  %680 = phi i64 [ %658, %650 ], [ %648, %647 ]
  %681 = phi i64 [ %657, %650 ], [ %625, %647 ]
  %682 = zext i32 %98 to i64
  %683 = getelementptr inbounds i8, ptr %504, i64 %682
  %684 = zext i32 %90 to i64
  %685 = add i64 %681, %684
  %686 = icmp ult i64 %680, %685
  br i1 %686, label %687, label %707

687:                                              ; preds = %679
  %688 = load i32, ptr %558, align 8, !tbaa !210
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %690, label %691

690:                                              ; preds = %687
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

691:                                              ; preds = %687
  %692 = icmp eq i64 %680, 0
  %693 = select i1 %692, i64 1, i64 %680
  br label %694

694:                                              ; preds = %694, %691
  %695 = phi i64 [ %693, %691 ], [ %697, %694 ]
  %696 = icmp ult i64 %695, %685
  %697 = shl i64 %695, 1
  br i1 %696, label %694, label %698, !llvm.loop !290

698:                                              ; preds = %694
  %699 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %700 = load ptr, ptr %699, align 8, !tbaa !197
  %701 = load ptr, ptr %350, align 8, !tbaa !190
  %702 = load ptr, ptr %13, align 8, !tbaa !191
  %703 = zext i32 %688 to i64
  %704 = call ptr %700(ptr noundef %701, ptr noundef %702, i64 noundef %703, i64 noundef %695) #38
  %705 = icmp eq ptr %704, null
  br i1 %705, label %716, label %706

706:                                              ; preds = %698
  store ptr %704, ptr %13, align 8, !tbaa !191
  store i64 %695, ptr %525, align 8, !tbaa !209
  br label %707

707:                                              ; preds = %706, %679
  store i64 %685, ptr %101, align 8, !tbaa !211
  %708 = icmp eq i32 %90, 0
  br i1 %708, label %736, label %709

709:                                              ; preds = %707
  %710 = load ptr, ptr %13, align 8, !tbaa !191
  %711 = load i32, ptr %558, align 8, !tbaa !210
  %712 = zext i32 %711 to i64
  %713 = mul i64 %681, %712
  %714 = getelementptr inbounds i8, ptr %710, i64 %713
  %715 = mul nuw nsw i64 %712, %684
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %714, ptr nonnull align 1 %683, i64 %715, i1 false)
  br label %736

716:                                              ; preds = %698
  %717 = load ptr, ptr %495, align 8, !tbaa !187
  %718 = load ptr, ptr %350, align 8, !tbaa !190
  call void %717(ptr noundef %718, ptr noundef %624) #38
  %719 = load i64, ptr %525, align 8, !tbaa !209
  %720 = icmp ult i64 %719, %498
  br i1 %720, label %721, label %733

721:                                              ; preds = %716
  %722 = load i32, ptr %558, align 8, !tbaa !210
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %724, label %725

724:                                              ; preds = %721
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

725:                                              ; preds = %721
  %726 = load ptr, ptr %699, align 8, !tbaa !197
  %727 = load ptr, ptr %350, align 8, !tbaa !190
  %728 = load ptr, ptr %13, align 8, !tbaa !191
  %729 = zext i32 %722 to i64
  %730 = call ptr %726(ptr noundef %727, ptr noundef %728, i64 noundef %729, i64 noundef %498) #38
  %731 = icmp eq ptr %730, null
  br i1 %731, label %734, label %732

732:                                              ; preds = %725
  store ptr %730, ptr %13, align 8, !tbaa !191
  store i64 %498, ptr %525, align 8, !tbaa !209
  br label %733

733:                                              ; preds = %732, %716
  store i64 %498, ptr %101, align 8, !tbaa !211
  br label %734

734:                                              ; preds = %725, %733
  %735 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %735, align 4, !tbaa !189
  br label %739

736:                                              ; preds = %709, %707
  %737 = load ptr, ptr %495, align 8, !tbaa !187
  %738 = load ptr, ptr %350, align 8, !tbaa !190
  call void %737(ptr noundef %738, ptr noundef %624) #38
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #38
  br label %850

739:                                              ; preds = %734, %677, %619, %551, %511
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #38
  br label %938

740:                                              ; preds = %493
  %741 = icmp ugt i64 %494, 4294967295
  br i1 %741, label %742, label %744

742:                                              ; preds = %740
  %743 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %743, align 4, !tbaa !189
  br label %938

744:                                              ; preds = %740
  %745 = load i64, ptr %5, align 8, !tbaa !46
  %746 = icmp ugt i64 %745, 4294967294
  br i1 %746, label %747, label %749

747:                                              ; preds = %744
  %748 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 29, ptr %748, align 4, !tbaa !189
  br label %938

749:                                              ; preds = %744
  %750 = trunc i64 %745 to i8
  %751 = getelementptr inbounds i8, ptr %7, i64 42
  store i8 %750, ptr %751, align 2, !tbaa !3
  %752 = lshr i64 %745, 8
  %753 = trunc i64 %752 to i8
  %754 = getelementptr inbounds i8, ptr %7, i64 43
  store i8 %753, ptr %754, align 1, !tbaa !3
  %755 = lshr i64 %745, 16
  %756 = trunc i64 %755 to i8
  %757 = getelementptr inbounds i8, ptr %7, i64 44
  store i8 %756, ptr %757, align 4, !tbaa !3
  %758 = lshr i64 %745, 24
  %759 = trunc i64 %758 to i8
  %760 = getelementptr inbounds i8, ptr %7, i64 45
  store i8 %759, ptr %760, align 1, !tbaa !3
  %761 = add i64 %498, 46
  %762 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 2
  %763 = load i64, ptr %762, align 8, !tbaa !209
  %764 = icmp ult i64 %763, %761
  br i1 %764, label %767, label %765

765:                                              ; preds = %749
  %766 = load ptr, ptr %13, align 8, !tbaa !191
  br label %790

767:                                              ; preds = %749
  %768 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 3
  %769 = load i32, ptr %768, align 8, !tbaa !210
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %771, label %772

771:                                              ; preds = %767
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

772:                                              ; preds = %767
  %773 = icmp eq i64 %763, 0
  %774 = select i1 %773, i64 1, i64 %763
  br label %775

775:                                              ; preds = %775, %772
  %776 = phi i64 [ %774, %772 ], [ %778, %775 ]
  %777 = icmp ult i64 %776, %761
  %778 = shl i64 %776, 1
  br i1 %777, label %775, label %779, !llvm.loop !290

779:                                              ; preds = %775
  %780 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %781 = load ptr, ptr %780, align 8, !tbaa !197
  %782 = load ptr, ptr %350, align 8, !tbaa !190
  %783 = load ptr, ptr %13, align 8, !tbaa !191
  %784 = zext i32 %769 to i64
  %785 = call ptr %781(ptr noundef %782, ptr noundef %783, i64 noundef %784, i64 noundef %776) #38
  %786 = icmp eq ptr %785, null
  br i1 %786, label %788, label %787

787:                                              ; preds = %779
  store ptr %785, ptr %13, align 8, !tbaa !191
  store i64 %776, ptr %762, align 8, !tbaa !209
  br label %790

788:                                              ; preds = %779
  %789 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %789, align 4, !tbaa !189
  br label %938

790:                                              ; preds = %765, %787
  %791 = phi ptr [ %766, %765 ], [ %785, %787 ]
  store i64 %761, ptr %101, align 8, !tbaa !211
  %792 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 3
  %793 = load i32, ptr %792, align 8, !tbaa !210
  %794 = zext i32 %793 to i64
  %795 = mul i64 %498, %794
  %796 = getelementptr inbounds i8, ptr %791, i64 %795
  %797 = mul nuw nsw i64 %794, 46
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %796, ptr nonnull align 16 %7, i64 %797, i1 false)
  %798 = getelementptr inbounds i8, ptr %49, i64 46
  %799 = load i64, ptr %101, align 8, !tbaa !211
  %800 = add i64 %799, %103
  %801 = load i64, ptr %762, align 8, !tbaa !209
  %802 = icmp ult i64 %801, %800
  br i1 %802, label %803, label %823

803:                                              ; preds = %790
  %804 = load i32, ptr %792, align 8, !tbaa !210
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %806, label %807

806:                                              ; preds = %803
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

807:                                              ; preds = %803
  %808 = icmp eq i64 %801, 0
  %809 = select i1 %808, i64 1, i64 %801
  br label %810

810:                                              ; preds = %810, %807
  %811 = phi i64 [ %809, %807 ], [ %813, %810 ]
  %812 = icmp ult i64 %811, %800
  %813 = shl i64 %811, 1
  br i1 %812, label %810, label %814, !llvm.loop !290

814:                                              ; preds = %810
  %815 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %816 = load ptr, ptr %815, align 8, !tbaa !197
  %817 = load ptr, ptr %350, align 8, !tbaa !190
  %818 = load ptr, ptr %13, align 8, !tbaa !191
  %819 = zext i32 %804 to i64
  %820 = call ptr %816(ptr noundef %817, ptr noundef %818, i64 noundef %819, i64 noundef %811) #38
  %821 = icmp eq ptr %820, null
  br i1 %821, label %832, label %822

822:                                              ; preds = %814
  store ptr %820, ptr %13, align 8, !tbaa !191
  store i64 %811, ptr %762, align 8, !tbaa !209
  br label %823

823:                                              ; preds = %822, %790
  store i64 %800, ptr %101, align 8, !tbaa !211
  %824 = icmp eq i32 %100, 0
  br i1 %824, label %852, label %825

825:                                              ; preds = %823
  %826 = load ptr, ptr %13, align 8, !tbaa !191
  %827 = load i32, ptr %792, align 8, !tbaa !210
  %828 = zext i32 %827 to i64
  %829 = mul i64 %799, %828
  %830 = getelementptr inbounds i8, ptr %826, i64 %829
  %831 = mul nuw nsw i64 %828, %103
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %830, ptr nonnull align 1 %798, i64 %831, i1 false)
  br label %850

832:                                              ; preds = %814
  %833 = load i64, ptr %762, align 8, !tbaa !209
  %834 = icmp ult i64 %833, %498
  br i1 %834, label %835, label %847

835:                                              ; preds = %832
  %836 = load i32, ptr %792, align 8, !tbaa !210
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %838, label %839

838:                                              ; preds = %835
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

839:                                              ; preds = %835
  %840 = load ptr, ptr %815, align 8, !tbaa !197
  %841 = load ptr, ptr %350, align 8, !tbaa !190
  %842 = load ptr, ptr %13, align 8, !tbaa !191
  %843 = zext i32 %836 to i64
  %844 = call ptr %840(ptr noundef %841, ptr noundef %842, i64 noundef %843, i64 noundef %498) #38
  %845 = icmp eq ptr %844, null
  br i1 %845, label %848, label %846

846:                                              ; preds = %839
  store ptr %844, ptr %13, align 8, !tbaa !191
  store i64 %498, ptr %762, align 8, !tbaa !209
  br label %847

847:                                              ; preds = %846, %832
  store i64 %498, ptr %101, align 8, !tbaa !211
  br label %848

848:                                              ; preds = %839, %847
  %849 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %849, align 4, !tbaa !189
  br label %938

850:                                              ; preds = %736, %825
  %851 = load i64, ptr %101, align 8, !tbaa !282
  br label %852

852:                                              ; preds = %850, %823
  %853 = phi i64 [ %851, %850 ], [ %800, %823 ]
  %854 = icmp ugt i64 %853, 4294967294
  br i1 %854, label %855, label %876

855:                                              ; preds = %852
  %856 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 2
  %857 = load i64, ptr %856, align 8, !tbaa !209
  %858 = icmp ult i64 %857, %498
  br i1 %858, label %859, label %873

859:                                              ; preds = %855
  %860 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 3
  %861 = load i32, ptr %860, align 8, !tbaa !210
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %863, label %864

863:                                              ; preds = %859
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

864:                                              ; preds = %859
  %865 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %866 = load ptr, ptr %865, align 8, !tbaa !197
  %867 = load ptr, ptr %350, align 8, !tbaa !190
  %868 = load ptr, ptr %13, align 8, !tbaa !191
  %869 = zext i32 %861 to i64
  %870 = call ptr %866(ptr noundef %867, ptr noundef %868, i64 noundef %869, i64 noundef %498) #38
  %871 = icmp eq ptr %870, null
  br i1 %871, label %874, label %872

872:                                              ; preds = %864
  store ptr %870, ptr %13, align 8, !tbaa !191
  store i64 %498, ptr %856, align 8, !tbaa !209
  br label %873

873:                                              ; preds = %872, %855
  store i64 %498, ptr %101, align 8, !tbaa !211
  br label %874

874:                                              ; preds = %864, %873
  %875 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 15, ptr %875, align 4, !tbaa !189
  br label %938

876:                                              ; preds = %852
  %877 = trunc i64 %498 to i32
  store i32 %877, ptr %4, align 4, !tbaa !12
  %878 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %13, i64 0, i32 1
  %879 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %13, i64 0, i32 1, i32 1
  %880 = load i64, ptr %879, align 8, !tbaa !211
  %881 = add i64 %880, 1
  %882 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %13, i64 0, i32 1, i32 2
  %883 = load i64, ptr %882, align 8, !tbaa !209
  %884 = icmp ult i64 %883, %881
  br i1 %884, label %887, label %885

885:                                              ; preds = %876
  %886 = load ptr, ptr %878, align 8, !tbaa !191
  br label %928

887:                                              ; preds = %876
  %888 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %13, i64 0, i32 1, i32 3
  %889 = load i32, ptr %888, align 8, !tbaa !210
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %891, label %892

891:                                              ; preds = %887
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

892:                                              ; preds = %887
  %893 = icmp eq i64 %883, 0
  %894 = select i1 %893, i64 1, i64 %883
  br label %895

895:                                              ; preds = %895, %892
  %896 = phi i64 [ %894, %892 ], [ %898, %895 ]
  %897 = icmp ult i64 %896, %881
  %898 = shl i64 %896, 1
  br i1 %897, label %895, label %899, !llvm.loop !290

899:                                              ; preds = %895
  %900 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 9
  %901 = load ptr, ptr %900, align 8, !tbaa !197
  %902 = load ptr, ptr %350, align 8, !tbaa !190
  %903 = load ptr, ptr %878, align 8, !tbaa !191
  %904 = zext i32 %889 to i64
  %905 = call ptr %901(ptr noundef %902, ptr noundef %903, i64 noundef %904, i64 noundef %896) #38
  %906 = icmp eq ptr %905, null
  br i1 %906, label %908, label %907

907:                                              ; preds = %899
  store ptr %905, ptr %878, align 8, !tbaa !191
  store i64 %896, ptr %882, align 8, !tbaa !209
  br label %928

908:                                              ; preds = %899
  %909 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 2
  %910 = load i64, ptr %909, align 8, !tbaa !209
  %911 = icmp ult i64 %910, %498
  br i1 %911, label %912, label %925

912:                                              ; preds = %908
  %913 = getelementptr inbounds %struct.mz_zip_array, ptr %13, i64 0, i32 3
  %914 = load i32, ptr %913, align 8, !tbaa !210
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %917

916:                                              ; preds = %912
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

917:                                              ; preds = %912
  %918 = load ptr, ptr %900, align 8, !tbaa !197
  %919 = load ptr, ptr %350, align 8, !tbaa !190
  %920 = load ptr, ptr %13, align 8, !tbaa !191
  %921 = zext i32 %914 to i64
  %922 = call ptr %918(ptr noundef %919, ptr noundef %920, i64 noundef %921, i64 noundef %498) #38
  %923 = icmp eq ptr %922, null
  br i1 %923, label %926, label %924

924:                                              ; preds = %917
  store ptr %922, ptr %13, align 8, !tbaa !191
  store i64 %498, ptr %909, align 8, !tbaa !209
  br label %925

925:                                              ; preds = %924, %908
  store i64 %498, ptr %101, align 8, !tbaa !211
  br label %926

926:                                              ; preds = %917, %925
  %927 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 16, ptr %927, align 4, !tbaa !189
  br label %938

928:                                              ; preds = %885, %907
  %929 = phi ptr [ %886, %885 ], [ %905, %907 ]
  store i64 %881, ptr %879, align 8, !tbaa !211
  %930 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %13, i64 0, i32 1, i32 3
  %931 = load i32, ptr %930, align 8, !tbaa !210
  %932 = zext i32 %931 to i64
  %933 = mul i64 %880, %932
  %934 = getelementptr inbounds i8, ptr %929, i64 %933
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %934, ptr nonnull align 4 %4, i64 %932, i1 false)
  %935 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %936 = load i32, ptr %935, align 8, !tbaa !207
  %937 = add i32 %936, 1
  store i32 %937, ptr %935, align 8, !tbaa !207
  store i64 %494, ptr %0, align 8, !tbaa !204
  br label %938

938:                                              ; preds = %295, %279, %262, %242, %253, %474, %23, %3, %323, %739, %325, %135, %928, %926, %874, %848, %788, %747, %742, %486, %411, %380, %370, %359, %345, %168, %147, %133, %129, %107, %72, %51, %35
  %939 = phi i32 [ 0, %51 ], [ 0, %72 ], [ 0, %107 ], [ 0, %133 ], [ 0, %147 ], [ 0, %168 ], [ 0, %345 ], [ 0, %359 ], [ 0, %370 ], [ 0, %380 ], [ 0, %411 ], [ 0, %486 ], [ 0, %874 ], [ 1, %928 ], [ 0, %926 ], [ 0, %739 ], [ 0, %742 ], [ 0, %747 ], [ 0, %848 ], [ 0, %788 ], [ 0, %474 ], [ 0, %323 ], [ 0, %129 ], [ 0, %35 ], [ 0, %135 ], [ 0, %325 ], [ 0, %3 ], [ 0, %23 ], [ 0, %253 ], [ 0, %242 ], [ 0, %262 ], [ 0, %279 ], [ 0, %295 ]
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %8) #38
  call void @llvm.lifetime.end.p0(i64 46, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #38
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #38
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4)
  ret i32 %939
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @mz_zip_writer_update_zip64_extension_block(ptr nocapture noundef %0, ptr noundef %1, ptr noundef readonly %2, i32 noundef %3, ptr noundef readonly %4, ptr noundef readonly %5, ptr noundef readonly %6) unnamed_addr #8 {
  %8 = alloca [64 x i8], align 16
  %9 = add i32 %3, 64
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.mz_zip_array, ptr %0, i64 0, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !209
  %13 = icmp ult i64 %12, %10
  br i1 %13, label %14, label %31

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.mz_zip_array, ptr %0, i64 0, i32 3
  %16 = load i32, ptr %15, align 8, !tbaa !210
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 9
  %21 = load ptr, ptr %20, align 8, !tbaa !197
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 10
  %23 = load ptr, ptr %22, align 8, !tbaa !190
  %24 = load ptr, ptr %0, align 8, !tbaa !191
  %25 = zext i32 %16 to i64
  %26 = tail call ptr %21(ptr noundef %23, ptr noundef %24, i64 noundef %25, i64 noundef %10) #38
  %27 = icmp eq ptr %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %19
  store ptr %26, ptr %0, align 8, !tbaa !191
  store i64 %10, ptr %11, align 8, !tbaa !209
  br label %31

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 5
  store i32 16, ptr %30, align 4, !tbaa !189
  br label %253

31:                                               ; preds = %28, %7
  %32 = phi i64 [ %10, %28 ], [ %12, %7 ]
  %33 = getelementptr inbounds %struct.mz_zip_array, ptr %0, i64 0, i32 1
  store i64 0, ptr %33, align 8, !tbaa !211
  %34 = icmp ne ptr %5, null
  %35 = icmp ne ptr %4, null
  %36 = or i1 %35, %34
  %37 = icmp ne ptr %6, null
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %173

39:                                               ; preds = %31
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #38
  %40 = getelementptr inbounds i8, ptr %8, i64 2
  %41 = getelementptr inbounds i8, ptr %8, i64 3
  store <4 x i8> <i8 1, i8 0, i8 0, i8 0>, ptr %8, align 16, !tbaa !3
  %42 = getelementptr inbounds i8, ptr %8, i64 4
  br i1 %34, label %43, label %68

43:                                               ; preds = %39
  %44 = load i64, ptr %5, align 8, !tbaa !46
  %45 = trunc i64 %44 to i8
  store i8 %45, ptr %42, align 4, !tbaa !3
  %46 = lshr i64 %44, 8
  %47 = trunc i64 %46 to i8
  %48 = getelementptr inbounds i8, ptr %8, i64 5
  store i8 %47, ptr %48, align 1, !tbaa !3
  %49 = lshr i64 %44, 16
  %50 = trunc i64 %49 to i8
  %51 = getelementptr inbounds i8, ptr %8, i64 6
  store i8 %50, ptr %51, align 2, !tbaa !3
  %52 = lshr i64 %44, 24
  %53 = trunc i64 %52 to i8
  %54 = getelementptr inbounds i8, ptr %8, i64 7
  store i8 %53, ptr %54, align 1, !tbaa !3
  %55 = getelementptr inbounds i8, ptr %8, i64 8
  %56 = lshr i64 %44, 32
  %57 = trunc i64 %56 to i8
  store i8 %57, ptr %55, align 8, !tbaa !3
  %58 = lshr i64 %44, 40
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds i8, ptr %8, i64 9
  store i8 %59, ptr %60, align 1, !tbaa !3
  %61 = lshr i64 %44, 48
  %62 = trunc i64 %61 to i8
  %63 = getelementptr inbounds i8, ptr %8, i64 10
  store i8 %62, ptr %63, align 2, !tbaa !3
  %64 = lshr i64 %44, 56
  %65 = trunc i64 %64 to i8
  %66 = getelementptr inbounds i8, ptr %8, i64 11
  store i8 %65, ptr %66, align 1, !tbaa !3
  %67 = getelementptr inbounds i8, ptr %8, i64 12
  br label %68

68:                                               ; preds = %43, %39
  %69 = phi ptr [ %67, %43 ], [ %42, %39 ]
  br i1 %35, label %70, label %95

70:                                               ; preds = %68
  %71 = load i64, ptr %4, align 8, !tbaa !46
  %72 = trunc i64 %71 to i8
  store i8 %72, ptr %69, align 1, !tbaa !3
  %73 = lshr i64 %71, 8
  %74 = trunc i64 %73 to i8
  %75 = getelementptr inbounds i8, ptr %69, i64 1
  store i8 %74, ptr %75, align 1, !tbaa !3
  %76 = lshr i64 %71, 16
  %77 = trunc i64 %76 to i8
  %78 = getelementptr inbounds i8, ptr %69, i64 2
  store i8 %77, ptr %78, align 1, !tbaa !3
  %79 = lshr i64 %71, 24
  %80 = trunc i64 %79 to i8
  %81 = getelementptr inbounds i8, ptr %69, i64 3
  store i8 %80, ptr %81, align 1, !tbaa !3
  %82 = getelementptr inbounds i8, ptr %69, i64 4
  %83 = lshr i64 %71, 32
  %84 = trunc i64 %83 to i8
  store i8 %84, ptr %82, align 1, !tbaa !3
  %85 = lshr i64 %71, 40
  %86 = trunc i64 %85 to i8
  %87 = getelementptr inbounds i8, ptr %69, i64 5
  store i8 %86, ptr %87, align 1, !tbaa !3
  %88 = lshr i64 %71, 48
  %89 = trunc i64 %88 to i8
  %90 = getelementptr inbounds i8, ptr %69, i64 6
  store i8 %89, ptr %90, align 1, !tbaa !3
  %91 = lshr i64 %71, 56
  %92 = trunc i64 %91 to i8
  %93 = getelementptr inbounds i8, ptr %69, i64 7
  store i8 %92, ptr %93, align 1, !tbaa !3
  %94 = getelementptr inbounds i8, ptr %69, i64 8
  br label %95

95:                                               ; preds = %70, %68
  %96 = phi ptr [ %94, %70 ], [ %69, %68 ]
  br i1 %37, label %97, label %124

97:                                               ; preds = %95
  %98 = load i64, ptr %6, align 8, !tbaa !46
  %99 = trunc i64 %98 to i8
  store i8 %99, ptr %96, align 1, !tbaa !3
  %100 = lshr i64 %98, 8
  %101 = trunc i64 %100 to i8
  %102 = getelementptr inbounds i8, ptr %96, i64 1
  store i8 %101, ptr %102, align 1, !tbaa !3
  %103 = lshr i64 %98, 16
  %104 = trunc i64 %103 to i8
  %105 = getelementptr inbounds i8, ptr %96, i64 2
  store i8 %104, ptr %105, align 1, !tbaa !3
  %106 = lshr i64 %98, 24
  %107 = trunc i64 %106 to i8
  %108 = getelementptr inbounds i8, ptr %96, i64 3
  store i8 %107, ptr %108, align 1, !tbaa !3
  %109 = getelementptr inbounds i8, ptr %96, i64 4
  %110 = lshr i64 %98, 32
  %111 = trunc i64 %110 to i8
  store i8 %111, ptr %109, align 1, !tbaa !3
  %112 = lshr i64 %98, 40
  %113 = trunc i64 %112 to i8
  %114 = getelementptr inbounds i8, ptr %96, i64 5
  store i8 %113, ptr %114, align 1, !tbaa !3
  %115 = lshr i64 %98, 48
  %116 = trunc i64 %115 to i8
  %117 = getelementptr inbounds i8, ptr %96, i64 6
  store i8 %116, ptr %117, align 1, !tbaa !3
  %118 = lshr i64 %98, 56
  %119 = trunc i64 %118 to i8
  %120 = getelementptr inbounds i8, ptr %96, i64 7
  store i8 %119, ptr %120, align 1, !tbaa !3
  %121 = getelementptr inbounds i8, ptr %96, i64 8
  %122 = load i64, ptr %33, align 8, !tbaa !211
  %123 = load i64, ptr %11, align 8, !tbaa !209
  br label %124

124:                                              ; preds = %95, %97
  %125 = phi i64 [ %123, %97 ], [ %32, %95 ]
  %126 = phi i64 [ %122, %97 ], [ 0, %95 ]
  %127 = phi ptr [ %121, %97 ], [ %96, %95 ]
  %128 = ptrtoint ptr %127 to i64
  %129 = ptrtoint ptr %8 to i64
  %130 = sub i64 %128, %129
  %131 = trunc i64 %130 to i16
  %132 = add i16 %131, -4
  %133 = trunc i16 %132 to i8
  store i8 %133, ptr %40, align 2, !tbaa !3
  %134 = lshr i16 %132, 8
  %135 = trunc i16 %134 to i8
  store i8 %135, ptr %41, align 1, !tbaa !3
  %136 = add i64 %126, %130
  %137 = icmp ult i64 %125, %136
  br i1 %137, label %138, label %160

138:                                              ; preds = %124
  %139 = getelementptr inbounds %struct.mz_zip_array, ptr %0, i64 0, i32 3
  %140 = load i32, ptr %139, align 8, !tbaa !210
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %138
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

143:                                              ; preds = %138
  %144 = icmp eq i64 %125, 0
  %145 = select i1 %144, i64 1, i64 %125
  br label %146

146:                                              ; preds = %146, %143
  %147 = phi i64 [ %145, %143 ], [ %149, %146 ]
  %148 = icmp ult i64 %147, %136
  %149 = shl i64 %147, 1
  br i1 %148, label %146, label %150, !llvm.loop !290

150:                                              ; preds = %146
  %151 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 9
  %152 = load ptr, ptr %151, align 8, !tbaa !197
  %153 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 10
  %154 = load ptr, ptr %153, align 8, !tbaa !190
  %155 = load ptr, ptr %0, align 8, !tbaa !191
  %156 = zext i32 %140 to i64
  %157 = call ptr %152(ptr noundef %154, ptr noundef %155, i64 noundef %156, i64 noundef %147) #38
  %158 = icmp eq ptr %157, null
  br i1 %158, label %171, label %159

159:                                              ; preds = %150
  store ptr %157, ptr %0, align 8, !tbaa !191
  store i64 %147, ptr %11, align 8, !tbaa !209
  br label %160

160:                                              ; preds = %159, %124
  store i64 %136, ptr %33, align 8, !tbaa !211
  %161 = icmp eq ptr %127, %8
  br i1 %161, label %170, label %162

162:                                              ; preds = %160
  %163 = load ptr, ptr %0, align 8, !tbaa !191
  %164 = getelementptr inbounds %struct.mz_zip_array, ptr %0, i64 0, i32 3
  %165 = load i32, ptr %164, align 8, !tbaa !210
  %166 = zext i32 %165 to i64
  %167 = mul i64 %126, %166
  %168 = getelementptr inbounds i8, ptr %163, i64 %167
  %169 = mul i64 %130, %166
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %168, ptr nonnull align 16 %8, i64 %169, i1 false)
  br label %170

170:                                              ; preds = %160, %162
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #38
  br label %173

171:                                              ; preds = %150
  %172 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 5
  store i32 16, ptr %172, align 4, !tbaa !189
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #38
  br label %253

173:                                              ; preds = %170, %31
  %174 = icmp ne ptr %2, null
  %175 = icmp ne i32 %3, 0
  %176 = and i1 %174, %175
  br i1 %176, label %177, label %253

177:                                              ; preds = %173
  %178 = getelementptr inbounds %struct.mz_zip_array, ptr %0, i64 0, i32 3
  %179 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 9
  %180 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 10
  br label %181

181:                                              ; preds = %177, %249
  %182 = phi i32 [ %251, %249 ], [ %3, %177 ]
  %183 = phi ptr [ %250, %249 ], [ %2, %177 ]
  %184 = icmp ult i32 %182, 4
  br i1 %184, label %185, label %189

185:                                              ; preds = %181
  %186 = icmp eq ptr %1, null
  br i1 %186, label %253, label %187

187:                                              ; preds = %185
  %188 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 5
  store i32 9, ptr %188, align 4, !tbaa !189
  br label %253

189:                                              ; preds = %181
  %190 = getelementptr inbounds i8, ptr %183, i64 2
  %191 = load i8, ptr %190, align 1, !tbaa !3
  %192 = zext i8 %191 to i32
  %193 = getelementptr inbounds i8, ptr %183, i64 3
  %194 = load i8, ptr %193, align 1, !tbaa !3
  %195 = zext i8 %194 to i32
  %196 = shl nuw nsw i32 %195, 8
  %197 = or i32 %196, %192
  %198 = add nuw nsw i32 %197, 4
  %199 = icmp ult i32 %182, %198
  br i1 %199, label %200, label %204

200:                                              ; preds = %189
  %201 = icmp eq ptr %1, null
  br i1 %201, label %253, label %202

202:                                              ; preds = %200
  %203 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 5
  store i32 9, ptr %203, align 4, !tbaa !189
  br label %253

204:                                              ; preds = %189
  %205 = load i8, ptr %183, align 1, !tbaa !3
  %206 = zext i8 %205 to i32
  %207 = getelementptr inbounds i8, ptr %183, i64 1
  %208 = load i8, ptr %207, align 1, !tbaa !3
  %209 = zext i8 %208 to i32
  %210 = shl nuw nsw i32 %209, 8
  %211 = or i32 %210, %206
  %212 = icmp eq i32 %211, 1
  %213 = zext i32 %198 to i64
  br i1 %212, label %249, label %214

214:                                              ; preds = %204
  %215 = load i64, ptr %33, align 8, !tbaa !211
  %216 = add i64 %215, %213
  %217 = load i64, ptr %11, align 8, !tbaa !209
  %218 = icmp ult i64 %217, %216
  br i1 %218, label %221, label %219

219:                                              ; preds = %214
  %220 = load ptr, ptr %0, align 8, !tbaa !191
  br label %240

221:                                              ; preds = %214
  %222 = load i32, ptr %178, align 8, !tbaa !210
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @__assert_fail(ptr noundef nonnull @.str.69, ptr noundef nonnull @.str.12, i32 noundef 5299, ptr noundef nonnull @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity) #41
  unreachable

225:                                              ; preds = %221
  %226 = icmp eq i64 %217, 0
  %227 = select i1 %226, i64 1, i64 %217
  br label %228

228:                                              ; preds = %228, %225
  %229 = phi i64 [ %227, %225 ], [ %231, %228 ]
  %230 = icmp ult i64 %229, %216
  %231 = shl i64 %229, 1
  br i1 %230, label %228, label %232, !llvm.loop !290

232:                                              ; preds = %228
  %233 = load ptr, ptr %179, align 8, !tbaa !197
  %234 = load ptr, ptr %180, align 8, !tbaa !190
  %235 = load ptr, ptr %0, align 8, !tbaa !191
  %236 = zext i32 %222 to i64
  %237 = call ptr %233(ptr noundef %234, ptr noundef %235, i64 noundef %236, i64 noundef %229) #38
  %238 = icmp eq ptr %237, null
  br i1 %238, label %247, label %239

239:                                              ; preds = %232
  store ptr %237, ptr %0, align 8, !tbaa !191
  store i64 %229, ptr %11, align 8, !tbaa !209
  br label %240

240:                                              ; preds = %219, %239
  %241 = phi ptr [ %220, %219 ], [ %237, %239 ]
  store i64 %216, ptr %33, align 8, !tbaa !211
  %242 = load i32, ptr %178, align 8, !tbaa !210
  %243 = zext i32 %242 to i64
  %244 = mul i64 %215, %243
  %245 = getelementptr inbounds i8, ptr %241, i64 %244
  %246 = mul nuw nsw i64 %243, %213
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %245, ptr nonnull align 1 %183, i64 %246, i1 false)
  br label %249

247:                                              ; preds = %232
  %248 = getelementptr inbounds %struct.mz_zip_archive, ptr %1, i64 0, i32 5
  store i32 16, ptr %248, align 4, !tbaa !189
  br label %253

249:                                              ; preds = %204, %240
  %250 = getelementptr inbounds i8, ptr %183, i64 %213
  %251 = sub i32 %182, %198
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %181, !llvm.loop !300

253:                                              ; preds = %249, %173, %202, %200, %187, %185, %247, %171, %29
  %254 = phi i32 [ 0, %171 ], [ 0, %29 ], [ 0, %247 ], [ 0, %185 ], [ 0, %187 ], [ 0, %200 ], [ 0, %202 ], [ 1, %173 ], [ 1, %249 ]
  ret i32 %254
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_finalize_archive(ptr noundef %0) local_unnamed_addr #8 {
  %2 = alloca [256 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %2) #38
  %3 = icmp eq ptr %0, null
  br i1 %3, label %236, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %6 = load ptr, ptr %5, align 8, !tbaa !184
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %10 = load i32, ptr %9, align 4, !tbaa !188
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %14, label %12

12:                                               ; preds = %8, %4
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %13, align 4, !tbaa !189
  br label %236

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 4
  %16 = load i32, ptr %15, align 4, !tbaa !202
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.mz_zip_array, ptr %6, i64 0, i32 1
  %20 = load i64, ptr %19, align 8, !tbaa !282
  %21 = icmp ugt i64 %20, 4294967294
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %24 = load i32, ptr %23, align 8, !tbaa !207
  br label %40

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %26, align 4, !tbaa !189
  br label %236

27:                                               ; preds = %14
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %29 = load i32, ptr %28, align 8, !tbaa !207
  %30 = icmp ugt i32 %29, 65535
  br i1 %30, label %38, label %31

31:                                               ; preds = %27
  %32 = load i64, ptr %0, align 8, !tbaa !204
  %33 = getelementptr inbounds %struct.mz_zip_array, ptr %6, i64 0, i32 1
  %34 = load i64, ptr %33, align 8, !tbaa !282
  %35 = add i64 %32, -4294967274
  %36 = add i64 %35, %34
  %37 = icmp ult i64 %36, -4294967296
  br i1 %37, label %38, label %40

38:                                               ; preds = %31, %27
  %39 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 2, ptr %39, align 4, !tbaa !189
  br label %236

40:                                               ; preds = %22, %31
  %41 = phi i64 [ %20, %22 ], [ %34, %31 ]
  %42 = phi i32 [ %24, %22 ], [ %29, %31 ]
  %43 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %44 = icmp eq i32 %42, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %40
  %46 = load i64, ptr %0, align 8, !tbaa !204
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 1
  store i64 %46, ptr %47, align 8, !tbaa !208
  %48 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %49 = load ptr, ptr %48, align 8, !tbaa !284
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %51 = load ptr, ptr %50, align 8, !tbaa !205
  %52 = load ptr, ptr %6, align 8, !tbaa !212
  %53 = tail call i64 %49(ptr noundef %51, i64 noundef %46, ptr noundef %52, i64 noundef %41) #38
  %54 = icmp eq i64 %53, %41
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %56, align 4, !tbaa !189
  br label %236

57:                                               ; preds = %45
  %58 = load i64, ptr %0, align 8, !tbaa !204
  %59 = add i64 %58, %41
  store i64 %59, ptr %0, align 8, !tbaa !204
  %60 = load i32, ptr %15, align 4, !tbaa !202
  br label %61

61:                                               ; preds = %57, %40
  %62 = phi i32 [ %60, %57 ], [ %16, %40 ]
  %63 = phi i64 [ %46, %57 ], [ 0, %40 ]
  %64 = phi i64 [ %41, %57 ], [ 0, %40 ]
  %65 = icmp eq i32 %62, 0
  %66 = load i64, ptr %0, align 8, !tbaa !204
  br i1 %65, label %181, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds i8, ptr %2, i64 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(256) %68, i8 0, i64 240, i1 false)
  store <4 x i8> <i8 80, i8 75, i8 6, i8 6>, ptr %2, align 16, !tbaa !3
  %69 = getelementptr inbounds i8, ptr %2, i64 4
  store i8 44, ptr %69, align 4, !tbaa !3
  %70 = getelementptr inbounds i8, ptr %2, i64 5
  %71 = getelementptr inbounds i8, ptr %2, i64 12
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %70, i8 0, i64 7, i1 false)
  store <4 x i8> <i8 30, i8 3, i8 45, i8 0>, ptr %71, align 4, !tbaa !3
  %72 = getelementptr inbounds i8, ptr %2, i64 24
  %73 = load i32, ptr %43, align 8, !tbaa !207
  %74 = zext i32 %73 to i64
  %75 = trunc i32 %73 to i8
  store i8 %75, ptr %72, align 8, !tbaa !3
  %76 = lshr i64 %74, 8
  %77 = trunc i64 %76 to i8
  %78 = getelementptr inbounds i8, ptr %2, i64 25
  store i8 %77, ptr %78, align 1, !tbaa !3
  %79 = lshr i64 %74, 16
  %80 = trunc i64 %79 to i8
  %81 = getelementptr inbounds i8, ptr %2, i64 26
  store i8 %80, ptr %81, align 2, !tbaa !3
  %82 = lshr i64 %74, 24
  %83 = trunc i64 %82 to i8
  %84 = getelementptr inbounds i8, ptr %2, i64 27
  store i8 %83, ptr %84, align 1, !tbaa !3
  %85 = getelementptr inbounds i8, ptr %2, i64 28
  %86 = getelementptr inbounds i8, ptr %2, i64 32
  store i32 0, ptr %85, align 4
  store i8 %75, ptr %86, align 16, !tbaa !3
  %87 = getelementptr inbounds i8, ptr %2, i64 33
  store i8 %77, ptr %87, align 1, !tbaa !3
  %88 = getelementptr inbounds i8, ptr %2, i64 34
  store i8 %80, ptr %88, align 2, !tbaa !3
  %89 = getelementptr inbounds i8, ptr %2, i64 35
  store i8 %83, ptr %89, align 1, !tbaa !3
  %90 = getelementptr inbounds i8, ptr %2, i64 36
  %91 = getelementptr inbounds i8, ptr %2, i64 40
  %92 = trunc i64 %64 to i8
  store i32 0, ptr %90, align 4
  store i8 %92, ptr %91, align 8, !tbaa !3
  %93 = lshr i64 %64, 8
  %94 = trunc i64 %93 to i8
  %95 = getelementptr inbounds i8, ptr %2, i64 41
  store i8 %94, ptr %95, align 1, !tbaa !3
  %96 = lshr i64 %64, 16
  %97 = trunc i64 %96 to i8
  %98 = getelementptr inbounds i8, ptr %2, i64 42
  store i8 %97, ptr %98, align 2, !tbaa !3
  %99 = lshr i64 %64, 24
  %100 = trunc i64 %99 to i8
  %101 = getelementptr inbounds i8, ptr %2, i64 43
  store i8 %100, ptr %101, align 1, !tbaa !3
  %102 = getelementptr inbounds i8, ptr %2, i64 44
  %103 = lshr i64 %64, 32
  %104 = trunc i64 %103 to i8
  store i8 %104, ptr %102, align 4, !tbaa !3
  %105 = lshr i64 %64, 40
  %106 = trunc i64 %105 to i8
  %107 = getelementptr inbounds i8, ptr %2, i64 45
  store i8 %106, ptr %107, align 1, !tbaa !3
  %108 = lshr i64 %64, 48
  %109 = trunc i64 %108 to i8
  %110 = getelementptr inbounds i8, ptr %2, i64 46
  store i8 %109, ptr %110, align 2, !tbaa !3
  %111 = lshr i64 %64, 56
  %112 = trunc i64 %111 to i8
  %113 = getelementptr inbounds i8, ptr %2, i64 47
  store i8 %112, ptr %113, align 1, !tbaa !3
  %114 = getelementptr inbounds i8, ptr %2, i64 48
  %115 = trunc i64 %63 to i8
  store i8 %115, ptr %114, align 16, !tbaa !3
  %116 = lshr i64 %63, 8
  %117 = trunc i64 %116 to i8
  %118 = getelementptr inbounds i8, ptr %2, i64 49
  store i8 %117, ptr %118, align 1, !tbaa !3
  %119 = lshr i64 %63, 16
  %120 = trunc i64 %119 to i8
  %121 = getelementptr inbounds i8, ptr %2, i64 50
  store i8 %120, ptr %121, align 2, !tbaa !3
  %122 = lshr i64 %63, 24
  %123 = trunc i64 %122 to i8
  %124 = getelementptr inbounds i8, ptr %2, i64 51
  store i8 %123, ptr %124, align 1, !tbaa !3
  %125 = getelementptr inbounds i8, ptr %2, i64 52
  %126 = lshr i64 %63, 32
  %127 = trunc i64 %126 to i8
  store i8 %127, ptr %125, align 4, !tbaa !3
  %128 = lshr i64 %63, 40
  %129 = trunc i64 %128 to i8
  %130 = getelementptr inbounds i8, ptr %2, i64 53
  store i8 %129, ptr %130, align 1, !tbaa !3
  %131 = lshr i64 %63, 48
  %132 = trunc i64 %131 to i8
  %133 = getelementptr inbounds i8, ptr %2, i64 54
  store i8 %132, ptr %133, align 2, !tbaa !3
  %134 = lshr i64 %63, 56
  %135 = trunc i64 %134 to i8
  %136 = getelementptr inbounds i8, ptr %2, i64 55
  store i8 %135, ptr %136, align 1, !tbaa !3
  %137 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %138 = load ptr, ptr %137, align 8, !tbaa !284
  %139 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %140 = load ptr, ptr %139, align 8, !tbaa !205
  %141 = call i64 %138(ptr noundef %140, i64 noundef %66, ptr noundef nonnull %2, i64 noundef 56) #38
  %142 = icmp eq i64 %141, 56
  br i1 %142, label %145, label %143

143:                                              ; preds = %67
  %144 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %144, align 4, !tbaa !189
  br label %236

145:                                              ; preds = %67
  %146 = getelementptr inbounds i8, ptr %2, i64 15
  %147 = getelementptr inbounds i8, ptr %2, i64 14
  %148 = getelementptr inbounds i8, ptr %2, i64 13
  %149 = getelementptr inbounds i8, ptr %2, i64 11
  %150 = getelementptr inbounds i8, ptr %2, i64 10
  %151 = getelementptr inbounds i8, ptr %2, i64 9
  %152 = getelementptr inbounds i8, ptr %2, i64 8
  %153 = load i64, ptr %0, align 8, !tbaa !204
  %154 = add i64 %153, 56
  store i64 %154, ptr %0, align 8, !tbaa !204
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(256) %2, i8 0, i64 256, i1 false)
  store <4 x i8> <i8 80, i8 75, i8 6, i8 7>, ptr %2, align 16, !tbaa !3
  %155 = trunc i64 %66 to i8
  store i8 %155, ptr %152, align 8, !tbaa !3
  %156 = lshr i64 %66, 8
  %157 = trunc i64 %156 to i8
  store i8 %157, ptr %151, align 1, !tbaa !3
  %158 = lshr i64 %66, 16
  %159 = trunc i64 %158 to i8
  store i8 %159, ptr %150, align 2, !tbaa !3
  %160 = lshr i64 %66, 24
  %161 = trunc i64 %160 to i8
  store i8 %161, ptr %149, align 1, !tbaa !3
  %162 = lshr i64 %66, 32
  %163 = trunc i64 %162 to i8
  store i8 %163, ptr %71, align 4, !tbaa !3
  %164 = lshr i64 %66, 40
  %165 = trunc i64 %164 to i8
  store i8 %165, ptr %148, align 1, !tbaa !3
  %166 = lshr i64 %66, 48
  %167 = trunc i64 %166 to i8
  store i8 %167, ptr %147, align 2, !tbaa !3
  %168 = lshr i64 %66, 56
  %169 = trunc i64 %168 to i8
  store i8 %169, ptr %146, align 1, !tbaa !3
  %170 = getelementptr inbounds i8, ptr %2, i64 16
  store i8 1, ptr %170, align 16, !tbaa !3
  %171 = getelementptr inbounds i8, ptr %2, i64 18
  store i8 0, ptr %171, align 2, !tbaa !3
  %172 = load ptr, ptr %137, align 8, !tbaa !284
  %173 = load ptr, ptr %139, align 8, !tbaa !205
  %174 = call i64 %172(ptr noundef %173, i64 noundef %154, ptr noundef nonnull %2, i64 noundef 20) #38
  %175 = icmp eq i64 %174, 20
  br i1 %175, label %178, label %176

176:                                              ; preds = %145
  %177 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %177, align 4, !tbaa !189
  br label %236

178:                                              ; preds = %145
  %179 = load i64, ptr %0, align 8, !tbaa !204
  %180 = add i64 %179, 20
  store i64 %180, ptr %0, align 8, !tbaa !204
  br label %181

181:                                              ; preds = %61, %178
  %182 = phi i64 [ %180, %178 ], [ %66, %61 ]
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(256) %2, i8 0, i64 256, i1 false)
  store <4 x i8> <i8 80, i8 75, i8 5, i8 6>, ptr %2, align 16, !tbaa !3
  %183 = getelementptr inbounds i8, ptr %2, i64 8
  %184 = load i32, ptr %43, align 8, !tbaa !207
  %185 = call i32 @llvm.umin.i32(i32 %184, i32 65535)
  %186 = trunc i32 %185 to i8
  store i8 %186, ptr %183, align 8, !tbaa !3
  %187 = lshr i32 %185, 8
  %188 = trunc i32 %187 to i8
  %189 = getelementptr inbounds i8, ptr %2, i64 9
  store i8 %188, ptr %189, align 1, !tbaa !3
  %190 = getelementptr inbounds i8, ptr %2, i64 10
  store i8 %186, ptr %190, align 2, !tbaa !3
  %191 = getelementptr inbounds i8, ptr %2, i64 11
  store i8 %188, ptr %191, align 1, !tbaa !3
  %192 = getelementptr inbounds i8, ptr %2, i64 12
  %193 = call i64 @llvm.umin.i64(i64 %64, i64 4294967295)
  %194 = trunc i64 %193 to i8
  store i8 %194, ptr %192, align 4, !tbaa !3
  %195 = lshr i64 %193, 8
  %196 = trunc i64 %195 to i8
  %197 = getelementptr inbounds i8, ptr %2, i64 13
  store i8 %196, ptr %197, align 1, !tbaa !3
  %198 = lshr i64 %193, 16
  %199 = trunc i64 %198 to i8
  %200 = getelementptr inbounds i8, ptr %2, i64 14
  store i8 %199, ptr %200, align 2, !tbaa !3
  %201 = lshr i64 %193, 24
  %202 = trunc i64 %201 to i8
  %203 = getelementptr inbounds i8, ptr %2, i64 15
  store i8 %202, ptr %203, align 1, !tbaa !3
  %204 = getelementptr inbounds i8, ptr %2, i64 16
  %205 = call i64 @llvm.umin.i64(i64 %63, i64 4294967295)
  %206 = trunc i64 %205 to i8
  store i8 %206, ptr %204, align 16, !tbaa !3
  %207 = lshr i64 %205, 8
  %208 = trunc i64 %207 to i8
  %209 = getelementptr inbounds i8, ptr %2, i64 17
  store i8 %208, ptr %209, align 1, !tbaa !3
  %210 = lshr i64 %205, 16
  %211 = trunc i64 %210 to i8
  %212 = getelementptr inbounds i8, ptr %2, i64 18
  store i8 %211, ptr %212, align 2, !tbaa !3
  %213 = lshr i64 %205, 24
  %214 = trunc i64 %213 to i8
  %215 = getelementptr inbounds i8, ptr %2, i64 19
  store i8 %214, ptr %215, align 1, !tbaa !3
  %216 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %217 = load ptr, ptr %216, align 8, !tbaa !284
  %218 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %219 = load ptr, ptr %218, align 8, !tbaa !205
  %220 = call i64 %217(ptr noundef %219, i64 noundef %182, ptr noundef nonnull %2, i64 noundef 22) #38
  %221 = icmp eq i64 %220, 22
  br i1 %221, label %224, label %222

222:                                              ; preds = %181
  %223 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 19, ptr %223, align 4, !tbaa !189
  br label %236

224:                                              ; preds = %181
  %225 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %6, i64 0, i32 6
  %226 = load ptr, ptr %225, align 8, !tbaa !193
  %227 = icmp eq ptr %226, null
  br i1 %227, label %233, label %228

228:                                              ; preds = %224
  %229 = call i32 @fflush(ptr noundef nonnull %226)
  %230 = icmp eq i32 %229, -1
  br i1 %230, label %231, label %233

231:                                              ; preds = %228
  %232 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 21, ptr %232, align 4, !tbaa !189
  br label %236

233:                                              ; preds = %228, %224
  %234 = load i64, ptr %0, align 8, !tbaa !204
  %235 = add i64 %234, 22
  store i64 %235, ptr %0, align 8, !tbaa !204
  store i32 3, ptr %9, align 4, !tbaa !188
  br label %236

236:                                              ; preds = %12, %1, %143, %176, %233, %231, %222, %55, %38, %25
  %237 = phi i32 [ 0, %25 ], [ 0, %55 ], [ 0, %222 ], [ 0, %231 ], [ 1, %233 ], [ 0, %38 ], [ 0, %176 ], [ 0, %143 ], [ 0, %1 ], [ 0, %12 ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %2) #38
  ret i32 %237
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_writer_finalize_heap_archive(ptr noundef %0, ptr noundef writeonly %1, ptr noundef writeonly %2) local_unnamed_addr #8 {
  %4 = icmp ne ptr %1, null
  %5 = icmp ne ptr %2, null
  %6 = and i1 %4, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = icmp eq ptr %0, null
  br i1 %8, label %36, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %10, align 4, !tbaa !189
  br label %36

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !72
  store i64 0, ptr %2, align 8, !tbaa !46
  %12 = icmp eq ptr %0, null
  br i1 %12, label %36, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %15 = load ptr, ptr %14, align 8, !tbaa !184
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %18, align 4, !tbaa !189
  br label %36

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %21 = load ptr, ptr %20, align 8, !tbaa !284
  %22 = icmp eq ptr %21, @mz_zip_heap_write_func
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %24, align 4, !tbaa !189
  br label %36

25:                                               ; preds = %19
  %26 = tail call i32 @mz_zip_writer_finalize_archive(ptr noundef nonnull %0)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %25
  %29 = load ptr, ptr %14, align 8, !tbaa !184
  %30 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %29, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !218
  store ptr %31, ptr %1, align 8, !tbaa !72
  %32 = load ptr, ptr %14, align 8, !tbaa !184
  %33 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %32, i64 0, i32 9
  %34 = load i64, ptr %33, align 8, !tbaa !219
  store i64 %34, ptr %2, align 8, !tbaa !46
  %35 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %32, i64 0, i32 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %35, i8 0, i64 24, i1 false)
  br label %36

36:                                               ; preds = %11, %17, %9, %7, %25, %28, %23
  %37 = phi i32 [ 0, %23 ], [ 1, %28 ], [ 0, %25 ], [ 0, %7 ], [ 0, %9 ], [ 0, %17 ], [ 0, %11 ]
  ret i32 %37
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_add_mem_to_archive_file_in_place(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %6) local_unnamed_addr #8 {
  %8 = tail call i32 @mz_zip_add_mem_to_archive_file_in_place_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %6, ptr noundef null)
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_add_mem_to_archive_file_in_place_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %6, ptr noundef writeonly %7) local_unnamed_addr #8 {
  %9 = alloca %struct.mz_zip_archive, align 8
  %10 = alloca %struct.stat, align 8
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %9) #38
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %10) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %9, i8 0, i64 112, i1 false)
  %11 = icmp slt i32 %6, 0
  %12 = select i1 %11, i32 6, i32 %6
  %13 = icmp ne ptr %0, null
  %14 = icmp ne ptr %1, null
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %27

16:                                               ; preds = %8
  %17 = icmp eq i64 %3, 0
  %18 = icmp ne ptr %2, null
  %19 = or i1 %18, %17
  br i1 %19, label %20, label %27

20:                                               ; preds = %16
  %21 = icmp ne i16 %5, 0
  %22 = icmp eq ptr %4, null
  %23 = and i1 %22, %21
  %24 = and i32 %12, 15
  %25 = icmp ugt i32 %24, 10
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %20, %16, %8
  %28 = icmp eq ptr %7, null
  br i1 %28, label %120, label %29

29:                                               ; preds = %27
  store i32 24, ptr %7, align 4, !tbaa !3
  br label %120

30:                                               ; preds = %20
  %31 = load i8, ptr %1, align 1, !tbaa !3
  %32 = icmp eq i8 %31, 47
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = icmp eq ptr %7, null
  br i1 %34, label %120, label %35

35:                                               ; preds = %33
  store i32 25, ptr %7, align 4, !tbaa !3
  br label %120

36:                                               ; preds = %30
  %37 = call i32 @stat(ptr noundef nonnull %0, ptr noundef nonnull %10) #38
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %76

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 12
  store ptr @mz_zip_file_write_func, ptr %40, align 8, !tbaa !284
  %41 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 13
  store ptr null, ptr %41, align 8, !tbaa !217
  %42 = and i32 %12, 32768
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 11
  store ptr @mz_zip_file_read_func, ptr %45, align 8, !tbaa !196
  br label %46

46:                                               ; preds = %44, %39
  %47 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 14
  store ptr %9, ptr %47, align 8, !tbaa !205
  %48 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 15
  %49 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 7
  store ptr @miniz_def_alloc_func, ptr %49, align 8, !tbaa !186
  %50 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 8
  store ptr @miniz_def_free_func, ptr %50, align 8, !tbaa !187
  %51 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 9
  store ptr @miniz_def_realloc_func, ptr %51, align 8, !tbaa !197
  %52 = call dereferenceable_or_null(152) ptr @calloc(i64 1, i64 152)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %9, i8 0, i64 20, i1 false)
  store ptr %52, ptr %48, align 8, !tbaa !184
  %53 = icmp eq ptr %52, null
  br i1 %53, label %72, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 3
  %56 = lshr i32 %12, 14
  %57 = and i32 %56, 1
  %58 = getelementptr inbounds %struct.mz_zip_array, ptr %52, i64 0, i32 3
  store i32 1, ptr %58, align 8, !tbaa !198
  %59 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %52, i64 0, i32 1, i32 3
  store i32 4, ptr %59, align 8, !tbaa !199
  %60 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %52, i64 0, i32 2, i32 3
  store i32 4, ptr %60, align 8, !tbaa !200
  %61 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %52, i64 0, i32 4
  store i32 %57, ptr %61, align 4, !tbaa !202
  %62 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %52, i64 0, i32 5
  store i32 %57, ptr %62, align 8, !tbaa !203
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 4
  store i32 1, ptr %63, align 8, !tbaa !195
  store i32 2, ptr %55, align 4, !tbaa !188
  %64 = select i1 %43, ptr @.str.20, ptr @.str.21
  %65 = call noalias ptr @fopen(ptr noundef nonnull %0, ptr noundef nonnull %64)
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %54
  %68 = call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %9, i32 noundef 1)
  br label %72

69:                                               ; preds = %54
  %70 = load ptr, ptr %48, align 8, !tbaa !184
  %71 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %70, i64 0, i32 6
  store ptr %65, ptr %71, align 8, !tbaa !193
  store i32 4, ptr %63, align 8, !tbaa !195
  br label %95

72:                                               ; preds = %46, %67
  %73 = phi i32 [ 17, %67 ], [ 16, %46 ]
  %74 = icmp eq ptr %7, null
  br i1 %74, label %120, label %75

75:                                               ; preds = %72
  store i32 %73, ptr %7, align 4, !tbaa !3
  br label %120

76:                                               ; preds = %36
  %77 = or i32 %12, 2048
  %78 = call i32 @mz_zip_reader_init_file_v2(ptr noundef nonnull %9, ptr noundef nonnull %0, i32 noundef %77, i64 noundef 0, i64 noundef 0)
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %76
  %81 = icmp eq ptr %7, null
  br i1 %81, label %120, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 5
  %84 = load i32, ptr %83, align 4, !tbaa !189
  store i32 %84, ptr %7, align 4, !tbaa !3
  br label %120

85:                                               ; preds = %76
  %86 = call i32 @mz_zip_writer_init_from_reader_v2(ptr noundef nonnull %9, ptr noundef nonnull %0, i32 noundef %12)
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %95

88:                                               ; preds = %85
  %89 = icmp eq ptr %7, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 5
  %92 = load i32, ptr %91, align 4, !tbaa !189
  store i32 %92, ptr %7, align 4, !tbaa !3
  br label %93

93:                                               ; preds = %90, %88
  %94 = call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %9, i32 noundef 0)
  br label %120

95:                                               ; preds = %69, %85
  %96 = call i32 @mz_zip_writer_add_mem_ex_v2(ptr noundef nonnull %9, ptr noundef nonnull %1, ptr noundef %2, i64 noundef %3, ptr noundef %4, i16 noundef zeroext %5, i32 noundef %12, i64 noundef 0, i32 noundef 0, ptr noundef null, ptr noundef null, i32 noundef 0, ptr noundef null, i32 noundef 0)
  %97 = getelementptr inbounds %struct.mz_zip_archive, ptr %9, i64 0, i32 5
  %98 = load i32, ptr %97, align 4, !tbaa !189
  %99 = call i32 @mz_zip_writer_finalize_archive(ptr noundef nonnull %9)
  %100 = icmp eq i32 %99, 0
  %101 = icmp eq i32 %98, 0
  %102 = load i32, ptr %97, align 4
  %103 = select i1 %100, i32 0, i32 %96
  %104 = select i1 %100, i1 %101, i1 false
  %105 = select i1 %104, i32 %102, i32 %98
  %106 = call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %9, i32 noundef %103)
  %107 = icmp eq i32 %106, 0
  %108 = icmp eq i32 %105, 0
  %109 = load i32, ptr %97, align 4
  %110 = select i1 %107, i32 0, i32 %103
  %111 = select i1 %107, i1 %108, i1 false
  %112 = select i1 %111, i32 %109, i32 %105
  %113 = icmp eq i32 %110, 0
  %114 = and i1 %38, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %95
  %116 = call i32 @remove(ptr noundef nonnull %0) #38
  br label %117

117:                                              ; preds = %115, %95
  %118 = icmp eq ptr %7, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %117
  store i32 %112, ptr %7, align 4, !tbaa !3
  br label %120

120:                                              ; preds = %117, %119, %80, %82, %72, %75, %33, %35, %27, %29, %93
  %121 = phi i32 [ 0, %93 ], [ 0, %29 ], [ 0, %27 ], [ 0, %35 ], [ 0, %33 ], [ 0, %75 ], [ 0, %72 ], [ 0, %82 ], [ 0, %80 ], [ %110, %119 ], [ %110, %117 ]
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %10) #38
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %9) #38
  ret i32 %121
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @stat(ptr nocapture noundef readonly, ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @remove(ptr nocapture noundef readonly) local_unnamed_addr #19

; Function Attrs: nounwind uwtable
define dso_local ptr @mz_zip_extract_archive_file_to_heap_v2(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4, ptr noundef writeonly %5) local_unnamed_addr #8 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #38
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %8) #38
  %9 = icmp eq ptr %3, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i64 0, ptr %3, align 8, !tbaa !46
  br label %11

11:                                               ; preds = %10, %6
  %12 = icmp ne ptr %0, null
  %13 = icmp ne ptr %1, null
  %14 = and i1 %12, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = icmp eq ptr %5, null
  br i1 %16, label %90, label %87

17:                                               ; preds = %11
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %8, i8 0, i64 112, i1 false)
  %18 = or i32 %4, 2048
  %19 = call i32 @mz_zip_reader_init_file_v2(ptr noundef nonnull %8, ptr noundef nonnull %0, i32 noundef %18, i64 noundef 0, i64 noundef 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = icmp eq ptr %5, null
  br i1 %22, label %90, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 5
  %25 = load i32, ptr %24, align 4, !tbaa !189
  br label %87

26:                                               ; preds = %17
  %27 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef nonnull %8, ptr noundef nonnull %1, ptr noundef %2, i32 noundef %4, ptr noundef nonnull %7)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = load i32, ptr %7, align 4, !tbaa !12
  %31 = call ptr @mz_zip_reader_extract_to_heap(ptr noundef nonnull %8, i32 noundef %30, ptr noundef %3, i32 noundef %4)
  br label %32

32:                                               ; preds = %29, %26
  %33 = phi ptr [ %31, %29 ], [ null, %26 ]
  %34 = icmp eq ptr %33, null
  %35 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 15
  %36 = load ptr, ptr %35, align 8, !tbaa !184
  %37 = icmp eq ptr %36, null
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 7
  %39 = load ptr, ptr %38, align 8
  %40 = icmp eq ptr %39, null
  %41 = select i1 %37, i1 true, i1 %40
  br i1 %41, label %50, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 8
  %44 = load ptr, ptr %43, align 8, !tbaa !187
  %45 = icmp ne ptr %44, null
  %46 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 3
  %47 = load i32, ptr %46, align 4
  %48 = icmp eq i32 %47, 1
  %49 = select i1 %45, i1 %48, i1 false
  br i1 %49, label %53, label %50

50:                                               ; preds = %42, %32
  br i1 %34, label %82, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 5
  store i32 24, ptr %52, align 4, !tbaa !189
  br label %82

53:                                               ; preds = %42
  store ptr null, ptr %35, align 8, !tbaa !184
  %54 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 10
  %55 = load ptr, ptr %54, align 8, !tbaa !190
  %56 = load ptr, ptr %36, align 8, !tbaa !191
  call void %44(ptr noundef %55, ptr noundef %56) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %36, i8 0, i64 32, i1 false)
  %57 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %36, i64 0, i32 1
  %58 = load ptr, ptr %43, align 8, !tbaa !187
  %59 = load ptr, ptr %54, align 8, !tbaa !190
  %60 = load ptr, ptr %57, align 8, !tbaa !191
  call void %58(ptr noundef %59, ptr noundef %60) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %57, i8 0, i64 32, i1 false)
  %61 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %36, i64 0, i32 2
  %62 = load ptr, ptr %43, align 8, !tbaa !187
  %63 = load ptr, ptr %54, align 8, !tbaa !190
  %64 = load ptr, ptr %61, align 8, !tbaa !191
  call void %62(ptr noundef %63, ptr noundef %64) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %61, i8 0, i64 32, i1 false)
  %65 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %36, i64 0, i32 6
  %66 = load ptr, ptr %65, align 8, !tbaa !193
  %67 = icmp eq ptr %66, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %53
  %69 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 4
  %70 = load i32, ptr %69, align 8, !tbaa !195
  %71 = icmp eq i32 %70, 4
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = call i32 @fclose(ptr noundef nonnull %66)
  %74 = icmp ne i32 %73, -1
  %75 = select i1 %74, i1 true, i1 %34
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 5
  store i32 21, ptr %77, align 4, !tbaa !189
  br label %78

78:                                               ; preds = %76, %72, %68
  store ptr null, ptr %65, align 8, !tbaa !193
  br label %79

79:                                               ; preds = %78, %53
  %80 = load ptr, ptr %43, align 8, !tbaa !187
  %81 = load ptr, ptr %54, align 8, !tbaa !190
  call void %80(ptr noundef %81, ptr noundef nonnull %36) #38
  br label %82

82:                                               ; preds = %50, %51, %79
  %83 = icmp eq ptr %5, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %struct.mz_zip_archive, ptr %8, i64 0, i32 5
  %86 = load i32, ptr %85, align 4, !tbaa !189
  br label %87

87:                                               ; preds = %15, %23, %84
  %88 = phi i32 [ %86, %84 ], [ %25, %23 ], [ 24, %15 ]
  %89 = phi ptr [ %33, %84 ], [ null, %23 ], [ null, %15 ]
  store i32 %88, ptr %5, align 4, !tbaa !3
  br label %90

90:                                               ; preds = %87, %82, %21, %15
  %91 = phi ptr [ null, %15 ], [ null, %21 ], [ %33, %82 ], [ %89, %87 ]
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %8) #38
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #38
  ret ptr %91
}

; Function Attrs: nounwind uwtable
define dso_local ptr @mz_zip_extract_archive_file_to_heap(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #8 {
  %5 = tail call ptr @mz_zip_extract_archive_file_to_heap_v2(ptr noundef %0, ptr noundef %1, ptr noundef null, ptr noundef %2, i32 noundef %3, ptr noundef null)
  ret ptr %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i32 @mz_zip_get_mode(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %5 = load i32, ptr %4, align 4, !tbaa !188
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i32 @mz_zip_get_type(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !195
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local i32 @mz_zip_set_last_error(ptr noundef %0, i32 noundef %1) local_unnamed_addr #27 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  %6 = load i32, ptr %5, align 4, !tbaa !189
  store i32 %1, ptr %5, align 4, !tbaa !189
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i32 [ %6, %4 ], [ 24, %2 ]
  ret i32 %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i32 @mz_zip_peek_last_error(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  %5 = load i32, ptr %4, align 4, !tbaa !189
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 24, %1 ]
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local i32 @mz_zip_clear_last_error(ptr noundef %0) local_unnamed_addr #27 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  %5 = load i32, ptr %4, align 4, !tbaa !189
  store i32 0, ptr %4, align 4, !tbaa !189
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 24, %1 ]
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local i32 @mz_zip_get_last_error(ptr noundef %0) local_unnamed_addr #27 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  %5 = load i32, ptr %4, align 4, !tbaa !189
  store i32 0, ptr %4, align 4, !tbaa !189
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 24, %1 ]
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local nonnull ptr @mz_zip_get_error_string(i32 noundef %0) local_unnamed_addr #7 {
  %2 = icmp ult i32 %0, 33
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [33 x ptr], ptr @switch.table.mz_zip_get_error_string, i64 0, i64 %4
  %6 = load ptr, ptr %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi ptr [ %6, %3 ], [ @.str.58, %1 ]
  ret ptr %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @mz_zip_is_zip64(ptr noundef readonly %0) local_unnamed_addr #28 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %5 = load ptr, ptr %4, align 8, !tbaa !184
  %6 = icmp eq ptr %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %5, i64 0, i32 4
  %9 = load i32, ptr %8, align 4, !tbaa !202
  br label %10

10:                                               ; preds = %1, %3, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i32 %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @mz_zip_get_central_dir_size(ptr noundef readonly %0) local_unnamed_addr #28 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %5 = load ptr, ptr %4, align 8, !tbaa !184
  %6 = icmp eq ptr %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_zip_array, ptr %5, i64 0, i32 1
  %9 = load i64, ptr %8, align 8, !tbaa !282
  br label %10

10:                                               ; preds = %1, %3, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i64 %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i32 @mz_zip_reader_get_num_files(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !207
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @mz_zip_get_archive_size(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = load i64, ptr %0, align 8, !tbaa !204
  br label %5

5:                                                ; preds = %1, %3
  %6 = phi i64 [ %4, %3 ], [ 0, %1 ]
  ret i64 %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i64 @mz_zip_get_archive_file_start_offset(ptr noundef readonly %0) local_unnamed_addr #28 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %5 = load ptr, ptr %4, align 8, !tbaa !184
  %6 = icmp eq ptr %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %5, i64 0, i32 7
  %9 = load i64, ptr %8, align 8, !tbaa !220
  br label %10

10:                                               ; preds = %1, %3, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i64 %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @mz_zip_get_cfile(ptr noundef readonly %0) local_unnamed_addr #28 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %5 = load ptr, ptr %4, align 8, !tbaa !184
  %6 = icmp eq ptr %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %5, i64 0, i32 6
  %9 = load ptr, ptr %8, align 8, !tbaa !193
  br label %10

10:                                               ; preds = %1, %3, %7
  %11 = phi ptr [ %9, %7 ], [ null, %3 ], [ null, %1 ]
  ret ptr %11
}

; Function Attrs: nounwind uwtable
define dso_local i64 @mz_zip_read_archive_data(ptr noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) local_unnamed_addr #8 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %8 = load ptr, ptr %7, align 8, !tbaa !184
  %9 = icmp ne ptr %8, null
  %10 = icmp ne ptr %2, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %16

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 11
  %14 = load ptr, ptr %13, align 8, !tbaa !196
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %12, %6
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %17, align 4, !tbaa !189
  br label %22

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %20 = load ptr, ptr %19, align 8, !tbaa !205
  %21 = tail call i64 %14(ptr noundef %20, i64 noundef %1, ptr noundef nonnull %2, i64 noundef %3) #38
  br label %22

22:                                               ; preds = %16, %4, %18
  %23 = phi i64 [ %21, %18 ], [ 0, %4 ], [ 0, %16 ]
  ret i64 %23
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @mz_zip_reader_get_filename(ptr noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #11 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %8 = load ptr, ptr %7, align 8, !tbaa !184
  %9 = icmp eq ptr %8, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %12 = load i32, ptr %11, align 8, !tbaa !207
  %13 = icmp ugt i32 %12, %1
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = load ptr, ptr %8, align 8, !tbaa !212
  %16 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %8, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !213
  %18 = zext i32 %1 to i64
  %19 = getelementptr inbounds i32, ptr %17, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !12
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, ptr %15, i64 %21
  %23 = icmp eq ptr %15, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %4, %6, %10, %14
  %25 = icmp eq i32 %3, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %24
  store i8 0, ptr %2, align 1, !tbaa !3
  br label %27

27:                                               ; preds = %26, %24
  br i1 %5, label %49, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %29, align 4, !tbaa !189
  br label %49

30:                                               ; preds = %14
  %31 = getelementptr inbounds i8, ptr %22, i64 28
  %32 = load i8, ptr %31, align 1, !tbaa !3
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds i8, ptr %22, i64 29
  %35 = load i8, ptr %34, align 1, !tbaa !3
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = or i32 %37, %33
  %39 = icmp eq i32 %3, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %30
  %41 = add i32 %3, -1
  %42 = tail call i32 @llvm.umin.i32(i32 %38, i32 %41)
  %43 = getelementptr inbounds i8, ptr %22, i64 46
  %44 = zext i32 %42 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %2, ptr nonnull align 1 %43, i64 %44, i1 false)
  %45 = getelementptr inbounds i8, ptr %2, i64 %44
  store i8 0, ptr %45, align 1, !tbaa !3
  br label %46

46:                                               ; preds = %40, %30
  %47 = phi i32 [ %42, %40 ], [ %38, %30 ]
  %48 = add nuw nsw i32 %47, 1
  br label %49

49:                                               ; preds = %28, %27, %46
  %50 = phi i32 [ %48, %46 ], [ 0, %27 ], [ 0, %28 ]
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @mz_zip_end(ptr noundef %0) local_unnamed_addr #8 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %5 = load i32, ptr %4, align 4, !tbaa !188
  switch i32 %5, label %10 [
    i32 1, label %6
    i32 2, label %8
    i32 3, label %8
  ]

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %0, i32 noundef 1)
  br label %10

8:                                                ; preds = %3, %3
  %9 = tail call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %0, i32 noundef 1)
  br label %10

10:                                               ; preds = %3, %1, %8, %6
  %11 = phi i32 [ %7, %6 ], [ %9, %8 ], [ 0, %1 ], [ 0, %3 ]
  ret i32 %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local ptr @zip_strerror(i32 noundef %0) local_unnamed_addr #7 {
  %2 = icmp ult i32 %0, -32
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = sub nsw i32 0, %0
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds [33 x ptr], ptr @zip_errlist, i64 0, i64 %5
  %7 = load ptr, ptr %6, align 8, !tbaa !72
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi ptr [ %7, %3 ], [ null, %1 ]
  ret ptr %9
}

; Function Attrs: nounwind uwtable
define dso_local ptr @zip_open(ptr noundef %0, i32 noundef %1, i8 noundef signext %2) local_unnamed_addr #8 {
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #38
  %5 = call ptr @zip_openwitherror(ptr noundef %0, i32 noundef %1, i8 noundef signext %2, ptr noundef nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #38
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define dso_local ptr @zip_openwitherror(ptr noundef %0, i32 noundef %1, i8 noundef signext %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #8 {
  store i32 0, ptr %3, align 4, !tbaa !12
  %5 = icmp eq ptr %0, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = load i8, ptr %0, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %6, %4
  store i32 -22, ptr %3, align 4, !tbaa !12
  br label %67

10:                                               ; preds = %6
  %11 = icmp slt i32 %1, 0
  %12 = select i1 %11, i32 6, i32 %1
  %13 = and i32 %12, 15
  %14 = icmp ugt i32 %13, 10
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  store i32 -5, ptr %3, align 4, !tbaa !12
  br label %67

16:                                               ; preds = %10
  %17 = tail call noalias dereferenceable_or_null(319608) ptr @calloc(i64 noundef 1, i64 noundef 319608) #43
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  store i32 -21, ptr %3, align 4, !tbaa !12
  br label %67

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.zip_t, ptr %17, i64 0, i32 1
  store i32 %12, ptr %21, align 8, !tbaa !301
  %22 = getelementptr inbounds %struct.zip_t, ptr %17, i64 0, i32 2
  store i64 -1, ptr %22, align 8, !tbaa !304
  %23 = sext i8 %2 to i32
  switch i32 %23, label %65 [
    i32 119, label %24
    i32 114, label %49
    i32 97, label %54
    i32 100, label %54
  ]

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i64 0, i32 12
  store ptr @mz_zip_file_write_func, ptr %25, align 8, !tbaa !284
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i64 0, i32 14
  store ptr %17, ptr %26, align 8, !tbaa !205
  %27 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i64 0, i32 15
  %28 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i64 0, i32 7
  store ptr @miniz_def_alloc_func, ptr %28, align 8, !tbaa !186
  %29 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i64 0, i32 8
  store ptr @miniz_def_free_func, ptr %29, align 8, !tbaa !187
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i64 0, i32 9
  store ptr @miniz_def_realloc_func, ptr %30, align 8, !tbaa !197
  %31 = tail call dereferenceable_or_null(152) ptr @calloc(i64 1, i64 152)
  store ptr %31, ptr %27, align 8, !tbaa !184
  %32 = icmp eq ptr %31, null
  br i1 %32, label %48, label %33

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i64 0, i32 3
  %35 = getelementptr inbounds %struct.mz_zip_array, ptr %31, i64 0, i32 3
  store i32 1, ptr %35, align 8, !tbaa !198
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %31, i64 0, i32 1, i32 3
  store i32 4, ptr %36, align 8, !tbaa !199
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %31, i64 0, i32 2, i32 3
  store i32 4, ptr %37, align 8, !tbaa !200
  %38 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %31, i64 0, i32 4
  store i32 1, ptr %38, align 4, !tbaa !202
  %39 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %31, i64 0, i32 5
  store i32 1, ptr %39, align 8, !tbaa !203
  %40 = getelementptr inbounds %struct.mz_zip_archive, ptr %17, i64 0, i32 4
  store i32 1, ptr %40, align 8, !tbaa !195
  store i32 2, ptr %34, align 4, !tbaa !188
  %41 = tail call noalias ptr @fopen(ptr noundef nonnull %0, ptr noundef nonnull @.str.20)
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %33
  %44 = tail call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %17, i32 noundef 1)
  br label %48

45:                                               ; preds = %33
  %46 = load ptr, ptr %27, align 8, !tbaa !184
  %47 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %46, i64 0, i32 6
  store ptr %41, ptr %47, align 8, !tbaa !193
  store i32 4, ptr %40, align 8, !tbaa !195
  br label %67

48:                                               ; preds = %24, %43
  store i32 -31, ptr %3, align 4, !tbaa !12
  br label %66

49:                                               ; preds = %20
  %50 = or i32 %12, 2048
  %51 = tail call i32 @mz_zip_reader_init_file_v2(ptr noundef nonnull %17, ptr noundef nonnull %0, i32 noundef %50, i64 noundef 0, i64 noundef 0)
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %67

53:                                               ; preds = %49
  store i32 -30, ptr %3, align 4, !tbaa !12
  br label %66

54:                                               ; preds = %20, %20
  %55 = or i32 %12, 2048
  %56 = tail call i32 @mz_zip_reader_init_file_v2_rpb(ptr noundef nonnull %17, ptr noundef nonnull %0, i32 noundef %55, i64 noundef 0, i64 noundef 0)
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  store i32 -30, ptr %3, align 4, !tbaa !12
  br label %66

59:                                               ; preds = %54
  switch i8 %2, label %67 [
    i8 100, label %60
    i8 97, label %60
  ]

60:                                               ; preds = %59, %59
  %61 = tail call i32 @mz_zip_writer_init_from_reader_v2_noreopen(ptr noundef nonnull %17, ptr noundef nonnull %0, i32 noundef 0)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %60
  store i32 -32, ptr %3, align 4, !tbaa !12
  %64 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %17, i32 noundef 1)
  br label %66

65:                                               ; preds = %20
  store i32 -4, ptr %3, align 4, !tbaa !12
  br label %66

66:                                               ; preds = %65, %63, %58, %53, %48
  tail call void @free(ptr noundef nonnull %17) #38
  br label %67

67:                                               ; preds = %19, %15, %9, %45, %66, %49, %60, %59
  %68 = phi ptr [ %17, %59 ], [ %17, %60 ], [ %17, %49 ], [ %17, %45 ], [ null, %66 ], [ null, %9 ], [ null, %15 ], [ null, %19 ]
  ret ptr %68
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare dso_local noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #29

; Function Attrs: nounwind uwtable
define dso_local void @zip_close(ptr noundef %0) local_unnamed_addr #8 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %45, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %5 = load i32, ptr %4, align 4, !tbaa !188
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32 @mz_zip_writer_finalize_archive(ptr noundef nonnull %0)
  %9 = load i32, ptr %4, align 4, !tbaa !188
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi i32 [ %9, %7 ], [ %5, %3 ]
  %12 = and i32 %11, -2
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %39

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %16 = load ptr, ptr %15, align 8, !tbaa !184
  %17 = load i64, ptr %0, align 8, !tbaa !204
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %19 = load ptr, ptr %18, align 8, !tbaa !284
  %20 = icmp eq ptr %19, @mz_zip_heap_write_func
  br i1 %20, label %21, label %27

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %16, i64 0, i32 8
  %23 = load ptr, ptr %22, align 8, !tbaa !218
  %24 = icmp eq ptr %23, null
  %25 = icmp eq i32 %11, 3
  %26 = select i1 %24, i1 %25, i1 false
  br i1 %26, label %29, label %36

27:                                               ; preds = %14
  %28 = icmp eq i32 %11, 3
  br i1 %28, label %29, label %36

29:                                               ; preds = %21, %27
  %30 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %16, i64 0, i32 6
  %31 = load ptr, ptr %30, align 8, !tbaa !193
  %32 = icmp eq ptr %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = tail call i32 @fileno(ptr noundef nonnull %31) #38
  %35 = tail call i32 @ftruncate(i32 noundef %34, i64 noundef %17) #38
  br label %36

36:                                               ; preds = %21, %27, %29, %33
  %37 = tail call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %0, i32 noundef 1)
  %38 = load i32, ptr %4, align 4, !tbaa !188
  br label %39

39:                                               ; preds = %10, %36
  %40 = phi i32 [ %11, %10 ], [ %38, %36 ]
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %0, i32 noundef 1)
  br label %44

44:                                               ; preds = %42, %39
  tail call void @free(ptr noundef nonnull %0) #38
  br label %45

45:                                               ; preds = %44, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @zip_is64(ptr noundef readonly %0) local_unnamed_addr #28 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %5 = load ptr, ptr %4, align 8, !tbaa !305
  %6 = icmp eq ptr %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %5, i64 0, i32 4
  %9 = load i32, ptr %8, align 4, !tbaa !202
  br label %10

10:                                               ; preds = %1, %3, %7
  %11 = phi i32 [ %9, %7 ], [ -1, %3 ], [ -1, %1 ]
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_entry_open(ptr noundef %0, ptr noundef %1) local_unnamed_addr #8 {
  %3 = tail call fastcc i32 @_zip_entry_open(ptr noundef %0, ptr noundef %1, i32 noundef 0)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @_zip_entry_open(ptr noundef %0, ptr noundef readonly %1, i32 noundef %2) unnamed_addr #8 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.mz_zip_archive_file_stat, align 8
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca [28 x i8], align 16
  %9 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %5) #38
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %6) #38
  store i16 0, ptr %6, align 2, !tbaa !103
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %7) #38
  store i16 0, ptr %7, align 2, !tbaa !103
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %8) #38
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #38
  %10 = icmp eq ptr %0, null
  br i1 %10, label %214, label %11

11:                                               ; preds = %3
  %12 = load i64, ptr %0, align 8, !tbaa !306
  store i64 %12, ptr %9, align 8, !tbaa !46
  %13 = icmp eq ptr %1, null
  br i1 %13, label %214, label %14

14:                                               ; preds = %11
  %15 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #42
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %214, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !307
  %21 = icmp eq ptr %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void @free(ptr noundef nonnull %20) #38
  store ptr null, ptr %19, align 8, !tbaa !307
  br label %23

23:                                               ; preds = %22, %17
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %25 = load i32, ptr %24, align 4, !tbaa !188
  %26 = icmp eq i32 %25, 1
  %27 = add i64 %15, 1
  %28 = tail call noalias ptr @calloc(i64 noundef %27, i64 noundef 1) #43
  %29 = icmp eq ptr %28, null
  br i1 %26, label %30, label %96

30:                                               ; preds = %23
  br i1 %29, label %31, label %32

31:                                               ; preds = %30
  store ptr null, ptr %19, align 8, !tbaa !307
  br label %214

32:                                               ; preds = %30, %38
  %33 = phi ptr [ %40, %38 ], [ %28, %30 ]
  %34 = phi i64 [ %41, %38 ], [ 0, %30 ]
  %35 = phi ptr [ %39, %38 ], [ %1, %30 ]
  %36 = load i8, ptr %35, align 1, !tbaa !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds i8, ptr %35, i64 1
  %40 = getelementptr inbounds i8, ptr %33, i64 1
  store i8 %36, ptr %33, align 1, !tbaa !3
  %41 = add nuw i64 %34, 1
  %42 = icmp eq i64 %41, %15
  br i1 %42, label %43, label %32, !llvm.loop !308

43:                                               ; preds = %32, %38
  store ptr %28, ptr %19, align 8, !tbaa !307
  %44 = icmp eq i32 %2, 0
  %45 = select i1 %44, i32 0, i32 256
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #38
  %46 = call i32 @mz_zip_reader_locate_file_v2(ptr noundef nonnull %0, ptr noundef nonnull %28, ptr noundef null, i32 noundef %45, ptr noundef nonnull %4)
  %47 = icmp eq i32 %46, 0
  %48 = load i32, ptr %4, align 4
  %49 = select i1 %47, i32 -1, i32 %48
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #38
  %50 = sext i32 %49 to i64
  store i64 %50, ptr %18, align 8, !tbaa !304
  %51 = icmp slt i32 %49, 0
  br i1 %51, label %209, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %54 = load ptr, ptr %53, align 8, !tbaa !184
  %55 = icmp eq ptr %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %58 = load i32, ptr %57, align 8, !tbaa !207
  %59 = icmp ugt i32 %58, %49
  br i1 %59, label %60, label %69

60:                                               ; preds = %56
  %61 = load ptr, ptr %54, align 8, !tbaa !212
  %62 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %54, i64 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !213
  %64 = zext i32 %49 to i64
  %65 = getelementptr inbounds i32, ptr %63, i64 %64
  %66 = load i32, ptr %65, align 4, !tbaa !12
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, ptr %61, i64 %67
  br label %69

69:                                               ; preds = %52, %56, %60
  %70 = phi ptr [ %68, %60 ], [ null, %56 ], [ null, %52 ]
  %71 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %49, ptr noundef %70, ptr noundef nonnull %5, ptr noundef null)
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %209, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 7
  %75 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 2
  %76 = load <2 x i64>, ptr %74, align 8, !tbaa !46
  %77 = shufflevector <2 x i64> %76, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %77, ptr %75, align 8, !tbaa !46
  %78 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 6
  %79 = load i32, ptr %78, align 8, !tbaa !234
  %80 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 4
  store i32 %79, ptr %80, align 8, !tbaa !309
  %81 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 1
  %82 = load i64, ptr %81, align 8, !tbaa !267
  %83 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 5
  store i64 %82, ptr %83, align 8, !tbaa !310
  %84 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 11
  %85 = load i64, ptr %84, align 8, !tbaa !231
  %86 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 7
  store i64 %85, ptr %86, align 8, !tbaa !311
  %87 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 5
  %88 = load i16, ptr %87, align 2, !tbaa !263
  %89 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 8
  store i16 %88, ptr %89, align 8, !tbaa !312
  %90 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 10
  %91 = load i32, ptr %90, align 4, !tbaa !279
  %92 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 11
  store i32 %91, ptr %92, align 8, !tbaa !313
  %93 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %5, i64 0, i32 18
  %94 = load i64, ptr %93, align 8, !tbaa !258
  %95 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 12
  store i64 %94, ptr %95, align 8, !tbaa !314
  br label %214

96:                                               ; preds = %23
  br i1 %29, label %97, label %98

97:                                               ; preds = %96
  store ptr null, ptr %19, align 8, !tbaa !307
  br label %214

98:                                               ; preds = %96, %105
  %99 = phi ptr [ %107, %105 ], [ %28, %96 ]
  %100 = phi i64 [ %108, %105 ], [ 0, %96 ]
  %101 = phi ptr [ %102, %105 ], [ %1, %96 ]
  %102 = getelementptr inbounds i8, ptr %101, i64 1
  %103 = load i8, ptr %101, align 1, !tbaa !3
  switch i8 %103, label %105 [
    i8 0, label %110
    i8 92, label %104
  ]

104:                                              ; preds = %98
  br label %105

105:                                              ; preds = %104, %98
  %106 = phi i8 [ 47, %104 ], [ %103, %98 ]
  %107 = getelementptr inbounds i8, ptr %99, i64 1
  store i8 %106, ptr %99, align 1, !tbaa !3
  %108 = add nuw i64 %100, 1
  %109 = icmp eq i64 %108, %15
  br i1 %109, label %110, label %98, !llvm.loop !315

110:                                              ; preds = %98, %105
  store ptr %28, ptr %19, align 8, !tbaa !307
  %111 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 1
  %112 = load i32, ptr %111, align 8, !tbaa !301
  %113 = and i32 %112, 15
  %114 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %115 = load i32, ptr %114, align 8, !tbaa !316
  %116 = zext i32 %115 to i64
  store i64 %116, ptr %18, align 8, !tbaa !304
  %117 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %117, i8 0, i64 20, i1 false)
  %118 = load i64, ptr %0, align 8, !tbaa !306
  %119 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 5
  store i64 %118, ptr %119, align 8, !tbaa !310
  %120 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 7
  store i64 %118, ptr %120, align 8, !tbaa !311
  %121 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 6
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %121, i8 0, i64 30, i1 false)
  %122 = icmp eq i32 %113, 0
  %123 = select i1 %122, i16 0, i16 8
  %124 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 8
  store i16 %123, ptr %124, align 8, !tbaa !312
  %125 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 11
  store i32 0, ptr %125, align 8, !tbaa !313
  %126 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 6
  %127 = load i64, ptr %126, align 8, !tbaa !285
  %128 = icmp eq i64 %127, 0
  %129 = add i64 %127, -1
  %130 = and i64 %129, %118
  %131 = sub i64 %127, %130
  %132 = and i64 %131, %129
  %133 = trunc i64 %132 to i32
  %134 = select i1 %128, i32 0, i32 %133
  %135 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %136 = load ptr, ptr %135, align 8, !tbaa !184
  %137 = icmp ne ptr %136, null
  %138 = icmp eq i32 %25, 2
  %139 = select i1 %137, i1 %138, i1 false
  br i1 %139, label %140, label %209

140:                                              ; preds = %110
  %141 = and i32 %112, 1024
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %209

143:                                              ; preds = %140
  %144 = tail call fastcc i32 @mz_zip_writer_write_zeros(ptr noundef nonnull %0, i64 noundef %118, i32 noundef %134)
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %209, label %146

146:                                              ; preds = %143
  %147 = zext i32 %134 to i64
  %148 = add i64 %12, %147
  store i64 %148, ptr %9, align 8, !tbaa !46
  %149 = tail call i64 @time(ptr noundef null) #38
  %150 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 12
  store i64 %149, ptr %150, align 8, !tbaa !314
  call fastcc void @mz_zip_time_t_to_dos_time(i64 noundef %149, ptr noundef nonnull %6, ptr noundef nonnull %7)
  %151 = icmp ugt i64 %148, 4294967294
  %152 = select i1 %151, ptr %9, ptr null
  %153 = call fastcc i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef nonnull %8, ptr noundef null, ptr noundef null, ptr noundef %152)
  %154 = trunc i64 %15 to i16
  %155 = trunc i32 %153 to i16
  %156 = load i16, ptr %124, align 8, !tbaa !312
  %157 = load i16, ptr %6, align 2, !tbaa !103
  %158 = load i16, ptr %7, align 2, !tbaa !103
  call fastcc void @mz_zip_writer_create_local_dir_header(ptr noundef nonnull %121, i16 noundef zeroext %154, i16 noundef zeroext %155, i64 noundef 0, i64 noundef 0, i32 noundef 0, i16 noundef zeroext %156, i16 noundef zeroext 2056, i16 noundef zeroext %157, i16 noundef zeroext %158)
  %159 = load i64, ptr %119, align 8, !tbaa !310
  %160 = add i64 %159, %147
  store i64 %160, ptr %120, align 8, !tbaa !311
  %161 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %162 = load ptr, ptr %161, align 8, !tbaa !284
  %163 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %164 = load ptr, ptr %163, align 8, !tbaa !205
  %165 = call i64 %162(ptr noundef %164, i64 noundef %160, ptr noundef nonnull %121, i64 noundef 30) #38
  %166 = icmp eq i64 %165, 30
  br i1 %166, label %167, label %209

167:                                              ; preds = %146
  %168 = load i64, ptr %126, align 8, !tbaa !285
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %176, label %170

170:                                              ; preds = %167
  %171 = load i64, ptr %120, align 8, !tbaa !311
  %172 = add i64 %168, -1
  %173 = and i64 %171, %172
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %170
  call void @__assert_fail(ptr noundef nonnull @.str.102, ptr noundef nonnull @.str.103, i32 noundef 1217, ptr noundef nonnull @__PRETTY_FUNCTION__._zip_entry_open) #41
  unreachable

176:                                              ; preds = %170, %167
  %177 = add nuw nsw i64 %147, 30
  %178 = load i64, ptr %119, align 8, !tbaa !310
  %179 = add i64 %177, %178
  store i64 %179, ptr %119, align 8, !tbaa !310
  %180 = load ptr, ptr %161, align 8, !tbaa !284
  %181 = load ptr, ptr %163, align 8, !tbaa !205
  %182 = load ptr, ptr %19, align 8, !tbaa !307
  %183 = call i64 %180(ptr noundef %181, i64 noundef %179, ptr noundef %182, i64 noundef %15) #38
  %184 = icmp eq i64 %183, %15
  br i1 %184, label %185, label %209

185:                                              ; preds = %176
  %186 = load i64, ptr %119, align 8, !tbaa !310
  %187 = add i64 %186, %15
  store i64 %187, ptr %119, align 8, !tbaa !310
  %188 = load ptr, ptr %161, align 8, !tbaa !284
  %189 = load ptr, ptr %163, align 8, !tbaa !205
  %190 = zext i32 %153 to i64
  %191 = call i64 %188(ptr noundef %189, i64 noundef %187, ptr noundef nonnull %8, i64 noundef %190) #38
  %192 = icmp eq i64 %191, %190
  br i1 %192, label %193, label %209

193:                                              ; preds = %185
  %194 = load i64, ptr %119, align 8, !tbaa !310
  %195 = add i64 %194, %190
  store i64 %195, ptr %119, align 8, !tbaa !310
  br i1 %122, label %214, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 9
  store ptr %0, ptr %197, align 8, !tbaa !317
  %198 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 9, i32 1
  store i64 %195, ptr %198, align 8, !tbaa !318
  %199 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 9, i32 2
  store i64 0, ptr %199, align 8, !tbaa !319
  %200 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 10
  %201 = call i32 @llvm.smin.i32(i32 %113, i32 10)
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds [11 x i32], ptr @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %202
  %204 = load i32, ptr %203, align 4, !tbaa !12
  %205 = icmp ult i32 %113, 4
  %206 = select i1 %205, i32 16384, i32 0
  %207 = or i32 %204, %206
  %208 = call i32 @tdefl_init(ptr noundef nonnull %200, ptr noundef nonnull @mz_zip_writer_add_put_buf_callback, ptr noundef nonnull %197, i32 noundef %207)
  br label %214

209:                                              ; preds = %185, %176, %146, %143, %140, %110, %69, %43
  %210 = phi i32 [ -3, %43 ], [ -3, %69 ], [ -4, %110 ], [ -5, %140 ], [ -7, %143 ], [ -7, %146 ], [ -8, %176 ], [ -8, %185 ]
  %211 = load ptr, ptr %19, align 8, !tbaa !307
  %212 = icmp eq ptr %211, null
  br i1 %212, label %214, label %213

213:                                              ; preds = %209
  call void @free(ptr noundef nonnull %211) #38
  store ptr null, ptr %19, align 8, !tbaa !307
  br label %214

214:                                              ; preds = %97, %31, %209, %213, %193, %196, %14, %11, %3, %73
  %215 = phi i32 [ 0, %73 ], [ -1, %3 ], [ -2, %11 ], [ -2, %14 ], [ 0, %196 ], [ 0, %193 ], [ %210, %213 ], [ %210, %209 ], [ -2, %31 ], [ -2, %97 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #38
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %8) #38
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %6) #38
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %5) #38
  ret i32 %215
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_entry_opencasesensitive(ptr noundef %0, ptr noundef %1) local_unnamed_addr #8 {
  %3 = tail call fastcc i32 @_zip_entry_open(ptr noundef %0, ptr noundef %1, i32 noundef 1)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_entry_openbyindex(ptr noundef %0, i64 noundef %1) local_unnamed_addr #8 {
  %3 = alloca %struct.mz_zip_archive_file_stat, align 8
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %3) #38
  %4 = icmp eq ptr %0, null
  br i1 %4, label %102, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %7 = load i32, ptr %6, align 4, !tbaa !188
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %102

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !207
  %12 = zext i32 %11 to i64
  %13 = icmp ugt i64 %12, %1
  br i1 %13, label %14, label %102

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %16 = load ptr, ptr %15, align 8, !tbaa !184
  %17 = load ptr, ptr %16, align 8, !tbaa !212
  %18 = icmp eq ptr %17, null
  br i1 %18, label %102, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %16, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !213
  %22 = getelementptr inbounds i32, ptr %21, i64 %1
  %23 = load i32, ptr %22, align 4, !tbaa !12
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, ptr %17, i64 %24
  %26 = getelementptr inbounds i8, ptr %25, i64 28
  %27 = load i8, ptr %26, align 1, !tbaa !3
  %28 = zext i8 %27 to i64
  %29 = getelementptr inbounds i8, ptr %26, i64 1
  %30 = load i8, ptr %29, align 1, !tbaa !3
  %31 = zext i8 %30 to i64
  %32 = shl nuw nsw i64 %31, 8
  %33 = or i64 %32, %28
  %34 = getelementptr inbounds i8, ptr %25, i64 46
  %35 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2
  %36 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !307
  %38 = icmp eq ptr %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %19
  tail call void @free(ptr noundef nonnull %37) #38
  store ptr null, ptr %36, align 8, !tbaa !307
  br label %40

40:                                               ; preds = %39, %19
  %41 = add nuw nsw i64 %33, 1
  %42 = tail call noalias ptr @calloc(i64 noundef %41, i64 noundef 1) #43
  %43 = icmp ne ptr %42, null
  %44 = icmp ne i64 %33, 0
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %57

46:                                               ; preds = %40, %52
  %47 = phi ptr [ %54, %52 ], [ %42, %40 ]
  %48 = phi i64 [ %55, %52 ], [ 0, %40 ]
  %49 = phi ptr [ %53, %52 ], [ %34, %40 ]
  %50 = load i8, ptr %49, align 1, !tbaa !3
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds i8, ptr %49, i64 1
  %54 = getelementptr inbounds i8, ptr %47, i64 1
  store i8 %50, ptr %47, align 1, !tbaa !3
  %55 = add nuw nsw i64 %48, 1
  %56 = icmp eq i64 %55, %33
  br i1 %56, label %57, label %46, !llvm.loop !308

57:                                               ; preds = %46, %52, %40
  store ptr %42, ptr %36, align 8, !tbaa !307
  %58 = icmp eq ptr %42, null
  br i1 %58, label %102, label %59

59:                                               ; preds = %57
  %60 = trunc i64 %1 to i32
  %61 = load ptr, ptr %15, align 8, !tbaa !184
  %62 = icmp eq ptr %61, null
  br i1 %62, label %75, label %63

63:                                               ; preds = %59
  %64 = load i32, ptr %10, align 8, !tbaa !207
  %65 = icmp ugt i32 %64, %60
  br i1 %65, label %66, label %75

66:                                               ; preds = %63
  %67 = load ptr, ptr %61, align 8, !tbaa !212
  %68 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %61, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !213
  %70 = and i64 %1, 4294967295
  %71 = getelementptr inbounds i32, ptr %69, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !12
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %67, i64 %73
  br label %75

75:                                               ; preds = %59, %63, %66
  %76 = phi ptr [ %74, %66 ], [ null, %63 ], [ null, %59 ]
  %77 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %60, ptr noundef %76, ptr noundef nonnull %3, ptr noundef null)
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %102, label %79

79:                                               ; preds = %75
  store i64 %1, ptr %35, align 8, !tbaa !304
  %80 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 7
  %81 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 2
  %82 = load <2 x i64>, ptr %80, align 8, !tbaa !46
  %83 = shufflevector <2 x i64> %82, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %83, ptr %81, align 8, !tbaa !46
  %84 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 6
  %85 = load i32, ptr %84, align 8, !tbaa !234
  %86 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 4
  store i32 %85, ptr %86, align 8, !tbaa !309
  %87 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 1
  %88 = load i64, ptr %87, align 8, !tbaa !267
  %89 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 5
  store i64 %88, ptr %89, align 8, !tbaa !310
  %90 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 11
  %91 = load i64, ptr %90, align 8, !tbaa !231
  %92 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 7
  store i64 %91, ptr %92, align 8, !tbaa !311
  %93 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 5
  %94 = load i16, ptr %93, align 2, !tbaa !263
  %95 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 8
  store i16 %94, ptr %95, align 8, !tbaa !312
  %96 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 10
  %97 = load i32, ptr %96, align 4, !tbaa !279
  %98 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 11
  store i32 %97, ptr %98, align 8, !tbaa !313
  %99 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 18
  %100 = load i64, ptr %99, align 8, !tbaa !258
  %101 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 12
  store i64 %100, ptr %101, align 8, !tbaa !314
  br label %102

102:                                              ; preds = %75, %57, %14, %9, %5, %2, %79
  %103 = phi i32 [ 0, %79 ], [ -1, %2 ], [ -4, %5 ], [ -10, %9 ], [ -11, %14 ], [ -2, %57 ], [ -3, %75 ]
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %3) #38
  ret i32 %103
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_entry_close(ptr noundef %0) local_unnamed_addr #8 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca [28 x i8], align 16
  %5 = alloca [24 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %4) #38
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #38
  %6 = icmp eq ptr %0, null
  br i1 %6, label %189, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %9 = load i32, ptr %8, align 4, !tbaa !188
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %181, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !301
  %14 = and i32 %13, 15
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store i64 0, ptr %3, align 8, !tbaa !46
  %18 = load ptr, ptr %17, align 8, !tbaa !39
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @__assert_fail(ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12, i32 noundef 3866, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_buffer) #41
  unreachable

21:                                               ; preds = %16
  %22 = call i32 @tdefl_compress(ptr noundef nonnull %17, ptr noundef nonnull @.str.1, ptr noundef nonnull %3, ptr noundef null, ptr noundef null, i32 noundef 4)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %23 = icmp ugt i32 %22, 1
  br i1 %23, label %181, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 9, i32 2
  %26 = load i64, ptr %25, align 8, !tbaa !319
  %27 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 3
  store i64 %26, ptr %27, align 8, !tbaa !320
  %28 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 9, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !318
  %30 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 5
  store i64 %29, ptr %30, align 8, !tbaa !310
  %31 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 8
  store i16 8, ptr %31, align 8, !tbaa !312
  br label %32

32:                                               ; preds = %24, %11
  %33 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !307
  %35 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %34) #42
  %36 = trunc i64 %35 to i16
  %37 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 12
  %38 = load i64, ptr %37, align 8, !tbaa !314
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  store i64 %38, ptr %2, align 8, !tbaa !46
  %39 = call ptr @localtime(ptr noundef nonnull %2) #38
  %40 = getelementptr inbounds %struct.tm, ptr %39, i64 0, i32 2
  %41 = load i32, ptr %40, align 8, !tbaa !275
  %42 = shl i32 %41, 11
  %43 = getelementptr inbounds %struct.tm, ptr %39, i64 0, i32 1
  %44 = load i32, ptr %43, align 4, !tbaa !276
  %45 = shl i32 %44, 5
  %46 = add nsw i32 %45, %42
  %47 = load i32, ptr %39, align 8, !tbaa !277
  %48 = lshr i32 %47, 1
  %49 = add i32 %46, %48
  %50 = trunc i32 %49 to i16
  %51 = getelementptr inbounds %struct.tm, ptr %39, i64 0, i32 5
  %52 = load i32, ptr %51, align 4, !tbaa !272
  %53 = shl i32 %52, 9
  %54 = getelementptr inbounds %struct.tm, ptr %39, i64 0, i32 4
  %55 = load i32, ptr %54, align 8, !tbaa !273
  %56 = shl i32 %55, 5
  %57 = getelementptr inbounds %struct.tm, ptr %39, i64 0, i32 3
  %58 = load i32, ptr %57, align 4, !tbaa !274
  %59 = add i32 %53, 24608
  %60 = add i32 %59, %56
  %61 = add i32 %60, %58
  %62 = trunc i32 %61 to i16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  store <4 x i8> <i8 80, i8 75, i8 7, i8 8>, ptr %5, align 16, !tbaa !3
  %63 = getelementptr inbounds i8, ptr %5, i64 4
  %64 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 4
  %65 = load i32, ptr %64, align 8, !tbaa !309
  %66 = trunc i32 %65 to i8
  store i8 %66, ptr %63, align 4, !tbaa !3
  %67 = lshr i32 %65, 8
  %68 = trunc i32 %67 to i8
  %69 = getelementptr inbounds i8, ptr %5, i64 5
  store i8 %68, ptr %69, align 1, !tbaa !3
  %70 = lshr i32 %65, 16
  %71 = trunc i32 %70 to i8
  %72 = getelementptr inbounds i8, ptr %5, i64 6
  store i8 %71, ptr %72, align 2, !tbaa !3
  %73 = lshr i32 %65, 24
  %74 = trunc i32 %73 to i8
  %75 = getelementptr inbounds i8, ptr %5, i64 7
  store i8 %74, ptr %75, align 1, !tbaa !3
  %76 = getelementptr inbounds i8, ptr %5, i64 8
  %77 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 3
  %78 = load i64, ptr %77, align 8, !tbaa !320
  %79 = trunc i64 %78 to i8
  store i8 %79, ptr %76, align 8, !tbaa !3
  %80 = lshr i64 %78, 8
  %81 = trunc i64 %80 to i8
  %82 = getelementptr inbounds i8, ptr %5, i64 9
  store i8 %81, ptr %82, align 1, !tbaa !3
  %83 = lshr i64 %78, 16
  %84 = trunc i64 %83 to i8
  %85 = getelementptr inbounds i8, ptr %5, i64 10
  store i8 %84, ptr %85, align 2, !tbaa !3
  %86 = lshr i64 %78, 24
  %87 = trunc i64 %86 to i8
  %88 = getelementptr inbounds i8, ptr %5, i64 11
  store i8 %87, ptr %88, align 1, !tbaa !3
  %89 = getelementptr inbounds i8, ptr %5, i64 12
  %90 = lshr i64 %78, 32
  %91 = trunc i64 %90 to i8
  store i8 %91, ptr %89, align 4, !tbaa !3
  %92 = lshr i64 %78, 40
  %93 = trunc i64 %92 to i8
  %94 = getelementptr inbounds i8, ptr %5, i64 13
  store i8 %93, ptr %94, align 1, !tbaa !3
  %95 = lshr i64 %78, 48
  %96 = trunc i64 %95 to i8
  %97 = getelementptr inbounds i8, ptr %5, i64 14
  store i8 %96, ptr %97, align 2, !tbaa !3
  %98 = lshr i64 %78, 56
  %99 = trunc i64 %98 to i8
  %100 = getelementptr inbounds i8, ptr %5, i64 15
  store i8 %99, ptr %100, align 1, !tbaa !3
  %101 = getelementptr inbounds i8, ptr %5, i64 16
  %102 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 2
  %103 = load i64, ptr %102, align 8, !tbaa !321
  %104 = trunc i64 %103 to i8
  store i8 %104, ptr %101, align 16, !tbaa !3
  %105 = lshr i64 %103, 8
  %106 = trunc i64 %105 to i8
  %107 = getelementptr inbounds i8, ptr %5, i64 17
  store i8 %106, ptr %107, align 1, !tbaa !3
  %108 = lshr i64 %103, 16
  %109 = trunc i64 %108 to i8
  %110 = getelementptr inbounds i8, ptr %5, i64 18
  store i8 %109, ptr %110, align 2, !tbaa !3
  %111 = lshr i64 %103, 24
  %112 = trunc i64 %111 to i8
  %113 = getelementptr inbounds i8, ptr %5, i64 19
  store i8 %112, ptr %113, align 1, !tbaa !3
  %114 = getelementptr inbounds i8, ptr %5, i64 20
  %115 = lshr i64 %103, 32
  %116 = trunc i64 %115 to i8
  store i8 %116, ptr %114, align 4, !tbaa !3
  %117 = lshr i64 %103, 40
  %118 = trunc i64 %117 to i8
  %119 = getelementptr inbounds i8, ptr %5, i64 21
  store i8 %118, ptr %119, align 1, !tbaa !3
  %120 = lshr i64 %103, 48
  %121 = trunc i64 %120 to i8
  %122 = getelementptr inbounds i8, ptr %5, i64 22
  store i8 %121, ptr %122, align 2, !tbaa !3
  %123 = lshr i64 %103, 56
  %124 = trunc i64 %123 to i8
  %125 = getelementptr inbounds i8, ptr %5, i64 23
  store i8 %124, ptr %125, align 1, !tbaa !3
  %126 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %127 = load ptr, ptr %126, align 8, !tbaa !284
  %128 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %129 = load ptr, ptr %128, align 8, !tbaa !205
  %130 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 5
  %131 = load i64, ptr %130, align 8, !tbaa !310
  %132 = call i64 %127(ptr noundef %129, i64 noundef %131, ptr noundef nonnull %5, i64 noundef 24) #38
  %133 = icmp eq i64 %132, 24
  br i1 %133, label %134, label %181

134:                                              ; preds = %32
  %135 = load i64, ptr %130, align 8, !tbaa !310
  %136 = add i64 %135, 24
  store i64 %136, ptr %130, align 8, !tbaa !310
  %137 = load i64, ptr %102, align 8, !tbaa !321
  %138 = icmp ugt i64 %137, 4294967294
  %139 = select i1 %138, ptr %102, ptr null
  %140 = load i64, ptr %77, align 8, !tbaa !320
  %141 = icmp ugt i64 %140, 4294967294
  %142 = select i1 %141, ptr %77, ptr null
  %143 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 7
  %144 = load i64, ptr %143, align 8, !tbaa !311
  %145 = icmp ugt i64 %144, 4294967294
  %146 = select i1 %145, ptr %143, ptr null
  %147 = call fastcc i32 @mz_zip_writer_create_zip64_extra_data(ptr noundef nonnull %4, ptr noundef %139, ptr noundef %142, ptr noundef %146)
  %148 = trunc i64 %35 to i32
  %149 = and i32 %148, 65535
  %150 = icmp eq i32 %149, 0
  %151 = load ptr, ptr %33, align 8, !tbaa !307
  br i1 %150, label %164, label %152

152:                                              ; preds = %134
  %153 = add nsw i32 %149, -1
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i8, ptr %151, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !3
  switch i8 %156, label %164 [
    i8 47, label %157
    i8 92, label %157
  ]

157:                                              ; preds = %152, %152
  %158 = load i64, ptr %102, align 8, !tbaa !321
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %157
  %161 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 11
  %162 = load i32, ptr %161, align 8, !tbaa !313
  %163 = or i32 %162, 16
  store i32 %163, ptr %161, align 8, !tbaa !313
  br label %164

164:                                              ; preds = %134, %152, %160, %157
  %165 = trunc i32 %147 to i16
  %166 = load i64, ptr %102, align 8, !tbaa !321
  %167 = load i64, ptr %77, align 8, !tbaa !320
  %168 = load i32, ptr %64, align 8, !tbaa !309
  %169 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 8
  %170 = load i16, ptr %169, align 8, !tbaa !312
  %171 = load i64, ptr %143, align 8, !tbaa !311
  %172 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 11
  %173 = load i32, ptr %172, align 8, !tbaa !313
  %174 = call fastcc i32 @mz_zip_writer_add_to_central_dir(ptr noundef nonnull %0, ptr noundef %151, i16 noundef zeroext %36, ptr noundef nonnull %4, i16 noundef zeroext %165, ptr noundef nonnull @.str.1, i16 noundef zeroext 0, i64 noundef %166, i64 noundef %167, i32 noundef %168, i16 noundef zeroext %170, i16 noundef zeroext 2056, i16 noundef zeroext %50, i16 noundef zeroext %62, i64 noundef %171, i32 noundef %173, ptr noundef null, i32 noundef 0)
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %181, label %176

176:                                              ; preds = %164
  %177 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %178 = load i32, ptr %177, align 8, !tbaa !207
  %179 = add i32 %178, 1
  store i32 %179, ptr %177, align 8, !tbaa !207
  %180 = load i64, ptr %130, align 8, !tbaa !310
  store i64 %180, ptr %0, align 8, !tbaa !204
  br label %181

181:                                              ; preds = %164, %32, %21, %7, %176
  %182 = phi i32 [ -15, %164 ], [ -14, %32 ], [ -12, %21 ], [ 0, %176 ], [ 0, %7 ]
  %183 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2
  %184 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 12
  store i64 0, ptr %184, align 8, !tbaa !314
  store i64 -1, ptr %183, align 8, !tbaa !304
  %185 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 1
  %186 = load ptr, ptr %185, align 8, !tbaa !307
  %187 = icmp eq ptr %186, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %181
  call void @free(ptr noundef nonnull %186) #38
  store ptr null, ptr %185, align 8, !tbaa !307
  br label %189

189:                                              ; preds = %1, %181, %188
  %190 = phi i32 [ %182, %181 ], [ %182, %188 ], [ -1, %1 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #38
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %4) #38
  ret i32 %190
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local ptr @zip_entry_name(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !307
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi ptr [ %5, %3 ], [ null, %1 ]
  ret ptr %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @zip_entry_index(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2
  %5 = load i64, ptr %4, align 8, !tbaa !304
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i64 [ %5, %3 ], [ -1, %1 ]
  ret i64 %7
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @zip_entry_isdir(ptr noundef readonly %0) local_unnamed_addr #30 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %19, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2
  %5 = load i64, ptr %4, align 8, !tbaa !304
  %6 = icmp slt i64 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !307
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %9) #42
  %11 = and i64 %10, 65535
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds i8, ptr %9, i64 %12
  %14 = load i8, ptr %13, align 1, !tbaa !3
  %15 = icmp eq i8 %14, 47
  %16 = icmp eq i8 %14, 92
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i32
  br label %19

19:                                               ; preds = %3, %1, %7
  %20 = phi i32 [ %18, %7 ], [ -1, %1 ], [ -10, %3 ]
  ret i32 %20
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @zip_entry_size(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 2
  %5 = load i64, ptr %4, align 8, !tbaa !321
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i64 [ %5, %3 ], [ 0, %1 ]
  ret i64 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @zip_entry_uncomp_size(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 2
  %5 = load i64, ptr %4, align 8, !tbaa !321
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i64 [ %5, %3 ], [ 0, %1 ]
  ret i64 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @zip_entry_comp_size(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 3
  %5 = load i64, ptr %4, align 8, !tbaa !320
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i64 [ %5, %3 ], [ 0, %1 ]
  ret i64 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i32 @zip_entry_crc32(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !309
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @zip_entry_dir_offset(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 5
  %5 = load i64, ptr %4, align 8, !tbaa !310
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i64 [ %5, %3 ], [ 0, %1 ]
  ret i64 %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @zip_entry_header_offset(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 7
  %5 = load i64, ptr %4, align 8, !tbaa !311
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i64 [ %5, %3 ], [ 0, %1 ]
  ret i64 %7
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_entry_write(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #8 {
  %4 = alloca i64, align 8
  %5 = icmp eq ptr %0, null
  br i1 %5, label %140, label %6

6:                                                ; preds = %3
  %7 = icmp ne ptr %1, null
  %8 = icmp ne i64 %2, 0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %139

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !321
  %13 = add i64 %12, %2
  store i64 %13, ptr %11, align 8, !tbaa !321
  %14 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 4
  %15 = load i32, ptr %14, align 8, !tbaa !309
  %16 = xor i32 %15, -1
  %17 = icmp ugt i64 %2, 3
  br i1 %17, label %43, label %20

18:                                               ; preds = %43
  %19 = icmp eq i64 %83, 0
  br i1 %19, label %109, label %20

20:                                               ; preds = %10, %18
  %21 = phi ptr [ %1, %10 ], [ %82, %18 ]
  %22 = phi i32 [ %16, %10 ], [ %81, %18 ]
  %23 = phi i64 [ %2, %10 ], [ %83, %18 ]
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %20
  %27 = lshr i32 %22, 8
  %28 = load i8, ptr %21, align 1, !tbaa !3
  %29 = trunc i32 %22 to i8
  %30 = xor i8 %28, %29
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %31
  %33 = load i32, ptr %32, align 4, !tbaa !12
  %34 = xor i32 %33, %27
  %35 = getelementptr inbounds i8, ptr %21, i64 1
  %36 = add i64 %23, -1
  br label %37

37:                                               ; preds = %26, %20
  %38 = phi i32 [ undef, %20 ], [ %34, %26 ]
  %39 = phi ptr [ %21, %20 ], [ %35, %26 ]
  %40 = phi i32 [ %22, %20 ], [ %34, %26 ]
  %41 = phi i64 [ %23, %20 ], [ %36, %26 ]
  %42 = icmp eq i64 %23, 1
  br i1 %42, label %109, label %85

43:                                               ; preds = %10, %43
  %44 = phi ptr [ %82, %43 ], [ %1, %10 ]
  %45 = phi i32 [ %81, %43 ], [ %16, %10 ]
  %46 = phi i64 [ %83, %43 ], [ %2, %10 ]
  %47 = lshr i32 %45, 8
  %48 = load i8, ptr %44, align 1, !tbaa !3
  %49 = trunc i32 %45 to i8
  %50 = xor i8 %48, %49
  %51 = zext i8 %50 to i64
  %52 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %51
  %53 = load i32, ptr %52, align 4, !tbaa !12
  %54 = xor i32 %53, %47
  %55 = lshr i32 %54, 8
  %56 = getelementptr inbounds i8, ptr %44, i64 1
  %57 = load i8, ptr %56, align 1, !tbaa !3
  %58 = trunc i32 %54 to i8
  %59 = xor i8 %57, %58
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %60
  %62 = load i32, ptr %61, align 4, !tbaa !12
  %63 = xor i32 %55, %62
  %64 = lshr i32 %63, 8
  %65 = getelementptr inbounds i8, ptr %44, i64 2
  %66 = load i8, ptr %65, align 1, !tbaa !3
  %67 = trunc i32 %63 to i8
  %68 = xor i8 %66, %67
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %69
  %71 = load i32, ptr %70, align 4, !tbaa !12
  %72 = xor i32 %64, %71
  %73 = lshr i32 %72, 8
  %74 = getelementptr inbounds i8, ptr %44, i64 3
  %75 = load i8, ptr %74, align 1, !tbaa !3
  %76 = trunc i32 %72 to i8
  %77 = xor i8 %75, %76
  %78 = zext i8 %77 to i64
  %79 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %78
  %80 = load i32, ptr %79, align 4, !tbaa !12
  %81 = xor i32 %73, %80
  %82 = getelementptr inbounds i8, ptr %44, i64 4
  %83 = add i64 %46, -4
  %84 = icmp ugt i64 %83, 3
  br i1 %84, label %43, label %18, !llvm.loop !14

85:                                               ; preds = %37, %85
  %86 = phi ptr [ %106, %85 ], [ %39, %37 ]
  %87 = phi i32 [ %105, %85 ], [ %40, %37 ]
  %88 = phi i64 [ %107, %85 ], [ %41, %37 ]
  %89 = lshr i32 %87, 8
  %90 = load i8, ptr %86, align 1, !tbaa !3
  %91 = trunc i32 %87 to i8
  %92 = xor i8 %90, %91
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %93
  %95 = load i32, ptr %94, align 4, !tbaa !12
  %96 = xor i32 %95, %89
  %97 = getelementptr inbounds i8, ptr %86, i64 1
  %98 = lshr i32 %96, 8
  %99 = load i8, ptr %97, align 1, !tbaa !3
  %100 = trunc i32 %96 to i8
  %101 = xor i8 %99, %100
  %102 = zext i8 %101 to i64
  %103 = getelementptr inbounds [256 x i32], ptr @mz_crc32.s_crc_table, i64 0, i64 %102
  %104 = load i32, ptr %103, align 4, !tbaa !12
  %105 = xor i32 %104, %98
  %106 = getelementptr inbounds i8, ptr %86, i64 2
  %107 = add i64 %88, -2
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %85, !llvm.loop !15

109:                                              ; preds = %37, %85, %18
  %110 = phi i32 [ %81, %18 ], [ %38, %37 ], [ %105, %85 ]
  %111 = xor i32 %110, -1
  store i32 %111, ptr %14, align 8, !tbaa !309
  %112 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 1
  %113 = load i32, ptr %112, align 8, !tbaa !301
  %114 = and i32 %113, 15
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %131

116:                                              ; preds = %109
  %117 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %118 = load ptr, ptr %117, align 8, !tbaa !284
  %119 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 14
  %120 = load ptr, ptr %119, align 8, !tbaa !205
  %121 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 5
  %122 = load i64, ptr %121, align 8, !tbaa !310
  %123 = tail call i64 %118(ptr noundef %120, i64 noundef %122, ptr noundef nonnull %1, i64 noundef %2) #38
  %124 = icmp eq i64 %123, %2
  br i1 %124, label %125, label %140

125:                                              ; preds = %116
  %126 = load i64, ptr %121, align 8, !tbaa !310
  %127 = add i64 %126, %2
  store i64 %127, ptr %121, align 8, !tbaa !310
  %128 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 3
  %129 = load i64, ptr %128, align 8, !tbaa !320
  %130 = add i64 %129, %2
  store i64 %130, ptr %128, align 8, !tbaa !320
  br label %139

131:                                              ; preds = %109
  %132 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store i64 %2, ptr %4, align 8, !tbaa !46
  %133 = load ptr, ptr %132, align 8, !tbaa !39
  %134 = icmp eq ptr %133, null
  br i1 %134, label %135, label %136

135:                                              ; preds = %131
  tail call void @__assert_fail(ptr noundef nonnull @.str.11, ptr noundef nonnull @.str.12, i32 noundef 3866, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_buffer) #41
  unreachable

136:                                              ; preds = %131
  %137 = call i32 @tdefl_compress(ptr noundef nonnull %132, ptr noundef nonnull %1, ptr noundef nonnull %4, ptr noundef null, ptr noundef null, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %138 = icmp ugt i32 %137, 1
  br i1 %138, label %140, label %139

139:                                              ; preds = %125, %136, %6
  br label %140

140:                                              ; preds = %136, %116, %3, %139
  %141 = phi i32 [ 0, %139 ], [ -1, %3 ], [ -8, %116 ], [ -12, %136 ]
  ret i32 %141
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_entry_fwrite(ptr noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #8 {
  %3 = alloca [65536 x i8], align 16
  %4 = alloca %struct.stat, align 8
  call void @llvm.lifetime.start.p0(i64 65536, ptr nonnull %3) #38
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %4) #38
  %5 = icmp eq ptr %0, null
  br i1 %5, label %59, label %6

6:                                                ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(65536) %3, i8 0, i64 65536, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(144) %4, i8 0, i64 144, i1 false)
  %7 = call i32 @stat(ptr noundef %1, ptr noundef nonnull %4) #38
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %59

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.stat, ptr %4, i64 0, i32 3
  %11 = load i32, ptr %10, align 8, !tbaa !322
  %12 = trunc i32 %11 to i16
  %13 = and i16 %12, 4095
  %14 = and i32 %11, 61440
  %15 = icmp eq i32 %14, 16384
  %16 = or i16 %13, 16384
  %17 = select i1 %15, i16 %16, i16 %13
  %18 = icmp eq i32 %14, 32768
  %19 = or i16 %17, -32768
  %20 = select i1 %18, i16 %19, i16 %17
  %21 = icmp eq i32 %14, 40960
  %22 = or i16 %20, -24576
  %23 = select i1 %21, i16 %22, i16 %20
  %24 = icmp eq i32 %14, 24576
  %25 = or i16 %23, 24576
  %26 = select i1 %24, i16 %25, i16 %23
  %27 = icmp eq i32 %14, 8192
  %28 = or i16 %26, 8192
  %29 = select i1 %27, i16 %28, i16 %26
  %30 = icmp eq i32 %14, 4096
  %31 = or i16 %29, 4096
  %32 = select i1 %30, i16 %31, i16 %29
  %33 = icmp eq i32 %14, 49152
  %34 = or i16 %32, -16384
  %35 = select i1 %33, i16 %34, i16 %32
  %36 = zext i16 %35 to i32
  %37 = shl nuw i32 %36, 16
  %38 = lshr i32 %11, 7
  %39 = and i32 %38, 1
  %40 = or i32 %37, %39
  %41 = xor i32 %40, 1
  %42 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 11
  %43 = or i32 %41, 16
  %44 = select i1 %15, i32 %43, i32 %41
  store i32 %44, ptr %42, align 8, !tbaa !313
  %45 = getelementptr inbounds %struct.stat, ptr %4, i64 0, i32 12
  %46 = load i64, ptr %45, align 8, !tbaa !295
  %47 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 12
  store i64 %46, ptr %47, align 8, !tbaa !314
  %48 = tail call noalias ptr @fopen(ptr noundef %1, ptr noundef nonnull @.str.18)
  %49 = icmp eq ptr %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %9, %53
  %51 = call i64 @fread(ptr noundef nonnull %3, i64 noundef 1, i64 noundef 65536, ptr noundef nonnull %48)
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = call i32 @zip_entry_write(ptr noundef nonnull %0, ptr noundef nonnull %3, i64 noundef %51)
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %56, label %50, !llvm.loop !323

56:                                               ; preds = %53, %50
  %57 = phi i32 [ 0, %50 ], [ -8, %53 ]
  %58 = call i32 @fclose(ptr noundef nonnull %48)
  br label %59

59:                                               ; preds = %9, %6, %2, %56
  %60 = phi i32 [ %57, %56 ], [ -1, %2 ], [ -3, %6 ], [ -16, %9 ]
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %4) #38
  call void @llvm.lifetime.end.p0(i64 65536, ptr nonnull %3) #38
  ret i32 %60
}

; Function Attrs: nofree nounwind
declare dso_local noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: nounwind uwtable
define dso_local i64 @zip_entry_read(ptr noundef %0, ptr nocapture noundef writeonly %1, ptr noundef writeonly %2) local_unnamed_addr #8 {
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #38
  store i64 0, ptr %4, align 8, !tbaa !46
  %5 = icmp eq ptr %0, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %8 = load i32, ptr %7, align 4, !tbaa !188
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %64

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !304
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %64, label %14

14:                                               ; preds = %10
  %15 = trunc i64 %12 to i32
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %17 = load ptr, ptr %16, align 8, !tbaa !184
  %18 = icmp eq ptr %17, null
  br i1 %18, label %33, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %21 = load i32, ptr %20, align 8, !tbaa !207
  %22 = icmp ugt i32 %21, %15
  br i1 %22, label %23, label %33

23:                                               ; preds = %19
  %24 = load ptr, ptr %17, align 8, !tbaa !212
  %25 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %17, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !213
  %27 = and i64 %12, 4294967295
  %28 = getelementptr inbounds i32, ptr %26, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !12
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %24, i64 %30
  %32 = icmp eq ptr %24, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %14, %19, %23
  %34 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %34, align 4, !tbaa !189
  br label %57

35:                                               ; preds = %23
  %36 = getelementptr inbounds i8, ptr %31, i64 28
  %37 = load i8, ptr %36, align 1, !tbaa !3
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds i8, ptr %31, i64 29
  %40 = load i8, ptr %39, align 1, !tbaa !3
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 8
  %43 = or i32 %42, %38
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds i8, ptr %31, i64 46
  %47 = zext i32 %43 to i64
  %48 = getelementptr inbounds i8, ptr %46, i64 %47
  %49 = getelementptr inbounds i8, ptr %48, i64 -1
  %50 = load i8, ptr %49, align 1, !tbaa !3
  %51 = icmp eq i8 %50, 47
  br i1 %51, label %64, label %52

52:                                               ; preds = %35, %45
  %53 = getelementptr inbounds i8, ptr %31, i64 38
  %54 = load i8, ptr %53, align 1, !tbaa !3
  %55 = and i8 %54, 16
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %33, %52
  %58 = call ptr @mz_zip_reader_extract_to_heap(ptr noundef nonnull %0, i32 noundef %15, ptr noundef nonnull %4, i32 noundef 0)
  store ptr %58, ptr %1, align 8, !tbaa !72
  %59 = icmp ne ptr %58, null
  %60 = icmp ne ptr %2, null
  %61 = and i1 %60, %59
  %62 = load i64, ptr %4, align 8, !tbaa !46
  br i1 %61, label %63, label %64

63:                                               ; preds = %57
  store i64 %62, ptr %2, align 8, !tbaa !46
  br label %64

64:                                               ; preds = %57, %63, %45, %52, %6, %10, %3
  %65 = phi i64 [ -1, %3 ], [ -3, %10 ], [ -3, %6 ], [ -17, %52 ], [ -17, %45 ], [ %62, %63 ], [ %62, %57 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #38
  ret i64 %65
}

; Function Attrs: nounwind uwtable
define dso_local i64 @zip_entry_noallocread(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #8 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %7 = load i32, ptr %6, align 4, !tbaa !188
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %20

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2
  %11 = load i64, ptr %10, align 8, !tbaa !304
  %12 = icmp slt i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = trunc i64 %11 to i32
  %15 = tail call fastcc i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef nonnull %0, i32 noundef %14, ptr noundef %1, i64 noundef %2, i32 noundef 0, ptr noundef null, i64 noundef 0, ptr noundef null)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 2
  %19 = load i64, ptr %18, align 8, !tbaa !321
  br label %20

20:                                               ; preds = %13, %5, %9, %3, %17
  %21 = phi i64 [ %19, %17 ], [ -1, %3 ], [ -3, %9 ], [ -3, %5 ], [ -18, %13 ]
  ret i64 %21
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_entry_fread(ptr noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #8 {
  %3 = alloca %struct.mz_zip_archive_file_stat, align 8
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %3) #38
  %4 = icmp eq ptr %0, null
  br i1 %4, label %88, label %5

5:                                                ; preds = %2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1112) %3, i8 0, i64 1112, i1 false)
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %7 = load i32, ptr %6, align 4, !tbaa !188
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %88

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2
  %11 = load i64, ptr %10, align 8, !tbaa !304
  %12 = icmp slt i64 %11, 0
  br i1 %12, label %88, label %13

13:                                               ; preds = %9
  %14 = trunc i64 %11 to i32
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %16 = load ptr, ptr %15, align 8, !tbaa !184
  %17 = icmp eq ptr %16, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %20 = load i32, ptr %19, align 8, !tbaa !207
  %21 = icmp ugt i32 %20, %14
  br i1 %21, label %22, label %32

22:                                               ; preds = %18
  %23 = load ptr, ptr %16, align 8, !tbaa !212
  %24 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %16, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !213
  %26 = and i64 %11, 4294967295
  %27 = getelementptr inbounds i32, ptr %25, i64 %26
  %28 = load i32, ptr %27, align 4, !tbaa !12
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, ptr %23, i64 %29
  %31 = icmp eq ptr %23, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %13, %18, %22
  %33 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  store i32 24, ptr %33, align 4, !tbaa !189
  br label %56

34:                                               ; preds = %22
  %35 = getelementptr inbounds i8, ptr %30, i64 28
  %36 = load i8, ptr %35, align 1, !tbaa !3
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i8, ptr %30, i64 29
  %39 = load i8, ptr %38, align 1, !tbaa !3
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 8
  %42 = or i32 %41, %37
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds i8, ptr %30, i64 46
  %46 = zext i32 %42 to i64
  %47 = getelementptr inbounds i8, ptr %45, i64 %46
  %48 = getelementptr inbounds i8, ptr %47, i64 -1
  %49 = load i8, ptr %48, align 1, !tbaa !3
  %50 = icmp eq i8 %49, 47
  br i1 %50, label %88, label %51

51:                                               ; preds = %34, %44
  %52 = getelementptr inbounds i8, ptr %30, i64 38
  %53 = load i8, ptr %52, align 1, !tbaa !3
  %54 = and i8 %53, 16
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %88

56:                                               ; preds = %32, %51
  %57 = tail call i32 @mz_zip_reader_extract_to_file(ptr noundef nonnull %0, i32 noundef %14, ptr noundef %1, i32 noundef 0)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %88, label %59

59:                                               ; preds = %56
  %60 = load ptr, ptr %15, align 8, !tbaa !184
  %61 = icmp eq ptr %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %64 = load i32, ptr %63, align 8, !tbaa !207
  %65 = icmp ugt i32 %64, %14
  br i1 %65, label %66, label %75

66:                                               ; preds = %62
  %67 = load ptr, ptr %60, align 8, !tbaa !212
  %68 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %60, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !213
  %70 = and i64 %11, 4294967295
  %71 = getelementptr inbounds i32, ptr %69, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !12
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %67, i64 %73
  br label %75

75:                                               ; preds = %59, %62, %66
  %76 = phi ptr [ %74, %66 ], [ null, %62 ], [ null, %59 ]
  %77 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %14, ptr noundef %76, ptr noundef nonnull %3, ptr noundef null)
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %88, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %3, i64 0, i32 10
  %81 = load i32, ptr %80, align 4, !tbaa !279
  %82 = icmp ult i32 %81, 65536
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = lshr i32 %81, 16
  %85 = call i32 @chmod(ptr noundef %1, i32 noundef %84) #38
  %86 = icmp slt i32 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %83, %79
  br label %88

88:                                               ; preds = %44, %83, %75, %56, %51, %5, %9, %2, %87
  %89 = phi i32 [ 0, %87 ], [ -1, %2 ], [ -3, %9 ], [ -3, %5 ], [ -17, %51 ], [ -19, %56 ], [ -19, %75 ], [ -20, %83 ], [ -17, %44 ]
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %3) #38
  ret i32 %89
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @chmod(ptr nocapture noundef readonly, i32 noundef) local_unnamed_addr #19

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_entry_extract(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #8 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %7 = load i32, ptr %6, align 4, !tbaa !188
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2
  %11 = load i64, ptr %10, align 8, !tbaa !304
  %12 = icmp slt i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = trunc i64 %11 to i32
  %15 = tail call i32 @mz_zip_reader_extract_to_callback(ptr noundef nonnull %0, i32 noundef %14, ptr noundef %1, ptr noundef %2, i32 noundef 0)
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 -10, i32 0
  br label %18

18:                                               ; preds = %5, %9, %3, %13
  %19 = phi i32 [ %17, %13 ], [ -1, %3 ], [ -3, %9 ], [ -3, %5 ]
  ret i32 %19
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local i64 @zip_entries_total(ptr noundef readonly %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 8, !tbaa !316
  %6 = zext i32 %5 to i64
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i64 [ %6, %3 ], [ -1, %1 ]
  ret i64 %8
}

; Function Attrs: nounwind uwtable
define dso_local i64 @zip_entries_delete(ptr noundef %0, ptr noundef readonly %1, i64 noundef %2) local_unnamed_addr #8 {
  %4 = alloca %struct.mz_zip_archive_file_stat, align 8
  %5 = icmp eq ptr %0, null
  br i1 %5, label %133, label %6

6:                                                ; preds = %3
  %7 = icmp eq ptr %1, null
  %8 = icmp ne i64 %2, 0
  %9 = and i1 %7, %8
  br i1 %9, label %133, label %10

10:                                               ; preds = %6
  %11 = icmp eq i64 %2, 0
  %12 = and i1 %7, %11
  br i1 %12, label %133, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %15 = load i32, ptr %14, align 8, !tbaa !316
  %16 = zext i32 %15 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 32) #43
  %18 = icmp eq ptr %17, null
  br i1 %18, label %133, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  store i32 1, ptr %20, align 4, !tbaa !324
  br i1 %7, label %131, label %21

21:                                               ; preds = %19
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %4) #38
  %22 = icmp eq i32 %15, 0
  br i1 %22, label %119, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.zip_t, ptr %0, i64 0, i32 2, i32 1
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %26 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 11
  br label %27

27:                                               ; preds = %67, %23
  %28 = phi i64 [ -1, %23 ], [ %74, %67 ]
  %29 = phi i64 [ 0, %23 ], [ %75, %67 ]
  %30 = call i32 @zip_entry_openbyindex(ptr noundef nonnull %0, i64 noundef %29)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %120

32:                                               ; preds = %27
  br i1 %11, label %44, label %33

33:                                               ; preds = %32
  %34 = load ptr, ptr %24, align 8, !tbaa !307
  br label %38

35:                                               ; preds = %38
  %36 = add nuw i64 %39, 1
  %37 = icmp eq i64 %36, %2
  br i1 %37, label %44, label %38, !llvm.loop !325

38:                                               ; preds = %35, %33
  %39 = phi i64 [ 0, %33 ], [ %36, %35 ]
  %40 = getelementptr inbounds ptr, ptr %1, i64 %39
  %41 = load ptr, ptr %40, align 8, !tbaa !72
  %42 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %34, ptr noundef nonnull dereferenceable(1) %41) #42
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %38, %32
  %45 = phi i32 [ 0, %32 ], [ 1, %38 ], [ 0, %35 ]
  %46 = phi i1 [ false, %32 ], [ %43, %38 ], [ %43, %35 ]
  %47 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %29, i32 1
  store i32 %45, ptr %47, align 8, !tbaa !326
  %48 = trunc i64 %29 to i32
  %49 = load ptr, ptr %25, align 8, !tbaa !184
  %50 = icmp eq ptr %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %44
  %52 = load i32, ptr %14, align 8, !tbaa !207
  %53 = icmp ugt i32 %52, %48
  br i1 %53, label %54, label %62

54:                                               ; preds = %51
  %55 = load ptr, ptr %49, align 8, !tbaa !212
  %56 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %49, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !213
  %58 = getelementptr inbounds i32, ptr %57, i64 %29
  %59 = load i32, ptr %58, align 4, !tbaa !12
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, ptr %55, i64 %60
  br label %62

62:                                               ; preds = %54, %51, %44
  %63 = phi ptr [ %61, %54 ], [ null, %51 ], [ null, %44 ]
  %64 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %48, ptr noundef %63, ptr noundef nonnull %4, ptr noundef null)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %4) #38
  br label %131

67:                                               ; preds = %62
  %68 = call i32 @zip_entry_close(ptr noundef nonnull %0)
  %69 = load i64, ptr %26, align 8, !tbaa !231
  %70 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %29
  %71 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %29, i32 2
  store i64 %69, ptr %71, align 8, !tbaa !328
  store i64 -1, ptr %70, align 8, !tbaa !329
  %72 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %29, i32 3
  store i64 0, ptr %72, align 8, !tbaa !330
  %73 = call i64 @llvm.umin.i64(i64 %28, i64 %69)
  %74 = select i1 %46, i64 %73, i64 %28
  %75 = add nuw nsw i64 %29, 1
  %76 = icmp eq i64 %75, %16
  br i1 %76, label %77, label %27, !llvm.loop !331

77:                                               ; preds = %67
  %78 = and i64 %16, 1
  %79 = icmp eq i32 %15, 1
  br i1 %79, label %107, label %80

80:                                               ; preds = %77
  %81 = and i64 %16, 4294967294
  br label %82

82:                                               ; preds = %103, %80
  %83 = phi i64 [ 0, %80 ], [ %104, %103 ]
  %84 = phi i64 [ 0, %80 ], [ %105, %103 ]
  %85 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %83, i32 2
  %86 = load i64, ptr %85, align 8, !tbaa !328
  %87 = icmp ugt i64 %86, %74
  br i1 %87, label %88, label %93

88:                                               ; preds = %82
  %89 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %83, i32 1
  %90 = load i32, ptr %89, align 8, !tbaa !326
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  store i32 2, ptr %89, align 8, !tbaa !326
  br label %93

93:                                               ; preds = %92, %88, %82
  %94 = or i64 %83, 1
  %95 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %94, i32 2
  %96 = load i64, ptr %95, align 8, !tbaa !328
  %97 = icmp ugt i64 %96, %74
  br i1 %97, label %98, label %103

98:                                               ; preds = %93
  %99 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %94, i32 1
  %100 = load i32, ptr %99, align 8, !tbaa !326
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %103, label %102

102:                                              ; preds = %98
  store i32 2, ptr %99, align 8, !tbaa !326
  br label %103

103:                                              ; preds = %102, %98, %93
  %104 = add nuw nsw i64 %83, 2
  %105 = add i64 %84, 2
  %106 = icmp eq i64 %105, %81
  br i1 %106, label %107, label %82, !llvm.loop !332

107:                                              ; preds = %103, %77
  %108 = phi i64 [ 0, %77 ], [ %104, %103 ]
  %109 = icmp eq i64 %78, 0
  br i1 %109, label %119, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %108, i32 2
  %112 = load i64, ptr %111, align 8, !tbaa !328
  %113 = icmp ugt i64 %112, %74
  br i1 %113, label %114, label %119

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %108, i32 1
  %116 = load i32, ptr %115, align 8, !tbaa !326
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %119, label %118

118:                                              ; preds = %114
  store i32 2, ptr %115, align 8, !tbaa !326
  br label %119

119:                                              ; preds = %107, %118, %114, %110, %21
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %4) #38
  br label %124

120:                                              ; preds = %27
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %4) #38
  %121 = icmp slt i32 %30, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %120
  %123 = sext i32 %30 to i64
  br label %131

124:                                              ; preds = %119, %120
  %125 = call fastcc i32 @zip_entry_finalize(ptr noundef nonnull %0, ptr noundef nonnull %17, i64 noundef %16)
  %126 = call i32 @llvm.smin.i32(i32 %125, i32 0)
  %127 = sext i32 %126 to i64
  %128 = icmp slt i32 %125, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %124
  %130 = call fastcc i64 @zip_entries_delete_mark(ptr noundef nonnull %0, ptr noundef nonnull %17, i32 noundef %15)
  br label %131

131:                                              ; preds = %124, %66, %19, %122, %129
  %132 = phi i64 [ %130, %129 ], [ %127, %124 ], [ -1, %19 ], [ -3, %66 ], [ %123, %122 ]
  call void @free(ptr noundef nonnull %17) #38
  br label %133

133:                                              ; preds = %131, %13, %10, %3, %6
  %134 = phi i64 [ -1, %6 ], [ -1, %3 ], [ 0, %10 ], [ -21, %13 ], [ %132, %131 ]
  ret i64 %134
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @zip_entries_delete_mark(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #8 {
  %4 = sext i32 %2 to i64
  %5 = tail call noalias ptr @calloc(i64 noundef %4, i64 noundef 4) #43
  %6 = icmp eq ptr %5, null
  br i1 %6, label %495, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %9 = load ptr, ptr %8, align 8, !tbaa !305
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  store i32 2, ptr %10, align 4, !tbaa !324
  %11 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %9, i64 0, i32 6
  %12 = load ptr, ptr %11, align 8, !tbaa !193
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  %15 = tail call i32 @fseeko(ptr noundef nonnull %12, i64 noundef 0, i32 noundef 0)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %493

17:                                               ; preds = %14, %7
  %18 = icmp sgt i32 %2, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  store i32 %2, ptr %20, align 8, !tbaa !316
  br label %486

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %9, i64 0, i32 1
  br label %23

23:                                               ; preds = %21, %201
  %24 = phi i64 [ 0, %21 ], [ %202, %201 ]
  %25 = phi i64 [ 0, %21 ], [ %203, %201 ]
  %26 = phi i64 [ 0, %21 ], [ %138, %201 ]
  %27 = phi i32 [ 0, %21 ], [ %142, %201 ]
  %28 = phi i64 [ 0, %21 ], [ %141, %201 ]
  %29 = phi i64 [ 0, %21 ], [ %139, %201 ]
  %30 = icmp slt i32 %27, %2
  br i1 %30, label %31, label %53

31:                                               ; preds = %23
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %32, i32 1
  %34 = load i32, ptr %33, align 8, !tbaa !326
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %48

36:                                               ; preds = %40
  %37 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %46, i32 1
  %38 = load i32, ptr %37, align 8, !tbaa !326
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %48, !llvm.loop !333

40:                                               ; preds = %31, %36
  %41 = phi i64 [ %45, %36 ], [ %24, %31 ]
  %42 = phi i64 [ %46, %36 ], [ %32, %31 ]
  %43 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %42, i32 3
  %44 = load i64, ptr %43, align 8, !tbaa !330
  %45 = add i64 %44, %41
  %46 = add nsw i64 %42, 1
  %47 = icmp eq i64 %46, %4
  br i1 %47, label %136, label %36, !llvm.loop !333

48:                                               ; preds = %36, %31
  %49 = phi i64 [ %32, %31 ], [ %46, %36 ]
  %50 = phi i64 [ %24, %31 ], [ %45, %36 ]
  %51 = phi i64 [ %25, %31 ], [ %45, %36 ]
  %52 = trunc i64 %49 to i32
  br label %53

53:                                               ; preds = %48, %23
  %54 = phi i32 [ %27, %23 ], [ %52, %48 ]
  %55 = phi i64 [ %25, %23 ], [ %51, %48 ]
  %56 = phi i64 [ %24, %23 ], [ %50, %48 ]
  %57 = icmp slt i32 %54, %2
  br i1 %57, label %58, label %79

58:                                               ; preds = %53
  %59 = sext i32 %54 to i64
  br label %60

60:                                               ; preds = %58, %68
  %61 = phi i64 [ %59, %58 ], [ %74, %68 ]
  %62 = phi i64 [ %55, %58 ], [ %72, %68 ]
  %63 = phi i64 [ %26, %58 ], [ %75, %68 ]
  %64 = phi i64 [ %29, %58 ], [ %73, %68 ]
  %65 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %61, i32 1
  %66 = load i32, ptr %65, align 8, !tbaa !326
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %77

68:                                               ; preds = %60
  %69 = getelementptr inbounds i32, ptr %5, i64 %61
  store i32 1, ptr %69, align 4, !tbaa !12
  %70 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %61, i32 3
  %71 = load i64, ptr %70, align 8, !tbaa !330
  %72 = add i64 %71, %62
  %73 = add i64 %71, %64
  %74 = add nsw i64 %61, 1
  %75 = add i64 %63, 1
  %76 = icmp eq i64 %74, %4
  br i1 %76, label %136, label %60, !llvm.loop !334

77:                                               ; preds = %60
  %78 = trunc i64 %61 to i32
  br label %79

79:                                               ; preds = %77, %53
  %80 = phi i64 [ %29, %53 ], [ %64, %77 ]
  %81 = phi i32 [ %54, %53 ], [ %78, %77 ]
  %82 = phi i64 [ %26, %53 ], [ %63, %77 ]
  %83 = phi i64 [ %55, %53 ], [ %62, %77 ]
  %84 = icmp slt i32 %81, %2
  br i1 %84, label %85, label %136

85:                                               ; preds = %79
  %86 = trunc i64 %80 to i32
  %87 = sext i32 %81 to i64
  br label %88

88:                                               ; preds = %85, %97
  %89 = phi i64 [ %87, %85 ], [ %132, %97 ]
  %90 = phi i64 [ %28, %85 ], [ %100, %97 ]
  %91 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %89, i32 1
  %92 = load i32, ptr %91, align 8, !tbaa !326
  %93 = icmp eq i32 %92, 2
  br i1 %93, label %94, label %134

94:                                               ; preds = %88
  %95 = load ptr, ptr %9, align 8, !tbaa !212
  %96 = icmp eq ptr %95, null
  br i1 %96, label %493, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %89, i32 3
  %99 = load i64, ptr %98, align 8, !tbaa !330
  %100 = add i64 %99, %90
  %101 = load ptr, ptr %22, align 8, !tbaa !213
  %102 = getelementptr inbounds i32, ptr %101, i64 %89
  %103 = load i32, ptr %102, align 4, !tbaa !12
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i8, ptr %95, i64 42
  %106 = getelementptr inbounds i8, ptr %105, i64 %104
  %107 = load i8, ptr %106, align 1, !tbaa !3
  %108 = zext i8 %107 to i32
  %109 = getelementptr inbounds i8, ptr %106, i64 1
  %110 = load i8, ptr %109, align 1, !tbaa !3
  %111 = zext i8 %110 to i32
  %112 = shl nuw nsw i32 %111, 8
  %113 = or i32 %112, %108
  %114 = getelementptr inbounds i8, ptr %106, i64 2
  %115 = load i8, ptr %114, align 1, !tbaa !3
  %116 = zext i8 %115 to i32
  %117 = shl nuw nsw i32 %116, 16
  %118 = or i32 %113, %117
  %119 = getelementptr inbounds i8, ptr %106, i64 3
  %120 = load i8, ptr %119, align 1, !tbaa !3
  %121 = zext i8 %120 to i32
  %122 = shl nuw i32 %121, 24
  %123 = or i32 %118, %122
  %124 = sub i32 %123, %86
  %125 = trunc i32 %124 to i8
  store i8 %125, ptr %106, align 1, !tbaa !3
  %126 = lshr i32 %124, 8
  %127 = trunc i32 %126 to i8
  store i8 %127, ptr %109, align 1, !tbaa !3
  %128 = lshr i32 %124, 16
  %129 = trunc i32 %128 to i8
  store i8 %129, ptr %114, align 1, !tbaa !3
  %130 = lshr i32 %124, 24
  %131 = trunc i32 %130 to i8
  store i8 %131, ptr %119, align 1, !tbaa !3
  %132 = add nsw i64 %89, 1
  %133 = icmp eq i64 %132, %4
  br i1 %133, label %136, label %88, !llvm.loop !335

134:                                              ; preds = %88
  %135 = trunc i64 %89 to i32
  br label %136

136:                                              ; preds = %40, %68, %97, %134, %79
  %137 = phi i64 [ %83, %79 ], [ %83, %134 ], [ %83, %97 ], [ %72, %68 ], [ %45, %40 ]
  %138 = phi i64 [ %82, %79 ], [ %82, %134 ], [ %82, %97 ], [ %75, %68 ], [ %26, %40 ]
  %139 = phi i64 [ %80, %79 ], [ %80, %134 ], [ %80, %97 ], [ %73, %68 ], [ %29, %40 ]
  %140 = phi i64 [ %56, %79 ], [ %56, %134 ], [ %56, %97 ], [ %56, %68 ], [ %45, %40 ]
  %141 = phi i64 [ %28, %79 ], [ %90, %134 ], [ %100, %97 ], [ %28, %68 ], [ %28, %40 ]
  %142 = phi i32 [ %81, %79 ], [ %135, %134 ], [ %2, %97 ], [ %2, %68 ], [ %2, %40 ]
  %143 = load ptr, ptr %8, align 8, !tbaa !305
  %144 = tail call noalias dereferenceable_or_null(4096) ptr @calloc(i64 noundef 1, i64 noundef 4096) #43
  %145 = icmp eq ptr %144, null
  br i1 %145, label %198, label %146

146:                                              ; preds = %136
  %147 = icmp sgt i64 %141, 0
  br i1 %147, label %148, label %196

148:                                              ; preds = %146
  %149 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %143, i64 0, i32 6
  %150 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %143, i64 0, i32 8
  %151 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %143, i64 0, i32 9
  br label %152

152:                                              ; preds = %190, %148
  %153 = phi i64 [ 0, %148 ], [ %194, %190 ]
  %154 = phi i64 [ %140, %148 ], [ %191, %190 ]
  %155 = phi i64 [ %141, %148 ], [ %193, %190 ]
  %156 = phi i64 [ %137, %148 ], [ %192, %190 ]
  %157 = tail call i64 @llvm.umin.i64(i64 %155, i64 4096)
  %158 = load ptr, ptr %149, align 8, !tbaa !193
  %159 = icmp eq ptr %158, null
  br i1 %159, label %172, label %160

160:                                              ; preds = %152
  %161 = tail call i32 @fseeko(ptr noundef nonnull %158, i64 noundef %156, i32 noundef 0)
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %196

163:                                              ; preds = %160
  %164 = tail call i64 @fread(ptr noundef nonnull %144, i64 noundef 1, i64 noundef %157, ptr noundef nonnull %158)
  %165 = icmp eq i64 %164, %157
  br i1 %165, label %166, label %196

166:                                              ; preds = %163
  %167 = tail call i32 @fseeko(ptr noundef nonnull %158, i64 noundef %154, i32 noundef 0)
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %196

169:                                              ; preds = %166
  %170 = tail call i64 @fwrite(ptr noundef nonnull %144, i64 noundef 1, i64 noundef %157, ptr noundef nonnull %158)
  %171 = icmp eq i64 %170, %157
  br i1 %171, label %190, label %196

172:                                              ; preds = %152
  %173 = load ptr, ptr %150, align 8, !tbaa !218
  %174 = icmp eq ptr %173, null
  br i1 %174, label %198, label %175

175:                                              ; preds = %172
  %176 = load i64, ptr %151, align 8, !tbaa !219
  %177 = icmp ugt i64 %154, %176
  %178 = icmp ugt i64 %156, %176
  %179 = or i1 %177, %178
  br i1 %179, label %196, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds i8, ptr %173, i64 %176
  %182 = getelementptr inbounds i8, ptr %173, i64 %154
  %183 = getelementptr inbounds i8, ptr %173, i64 %156
  %184 = getelementptr inbounds i8, ptr %182, i64 %157
  %185 = icmp ugt ptr %184, %181
  %186 = getelementptr inbounds i8, ptr %183, i64 %157
  %187 = icmp ugt ptr %186, %181
  %188 = select i1 %185, i1 true, i1 %187
  br i1 %188, label %196, label %189

189:                                              ; preds = %180
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %182, ptr nonnull align 1 %183, i64 %157, i1 false)
  br label %190

190:                                              ; preds = %189, %169
  %191 = add i64 %157, %154
  %192 = add i64 %157, %156
  %193 = sub nsw i64 %155, %157
  %194 = add nuw nsw i64 %157, %153
  %195 = icmp sgt i64 %193, 0
  br i1 %195, label %152, label %196, !llvm.loop !336

196:                                              ; preds = %190, %180, %175, %169, %166, %163, %160, %146
  %197 = phi i64 [ 0, %146 ], [ %194, %190 ], [ -27, %160 ], [ -28, %163 ], [ -27, %166 ], [ -29, %169 ], [ -10, %175 ], [ -10, %180 ]
  tail call void @free(ptr noundef %144) #38
  br label %198

198:                                              ; preds = %172, %136, %196
  %199 = phi i64 [ -21, %136 ], [ %197, %196 ], [ -19, %172 ]
  %200 = icmp eq i64 %199, %141
  br i1 %200, label %201, label %493

201:                                              ; preds = %198
  %202 = add i64 %141, %140
  %203 = add i64 %141, %137
  %204 = icmp slt i32 %142, %2
  br i1 %204, label %23, label %205, !llvm.loop !337

205:                                              ; preds = %201
  %206 = load i64, ptr %0, align 8, !tbaa !306
  %207 = sub i64 %206, %139
  store i64 %207, ptr %0, align 8, !tbaa !306
  %208 = trunc i64 %138 to i32
  %209 = sub i32 %2, %208
  %210 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  store i32 %209, ptr %210, align 8, !tbaa !316
  br i1 %18, label %211, label %486

211:                                              ; preds = %205
  %212 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %9, i64 0, i32 1
  %213 = getelementptr inbounds %struct.mz_zip_array, ptr %9, i64 0, i32 1
  %214 = zext i32 %2 to i64
  br label %215

215:                                              ; preds = %357, %211
  %216 = phi i32 [ 0, %211 ], [ %253, %357 ]
  %217 = icmp slt i32 %216, %2
  br i1 %217, label %218, label %230

218:                                              ; preds = %215
  %219 = sext i32 %216 to i64
  br label %220

220:                                              ; preds = %225, %218
  %221 = phi i64 [ %219, %218 ], [ %226, %225 ]
  %222 = getelementptr inbounds i32, ptr %5, i64 %221
  %223 = load i32, ptr %222, align 4, !tbaa !12
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %228

225:                                              ; preds = %220
  %226 = add nsw i64 %221, 1
  %227 = icmp eq i64 %226, %214
  br i1 %227, label %359, label %220, !llvm.loop !338

228:                                              ; preds = %220
  %229 = trunc i64 %221 to i32
  br label %230

230:                                              ; preds = %228, %215
  %231 = phi i32 [ %216, %215 ], [ %229, %228 ]
  %232 = icmp slt i32 %231, %2
  br i1 %232, label %233, label %252

233:                                              ; preds = %230
  %234 = sext i32 %231 to i64
  %235 = getelementptr inbounds i32, ptr %5, i64 %234
  %236 = load i32, ptr %235, align 4, !tbaa !12
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %248, label %242

238:                                              ; preds = %242
  %239 = getelementptr inbounds i32, ptr %5, i64 %244
  %240 = load i32, ptr %239, align 4, !tbaa !12
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %246, label %242, !llvm.loop !339

242:                                              ; preds = %233, %238
  %243 = phi i64 [ %244, %238 ], [ %234, %233 ]
  %244 = add nsw i64 %243, 1
  %245 = icmp eq i64 %244, %214
  br i1 %245, label %252, label %238, !llvm.loop !339

246:                                              ; preds = %238
  %247 = icmp slt i64 %244, %214
  br label %248

248:                                              ; preds = %246, %233
  %249 = phi i64 [ %234, %233 ], [ %244, %246 ]
  %250 = phi i1 [ true, %233 ], [ %247, %246 ]
  %251 = trunc i64 %249 to i32
  br label %252

252:                                              ; preds = %242, %248, %230
  %253 = phi i32 [ %231, %230 ], [ %251, %248 ], [ %2, %242 ]
  %254 = phi i1 [ false, %230 ], [ %250, %248 ], [ false, %242 ]
  %255 = icmp eq i32 %231, %2
  br i1 %255, label %357, label %256

256:                                              ; preds = %252
  %257 = load ptr, ptr %9, align 8, !tbaa !212
  %258 = load ptr, ptr %212, align 8, !tbaa !213
  %259 = sext i32 %231 to i64
  %260 = getelementptr inbounds i32, ptr %258, i64 %259
  %261 = load i32, ptr %260, align 4, !tbaa !12
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds i8, ptr %257, i64 %262
  %264 = icmp eq i32 %253, %2
  br i1 %264, label %354, label %265

265:                                              ; preds = %256
  %266 = ptrtoint ptr %263 to i64
  %267 = sext i32 %253 to i64
  %268 = getelementptr inbounds i32, ptr %258, i64 %267
  %269 = load i32, ptr %268, align 4, !tbaa !12
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds i8, ptr %257, i64 %270
  %272 = load i64, ptr %213, align 8, !tbaa !282
  %273 = ptrtoint ptr %271 to i64
  %274 = sub i64 %272, %270
  %275 = sub i64 %273, %266
  %276 = trunc i64 %275 to i32
  %277 = icmp ne ptr %257, null
  %278 = icmp eq i32 %261, 0
  %279 = select i1 %277, i1 %278, i1 false
  br i1 %279, label %280, label %316

280:                                              ; preds = %265
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %257, ptr nonnull align 1 %271, i64 %274, i1 false)
  %281 = load ptr, ptr %9, align 8, !tbaa !212
  %282 = tail call ptr @realloc(ptr noundef %281, i64 noundef %274) #40
  store ptr %282, ptr %9, align 8, !tbaa !212
  br i1 %254, label %283, label %354

283:                                              ; preds = %280
  %284 = load ptr, ptr %212, align 8, !tbaa !213
  %285 = sub nsw i64 %214, %267
  %286 = icmp ult i64 %285, 8
  br i1 %286, label %307, label %287

287:                                              ; preds = %283
  %288 = and i64 %285, -8
  %289 = add nsw i64 %288, %267
  %290 = insertelement <4 x i32> poison, i32 %276, i64 0
  %291 = shufflevector <4 x i32> %290, <4 x i32> poison, <4 x i32> zeroinitializer
  %292 = insertelement <4 x i32> poison, i32 %276, i64 0
  %293 = shufflevector <4 x i32> %292, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %294

294:                                              ; preds = %294, %287
  %295 = phi i64 [ 0, %287 ], [ %303, %294 ]
  %296 = add i64 %295, %267
  %297 = getelementptr inbounds i32, ptr %284, i64 %296
  %298 = load <4 x i32>, ptr %297, align 4, !tbaa !12
  %299 = getelementptr inbounds i32, ptr %297, i64 4
  %300 = load <4 x i32>, ptr %299, align 4, !tbaa !12
  %301 = sub <4 x i32> %298, %291
  %302 = sub <4 x i32> %300, %293
  store <4 x i32> %301, ptr %297, align 4, !tbaa !12
  store <4 x i32> %302, ptr %299, align 4, !tbaa !12
  %303 = add nuw i64 %295, 8
  %304 = icmp eq i64 %303, %288
  br i1 %304, label %305, label %294, !llvm.loop !340

305:                                              ; preds = %294
  %306 = icmp eq i64 %285, %288
  br i1 %306, label %316, label %307

307:                                              ; preds = %283, %305
  %308 = phi i64 [ %267, %283 ], [ %289, %305 ]
  br label %309

309:                                              ; preds = %307, %309
  %310 = phi i64 [ %314, %309 ], [ %308, %307 ]
  %311 = getelementptr inbounds i32, ptr %284, i64 %310
  %312 = load i32, ptr %311, align 4, !tbaa !12
  %313 = sub i32 %312, %276
  store i32 %313, ptr %311, align 4, !tbaa !12
  %314 = add nsw i64 %310, 1
  %315 = icmp eq i64 %314, %214
  br i1 %315, label %316, label %309, !llvm.loop !343

316:                                              ; preds = %309, %305, %265
  %317 = mul i64 %274, %262
  %318 = icmp ne i64 %317, 0
  %319 = select i1 %277, i1 %318, i1 false
  br i1 %319, label %320, label %354

320:                                              ; preds = %316
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %263, ptr nonnull align 1 %271, i64 %274, i1 false)
  br i1 %254, label %321, label %354

321:                                              ; preds = %320
  %322 = load ptr, ptr %212, align 8, !tbaa !213
  %323 = sub nsw i64 %214, %267
  %324 = icmp ult i64 %323, 8
  br i1 %324, label %345, label %325

325:                                              ; preds = %321
  %326 = and i64 %323, -8
  %327 = add nsw i64 %326, %267
  %328 = insertelement <4 x i32> poison, i32 %276, i64 0
  %329 = shufflevector <4 x i32> %328, <4 x i32> poison, <4 x i32> zeroinitializer
  %330 = insertelement <4 x i32> poison, i32 %276, i64 0
  %331 = shufflevector <4 x i32> %330, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %332

332:                                              ; preds = %332, %325
  %333 = phi i64 [ 0, %325 ], [ %341, %332 ]
  %334 = add i64 %333, %267
  %335 = getelementptr inbounds i32, ptr %322, i64 %334
  %336 = load <4 x i32>, ptr %335, align 4, !tbaa !12
  %337 = getelementptr inbounds i32, ptr %335, i64 4
  %338 = load <4 x i32>, ptr %337, align 4, !tbaa !12
  %339 = sub <4 x i32> %336, %329
  %340 = sub <4 x i32> %338, %331
  store <4 x i32> %339, ptr %335, align 4, !tbaa !12
  store <4 x i32> %340, ptr %337, align 4, !tbaa !12
  %341 = add nuw i64 %333, 8
  %342 = icmp eq i64 %341, %326
  br i1 %342, label %343, label %332, !llvm.loop !344

343:                                              ; preds = %332
  %344 = icmp eq i64 %323, %326
  br i1 %344, label %354, label %345

345:                                              ; preds = %321, %343
  %346 = phi i64 [ %267, %321 ], [ %327, %343 ]
  br label %347

347:                                              ; preds = %345, %347
  %348 = phi i64 [ %352, %347 ], [ %346, %345 ]
  %349 = getelementptr inbounds i32, ptr %322, i64 %348
  %350 = load i32, ptr %349, align 4, !tbaa !12
  %351 = sub i32 %350, %276
  store i32 %351, ptr %349, align 4, !tbaa !12
  %352 = add nsw i64 %348, 1
  %353 = icmp eq i64 %352, %214
  br i1 %353, label %354, label %347, !llvm.loop !345

354:                                              ; preds = %347, %343, %320, %316, %280, %256
  %355 = phi i64 [ %274, %316 ], [ 0, %256 ], [ %274, %320 ], [ %274, %280 ], [ %274, %343 ], [ %274, %347 ]
  %356 = add i64 %355, %262
  store i64 %356, ptr %213, align 8, !tbaa !282
  br label %357

357:                                              ; preds = %354, %252
  %358 = icmp slt i32 %253, %2
  br i1 %358, label %215, label %359, !llvm.loop !346

359:                                              ; preds = %357, %225
  br label %360

360:                                              ; preds = %359, %483
  %361 = phi i32 [ %485, %483 ], [ 0, %359 ]
  %362 = phi i32 [ %394, %483 ], [ 0, %359 ]
  %363 = icmp slt i32 %362, %2
  br i1 %363, label %364, label %376

364:                                              ; preds = %360
  %365 = sext i32 %362 to i64
  br label %366

366:                                              ; preds = %371, %364
  %367 = phi i64 [ %365, %364 ], [ %372, %371 ]
  %368 = getelementptr inbounds i32, ptr %5, i64 %367
  %369 = load i32, ptr %368, align 4, !tbaa !12
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %366
  %372 = add nsw i64 %367, 1
  %373 = icmp eq i64 %372, %214
  br i1 %373, label %486, label %366, !llvm.loop !347

374:                                              ; preds = %366
  %375 = trunc i64 %367 to i32
  br label %376

376:                                              ; preds = %374, %360
  %377 = phi i32 [ %362, %360 ], [ %375, %374 ]
  %378 = icmp eq i32 %377, %2
  br i1 %378, label %486, label %379

379:                                              ; preds = %376
  %380 = icmp slt i32 %377, %2
  br i1 %380, label %381, label %393

381:                                              ; preds = %379
  %382 = sext i32 %377 to i64
  br label %383

383:                                              ; preds = %388, %381
  %384 = phi i64 [ %382, %381 ], [ %389, %388 ]
  %385 = getelementptr inbounds i32, ptr %5, i64 %384
  %386 = load i32, ptr %385, align 4, !tbaa !12
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %391, label %388

388:                                              ; preds = %383
  %389 = add nsw i64 %384, 1
  %390 = icmp eq i64 %389, %214
  br i1 %390, label %479, label %383, !llvm.loop !348

391:                                              ; preds = %383
  %392 = trunc i64 %384 to i32
  br label %393

393:                                              ; preds = %391, %379
  %394 = phi i32 [ %377, %379 ], [ %392, %391 ]
  %395 = icmp slt i32 %394, %2
  br i1 %395, label %396, label %479

396:                                              ; preds = %393
  %397 = load ptr, ptr %212, align 8, !tbaa !213
  %398 = sext i32 %394 to i64
  %399 = sext i32 %377 to i64
  %400 = sub i32 %2, %394
  %401 = zext i32 %400 to i64
  %402 = icmp ult i32 %400, 12
  br i1 %402, label %428, label %403

403:                                              ; preds = %396
  %404 = ptrtoint ptr %397 to i64
  %405 = shl nsw i64 %399, 2
  %406 = add i64 %405, %404
  %407 = shl nsw i64 %398, 2
  %408 = add i64 %407, %404
  %409 = sub i64 %406, %408
  %410 = icmp ult i64 %409, 32
  br i1 %410, label %428, label %411

411:                                              ; preds = %403
  %412 = and i64 %401, 4294967288
  %413 = add nsw i64 %412, %398
  br label %414

414:                                              ; preds = %414, %411
  %415 = phi i64 [ 0, %411 ], [ %424, %414 ]
  %416 = add i64 %415, %398
  %417 = getelementptr inbounds i32, ptr %397, i64 %416
  %418 = load <4 x i32>, ptr %417, align 4, !tbaa !12
  %419 = getelementptr inbounds i32, ptr %417, i64 4
  %420 = load <4 x i32>, ptr %419, align 4, !tbaa !12
  %421 = add nsw i64 %415, %399
  %422 = getelementptr inbounds i32, ptr %397, i64 %421
  store <4 x i32> %418, ptr %422, align 4, !tbaa !12
  %423 = getelementptr inbounds i32, ptr %422, i64 4
  store <4 x i32> %420, ptr %423, align 4, !tbaa !12
  %424 = add nuw i64 %415, 8
  %425 = icmp eq i64 %424, %412
  br i1 %425, label %426, label %414, !llvm.loop !349

426:                                              ; preds = %414
  %427 = icmp eq i64 %412, %401
  br i1 %427, label %483, label %428

428:                                              ; preds = %403, %396, %426
  %429 = phi i64 [ 0, %403 ], [ 0, %396 ], [ %412, %426 ]
  %430 = phi i64 [ %398, %403 ], [ %398, %396 ], [ %413, %426 ]
  %431 = xor i64 %429, -1
  %432 = add nsw i64 %431, %401
  %433 = and i64 %401, 3
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %447, label %435

435:                                              ; preds = %428, %435
  %436 = phi i64 [ %443, %435 ], [ %429, %428 ]
  %437 = phi i64 [ %444, %435 ], [ %430, %428 ]
  %438 = phi i64 [ %445, %435 ], [ 0, %428 ]
  %439 = getelementptr inbounds i32, ptr %397, i64 %437
  %440 = load i32, ptr %439, align 4, !tbaa !12
  %441 = add nsw i64 %436, %399
  %442 = getelementptr inbounds i32, ptr %397, i64 %441
  store i32 %440, ptr %442, align 4, !tbaa !12
  %443 = add nuw nsw i64 %436, 1
  %444 = add nsw i64 %437, 1
  %445 = add i64 %438, 1
  %446 = icmp eq i64 %445, %433
  br i1 %446, label %447, label %435, !llvm.loop !350

447:                                              ; preds = %435, %428
  %448 = phi i64 [ %429, %428 ], [ %443, %435 ]
  %449 = phi i64 [ %430, %428 ], [ %444, %435 ]
  %450 = icmp ult i64 %432, 3
  br i1 %450, label %483, label %451

451:                                              ; preds = %447, %451
  %452 = phi i64 [ %476, %451 ], [ %448, %447 ]
  %453 = phi i64 [ %477, %451 ], [ %449, %447 ]
  %454 = getelementptr inbounds i32, ptr %397, i64 %453
  %455 = load i32, ptr %454, align 4, !tbaa !12
  %456 = add nsw i64 %452, %399
  %457 = getelementptr inbounds i32, ptr %397, i64 %456
  store i32 %455, ptr %457, align 4, !tbaa !12
  %458 = add nuw nsw i64 %452, 1
  %459 = add nsw i64 %453, 1
  %460 = getelementptr inbounds i32, ptr %397, i64 %459
  %461 = load i32, ptr %460, align 4, !tbaa !12
  %462 = add nsw i64 %458, %399
  %463 = getelementptr inbounds i32, ptr %397, i64 %462
  store i32 %461, ptr %463, align 4, !tbaa !12
  %464 = add nuw nsw i64 %452, 2
  %465 = add nsw i64 %453, 2
  %466 = getelementptr inbounds i32, ptr %397, i64 %465
  %467 = load i32, ptr %466, align 4, !tbaa !12
  %468 = add nsw i64 %464, %399
  %469 = getelementptr inbounds i32, ptr %397, i64 %468
  store i32 %467, ptr %469, align 4, !tbaa !12
  %470 = add nuw nsw i64 %452, 3
  %471 = add nsw i64 %453, 3
  %472 = getelementptr inbounds i32, ptr %397, i64 %471
  %473 = load i32, ptr %472, align 4, !tbaa !12
  %474 = add nsw i64 %470, %399
  %475 = getelementptr inbounds i32, ptr %397, i64 %474
  store i32 %473, ptr %475, align 4, !tbaa !12
  %476 = add nuw nsw i64 %452, 4
  %477 = add nsw i64 %453, 4
  %478 = icmp eq i64 %476, %401
  br i1 %478, label %483, label %451, !llvm.loop !351

479:                                              ; preds = %393, %388
  %480 = phi i32 [ %2, %388 ], [ %394, %393 ]
  %481 = sub i32 %361, %377
  %482 = add i32 %481, %480
  br label %486

483:                                              ; preds = %447, %451, %426
  %484 = sub i32 %361, %377
  %485 = add i32 %484, %394
  br label %360, !llvm.loop !352

486:                                              ; preds = %376, %371, %479, %205, %19
  %487 = phi i32 [ %482, %479 ], [ 0, %205 ], [ 0, %19 ], [ %361, %371 ], [ %361, %376 ]
  %488 = phi i64 [ %138, %479 ], [ %138, %205 ], [ 0, %19 ], [ %138, %371 ], [ %138, %376 ]
  %489 = sub nsw i32 %2, %487
  %490 = sext i32 %489 to i64
  %491 = shl nsw i64 %490, 2
  %492 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %9, i64 0, i32 1, i32 1
  store i64 %491, ptr %492, align 8, !tbaa !353
  br label %493

493:                                              ; preds = %198, %94, %14, %486
  %494 = phi i64 [ %488, %486 ], [ -3, %14 ], [ -3, %94 ], [ %199, %198 ]
  tail call void @free(ptr noundef nonnull %5) #38
  br label %495

495:                                              ; preds = %493, %3
  %496 = phi i64 [ -21, %3 ], [ %494, %493 ]
  ret i64 %496
}

; Function Attrs: nounwind uwtable
define dso_local i64 @zip_entries_deletebyindex(ptr noundef %0, ptr noundef readonly %1, i64 noundef %2) local_unnamed_addr #8 {
  %4 = alloca %struct.mz_zip_archive_file_stat, align 8
  %5 = icmp eq ptr %0, null
  br i1 %5, label %129, label %6

6:                                                ; preds = %3
  %7 = icmp eq ptr %1, null
  %8 = icmp ne i64 %2, 0
  %9 = and i1 %7, %8
  br i1 %9, label %129, label %10

10:                                               ; preds = %6
  %11 = icmp eq i64 %2, 0
  %12 = and i1 %7, %11
  br i1 %12, label %129, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %15 = load i32, ptr %14, align 8, !tbaa !316
  %16 = zext i32 %15 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 32) #43
  %18 = icmp eq ptr %17, null
  br i1 %18, label %129, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  store i32 1, ptr %20, align 4, !tbaa !324
  br i1 %7, label %127, label %21

21:                                               ; preds = %19
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %4) #38
  %22 = icmp eq i32 %15, 0
  br i1 %22, label %115, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %25 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %4, i64 0, i32 11
  br label %26

26:                                               ; preds = %63, %23
  %27 = phi i64 [ -1, %23 ], [ %70, %63 ]
  %28 = phi i64 [ 0, %23 ], [ %71, %63 ]
  %29 = call i32 @zip_entry_openbyindex(ptr noundef nonnull %0, i64 noundef %28)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %116

31:                                               ; preds = %26
  br i1 %11, label %40, label %35

32:                                               ; preds = %35
  %33 = add nuw i64 %36, 1
  %34 = icmp eq i64 %33, %2
  br i1 %34, label %40, label %35, !llvm.loop !354

35:                                               ; preds = %31, %32
  %36 = phi i64 [ %33, %32 ], [ 0, %31 ]
  %37 = getelementptr inbounds i64, ptr %1, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !46
  %39 = icmp eq i64 %28, %38
  br i1 %39, label %40, label %32

40:                                               ; preds = %32, %35, %31
  %41 = phi i1 [ false, %31 ], [ %39, %35 ], [ %39, %32 ]
  %42 = phi i32 [ 0, %31 ], [ 0, %32 ], [ 1, %35 ]
  %43 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %28, i32 1
  store i32 %42, ptr %43, align 8, !tbaa !326
  %44 = trunc i64 %28 to i32
  %45 = load ptr, ptr %24, align 8, !tbaa !184
  %46 = icmp eq ptr %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %40
  %48 = load i32, ptr %14, align 8, !tbaa !207
  %49 = icmp ugt i32 %48, %44
  br i1 %49, label %50, label %58

50:                                               ; preds = %47
  %51 = load ptr, ptr %45, align 8, !tbaa !212
  %52 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %45, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !213
  %54 = getelementptr inbounds i32, ptr %53, i64 %28
  %55 = load i32, ptr %54, align 4, !tbaa !12
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, ptr %51, i64 %56
  br label %58

58:                                               ; preds = %50, %47, %40
  %59 = phi ptr [ %57, %50 ], [ null, %47 ], [ null, %40 ]
  %60 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %44, ptr noundef %59, ptr noundef nonnull %4, ptr noundef null)
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %4) #38
  br label %127

63:                                               ; preds = %58
  %64 = call i32 @zip_entry_close(ptr noundef nonnull %0)
  %65 = load i64, ptr %25, align 8, !tbaa !231
  %66 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %28
  %67 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %28, i32 2
  store i64 %65, ptr %67, align 8, !tbaa !328
  store i64 -1, ptr %66, align 8, !tbaa !329
  %68 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %28, i32 3
  store i64 0, ptr %68, align 8, !tbaa !330
  %69 = call i64 @llvm.umin.i64(i64 %27, i64 %65)
  %70 = select i1 %41, i64 %69, i64 %27
  %71 = add nuw nsw i64 %28, 1
  %72 = icmp eq i64 %71, %16
  br i1 %72, label %73, label %26, !llvm.loop !355

73:                                               ; preds = %63
  %74 = and i64 %16, 1
  %75 = icmp eq i32 %15, 1
  br i1 %75, label %103, label %76

76:                                               ; preds = %73
  %77 = and i64 %16, 4294967294
  br label %78

78:                                               ; preds = %99, %76
  %79 = phi i64 [ 0, %76 ], [ %100, %99 ]
  %80 = phi i64 [ 0, %76 ], [ %101, %99 ]
  %81 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %79, i32 2
  %82 = load i64, ptr %81, align 8, !tbaa !328
  %83 = icmp ugt i64 %82, %70
  br i1 %83, label %84, label %89

84:                                               ; preds = %78
  %85 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %79, i32 1
  %86 = load i32, ptr %85, align 8, !tbaa !326
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  store i32 2, ptr %85, align 8, !tbaa !326
  br label %89

89:                                               ; preds = %88, %84, %78
  %90 = or i64 %79, 1
  %91 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %90, i32 2
  %92 = load i64, ptr %91, align 8, !tbaa !328
  %93 = icmp ugt i64 %92, %70
  br i1 %93, label %94, label %99

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %90, i32 1
  %96 = load i32, ptr %95, align 8, !tbaa !326
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  store i32 2, ptr %95, align 8, !tbaa !326
  br label %99

99:                                               ; preds = %98, %94, %89
  %100 = add nuw nsw i64 %79, 2
  %101 = add i64 %80, 2
  %102 = icmp eq i64 %101, %77
  br i1 %102, label %103, label %78, !llvm.loop !356

103:                                              ; preds = %99, %73
  %104 = phi i64 [ 0, %73 ], [ %100, %99 ]
  %105 = icmp eq i64 %74, 0
  br i1 %105, label %115, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %104, i32 2
  %108 = load i64, ptr %107, align 8, !tbaa !328
  %109 = icmp ugt i64 %108, %70
  br i1 %109, label %110, label %115

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %17, i64 %104, i32 1
  %112 = load i32, ptr %111, align 8, !tbaa !326
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %115, label %114

114:                                              ; preds = %110
  store i32 2, ptr %111, align 8, !tbaa !326
  br label %115

115:                                              ; preds = %103, %114, %110, %106, %21
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %4) #38
  br label %120

116:                                              ; preds = %26
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %4) #38
  %117 = icmp slt i32 %29, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %116
  %119 = sext i32 %29 to i64
  br label %127

120:                                              ; preds = %115, %116
  %121 = call fastcc i32 @zip_entry_finalize(ptr noundef nonnull %0, ptr noundef nonnull %17, i64 noundef %16)
  %122 = call i32 @llvm.smin.i32(i32 %121, i32 0)
  %123 = sext i32 %122 to i64
  %124 = icmp slt i32 %121, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %120
  %126 = call fastcc i64 @zip_entries_delete_mark(ptr noundef nonnull %0, ptr noundef nonnull %17, i32 noundef %15)
  br label %127

127:                                              ; preds = %120, %62, %19, %118, %125
  %128 = phi i64 [ %126, %125 ], [ %123, %120 ], [ -1, %19 ], [ -3, %62 ], [ %119, %118 ]
  call void @free(ptr noundef nonnull %17) #38
  br label %129

129:                                              ; preds = %127, %13, %10, %3, %6
  %130 = phi i64 [ -1, %6 ], [ -1, %3 ], [ 0, %10 ], [ -21, %13 ], [ %128, %127 ]
  ret i64 %130
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_stream_extract(ptr noundef %0, i64 noundef %1, ptr noundef readonly %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #8 {
  %6 = alloca %struct.mz_zip_archive, align 8
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %6) #38
  %7 = icmp ne ptr %0, null
  %8 = icmp ne ptr %2, null
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %15

10:                                               ; preds = %5
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %6, i8 0, i64 112, i1 false)
  %11 = call i32 @mz_zip_reader_init_mem(ptr noundef nonnull %6, ptr noundef nonnull %0, i64 noundef %1, i32 noundef 0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = call fastcc i32 @zip_archive_extract(ptr noundef nonnull %6, ptr noundef nonnull %2, ptr noundef %3, ptr noundef %4)
  br label %15

15:                                               ; preds = %10, %5, %13
  %16 = phi i32 [ %14, %13 ], [ -1, %5 ], [ -1, %10 ]
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %6) #38
  ret i32 %16
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @zip_archive_extract(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, ptr noundef %3) unnamed_addr #8 {
  %5 = alloca [513 x i8], align 16
  %6 = alloca [513 x i8], align 16
  %7 = alloca [513 x i8], align 16
  %8 = alloca %struct.mz_zip_archive_file_stat, align 8
  call void @llvm.lifetime.start.p0(i64 513, ptr nonnull %6) #38
  call void @llvm.lifetime.start.p0(i64 513, ptr nonnull %7) #38
  call void @llvm.lifetime.start.p0(i64 1112, ptr nonnull %8) #38
  %9 = getelementptr inbounds i8, ptr %6, i64 512
  store i8 0, ptr %9, align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(513) %7, i8 0, i64 513, i1 false)
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #42
  %11 = add i64 %10, 1
  %12 = icmp ugt i64 %11, 512
  br i1 %12, label %230, label %13

13:                                               ; preds = %4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1112) %8, i8 0, i64 1112, i1 false)
  %14 = call ptr @strncpy(ptr noundef nonnull dereferenceable(1) %6, ptr noundef nonnull dereferenceable(1) %1, i64 noundef 512) #38
  %15 = add nsw i64 %10, -1
  %16 = getelementptr inbounds [513 x i8], ptr %6, i64 0, i64 %15
  %17 = load i8, ptr %16, align 1, !tbaa !3
  switch i8 %17, label %18 [
    i8 47, label %20
    i8 92, label %20
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds [513 x i8], ptr %6, i64 0, i64 %10
  store i8 47, ptr %19, align 1, !tbaa !3
  br label %20

20:                                               ; preds = %13, %13, %18
  %21 = phi i64 [ %10, %13 ], [ %11, %18 ], [ %10, %13 ]
  %22 = sub nsw i64 512, %21
  %23 = call i64 @llvm.umin.i64(i64 %22, i64 512)
  %24 = icmp eq ptr %0, null
  br i1 %24, label %225, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %27 = load i32, ptr %26, align 8, !tbaa !207
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %225, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %31 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %32 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %8, i64 0, i32 16
  %33 = getelementptr inbounds [513 x i8], ptr %6, i64 0, i64 %21
  %34 = getelementptr inbounds i8, ptr %6, i64 1
  %35 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %8, i64 0, i32 2
  %36 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %8, i64 0, i32 10
  %37 = getelementptr inbounds %struct.mz_zip_archive_file_stat, ptr %8, i64 0, i32 8
  %38 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 5
  %39 = icmp eq ptr %2, null
  br label %40

40:                                               ; preds = %223, %29
  %41 = phi i32 [ 0, %29 ], [ %224, %223 ]
  br i1 %24, label %57, label %42

42:                                               ; preds = %40
  %43 = load ptr, ptr %30, align 8, !tbaa !184
  %44 = icmp eq ptr %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %42
  %46 = load i32, ptr %31, align 8, !tbaa !207
  %47 = icmp ugt i32 %46, %41
  br i1 %47, label %48, label %57

48:                                               ; preds = %45
  %49 = load ptr, ptr %43, align 8, !tbaa !212
  %50 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %43, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !213
  %52 = zext i32 %41 to i64
  %53 = getelementptr inbounds i32, ptr %51, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, ptr %49, i64 %55
  br label %57

57:                                               ; preds = %40, %42, %45, %48
  %58 = phi ptr [ %56, %48 ], [ null, %45 ], [ null, %42 ], [ null, %40 ]
  %59 = call fastcc i32 @mz_zip_file_stat_internal(ptr noundef nonnull %0, i32 noundef %41, ptr noundef %58, ptr noundef nonnull %8, ptr noundef null)
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %225, label %61

61:                                               ; preds = %57
  %62 = load i8, ptr %32, align 8
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %225, label %64

64:                                               ; preds = %61, %67
  %65 = phi i8 [ %69, %67 ], [ %62, %61 ]
  %66 = phi ptr [ %68, %67 ], [ %32, %61 ]
  switch i8 %65, label %70 [
    i8 47, label %67
    i8 92, label %67
  ]

67:                                               ; preds = %64, %64
  %68 = getelementptr inbounds i8, ptr %66, i64 1
  %69 = load i8, ptr %68, align 1, !tbaa !3
  br label %64, !llvm.loop !357

70:                                               ; preds = %64, %96
  %71 = phi i8 [ %99, %96 ], [ %65, %64 ]
  %72 = phi ptr [ %75, %96 ], [ %66, %64 ]
  %73 = phi i64 [ %97, %96 ], [ 0, %64 ]
  %74 = phi i64 [ %98, %96 ], [ 0, %64 ]
  %75 = getelementptr inbounds i8, ptr %72, i64 1
  switch i8 %71, label %92 [
    i8 0, label %100
    i8 92, label %76
    i8 47, label %76
  ]

76:                                               ; preds = %70, %70
  %77 = icmp eq i64 %74, 0
  br i1 %77, label %96, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds i8, ptr %32, i64 %73
  br label %83

80:                                               ; preds = %83
  %81 = add nuw i64 %84, 1
  %82 = icmp eq i64 %81, %74
  br i1 %82, label %96, label %83, !llvm.loop !358

83:                                               ; preds = %80, %78
  %84 = phi i64 [ %81, %80 ], [ 0, %78 ]
  %85 = getelementptr inbounds i8, ptr %79, i64 %84
  %86 = load i8, ptr %85, align 1, !tbaa !3
  %87 = icmp eq i8 %86, 46
  br i1 %87, label %80, label %88

88:                                               ; preds = %83
  %89 = add i64 %74, %73
  %90 = add i64 %89, 1
  %91 = getelementptr inbounds i8, ptr %32, i64 %89
  store i8 %71, ptr %91, align 1, !tbaa !3
  br label %96

92:                                               ; preds = %70
  %93 = add i64 %74, %73
  %94 = getelementptr inbounds i8, ptr %32, i64 %93
  store i8 %71, ptr %94, align 1, !tbaa !3
  %95 = add i64 %74, 1
  br label %96

96:                                               ; preds = %80, %92, %88, %76
  %97 = phi i64 [ %73, %92 ], [ %90, %88 ], [ %73, %76 ], [ %73, %80 ]
  %98 = phi i64 [ %95, %92 ], [ 0, %88 ], [ 0, %76 ], [ 0, %80 ]
  %99 = load i8, ptr %75, align 1, !tbaa !3
  br label %70, !llvm.loop !359

100:                                              ; preds = %70
  %101 = getelementptr inbounds i8, ptr %32, i64 %73
  %102 = icmp eq i64 %74, 0
  br i1 %102, label %114, label %106

103:                                              ; preds = %106
  %104 = add nuw i64 %107, 1
  %105 = icmp eq i64 %104, %74
  br i1 %105, label %114, label %106, !llvm.loop !358

106:                                              ; preds = %100, %103
  %107 = phi i64 [ %104, %103 ], [ 0, %100 ]
  %108 = getelementptr inbounds i8, ptr %101, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !3
  %110 = icmp eq i8 %109, 46
  br i1 %110, label %103, label %111

111:                                              ; preds = %106
  %112 = add i64 %74, %73
  %113 = getelementptr inbounds i8, ptr %32, i64 %112
  br label %114

114:                                              ; preds = %103, %111, %100
  %115 = phi ptr [ %113, %111 ], [ %101, %100 ], [ %101, %103 ]
  store i8 0, ptr %115, align 1, !tbaa !3
  %116 = call ptr @strncpy(ptr noundef nonnull %33, ptr noundef nonnull %32, i64 noundef %23) #38
  call void @llvm.lifetime.start.p0(i64 513, ptr nonnull %5) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(513) %5, i8 0, i64 513, i1 false)
  %117 = load i8, ptr %6, align 16, !tbaa !3
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %144, label %119

119:                                              ; preds = %114
  store i8 %117, ptr %5, align 16, !tbaa !3
  %120 = load i8, ptr %34, align 1, !tbaa !3
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %144, label %122

122:                                              ; preds = %119, %134
  %123 = phi i64 [ %136, %134 ], [ 1, %119 ]
  %124 = phi i8 [ %139, %134 ], [ %120, %119 ]
  %125 = phi ptr [ %138, %134 ], [ %34, %119 ]
  switch i8 %124, label %134 [
    i8 92, label %126
    i8 47, label %127
  ]

126:                                              ; preds = %122
  store i8 47, ptr %125, align 1, !tbaa !3
  br label %127

127:                                              ; preds = %126, %122
  %128 = call i32 @mkdir(ptr noundef nonnull %5, i32 noundef 493) #38
  %129 = icmp eq i32 %128, -1
  br i1 %129, label %130, label %134

130:                                              ; preds = %127
  %131 = tail call ptr @__errno_location() #44
  %132 = load i32, ptr %131, align 4, !tbaa !12
  %133 = icmp eq i32 %132, 17
  br i1 %133, label %134, label %143

134:                                              ; preds = %130, %127, %122
  %135 = load i8, ptr %125, align 1, !tbaa !3
  %136 = add nuw nsw i64 %123, 1
  %137 = getelementptr inbounds [513 x i8], ptr %5, i64 0, i64 %123
  store i8 %135, ptr %137, align 1, !tbaa !3
  %138 = getelementptr inbounds i8, ptr %125, i64 1
  %139 = load i8, ptr %138, align 1, !tbaa !3
  %140 = icmp ne i8 %139, 0
  %141 = icmp ult i64 %123, 511
  %142 = select i1 %140, i1 %141, i1 false
  br i1 %142, label %122, label %144, !llvm.loop !360

143:                                              ; preds = %130
  call void @llvm.lifetime.end.p0(i64 513, ptr nonnull %5) #38
  br label %225

144:                                              ; preds = %134, %114, %119
  call void @llvm.lifetime.end.p0(i64 513, ptr nonnull %5) #38
  %145 = load i16, ptr %35, align 8, !tbaa !268
  %146 = lshr i16 %145, 8
  %147 = trunc i16 %146 to i8
  switch i8 %147, label %163 [
    i8 3, label %148
    i8 19, label %148
  ]

148:                                              ; preds = %144, %144
  %149 = load i32, ptr %36, align 4, !tbaa !279
  %150 = and i32 %149, 536870912
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %148
  %153 = load i64, ptr %37, align 8, !tbaa !233
  %154 = icmp ugt i64 %153, 512
  br i1 %154, label %225, label %155

155:                                              ; preds = %152
  %156 = call fastcc i32 @mz_zip_reader_extract_to_mem_no_alloc1(ptr noundef nonnull %0, i32 noundef %41, ptr noundef nonnull %7, i64 noundef 512, i32 noundef 0, ptr noundef null, i64 noundef 0, ptr noundef null)
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %225, label %158

158:                                              ; preds = %155
  %159 = load i64, ptr %37, align 8, !tbaa !233
  %160 = getelementptr inbounds [513 x i8], ptr %7, i64 0, i64 %159
  store i8 0, ptr %160, align 1, !tbaa !3
  %161 = call i32 @symlink(ptr noundef nonnull %7, ptr noundef nonnull %6) #38
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %213, label %225

163:                                              ; preds = %144, %148
  br i1 %24, label %203, label %164

164:                                              ; preds = %163
  %165 = load ptr, ptr %30, align 8, !tbaa !184
  %166 = icmp eq ptr %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  %168 = load i32, ptr %31, align 8, !tbaa !207
  %169 = icmp ugt i32 %168, %41
  br i1 %169, label %170, label %180

170:                                              ; preds = %167
  %171 = load ptr, ptr %165, align 8, !tbaa !212
  %172 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %165, i64 0, i32 1
  %173 = load ptr, ptr %172, align 8, !tbaa !213
  %174 = zext i32 %41 to i64
  %175 = getelementptr inbounds i32, ptr %173, i64 %174
  %176 = load i32, ptr %175, align 4, !tbaa !12
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds i8, ptr %171, i64 %177
  %179 = icmp eq ptr %171, null
  br i1 %179, label %180, label %181

180:                                              ; preds = %170, %167, %164
  store i32 24, ptr %38, align 4, !tbaa !189
  br label %203

181:                                              ; preds = %170
  %182 = getelementptr inbounds i8, ptr %178, i64 28
  %183 = load i8, ptr %182, align 1, !tbaa !3
  %184 = zext i8 %183 to i32
  %185 = getelementptr inbounds i8, ptr %178, i64 29
  %186 = load i8, ptr %185, align 1, !tbaa !3
  %187 = zext i8 %186 to i32
  %188 = shl nuw nsw i32 %187, 8
  %189 = or i32 %188, %184
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %198, label %191

191:                                              ; preds = %181
  %192 = getelementptr inbounds i8, ptr %178, i64 46
  %193 = zext i32 %189 to i64
  %194 = getelementptr i8, ptr %192, i64 -1
  %195 = getelementptr i8, ptr %194, i64 %193
  %196 = load i8, ptr %195, align 1, !tbaa !3
  %197 = icmp eq i8 %196, 47
  br i1 %197, label %206, label %198

198:                                              ; preds = %181, %191
  %199 = getelementptr inbounds i8, ptr %178, i64 38
  %200 = load i8, ptr %199, align 1, !tbaa !3
  %201 = and i8 %200, 16
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %180, %163, %198
  %204 = call i32 @mz_zip_reader_extract_to_file(ptr noundef nonnull %0, i32 noundef %41, ptr noundef nonnull %6, i32 noundef 0)
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %225, label %206

206:                                              ; preds = %191, %203, %198
  %207 = load i32, ptr %36, align 4, !tbaa !279
  %208 = icmp ult i32 %207, 65536
  br i1 %208, label %213, label %209

209:                                              ; preds = %206
  %210 = lshr i32 %207, 16
  %211 = call i32 @chmod(ptr noundef nonnull %6, i32 noundef %210) #38
  %212 = icmp slt i32 %211, 0
  br i1 %212, label %225, label %213

213:                                              ; preds = %206, %209, %158
  br i1 %39, label %220, label %214

214:                                              ; preds = %213
  %215 = call i32 %2(ptr noundef nonnull %6, ptr noundef %3) #38
  %216 = icmp sgt i32 %215, -1
  %217 = add i32 %41, 1
  %218 = icmp ult i32 %217, %27
  %219 = select i1 %216, i1 %218, i1 false
  br i1 %219, label %223, label %225

220:                                              ; preds = %213
  %221 = add i32 %41, 1
  %222 = icmp ult i32 %221, %27
  br i1 %222, label %223, label %225

223:                                              ; preds = %220, %214
  %224 = phi i32 [ %221, %220 ], [ %217, %214 ]
  br label %40, !llvm.loop !362

225:                                              ; preds = %214, %220, %57, %155, %152, %158, %203, %209, %61, %20, %25, %143
  %226 = phi i32 [ -23, %143 ], [ 0, %25 ], [ 0, %20 ], [ 0, %214 ], [ 0, %220 ], [ -3, %57 ], [ -18, %155 ], [ -18, %152 ], [ -24, %158 ], [ -19, %203 ], [ -20, %209 ], [ -2, %61 ]
  %227 = call fastcc i32 @mz_zip_reader_end_internal(ptr noundef %0, i32 noundef 1)
  %228 = icmp eq i32 %227, 0
  %229 = select i1 %228, i32 -25, i32 %226
  br label %230

230:                                              ; preds = %4, %225
  %231 = phi i32 [ %229, %225 ], [ -2, %4 ]
  call void @llvm.lifetime.end.p0(i64 1112, ptr nonnull %8) #38
  call void @llvm.lifetime.end.p0(i64 513, ptr nonnull %7) #38
  call void @llvm.lifetime.end.p0(i64 513, ptr nonnull %6) #38
  ret i32 %231
}

; Function Attrs: nounwind uwtable
define dso_local ptr @zip_stream_open(ptr noundef %0, i64 noundef %1, i32 noundef %2, i8 noundef signext %3) local_unnamed_addr #8 {
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #38
  %6 = call ptr @zip_stream_openwitherror(ptr noundef %0, i64 noundef %1, i32 noundef %2, i8 noundef signext %3, ptr noundef nonnull %5)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #38
  ret ptr %6
}

; Function Attrs: nounwind uwtable
define dso_local ptr @zip_stream_openwitherror(ptr noundef %0, i64 noundef %1, i32 noundef %2, i8 noundef signext %3, ptr nocapture noundef writeonly %4) local_unnamed_addr #8 {
  %6 = tail call noalias dereferenceable_or_null(319608) ptr @calloc(i64 noundef 1, i64 noundef 319608) #43
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  store i32 -21, ptr %4, align 4, !tbaa !12
  br label %36

9:                                                ; preds = %5
  %10 = icmp slt i32 %2, 0
  %11 = select i1 %10, i32 6, i32 %2
  %12 = and i32 %11, 15
  %13 = icmp ugt i32 %12, 10
  br i1 %13, label %34, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.zip_t, ptr %6, i64 0, i32 1
  store i32 %11, ptr %15, align 8, !tbaa !301
  %16 = icmp ne ptr %0, null
  %17 = icmp ne i64 %1, 0
  %18 = and i1 %16, %17
  %19 = icmp eq i8 %3, 114
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = tail call i32 @mz_zip_reader_init_mem(ptr noundef nonnull %6, ptr noundef nonnull %0, i64 noundef %1, i32 noundef 0)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %34, label %33

24:                                               ; preds = %14
  %25 = icmp eq ptr %0, null
  %26 = icmp eq i64 %1, 0
  %27 = and i1 %25, %26
  %28 = icmp eq i8 %3, 119
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = tail call i32 @mz_zip_writer_init_heap(ptr noundef nonnull %6, i64 noundef 0, i64 noundef 1024)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30, %21
  store i32 0, ptr %4, align 4, !tbaa !12
  br label %36

34:                                               ; preds = %24, %30, %21, %9
  %35 = phi i32 [ -5, %9 ], [ -30, %21 ], [ -31, %30 ], [ -4, %24 ]
  store i32 %35, ptr %4, align 4, !tbaa !12
  tail call void @free(ptr noundef nonnull %6) #38
  br label %36

36:                                               ; preds = %34, %33, %8
  %37 = phi ptr [ null, %34 ], [ %6, %33 ], [ null, %8 ]
  ret ptr %37
}

; Function Attrs: nounwind uwtable
define dso_local i64 @zip_stream_copy(ptr noundef %0, ptr nocapture noundef writeonly %1, ptr noundef writeonly %2) local_unnamed_addr #8 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %38, label %5

5:                                                ; preds = %3
  %6 = tail call i32 @mz_zip_writer_finalize_archive(ptr noundef nonnull %0)
  %7 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %8 = load ptr, ptr %7, align 8, !tbaa !184
  %9 = load i64, ptr %0, align 8, !tbaa !204
  %10 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 12
  %11 = load ptr, ptr %10, align 8, !tbaa !284
  %12 = icmp eq ptr %11, @mz_zip_heap_write_func
  br i1 %12, label %13, label %17

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %8, i64 0, i32 8
  %15 = load ptr, ptr %14, align 8, !tbaa !218
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %29

17:                                               ; preds = %13, %5
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 3
  %19 = load i32, ptr %18, align 4, !tbaa !188
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %8, i64 0, i32 6
  %23 = load ptr, ptr %22, align 8, !tbaa !193
  %24 = icmp eq ptr %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = tail call i32 @fileno(ptr noundef nonnull %23) #38
  %27 = tail call i32 @ftruncate(i32 noundef %26, i64 noundef %9) #38
  %28 = load i64, ptr %0, align 8, !tbaa !306
  br label %29

29:                                               ; preds = %13, %17, %21, %25
  %30 = phi i64 [ %9, %13 ], [ %9, %17 ], [ %9, %21 ], [ %28, %25 ]
  %31 = icmp eq ptr %2, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  store i64 %30, ptr %2, align 8, !tbaa !46
  br label %33

33:                                               ; preds = %32, %29
  %34 = tail call noalias ptr @calloc(i64 noundef %30, i64 noundef 1) #43
  store ptr %34, ptr %1, align 8, !tbaa !72
  %35 = load ptr, ptr %7, align 8, !tbaa !305
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %35, i64 0, i32 8
  %37 = load ptr, ptr %36, align 8, !tbaa !218
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %34, ptr align 1 %37, i64 %30, i1 false)
  br label %38

38:                                               ; preds = %3, %33
  %39 = phi i64 [ %30, %33 ], [ -1, %3 ]
  ret i64 %39
}

; Function Attrs: nounwind uwtable
define dso_local void @zip_stream_close(ptr noundef %0) local_unnamed_addr #8 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @mz_zip_writer_end_internal(ptr noundef nonnull %0, i32 noundef 1)
  %5 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %0, i32 noundef 1)
  tail call void @free(ptr noundef nonnull %0) #38
  br label %6

6:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local ptr @zip_cstream_open(ptr noundef %0, i32 noundef %1, i8 noundef signext %2) local_unnamed_addr #8 {
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #38
  %5 = call ptr @zip_cstream_openwitherror(ptr noundef %0, i32 noundef %1, i8 noundef signext %2, ptr noundef nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #38
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define dso_local ptr @zip_cstream_openwitherror(ptr noundef %0, i32 noundef %1, i8 noundef signext %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #8 {
  store i32 0, ptr %3, align 4, !tbaa !12
  %5 = icmp eq ptr %0, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i32 -19, ptr %3, align 4, !tbaa !12
  br label %60

7:                                                ; preds = %4
  %8 = icmp slt i32 %1, 0
  %9 = select i1 %8, i32 6, i32 %1
  %10 = and i32 %9, 15
  %11 = icmp ugt i32 %10, 10
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  store i32 -5, ptr %3, align 4, !tbaa !12
  br label %60

13:                                               ; preds = %7
  %14 = tail call noalias dereferenceable_or_null(319608) ptr @calloc(i64 noundef 1, i64 noundef 319608) #43
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  store i32 -21, ptr %3, align 4, !tbaa !12
  br label %60

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zip_t, ptr %14, i64 0, i32 1
  store i32 %9, ptr %18, align 8, !tbaa !301
  %19 = sext i8 %2 to i32
  switch i32 %19, label %58 [
    i32 119, label %20
    i32 114, label %42
    i32 97, label %47
    i32 100, label %47
  ]

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i64 0, i32 12
  store ptr @mz_zip_file_write_func, ptr %21, align 8, !tbaa !284
  %22 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i64 0, i32 14
  store ptr %14, ptr %22, align 8, !tbaa !205
  %23 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i64 0, i32 15
  %24 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i64 0, i32 7
  store ptr @miniz_def_alloc_func, ptr %24, align 8, !tbaa !186
  %25 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i64 0, i32 8
  store ptr @miniz_def_free_func, ptr %25, align 8, !tbaa !187
  %26 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i64 0, i32 9
  store ptr @miniz_def_realloc_func, ptr %26, align 8, !tbaa !197
  %27 = tail call dereferenceable_or_null(152) ptr @calloc(i64 1, i64 152)
  store ptr %27, ptr %23, align 8, !tbaa !184
  %28 = icmp eq ptr %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i64 0, i32 3
  %31 = getelementptr inbounds %struct.mz_zip_array, ptr %27, i64 0, i32 3
  store i32 1, ptr %31, align 8, !tbaa !198
  %32 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 1, i32 3
  store i32 4, ptr %32, align 8, !tbaa !199
  %33 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 2, i32 3
  store i32 4, ptr %33, align 8, !tbaa !200
  %34 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 4
  store i32 1, ptr %34, align 4, !tbaa !202
  %35 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 5
  store i32 1, ptr %35, align 8, !tbaa !203
  %36 = getelementptr inbounds %struct.mz_zip_archive, ptr %14, i64 0, i32 4
  store i32 1, ptr %36, align 8, !tbaa !195
  store i32 2, ptr %30, align 4, !tbaa !188
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %27, i64 0, i32 6
  store ptr %0, ptr %37, align 8, !tbaa !193
  %38 = tail call i64 @ftello(ptr noundef nonnull %0)
  %39 = load ptr, ptr %23, align 8, !tbaa !184
  %40 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %39, i64 0, i32 7
  store i64 %38, ptr %40, align 8, !tbaa !220
  store i32 5, ptr %36, align 8, !tbaa !195
  br label %60

41:                                               ; preds = %20
  store i32 -31, ptr %3, align 4, !tbaa !12
  br label %59

42:                                               ; preds = %17
  %43 = or i32 %9, 2048
  %44 = tail call i32 @mz_zip_reader_init_cfile(ptr noundef nonnull %14, ptr noundef nonnull %0, i64 noundef 0, i32 noundef %43)
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %60

46:                                               ; preds = %42
  store i32 -30, ptr %3, align 4, !tbaa !12
  br label %59

47:                                               ; preds = %17, %17
  %48 = or i32 %9, 2048
  %49 = tail call i32 @mz_zip_reader_init_cfile(ptr noundef nonnull %14, ptr noundef nonnull %0, i64 noundef 0, i32 noundef %48)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  store i32 -30, ptr %3, align 4, !tbaa !12
  br label %59

52:                                               ; preds = %47
  switch i8 %2, label %60 [
    i8 100, label %53
    i8 97, label %53
  ]

53:                                               ; preds = %52, %52
  %54 = tail call i32 @mz_zip_writer_init_from_reader_v2_noreopen(ptr noundef nonnull %14, ptr noundef null, i32 noundef 0)
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  store i32 -32, ptr %3, align 4, !tbaa !12
  %57 = tail call fastcc i32 @mz_zip_reader_end_internal(ptr noundef nonnull %14, i32 noundef 1)
  br label %59

58:                                               ; preds = %17
  store i32 -4, ptr %3, align 4, !tbaa !12
  br label %59

59:                                               ; preds = %58, %56, %51, %46, %41
  tail call void @free(ptr noundef nonnull %14) #38
  br label %60

60:                                               ; preds = %16, %12, %6, %29, %59, %42, %53, %52
  %61 = phi ptr [ %14, %52 ], [ %14, %53 ], [ %14, %42 ], [ %14, %29 ], [ null, %59 ], [ null, %6 ], [ null, %12 ], [ null, %16 ]
  ret ptr %61
}

; Function Attrs: nounwind uwtable
define dso_local void @zip_cstream_close(ptr noundef %0) local_unnamed_addr #8 {
  tail call void @zip_close(ptr noundef %0)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_create(ptr noundef readonly %0, ptr nocapture noundef readonly %1, i64 noundef %2) local_unnamed_addr #8 {
  %4 = alloca %struct.mz_zip_archive, align 8
  %5 = alloca %struct.stat, align 8
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %4) #38
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %5) #38
  %6 = icmp eq ptr %0, null
  br i1 %6, label %208, label %7

7:                                                ; preds = %3
  %8 = load i8, ptr %0, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %208, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds i8, ptr %4, i64 24
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %11, i8 0, i64 56, i1 false)
  %12 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 12
  store ptr @mz_zip_file_write_func, ptr %12, align 8, !tbaa !284
  %13 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 13
  store ptr null, ptr %13, align 8, !tbaa !217
  %14 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 14
  store ptr %4, ptr %14, align 8, !tbaa !205
  %15 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 15
  %16 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 3
  %17 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 7
  store ptr @miniz_def_alloc_func, ptr %17, align 8, !tbaa !186
  %18 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 8
  store ptr @miniz_def_free_func, ptr %18, align 8, !tbaa !187
  %19 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 9
  store ptr @miniz_def_realloc_func, ptr %19, align 8, !tbaa !197
  %20 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 10
  %21 = call dereferenceable_or_null(152) ptr @calloc(i64 1, i64 152)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %4, i8 0, i64 20, i1 false)
  store ptr %21, ptr %15, align 8, !tbaa !184
  %22 = icmp eq ptr %21, null
  br i1 %22, label %208, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.mz_zip_array, ptr %21, i64 0, i32 3
  store i32 1, ptr %24, align 8, !tbaa !198
  %25 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %21, i64 0, i32 1, i32 3
  store i32 4, ptr %25, align 8, !tbaa !199
  %26 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %21, i64 0, i32 2, i32 3
  store i32 4, ptr %26, align 8, !tbaa !200
  store i32 1, ptr %11, align 8, !tbaa !195
  store i32 2, ptr %16, align 4, !tbaa !188
  %27 = call noalias ptr @fopen(ptr noundef nonnull %0, ptr noundef nonnull @.str.20)
  %28 = icmp eq ptr %27, null
  %29 = load ptr, ptr %15, align 8, !tbaa !184
  br i1 %28, label %30, label %72

30:                                               ; preds = %23
  %31 = icmp eq ptr %29, null
  %32 = load ptr, ptr %17, align 8
  %33 = icmp eq ptr %32, null
  %34 = select i1 %31, i1 true, i1 %33
  br i1 %34, label %208, label %35

35:                                               ; preds = %30
  %36 = load ptr, ptr %18, align 8, !tbaa !187
  %37 = icmp eq ptr %36, null
  br i1 %37, label %208, label %38

38:                                               ; preds = %35
  %39 = load i32, ptr %16, align 4, !tbaa !188
  %40 = and i32 %39, -2
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %42, label %208

42:                                               ; preds = %38
  store ptr null, ptr %15, align 8, !tbaa !184
  %43 = load ptr, ptr %20, align 8, !tbaa !190
  %44 = load ptr, ptr %29, align 8, !tbaa !191
  call void %36(ptr noundef %43, ptr noundef %44) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %29, i8 0, i64 32, i1 false)
  %45 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %29, i64 0, i32 1
  %46 = load ptr, ptr %18, align 8, !tbaa !187
  %47 = load ptr, ptr %20, align 8, !tbaa !190
  %48 = load ptr, ptr %45, align 8, !tbaa !191
  call void %46(ptr noundef %47, ptr noundef %48) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %45, i8 0, i64 32, i1 false)
  %49 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %29, i64 0, i32 2
  %50 = load ptr, ptr %18, align 8, !tbaa !187
  %51 = load ptr, ptr %20, align 8, !tbaa !190
  %52 = load ptr, ptr %49, align 8, !tbaa !191
  call void %50(ptr noundef %51, ptr noundef %52) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %49, i8 0, i64 32, i1 false)
  %53 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %29, i64 0, i32 6
  %54 = load ptr, ptr %53, align 8, !tbaa !193
  %55 = icmp eq ptr %54, null
  br i1 %55, label %65, label %56

56:                                               ; preds = %42
  %57 = load i32, ptr %11, align 8, !tbaa !195
  %58 = icmp eq i32 %57, 4
  br i1 %58, label %59, label %64

59:                                               ; preds = %56
  %60 = call i32 @fclose(ptr noundef nonnull %54)
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 5
  store i32 21, ptr %63, align 4, !tbaa !189
  br label %64

64:                                               ; preds = %62, %59, %56
  store ptr null, ptr %53, align 8, !tbaa !193
  br label %65

65:                                               ; preds = %64, %42
  %66 = load ptr, ptr %12, align 8, !tbaa !284
  %67 = icmp eq ptr %66, @mz_zip_heap_write_func
  br i1 %67, label %68, label %203

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %29, i64 0, i32 8
  %70 = load ptr, ptr %69, align 8, !tbaa !218
  %71 = icmp eq ptr %70, null
  br i1 %71, label %203, label %196

72:                                               ; preds = %23
  %73 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %29, i64 0, i32 6
  store ptr %27, ptr %73, align 8, !tbaa !193
  store i32 4, ptr %11, align 8, !tbaa !195
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(144) %5, i8 0, i64 144, i1 false)
  %74 = icmp eq i64 %2, 0
  br i1 %74, label %151, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.stat, ptr %5, i64 0, i32 3
  br label %80

77:                                               ; preds = %147
  %78 = add nuw i64 %81, 1
  %79 = icmp eq i64 %78, %2
  br i1 %79, label %151, label %80, !llvm.loop !363

80:                                               ; preds = %75, %77
  %81 = phi i64 [ 0, %75 ], [ %78, %77 ]
  %82 = getelementptr inbounds ptr, ptr %1, i64 %81
  %83 = load ptr, ptr %82, align 8, !tbaa !72
  %84 = icmp eq ptr %83, null
  br i1 %84, label %151, label %85

85:                                               ; preds = %80
  %86 = call i32 @stat(ptr noundef nonnull %83, ptr noundef nonnull %5) #38
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %151

88:                                               ; preds = %85
  %89 = load i32, ptr %76, align 8, !tbaa !322
  %90 = trunc i32 %89 to i16
  %91 = and i16 %90, 4095
  %92 = and i32 %89, 61440
  %93 = icmp eq i32 %92, 16384
  %94 = or i16 %91, 16384
  %95 = select i1 %93, i16 %94, i16 %91
  %96 = icmp eq i32 %92, 32768
  %97 = or i16 %95, -32768
  %98 = select i1 %96, i16 %97, i16 %95
  %99 = icmp eq i32 %92, 40960
  %100 = or i16 %98, -24576
  %101 = select i1 %99, i16 %100, i16 %98
  %102 = icmp eq i32 %92, 24576
  %103 = or i16 %101, 24576
  %104 = select i1 %102, i16 %103, i16 %101
  %105 = icmp eq i32 %92, 8192
  %106 = or i16 %104, 8192
  %107 = select i1 %105, i16 %106, i16 %104
  %108 = icmp eq i32 %92, 4096
  %109 = or i16 %107, 4096
  %110 = select i1 %108, i16 %109, i16 %107
  %111 = icmp eq i32 %92, 49152
  %112 = or i16 %110, -16384
  %113 = select i1 %111, i16 %112, i16 %110
  %114 = zext i16 %113 to i32
  %115 = shl nuw i32 %114, 16
  %116 = lshr i32 %89, 7
  %117 = and i32 %116, 1
  %118 = or i32 %115, %117
  %119 = xor i32 %118, 1
  br label %120

120:                                              ; preds = %127, %88
  %121 = phi ptr [ %83, %88 ], [ %130, %127 ]
  %122 = phi ptr [ %83, %88 ], [ %128, %127 ]
  %123 = phi i32 [ 1, %88 ], [ %129, %127 ]
  %124 = load i8, ptr %121, align 1, !tbaa !3
  switch i8 %124, label %127 [
    i8 0, label %131
    i8 47, label %125
    i8 92, label %125
  ]

125:                                              ; preds = %120, %120
  %126 = getelementptr inbounds i8, ptr %121, i64 1
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi ptr [ %126, %125 ], [ %122, %120 ]
  %129 = phi i32 [ %123, %125 ], [ 0, %120 ]
  %130 = getelementptr inbounds i8, ptr %121, i64 1
  br label %120, !llvm.loop !364

131:                                              ; preds = %120
  %132 = or i32 %119, 16
  %133 = select i1 %93, i32 %132, i32 %119
  %134 = load i8, ptr %122, align 1, !tbaa !3
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %147

136:                                              ; preds = %131
  %137 = load i8, ptr %83, align 1, !tbaa !3
  %138 = icmp eq i8 %137, 47
  br i1 %138, label %143, label %139

139:                                              ; preds = %136
  %140 = icmp eq i8 %137, 92
  %141 = icmp ne i32 %123, 0
  %142 = select i1 %140, i1 %141, i1 false
  br i1 %142, label %145, label %147

143:                                              ; preds = %136
  %144 = icmp eq i32 %123, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %143, %139
  %146 = getelementptr inbounds i8, ptr %122, i64 -1
  br label %147

147:                                              ; preds = %131, %139, %143, %145
  %148 = phi ptr [ %146, %145 ], [ %122, %143 ], [ %122, %139 ], [ %122, %131 ]
  %149 = call i32 @mz_zip_writer_add_file(ptr noundef nonnull %4, ptr noundef nonnull %148, ptr noundef nonnull %83, ptr noundef nonnull @.str.1, i16 noundef zeroext 0, i32 noundef 6, i32 noundef %133)
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %77

151:                                              ; preds = %77, %80, %85, %147, %72
  %152 = phi i32 [ 0, %72 ], [ 0, %77 ], [ -2, %80 ], [ -19, %85 ], [ -19, %147 ]
  %153 = call i32 @mz_zip_writer_finalize_archive(ptr noundef nonnull %4)
  %154 = load ptr, ptr %15, align 8, !tbaa !184
  %155 = icmp eq ptr %154, null
  %156 = load ptr, ptr %17, align 8
  %157 = icmp eq ptr %156, null
  %158 = select i1 %155, i1 true, i1 %157
  br i1 %158, label %208, label %159

159:                                              ; preds = %151
  %160 = load ptr, ptr %18, align 8, !tbaa !187
  %161 = icmp eq ptr %160, null
  br i1 %161, label %208, label %162

162:                                              ; preds = %159
  %163 = load i32, ptr %16, align 4, !tbaa !188
  %164 = and i32 %163, -2
  %165 = icmp eq i32 %164, 2
  br i1 %165, label %166, label %208

166:                                              ; preds = %162
  store ptr null, ptr %15, align 8, !tbaa !184
  %167 = load ptr, ptr %20, align 8, !tbaa !190
  %168 = load ptr, ptr %154, align 8, !tbaa !191
  call void %160(ptr noundef %167, ptr noundef %168) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %154, i8 0, i64 32, i1 false)
  %169 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %154, i64 0, i32 1
  %170 = load ptr, ptr %18, align 8, !tbaa !187
  %171 = load ptr, ptr %20, align 8, !tbaa !190
  %172 = load ptr, ptr %169, align 8, !tbaa !191
  call void %170(ptr noundef %171, ptr noundef %172) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %169, i8 0, i64 32, i1 false)
  %173 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %154, i64 0, i32 2
  %174 = load ptr, ptr %18, align 8, !tbaa !187
  %175 = load ptr, ptr %20, align 8, !tbaa !190
  %176 = load ptr, ptr %173, align 8, !tbaa !191
  call void %174(ptr noundef %175, ptr noundef %176) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %173, i8 0, i64 32, i1 false)
  %177 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %154, i64 0, i32 6
  %178 = load ptr, ptr %177, align 8, !tbaa !193
  %179 = icmp eq ptr %178, null
  br i1 %179, label %189, label %180

180:                                              ; preds = %166
  %181 = load i32, ptr %11, align 8, !tbaa !195
  %182 = icmp eq i32 %181, 4
  br i1 %182, label %183, label %188

183:                                              ; preds = %180
  %184 = call i32 @fclose(ptr noundef nonnull %178)
  %185 = icmp eq i32 %184, -1
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  %187 = getelementptr inbounds %struct.mz_zip_archive, ptr %4, i64 0, i32 5
  store i32 21, ptr %187, align 4, !tbaa !189
  br label %188

188:                                              ; preds = %186, %183, %180
  store ptr null, ptr %177, align 8, !tbaa !193
  br label %189

189:                                              ; preds = %188, %166
  %190 = load ptr, ptr %12, align 8, !tbaa !284
  %191 = icmp eq ptr %190, @mz_zip_heap_write_func
  br i1 %191, label %192, label %203

192:                                              ; preds = %189
  %193 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %154, i64 0, i32 8
  %194 = load ptr, ptr %193, align 8, !tbaa !218
  %195 = icmp eq ptr %194, null
  br i1 %195, label %203, label %196

196:                                              ; preds = %192, %68
  %197 = phi ptr [ %70, %68 ], [ %194, %192 ]
  %198 = phi ptr [ %69, %68 ], [ %193, %192 ]
  %199 = phi ptr [ %29, %68 ], [ %154, %192 ]
  %200 = phi i32 [ -1, %68 ], [ %152, %192 ]
  %201 = load ptr, ptr %18, align 8, !tbaa !187
  %202 = load ptr, ptr %20, align 8, !tbaa !190
  call void %201(ptr noundef %202, ptr noundef nonnull %197) #38
  store ptr null, ptr %198, align 8, !tbaa !218
  br label %203

203:                                              ; preds = %196, %189, %192, %65, %68
  %204 = phi ptr [ %29, %68 ], [ %29, %65 ], [ %154, %192 ], [ %154, %189 ], [ %199, %196 ]
  %205 = phi i32 [ -1, %68 ], [ -1, %65 ], [ %152, %192 ], [ %152, %189 ], [ %200, %196 ]
  %206 = load ptr, ptr %18, align 8, !tbaa !187
  %207 = load ptr, ptr %20, align 8, !tbaa !190
  call void %206(ptr noundef %207, ptr noundef nonnull %204) #38
  br label %208

208:                                              ; preds = %203, %151, %159, %162, %38, %35, %30, %10, %3, %7
  %209 = phi i32 [ -22, %7 ], [ -22, %3 ], [ -1, %10 ], [ -1, %30 ], [ -1, %35 ], [ -1, %38 ], [ %152, %162 ], [ %152, %159 ], [ %152, %151 ], [ %205, %203 ]
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %5) #38
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %4) #38
  ret i32 %209
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zip_extract(ptr noundef %0, ptr noundef readonly %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #8 {
  %5 = alloca %struct.mz_zip_archive, align 8
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %5) #38
  %6 = icmp ne ptr %0, null
  %7 = icmp ne ptr %1, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %14

9:                                                ; preds = %4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %5, i8 0, i64 112, i1 false)
  %10 = call i32 @mz_zip_reader_init_file_v2(ptr noundef nonnull %5, ptr noundef nonnull %0, i32 noundef 0, i64 noundef 0, i64 noundef 0)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = call fastcc i32 @zip_archive_extract(ptr noundef nonnull %5, ptr noundef nonnull %1, ptr noundef %2, ptr noundef %3)
  br label %14

14:                                               ; preds = %9, %4, %12
  %15 = phi i32 [ %13, %12 ], [ -22, %4 ], [ -1, %9 ]
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %5) #38
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @tdefl_compress_block(ptr noundef %0, i32 noundef %1) unnamed_addr #8 {
  %3 = alloca [320 x i8], align 16
  %4 = alloca [320 x i8], align 16
  %5 = alloca [33 x i32], align 16
  %6 = alloca [33 x i32], align 16
  %7 = alloca [33 x i32], align 16
  %8 = alloca [33 x i32], align 16
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %364, label %10

10:                                               ; preds = %2
  %11 = getelementptr %struct.tdefl_compressor, ptr %0, i64 0, i32 38
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(144) %11, i8 8, i64 144, i1 false), !tbaa !3
  %12 = getelementptr i8, ptr %0, i64 36826
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(112) %12, i8 9, i64 112, i1 false), !tbaa !3
  %13 = getelementptr i8, ptr %0, i64 36938
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(24) %13, i8 7, i64 24, i1 false), !tbaa !3
  %14 = getelementptr i8, ptr %0, i64 36962
  store i64 578721382704613384, ptr %14, align 1
  %15 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %15, i8 5, i64 32, i1 false)
  call void @llvm.lifetime.start.p0(i64 132, ptr nonnull %7) #38
  call void @llvm.lifetime.start.p0(i64 132, ptr nonnull %8) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(132) %7, i8 0, i64 132, i1 false)
  br label %16

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %45, %16 ]
  %18 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 %17
  %19 = load i8, ptr %18, align 1, !tbaa !3
  %20 = zext i8 %19 to i64
  %21 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !12
  %23 = add nsw i32 %22, 1
  store i32 %23, ptr %21, align 4, !tbaa !12
  %24 = or i64 %17, 1
  %25 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !3
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !12
  %30 = add nsw i32 %29, 1
  store i32 %30, ptr %28, align 4, !tbaa !12
  %31 = or i64 %17, 2
  %32 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 %31
  %33 = load i8, ptr %32, align 1, !tbaa !3
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !12
  %37 = add nsw i32 %36, 1
  store i32 %37, ptr %35, align 4, !tbaa !12
  %38 = or i64 %17, 3
  %39 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 %38
  %40 = load i8, ptr %39, align 1, !tbaa !3
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 %41
  %43 = load i32, ptr %42, align 4, !tbaa !12
  %44 = add nsw i32 %43, 1
  store i32 %44, ptr %42, align 4, !tbaa !12
  %45 = add nuw nsw i64 %17, 4
  %46 = icmp eq i64 %45, 288
  br i1 %46, label %47, label %16, !llvm.loop !365

47:                                               ; preds = %16
  %48 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 1
  store i32 0, ptr %48, align 4, !tbaa !12
  %49 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 1
  %50 = load i32, ptr %49, align 4, !tbaa !12
  %51 = shl i32 %50, 1
  %52 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 2
  store i32 %51, ptr %52, align 8, !tbaa !12
  %53 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 2
  %54 = load i32, ptr %53, align 8, !tbaa !12
  %55 = add nsw i32 %54, %51
  %56 = shl i32 %55, 1
  %57 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 3
  store i32 %56, ptr %57, align 4, !tbaa !12
  %58 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 3
  %59 = load i32, ptr %58, align 4, !tbaa !12
  %60 = add nsw i32 %59, %56
  %61 = shl i32 %60, 1
  %62 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 4
  store i32 %61, ptr %62, align 16, !tbaa !12
  %63 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 4
  %64 = load i32, ptr %63, align 16, !tbaa !12
  %65 = add nsw i32 %64, %61
  %66 = shl i32 %65, 1
  %67 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 5
  store i32 %66, ptr %67, align 4, !tbaa !12
  %68 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 5
  %69 = load i32, ptr %68, align 4, !tbaa !12
  %70 = add nsw i32 %69, %66
  %71 = shl i32 %70, 1
  %72 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 6
  store i32 %71, ptr %72, align 8, !tbaa !12
  %73 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 6
  %74 = load i32, ptr %73, align 8, !tbaa !12
  %75 = add nsw i32 %74, %71
  %76 = shl i32 %75, 1
  %77 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 7
  store i32 %76, ptr %77, align 4, !tbaa !12
  %78 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 7
  %79 = load i32, ptr %78, align 4, !tbaa !12
  %80 = add nsw i32 %79, %76
  %81 = shl i32 %80, 1
  %82 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 8
  store i32 %81, ptr %82, align 16, !tbaa !12
  %83 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 8
  %84 = load i32, ptr %83, align 16, !tbaa !12
  %85 = add nsw i32 %84, %81
  %86 = shl i32 %85, 1
  %87 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 9
  store i32 %86, ptr %87, align 4, !tbaa !12
  %88 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 9
  %89 = load i32, ptr %88, align 4, !tbaa !12
  %90 = add nsw i32 %89, %86
  %91 = shl i32 %90, 1
  %92 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 10
  store i32 %91, ptr %92, align 8, !tbaa !12
  %93 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 10
  %94 = load i32, ptr %93, align 8, !tbaa !12
  %95 = add nsw i32 %94, %91
  %96 = shl i32 %95, 1
  %97 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 11
  store i32 %96, ptr %97, align 4, !tbaa !12
  %98 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 11
  %99 = load i32, ptr %98, align 4, !tbaa !12
  %100 = add nsw i32 %99, %96
  %101 = shl i32 %100, 1
  %102 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 12
  store i32 %101, ptr %102, align 16, !tbaa !12
  %103 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 12
  %104 = load i32, ptr %103, align 16, !tbaa !12
  %105 = add nsw i32 %104, %101
  %106 = shl i32 %105, 1
  %107 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 13
  store i32 %106, ptr %107, align 4, !tbaa !12
  %108 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 13
  %109 = load i32, ptr %108, align 4, !tbaa !12
  %110 = add nsw i32 %109, %106
  %111 = shl i32 %110, 1
  %112 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 14
  store i32 %111, ptr %112, align 8, !tbaa !12
  %113 = getelementptr inbounds [33 x i32], ptr %7, i64 0, i64 14
  %114 = load i32, ptr %113, align 8, !tbaa !12
  %115 = add nsw i32 %114, %111
  %116 = shl i32 %115, 1
  %117 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 15
  store i32 %116, ptr %117, align 4, !tbaa !12
  br label %118

118:                                              ; preds = %172, %47
  %119 = phi i64 [ %173, %172 ], [ 0, %47 ]
  %120 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 %119
  %121 = load i8, ptr %120, align 1, !tbaa !3
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %172, label %123

123:                                              ; preds = %118
  %124 = zext i8 %121 to i32
  %125 = zext i8 %121 to i64
  %126 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %125
  %127 = load i32, ptr %126, align 4, !tbaa !12
  %128 = add i32 %127, 1
  store i32 %128, ptr %126, align 4, !tbaa !12
  %129 = and i32 %124, 3
  %130 = icmp ult i8 %121, 4
  br i1 %130, label %153, label %131

131:                                              ; preds = %123
  %132 = and i32 %124, 252
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i32 [ %127, %131 ], [ %150, %133 ]
  %135 = phi i32 [ 0, %131 ], [ %149, %133 ]
  %136 = phi i32 [ 0, %131 ], [ %151, %133 ]
  %137 = shl i32 %135, 3
  %138 = shl i32 %134, 2
  %139 = and i32 %138, 4
  %140 = or i32 %137, %139
  %141 = and i32 %134, 2
  %142 = or i32 %140, %141
  %143 = lshr i32 %134, 2
  %144 = and i32 %143, 1
  %145 = or i32 %142, %144
  %146 = lshr i32 %134, 3
  %147 = shl i32 %145, 1
  %148 = and i32 %146, 1
  %149 = or i32 %147, %148
  %150 = lshr i32 %134, 4
  %151 = add i32 %136, 4
  %152 = icmp eq i32 %151, %132
  br i1 %152, label %153, label %133, !llvm.loop !366

153:                                              ; preds = %133, %123
  %154 = phi i32 [ undef, %123 ], [ %149, %133 ]
  %155 = phi i32 [ %127, %123 ], [ %150, %133 ]
  %156 = phi i32 [ 0, %123 ], [ %149, %133 ]
  %157 = icmp eq i32 %129, 0
  br i1 %157, label %168, label %158

158:                                              ; preds = %153, %158
  %159 = phi i32 [ %165, %158 ], [ %155, %153 ]
  %160 = phi i32 [ %164, %158 ], [ %156, %153 ]
  %161 = phi i32 [ %166, %158 ], [ 0, %153 ]
  %162 = shl i32 %160, 1
  %163 = and i32 %159, 1
  %164 = or i32 %162, %163
  %165 = lshr i32 %159, 1
  %166 = add i32 %161, 1
  %167 = icmp eq i32 %166, %129
  br i1 %167, label %168, label %158, !llvm.loop !367

168:                                              ; preds = %158, %153
  %169 = phi i32 [ %154, %153 ], [ %164, %158 ]
  %170 = trunc i32 %169 to i16
  %171 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 37, i64 0, i64 %119
  store i16 %170, ptr %171, align 2, !tbaa !103
  br label %172

172:                                              ; preds = %168, %118
  %173 = add nuw nsw i64 %119, 1
  %174 = icmp eq i64 %173, 288
  br i1 %174, label %175, label %118, !llvm.loop !368

175:                                              ; preds = %172
  call void @llvm.lifetime.end.p0(i64 132, ptr nonnull %8) #38
  call void @llvm.lifetime.end.p0(i64 132, ptr nonnull %7) #38
  call void @llvm.lifetime.start.p0(i64 132, ptr nonnull %5) #38
  call void @llvm.lifetime.start.p0(i64 132, ptr nonnull %6) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(132) %5, i8 0, i64 132, i1 false)
  br label %176

176:                                              ; preds = %176, %175
  %177 = phi i64 [ 0, %175 ], [ %205, %176 ]
  %178 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 %177
  %179 = load i8, ptr %178, align 1, !tbaa !3
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 %180
  %182 = load i32, ptr %181, align 4, !tbaa !12
  %183 = add nsw i32 %182, 1
  store i32 %183, ptr %181, align 4, !tbaa !12
  %184 = or i64 %177, 1
  %185 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !3
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 %187
  %189 = load i32, ptr %188, align 4, !tbaa !12
  %190 = add nsw i32 %189, 1
  store i32 %190, ptr %188, align 4, !tbaa !12
  %191 = or i64 %177, 2
  %192 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 %191
  %193 = load i8, ptr %192, align 1, !tbaa !3
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 %194
  %196 = load i32, ptr %195, align 4, !tbaa !12
  %197 = add nsw i32 %196, 1
  store i32 %197, ptr %195, align 4, !tbaa !12
  %198 = or i64 %177, 3
  %199 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 %198
  %200 = load i8, ptr %199, align 1, !tbaa !3
  %201 = zext i8 %200 to i64
  %202 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 %201
  %203 = load i32, ptr %202, align 4, !tbaa !12
  %204 = add nsw i32 %203, 1
  store i32 %204, ptr %202, align 4, !tbaa !12
  %205 = add nuw nsw i64 %177, 4
  %206 = icmp eq i64 %205, 32
  br i1 %206, label %207, label %176, !llvm.loop !365

207:                                              ; preds = %176
  %208 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 1
  store i32 0, ptr %208, align 4, !tbaa !12
  %209 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 1
  %210 = load i32, ptr %209, align 4, !tbaa !12
  %211 = shl i32 %210, 1
  %212 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 2
  store i32 %211, ptr %212, align 8, !tbaa !12
  %213 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 2
  %214 = load i32, ptr %213, align 8, !tbaa !12
  %215 = add nsw i32 %214, %211
  %216 = shl i32 %215, 1
  %217 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 3
  store i32 %216, ptr %217, align 4, !tbaa !12
  %218 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 3
  %219 = load i32, ptr %218, align 4, !tbaa !12
  %220 = add nsw i32 %219, %216
  %221 = shl i32 %220, 1
  %222 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 4
  store i32 %221, ptr %222, align 16, !tbaa !12
  %223 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 4
  %224 = load i32, ptr %223, align 16, !tbaa !12
  %225 = add nsw i32 %224, %221
  %226 = shl i32 %225, 1
  %227 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 5
  store i32 %226, ptr %227, align 4, !tbaa !12
  %228 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 5
  %229 = load i32, ptr %228, align 4, !tbaa !12
  %230 = add nsw i32 %229, %226
  %231 = shl i32 %230, 1
  %232 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 6
  store i32 %231, ptr %232, align 8, !tbaa !12
  %233 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 6
  %234 = load i32, ptr %233, align 8, !tbaa !12
  %235 = add nsw i32 %234, %231
  %236 = shl i32 %235, 1
  %237 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 7
  store i32 %236, ptr %237, align 4, !tbaa !12
  %238 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 7
  %239 = load i32, ptr %238, align 4, !tbaa !12
  %240 = add nsw i32 %239, %236
  %241 = shl i32 %240, 1
  %242 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 8
  store i32 %241, ptr %242, align 16, !tbaa !12
  %243 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 8
  %244 = load i32, ptr %243, align 16, !tbaa !12
  %245 = add nsw i32 %244, %241
  %246 = shl i32 %245, 1
  %247 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 9
  store i32 %246, ptr %247, align 4, !tbaa !12
  %248 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 9
  %249 = load i32, ptr %248, align 4, !tbaa !12
  %250 = add nsw i32 %249, %246
  %251 = shl i32 %250, 1
  %252 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 10
  store i32 %251, ptr %252, align 8, !tbaa !12
  %253 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 10
  %254 = load i32, ptr %253, align 8, !tbaa !12
  %255 = add nsw i32 %254, %251
  %256 = shl i32 %255, 1
  %257 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 11
  store i32 %256, ptr %257, align 4, !tbaa !12
  %258 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 11
  %259 = load i32, ptr %258, align 4, !tbaa !12
  %260 = add nsw i32 %259, %256
  %261 = shl i32 %260, 1
  %262 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 12
  store i32 %261, ptr %262, align 16, !tbaa !12
  %263 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 12
  %264 = load i32, ptr %263, align 16, !tbaa !12
  %265 = add nsw i32 %264, %261
  %266 = shl i32 %265, 1
  %267 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 13
  store i32 %266, ptr %267, align 4, !tbaa !12
  %268 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 13
  %269 = load i32, ptr %268, align 4, !tbaa !12
  %270 = add nsw i32 %269, %266
  %271 = shl i32 %270, 1
  %272 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 14
  store i32 %271, ptr %272, align 8, !tbaa !12
  %273 = getelementptr inbounds [33 x i32], ptr %5, i64 0, i64 14
  %274 = load i32, ptr %273, align 8, !tbaa !12
  %275 = add nsw i32 %274, %271
  %276 = shl i32 %275, 1
  %277 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 15
  store i32 %276, ptr %277, align 4, !tbaa !12
  br label %278

278:                                              ; preds = %332, %207
  %279 = phi i64 [ %333, %332 ], [ 0, %207 ]
  %280 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 %279
  %281 = load i8, ptr %280, align 1, !tbaa !3
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %332, label %283

283:                                              ; preds = %278
  %284 = zext i8 %281 to i32
  %285 = zext i8 %281 to i64
  %286 = getelementptr inbounds [33 x i32], ptr %6, i64 0, i64 %285
  %287 = load i32, ptr %286, align 4, !tbaa !12
  %288 = add i32 %287, 1
  store i32 %288, ptr %286, align 4, !tbaa !12
  %289 = and i32 %284, 3
  %290 = icmp ult i8 %281, 4
  br i1 %290, label %313, label %291

291:                                              ; preds = %283
  %292 = and i32 %284, 252
  br label %293

293:                                              ; preds = %293, %291
  %294 = phi i32 [ %287, %291 ], [ %310, %293 ]
  %295 = phi i32 [ 0, %291 ], [ %309, %293 ]
  %296 = phi i32 [ 0, %291 ], [ %311, %293 ]
  %297 = shl i32 %295, 3
  %298 = shl i32 %294, 2
  %299 = and i32 %298, 4
  %300 = or i32 %297, %299
  %301 = and i32 %294, 2
  %302 = or i32 %300, %301
  %303 = lshr i32 %294, 2
  %304 = and i32 %303, 1
  %305 = or i32 %302, %304
  %306 = lshr i32 %294, 3
  %307 = shl i32 %305, 1
  %308 = and i32 %306, 1
  %309 = or i32 %307, %308
  %310 = lshr i32 %294, 4
  %311 = add i32 %296, 4
  %312 = icmp eq i32 %311, %292
  br i1 %312, label %313, label %293, !llvm.loop !366

313:                                              ; preds = %293, %283
  %314 = phi i32 [ undef, %283 ], [ %309, %293 ]
  %315 = phi i32 [ %287, %283 ], [ %310, %293 ]
  %316 = phi i32 [ 0, %283 ], [ %309, %293 ]
  %317 = icmp eq i32 %289, 0
  br i1 %317, label %328, label %318

318:                                              ; preds = %313, %318
  %319 = phi i32 [ %325, %318 ], [ %315, %313 ]
  %320 = phi i32 [ %324, %318 ], [ %316, %313 ]
  %321 = phi i32 [ %326, %318 ], [ 0, %313 ]
  %322 = shl i32 %320, 1
  %323 = and i32 %319, 1
  %324 = or i32 %322, %323
  %325 = lshr i32 %319, 1
  %326 = add i32 %321, 1
  %327 = icmp eq i32 %326, %289
  br i1 %327, label %328, label %318, !llvm.loop !369

328:                                              ; preds = %318, %313
  %329 = phi i32 [ %314, %313 ], [ %324, %318 ]
  %330 = trunc i32 %329 to i16
  %331 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 37, i64 1, i64 %279
  store i16 %330, ptr %331, align 2, !tbaa !103
  br label %332

332:                                              ; preds = %328, %278
  %333 = add nuw nsw i64 %279, 1
  %334 = icmp eq i64 %333, 32
  br i1 %334, label %335, label %278, !llvm.loop !368

335:                                              ; preds = %332
  call void @llvm.lifetime.end.p0(i64 132, ptr nonnull %6) #38
  call void @llvm.lifetime.end.p0(i64 132, ptr nonnull %5) #38
  %336 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 16
  %337 = load i32, ptr %336, align 4, !tbaa !161
  %338 = shl nuw i32 1, %337
  %339 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 17
  %340 = load i32, ptr %339, align 8, !tbaa !162
  %341 = or i32 %340, %338
  store i32 %341, ptr %339, align 8, !tbaa !162
  %342 = add i32 %337, 2
  store i32 %342, ptr %336, align 4, !tbaa !161
  %343 = icmp ugt i32 %342, 7
  br i1 %343, label %344, label %1147

344:                                              ; preds = %335
  %345 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  %346 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  br label %347

347:                                              ; preds = %358, %344
  %348 = phi i32 [ %342, %344 ], [ %362, %358 ]
  %349 = phi i32 [ %341, %344 ], [ %361, %358 ]
  %350 = load ptr, ptr %345, align 8, !tbaa !33
  %351 = load ptr, ptr %346, align 8, !tbaa !34
  %352 = icmp ult ptr %350, %351
  br i1 %352, label %353, label %358

353:                                              ; preds = %347
  %354 = trunc i32 %349 to i8
  %355 = getelementptr inbounds i8, ptr %350, i64 1
  store ptr %355, ptr %345, align 8, !tbaa !33
  store i8 %354, ptr %350, align 1, !tbaa !3
  %356 = load i32, ptr %339, align 8, !tbaa !162
  %357 = load i32, ptr %336, align 4, !tbaa !161
  br label %358

358:                                              ; preds = %353, %347
  %359 = phi i32 [ %357, %353 ], [ %348, %347 ]
  %360 = phi i32 [ %356, %353 ], [ %349, %347 ]
  %361 = lshr i32 %360, 8
  store i32 %361, ptr %339, align 8, !tbaa !162
  %362 = add i32 %359, -8
  store i32 %362, ptr %336, align 4, !tbaa !161
  %363 = icmp ugt i32 %362, 7
  br i1 %363, label %347, label %1147, !llvm.loop !370

364:                                              ; preds = %2
  call void @llvm.lifetime.start.p0(i64 320, ptr nonnull %3) #38
  call void @llvm.lifetime.start.p0(i64 320, ptr nonnull %4) #38
  %365 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 0, i64 256
  store i16 1, ptr %365, align 2, !tbaa !103
  tail call fastcc void @tdefl_optimize_huffman_table(ptr noundef %0, i32 noundef 0, i32 noundef 288, i32 noundef 15, i32 noundef 0)
  tail call fastcc void @tdefl_optimize_huffman_table(ptr noundef %0, i32 noundef 1, i32 noundef 32, i32 noundef 15, i32 noundef 0)
  %366 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38
  %367 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 285
  %368 = load i8, ptr %367, align 1, !tbaa !3
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %370, label %483, !llvm.loop !371

370:                                              ; preds = %364
  %371 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 284
  %372 = load i8, ptr %371, align 1, !tbaa !3
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %374, label %483, !llvm.loop !371

374:                                              ; preds = %370
  %375 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 283
  %376 = load i8, ptr %375, align 1, !tbaa !3
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %378, label %483, !llvm.loop !371

378:                                              ; preds = %374
  %379 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 282
  %380 = load i8, ptr %379, align 1, !tbaa !3
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %382, label %483, !llvm.loop !371

382:                                              ; preds = %378
  %383 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 281
  %384 = load i8, ptr %383, align 1, !tbaa !3
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %386, label %483, !llvm.loop !371

386:                                              ; preds = %382
  %387 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 280
  %388 = load i8, ptr %387, align 1, !tbaa !3
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %390, label %483, !llvm.loop !371

390:                                              ; preds = %386
  %391 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 279
  %392 = load i8, ptr %391, align 1, !tbaa !3
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %394, label %483, !llvm.loop !371

394:                                              ; preds = %390
  %395 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 278
  %396 = load i8, ptr %395, align 1, !tbaa !3
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %398, label %483, !llvm.loop !371

398:                                              ; preds = %394
  %399 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 277
  %400 = load i8, ptr %399, align 1, !tbaa !3
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %402, label %483, !llvm.loop !371

402:                                              ; preds = %398
  %403 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 276
  %404 = load i8, ptr %403, align 1, !tbaa !3
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %406, label %483, !llvm.loop !371

406:                                              ; preds = %402
  %407 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 275
  %408 = load i8, ptr %407, align 1, !tbaa !3
  %409 = icmp eq i8 %408, 0
  br i1 %409, label %410, label %483, !llvm.loop !371

410:                                              ; preds = %406
  %411 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 274
  %412 = load i8, ptr %411, align 1, !tbaa !3
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %414, label %483, !llvm.loop !371

414:                                              ; preds = %410
  %415 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 273
  %416 = load i8, ptr %415, align 1, !tbaa !3
  %417 = icmp eq i8 %416, 0
  br i1 %417, label %418, label %483, !llvm.loop !371

418:                                              ; preds = %414
  %419 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 272
  %420 = load i8, ptr %419, align 1, !tbaa !3
  %421 = icmp eq i8 %420, 0
  br i1 %421, label %422, label %483, !llvm.loop !371

422:                                              ; preds = %418
  %423 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 271
  %424 = load i8, ptr %423, align 1, !tbaa !3
  %425 = icmp eq i8 %424, 0
  br i1 %425, label %426, label %483, !llvm.loop !371

426:                                              ; preds = %422
  %427 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 270
  %428 = load i8, ptr %427, align 1, !tbaa !3
  %429 = icmp eq i8 %428, 0
  br i1 %429, label %430, label %483, !llvm.loop !371

430:                                              ; preds = %426
  %431 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 269
  %432 = load i8, ptr %431, align 1, !tbaa !3
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %434, label %483, !llvm.loop !371

434:                                              ; preds = %430
  %435 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 268
  %436 = load i8, ptr %435, align 1, !tbaa !3
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %438, label %483, !llvm.loop !371

438:                                              ; preds = %434
  %439 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 267
  %440 = load i8, ptr %439, align 1, !tbaa !3
  %441 = icmp eq i8 %440, 0
  br i1 %441, label %442, label %483, !llvm.loop !371

442:                                              ; preds = %438
  %443 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 266
  %444 = load i8, ptr %443, align 1, !tbaa !3
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %446, label %483, !llvm.loop !371

446:                                              ; preds = %442
  %447 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 265
  %448 = load i8, ptr %447, align 1, !tbaa !3
  %449 = icmp eq i8 %448, 0
  br i1 %449, label %450, label %483, !llvm.loop !371

450:                                              ; preds = %446
  %451 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 264
  %452 = load i8, ptr %451, align 1, !tbaa !3
  %453 = icmp eq i8 %452, 0
  br i1 %453, label %454, label %483, !llvm.loop !371

454:                                              ; preds = %450
  %455 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 263
  %456 = load i8, ptr %455, align 1, !tbaa !3
  %457 = icmp eq i8 %456, 0
  br i1 %457, label %458, label %483, !llvm.loop !371

458:                                              ; preds = %454
  %459 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 262
  %460 = load i8, ptr %459, align 1, !tbaa !3
  %461 = icmp eq i8 %460, 0
  br i1 %461, label %462, label %483, !llvm.loop !371

462:                                              ; preds = %458
  %463 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 261
  %464 = load i8, ptr %463, align 1, !tbaa !3
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %466, label %483, !llvm.loop !371

466:                                              ; preds = %462
  %467 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 260
  %468 = load i8, ptr %467, align 1, !tbaa !3
  %469 = icmp eq i8 %468, 0
  br i1 %469, label %470, label %483, !llvm.loop !371

470:                                              ; preds = %466
  %471 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 259
  %472 = load i8, ptr %471, align 1, !tbaa !3
  %473 = icmp eq i8 %472, 0
  br i1 %473, label %474, label %483, !llvm.loop !371

474:                                              ; preds = %470
  %475 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 258
  %476 = load i8, ptr %475, align 1, !tbaa !3
  %477 = icmp eq i8 %476, 0
  br i1 %477, label %478, label %483, !llvm.loop !371

478:                                              ; preds = %474
  %479 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 257
  %480 = load i8, ptr %479, align 1, !tbaa !3
  %481 = icmp eq i8 %480, 0
  %482 = select i1 %481, i32 257, i32 258
  br label %483, !llvm.loop !371

483:                                              ; preds = %478, %474, %470, %466, %462, %458, %454, %450, %446, %442, %438, %434, %430, %426, %422, %418, %414, %410, %406, %402, %398, %394, %390, %386, %382, %378, %374, %370, %364
  %484 = phi i32 [ 286, %364 ], [ 285, %370 ], [ 284, %374 ], [ 283, %378 ], [ 282, %382 ], [ 281, %386 ], [ 280, %390 ], [ 279, %394 ], [ 278, %398 ], [ 277, %402 ], [ 276, %406 ], [ 275, %410 ], [ 274, %414 ], [ 273, %418 ], [ 272, %422 ], [ 271, %426 ], [ 270, %430 ], [ 269, %434 ], [ 268, %438 ], [ 267, %442 ], [ 266, %446 ], [ 265, %450 ], [ 264, %454 ], [ 263, %458 ], [ 262, %462 ], [ 261, %466 ], [ 260, %470 ], [ 259, %474 ], [ %482, %478 ]
  %485 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 29
  %486 = load i8, ptr %485, align 1, !tbaa !3
  %487 = icmp eq i8 %486, 0
  br i1 %487, label %488, label %601, !llvm.loop !372

488:                                              ; preds = %483
  %489 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 28
  %490 = load i8, ptr %489, align 1, !tbaa !3
  %491 = icmp eq i8 %490, 0
  br i1 %491, label %492, label %601, !llvm.loop !372

492:                                              ; preds = %488
  %493 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 27
  %494 = load i8, ptr %493, align 1, !tbaa !3
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %496, label %601, !llvm.loop !372

496:                                              ; preds = %492
  %497 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 26
  %498 = load i8, ptr %497, align 1, !tbaa !3
  %499 = icmp eq i8 %498, 0
  br i1 %499, label %500, label %601, !llvm.loop !372

500:                                              ; preds = %496
  %501 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 25
  %502 = load i8, ptr %501, align 1, !tbaa !3
  %503 = icmp eq i8 %502, 0
  br i1 %503, label %504, label %601, !llvm.loop !372

504:                                              ; preds = %500
  %505 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 24
  %506 = load i8, ptr %505, align 1, !tbaa !3
  %507 = icmp eq i8 %506, 0
  br i1 %507, label %508, label %601, !llvm.loop !372

508:                                              ; preds = %504
  %509 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 23
  %510 = load i8, ptr %509, align 1, !tbaa !3
  %511 = icmp eq i8 %510, 0
  br i1 %511, label %512, label %601, !llvm.loop !372

512:                                              ; preds = %508
  %513 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 22
  %514 = load i8, ptr %513, align 1, !tbaa !3
  %515 = icmp eq i8 %514, 0
  br i1 %515, label %516, label %601, !llvm.loop !372

516:                                              ; preds = %512
  %517 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 21
  %518 = load i8, ptr %517, align 1, !tbaa !3
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %520, label %601, !llvm.loop !372

520:                                              ; preds = %516
  %521 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 20
  %522 = load i8, ptr %521, align 1, !tbaa !3
  %523 = icmp eq i8 %522, 0
  br i1 %523, label %524, label %601, !llvm.loop !372

524:                                              ; preds = %520
  %525 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 19
  %526 = load i8, ptr %525, align 1, !tbaa !3
  %527 = icmp eq i8 %526, 0
  br i1 %527, label %528, label %601, !llvm.loop !372

528:                                              ; preds = %524
  %529 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 18
  %530 = load i8, ptr %529, align 1, !tbaa !3
  %531 = icmp eq i8 %530, 0
  br i1 %531, label %532, label %601, !llvm.loop !372

532:                                              ; preds = %528
  %533 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 17
  %534 = load i8, ptr %533, align 1, !tbaa !3
  %535 = icmp eq i8 %534, 0
  br i1 %535, label %536, label %601, !llvm.loop !372

536:                                              ; preds = %532
  %537 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 16
  %538 = load i8, ptr %537, align 1, !tbaa !3
  %539 = icmp eq i8 %538, 0
  br i1 %539, label %540, label %601, !llvm.loop !372

540:                                              ; preds = %536
  %541 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 15
  %542 = load i8, ptr %541, align 1, !tbaa !3
  %543 = icmp eq i8 %542, 0
  br i1 %543, label %544, label %601, !llvm.loop !372

544:                                              ; preds = %540
  %545 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 14
  %546 = load i8, ptr %545, align 1, !tbaa !3
  %547 = icmp eq i8 %546, 0
  br i1 %547, label %548, label %601, !llvm.loop !372

548:                                              ; preds = %544
  %549 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 13
  %550 = load i8, ptr %549, align 1, !tbaa !3
  %551 = icmp eq i8 %550, 0
  br i1 %551, label %552, label %601, !llvm.loop !372

552:                                              ; preds = %548
  %553 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 12
  %554 = load i8, ptr %553, align 1, !tbaa !3
  %555 = icmp eq i8 %554, 0
  br i1 %555, label %556, label %601, !llvm.loop !372

556:                                              ; preds = %552
  %557 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 11
  %558 = load i8, ptr %557, align 1, !tbaa !3
  %559 = icmp eq i8 %558, 0
  br i1 %559, label %560, label %601, !llvm.loop !372

560:                                              ; preds = %556
  %561 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 10
  %562 = load i8, ptr %561, align 1, !tbaa !3
  %563 = icmp eq i8 %562, 0
  br i1 %563, label %564, label %601, !llvm.loop !372

564:                                              ; preds = %560
  %565 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 9
  %566 = load i8, ptr %565, align 1, !tbaa !3
  %567 = icmp eq i8 %566, 0
  br i1 %567, label %568, label %601, !llvm.loop !372

568:                                              ; preds = %564
  %569 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 8
  %570 = load i8, ptr %569, align 1, !tbaa !3
  %571 = icmp eq i8 %570, 0
  br i1 %571, label %572, label %601, !llvm.loop !372

572:                                              ; preds = %568
  %573 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 7
  %574 = load i8, ptr %573, align 1, !tbaa !3
  %575 = icmp eq i8 %574, 0
  br i1 %575, label %576, label %601, !llvm.loop !372

576:                                              ; preds = %572
  %577 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 6
  %578 = load i8, ptr %577, align 1, !tbaa !3
  %579 = icmp eq i8 %578, 0
  br i1 %579, label %580, label %601, !llvm.loop !372

580:                                              ; preds = %576
  %581 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 5
  %582 = load i8, ptr %581, align 1, !tbaa !3
  %583 = icmp eq i8 %582, 0
  br i1 %583, label %584, label %601, !llvm.loop !372

584:                                              ; preds = %580
  %585 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 4
  %586 = load i8, ptr %585, align 1, !tbaa !3
  %587 = icmp eq i8 %586, 0
  br i1 %587, label %588, label %601, !llvm.loop !372

588:                                              ; preds = %584
  %589 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 3
  %590 = load i8, ptr %589, align 1, !tbaa !3
  %591 = icmp eq i8 %590, 0
  br i1 %591, label %592, label %601, !llvm.loop !372

592:                                              ; preds = %588
  %593 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 2
  %594 = load i8, ptr %593, align 1, !tbaa !3
  %595 = icmp eq i8 %594, 0
  br i1 %595, label %596, label %601, !llvm.loop !372

596:                                              ; preds = %592
  %597 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 1
  %598 = load i8, ptr %597, align 1, !tbaa !3
  %599 = icmp eq i8 %598, 0
  %600 = select i1 %599, i32 1, i32 2
  br label %601, !llvm.loop !372

601:                                              ; preds = %596, %592, %588, %584, %580, %576, %572, %568, %564, %560, %556, %552, %548, %544, %540, %536, %532, %528, %524, %520, %516, %512, %508, %504, %500, %496, %492, %488, %483
  %602 = phi i32 [ 30, %483 ], [ 29, %488 ], [ 28, %492 ], [ 27, %496 ], [ 26, %500 ], [ 25, %504 ], [ 24, %508 ], [ 23, %512 ], [ 22, %516 ], [ 21, %520 ], [ 20, %524 ], [ 19, %528 ], [ 18, %532 ], [ 17, %536 ], [ 16, %540 ], [ 15, %544 ], [ 14, %548 ], [ 13, %552 ], [ 12, %556 ], [ 11, %560 ], [ 10, %564 ], [ 9, %568 ], [ 8, %572 ], [ 7, %576 ], [ 6, %580 ], [ 5, %584 ], [ 4, %588 ], [ 3, %592 ], [ %600, %596 ]
  %603 = zext i32 %484 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(1) %3, ptr noundef nonnull align 2 dereferenceable(1) %366, i64 %603, i1 false)
  %604 = getelementptr inbounds i8, ptr %3, i64 %603
  %605 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1
  %606 = zext i32 %602 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %604, ptr noundef nonnull align 2 dereferenceable(1) %605, i64 %606, i1 false)
  %607 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(38) %607, i8 0, i64 38, i1 false)
  %608 = add nuw nsw i32 %602, %484
  %609 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 2, i64 18
  %610 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 2, i64 17
  %611 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 2, i64 16
  %612 = zext i32 %608 to i64
  br label %613

613:                                              ; preds = %748, %601
  %614 = phi i64 [ 0, %601 ], [ %752, %748 ]
  %615 = phi i32 [ 0, %601 ], [ %751, %748 ]
  %616 = phi i32 [ 0, %601 ], [ %750, %748 ]
  %617 = phi i32 [ 0, %601 ], [ %749, %748 ]
  %618 = phi i8 [ -1, %601 ], [ %620, %748 ]
  %619 = getelementptr inbounds [320 x i8], ptr %3, i64 0, i64 %614
  %620 = load i8, ptr %619, align 1, !tbaa !3
  %621 = icmp eq i8 %620, 0
  br i1 %621, label %622, label %662

622:                                              ; preds = %613
  %623 = icmp eq i32 %617, 0
  br i1 %623, label %651, label %624

624:                                              ; preds = %622
  %625 = icmp ult i32 %617, 3
  br i1 %625, label %626, label %640

626:                                              ; preds = %624
  %627 = zext i8 %618 to i64
  %628 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 2, i64 %627
  %629 = load i16, ptr %628, align 2, !tbaa !103
  %630 = trunc i32 %617 to i16
  %631 = add i16 %629, %630
  store i16 %631, ptr %628, align 2, !tbaa !103
  %632 = add i32 %615, 1
  %633 = zext i32 %615 to i64
  %634 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %633
  store i8 %618, ptr %634, align 1, !tbaa !3
  %635 = icmp eq i32 %617, 1
  br i1 %635, label %651, label %636, !llvm.loop !373

636:                                              ; preds = %626
  %637 = add i32 %615, 2
  %638 = zext i32 %632 to i64
  %639 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %638
  store i8 %618, ptr %639, align 1, !tbaa !3
  br label %651

640:                                              ; preds = %624
  %641 = load i16, ptr %611, align 2, !tbaa !103
  %642 = add i16 %641, 1
  store i16 %642, ptr %611, align 2, !tbaa !103
  %643 = add i32 %615, 1
  %644 = zext i32 %615 to i64
  %645 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %644
  store i8 16, ptr %645, align 1, !tbaa !3
  %646 = trunc i32 %617 to i8
  %647 = add i8 %646, -3
  %648 = add i32 %615, 2
  %649 = zext i32 %643 to i64
  %650 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %649
  store i8 %647, ptr %650, align 1, !tbaa !3
  br label %651

651:                                              ; preds = %626, %636, %640, %622
  %652 = phi i32 [ %615, %622 ], [ %648, %640 ], [ %632, %626 ], [ %637, %636 ]
  %653 = add i32 %616, 1
  %654 = icmp eq i32 %653, 138
  br i1 %654, label %655, label %748

655:                                              ; preds = %651
  %656 = load i16, ptr %609, align 2, !tbaa !103
  %657 = add i16 %656, 1
  store i16 %657, ptr %609, align 2, !tbaa !103
  %658 = add i32 %652, 1
  %659 = zext i32 %652 to i64
  %660 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %659
  store i8 18, ptr %660, align 1, !tbaa !3
  %661 = add i32 %652, 2
  br label %742

662:                                              ; preds = %613
  %663 = icmp eq i32 %616, 0
  br i1 %663, label %693, label %664

664:                                              ; preds = %662
  %665 = icmp ult i32 %616, 3
  br i1 %665, label %666, label %678

666:                                              ; preds = %664
  %667 = load i16, ptr %607, align 2, !tbaa !103
  %668 = trunc i32 %616 to i16
  %669 = add i16 %667, %668
  store i16 %669, ptr %607, align 2, !tbaa !103
  %670 = add i32 %615, 1
  %671 = zext i32 %615 to i64
  %672 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %671
  store i8 0, ptr %672, align 1, !tbaa !3
  %673 = icmp eq i32 %616, 1
  br i1 %673, label %693, label %674, !llvm.loop !374

674:                                              ; preds = %666
  %675 = add i32 %615, 2
  %676 = zext i32 %670 to i64
  %677 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %676
  store i8 0, ptr %677, align 1, !tbaa !3
  br label %693

678:                                              ; preds = %664
  %679 = icmp ult i32 %616, 11
  %680 = add i32 %615, 1
  %681 = zext i32 %615 to i64
  %682 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %681
  %683 = trunc i32 %616 to i8
  %684 = add i32 %615, 2
  %685 = zext i32 %680 to i64
  %686 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %685
  %687 = select i1 %679, ptr %610, ptr %609
  %688 = select i1 %679, i8 17, i8 18
  %689 = select i1 %679, i8 -3, i8 -11
  %690 = load i16, ptr %687, align 2, !tbaa !103
  %691 = add i16 %690, 1
  store i16 %691, ptr %687, align 2, !tbaa !103
  store i8 %688, ptr %682, align 1, !tbaa !3
  %692 = add i8 %689, %683
  store i8 %692, ptr %686, align 1, !tbaa !3
  br label %693

693:                                              ; preds = %666, %674, %678, %662
  %694 = phi i32 [ %615, %662 ], [ %684, %678 ], [ %670, %666 ], [ %675, %674 ]
  %695 = icmp eq i8 %620, %618
  br i1 %695, label %732, label %696

696:                                              ; preds = %693
  %697 = icmp eq i32 %617, 0
  br i1 %697, label %725, label %698

698:                                              ; preds = %696
  %699 = icmp ult i32 %617, 3
  br i1 %699, label %700, label %714

700:                                              ; preds = %698
  %701 = zext i8 %618 to i64
  %702 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 2, i64 %701
  %703 = load i16, ptr %702, align 2, !tbaa !103
  %704 = trunc i32 %617 to i16
  %705 = add i16 %703, %704
  store i16 %705, ptr %702, align 2, !tbaa !103
  %706 = add i32 %694, 1
  %707 = zext i32 %694 to i64
  %708 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %707
  store i8 %618, ptr %708, align 1, !tbaa !3
  %709 = icmp eq i32 %617, 1
  br i1 %709, label %725, label %710, !llvm.loop !375

710:                                              ; preds = %700
  %711 = add i32 %694, 2
  %712 = zext i32 %706 to i64
  %713 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %712
  store i8 %618, ptr %713, align 1, !tbaa !3
  br label %725

714:                                              ; preds = %698
  %715 = load i16, ptr %611, align 2, !tbaa !103
  %716 = add i16 %715, 1
  store i16 %716, ptr %611, align 2, !tbaa !103
  %717 = add i32 %694, 1
  %718 = zext i32 %694 to i64
  %719 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %718
  store i8 16, ptr %719, align 1, !tbaa !3
  %720 = trunc i32 %617 to i8
  %721 = add i8 %720, -3
  %722 = add i32 %694, 2
  %723 = zext i32 %717 to i64
  %724 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %723
  store i8 %721, ptr %724, align 1, !tbaa !3
  br label %725

725:                                              ; preds = %700, %710, %714, %696
  %726 = phi i32 [ %694, %696 ], [ %722, %714 ], [ %706, %700 ], [ %711, %710 ]
  %727 = zext i8 %620 to i64
  %728 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 2, i64 %727
  %729 = load i16, ptr %728, align 2, !tbaa !103
  %730 = add i16 %729, 1
  store i16 %730, ptr %728, align 2, !tbaa !103
  %731 = add i32 %726, 1
  br label %742

732:                                              ; preds = %693
  %733 = add i32 %617, 1
  %734 = icmp eq i32 %733, 6
  br i1 %734, label %735, label %748

735:                                              ; preds = %732
  %736 = load i16, ptr %611, align 2, !tbaa !103
  %737 = add i16 %736, 1
  store i16 %737, ptr %611, align 2, !tbaa !103
  %738 = add i32 %694, 1
  %739 = zext i32 %694 to i64
  %740 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %739
  store i8 16, ptr %740, align 1, !tbaa !3
  %741 = add i32 %694, 2
  br label %742

742:                                              ; preds = %735, %725, %655
  %743 = phi i32 [ %726, %725 ], [ %738, %735 ], [ %658, %655 ]
  %744 = phi i8 [ %620, %725 ], [ 3, %735 ], [ 127, %655 ]
  %745 = phi i32 [ %731, %725 ], [ %741, %735 ], [ %661, %655 ]
  %746 = zext i32 %743 to i64
  %747 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %746
  store i8 %744, ptr %747, align 1, !tbaa !3
  br label %748

748:                                              ; preds = %742, %732, %651
  %749 = phi i32 [ %733, %732 ], [ 0, %651 ], [ 0, %742 ]
  %750 = phi i32 [ 0, %732 ], [ %653, %651 ], [ 0, %742 ]
  %751 = phi i32 [ %694, %732 ], [ %652, %651 ], [ %745, %742 ]
  %752 = add nuw nsw i64 %614, 1
  %753 = icmp eq i64 %752, %612
  br i1 %753, label %754, label %613, !llvm.loop !376

754:                                              ; preds = %748
  %755 = icmp eq i32 %749, 0
  br i1 %755, label %783, label %756

756:                                              ; preds = %754
  %757 = icmp ult i32 %749, 3
  br i1 %757, label %758, label %772

758:                                              ; preds = %756
  %759 = zext i8 %620 to i64
  %760 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 2, i64 %759
  %761 = load i16, ptr %760, align 2, !tbaa !103
  %762 = trunc i32 %749 to i16
  %763 = add i16 %761, %762
  store i16 %763, ptr %760, align 2, !tbaa !103
  %764 = add i32 %751, 1
  %765 = zext i32 %751 to i64
  %766 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %765
  store i8 %620, ptr %766, align 1, !tbaa !3
  %767 = icmp eq i32 %749, 1
  br i1 %767, label %816, label %768, !llvm.loop !377

768:                                              ; preds = %758
  %769 = add i32 %751, 2
  %770 = zext i32 %764 to i64
  %771 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %770
  store i8 %620, ptr %771, align 1, !tbaa !3
  br label %816

772:                                              ; preds = %756
  %773 = load i16, ptr %611, align 2, !tbaa !103
  %774 = add i16 %773, 1
  store i16 %774, ptr %611, align 2, !tbaa !103
  %775 = add i32 %751, 1
  %776 = zext i32 %751 to i64
  %777 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %776
  store i8 16, ptr %777, align 1, !tbaa !3
  %778 = trunc i32 %749 to i8
  %779 = add i8 %778, -3
  %780 = add i32 %751, 2
  %781 = zext i32 %775 to i64
  %782 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %781
  store i8 %779, ptr %782, align 1, !tbaa !3
  br label %816

783:                                              ; preds = %754
  %784 = icmp eq i32 %750, 0
  br i1 %784, label %816, label %785

785:                                              ; preds = %783
  %786 = icmp ult i32 %750, 3
  br i1 %786, label %787, label %799

787:                                              ; preds = %785
  %788 = load i16, ptr %607, align 2, !tbaa !103
  %789 = trunc i32 %750 to i16
  %790 = add i16 %788, %789
  store i16 %790, ptr %607, align 2, !tbaa !103
  %791 = add i32 %751, 1
  %792 = zext i32 %751 to i64
  %793 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %792
  store i8 0, ptr %793, align 1, !tbaa !3
  %794 = icmp eq i32 %750, 1
  br i1 %794, label %816, label %795, !llvm.loop !378

795:                                              ; preds = %787
  %796 = add i32 %751, 2
  %797 = zext i32 %791 to i64
  %798 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %797
  store i8 0, ptr %798, align 1, !tbaa !3
  br label %816

799:                                              ; preds = %785
  %800 = icmp ult i32 %750, 11
  %801 = add i32 %751, 1
  %802 = zext i32 %751 to i64
  %803 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %802
  %804 = trunc i32 %750 to i8
  %805 = add i32 %751, 2
  %806 = zext i32 %801 to i64
  %807 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %806
  br i1 %800, label %808, label %812

808:                                              ; preds = %799
  %809 = load i16, ptr %610, align 2, !tbaa !103
  %810 = add i16 %809, 1
  store i16 %810, ptr %610, align 2, !tbaa !103
  store i8 17, ptr %803, align 1, !tbaa !3
  %811 = add nsw i8 %804, -3
  store i8 %811, ptr %807, align 1, !tbaa !3
  br label %816

812:                                              ; preds = %799
  %813 = load i16, ptr %609, align 2, !tbaa !103
  %814 = add i16 %813, 1
  store i16 %814, ptr %609, align 2, !tbaa !103
  store i8 18, ptr %803, align 1, !tbaa !3
  %815 = add i8 %804, -11
  store i8 %815, ptr %807, align 1, !tbaa !3
  br label %816

816:                                              ; preds = %758, %768, %787, %795, %812, %808, %783, %772
  %817 = phi i32 [ %751, %783 ], [ %780, %772 ], [ %805, %808 ], [ %805, %812 ], [ %791, %787 ], [ %796, %795 ], [ %764, %758 ], [ %769, %768 ]
  tail call fastcc void @tdefl_optimize_huffman_table(ptr noundef %0, i32 noundef 2, i32 noundef 19, i32 noundef 7, i32 noundef 0)
  %818 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 16
  %819 = load i32, ptr %818, align 4, !tbaa !161
  %820 = shl i32 2, %819
  %821 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 17
  %822 = load i32, ptr %821, align 8, !tbaa !162
  %823 = or i32 %822, %820
  store i32 %823, ptr %821, align 8, !tbaa !162
  %824 = add i32 %819, 2
  store i32 %824, ptr %818, align 4, !tbaa !161
  %825 = icmp ugt i32 %824, 7
  br i1 %825, label %826, label %846

826:                                              ; preds = %816
  %827 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  %828 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  br label %829

829:                                              ; preds = %840, %826
  %830 = phi i32 [ %824, %826 ], [ %844, %840 ]
  %831 = phi i32 [ %823, %826 ], [ %843, %840 ]
  %832 = load ptr, ptr %827, align 8, !tbaa !33
  %833 = load ptr, ptr %828, align 8, !tbaa !34
  %834 = icmp ult ptr %832, %833
  br i1 %834, label %835, label %840

835:                                              ; preds = %829
  %836 = trunc i32 %831 to i8
  %837 = getelementptr inbounds i8, ptr %832, i64 1
  store ptr %837, ptr %827, align 8, !tbaa !33
  store i8 %836, ptr %832, align 1, !tbaa !3
  %838 = load i32, ptr %821, align 8, !tbaa !162
  %839 = load i32, ptr %818, align 4, !tbaa !161
  br label %840

840:                                              ; preds = %835, %829
  %841 = phi i32 [ %839, %835 ], [ %830, %829 ]
  %842 = phi i32 [ %838, %835 ], [ %831, %829 ]
  %843 = lshr i32 %842, 8
  store i32 %843, ptr %821, align 8, !tbaa !162
  %844 = add i32 %841, -8
  store i32 %844, ptr %818, align 4, !tbaa !161
  %845 = icmp ugt i32 %844, 7
  br i1 %845, label %829, label %846, !llvm.loop !379

846:                                              ; preds = %840, %816
  %847 = phi i32 [ %823, %816 ], [ %843, %840 ]
  %848 = phi i32 [ %824, %816 ], [ %844, %840 ]
  %849 = add nsw i32 %484, -257
  %850 = shl nuw nsw i32 %849, %848
  %851 = or i32 %850, %847
  store i32 %851, ptr %821, align 8, !tbaa !162
  %852 = add nuw nsw i32 %848, 5
  store i32 %852, ptr %818, align 4, !tbaa !161
  %853 = icmp ugt i32 %848, 2
  br i1 %853, label %854, label %874

854:                                              ; preds = %846
  %855 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  %856 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  br label %857

857:                                              ; preds = %868, %854
  %858 = phi i32 [ %852, %854 ], [ %872, %868 ]
  %859 = phi i32 [ %851, %854 ], [ %871, %868 ]
  %860 = load ptr, ptr %855, align 8, !tbaa !33
  %861 = load ptr, ptr %856, align 8, !tbaa !34
  %862 = icmp ult ptr %860, %861
  br i1 %862, label %863, label %868

863:                                              ; preds = %857
  %864 = trunc i32 %859 to i8
  %865 = getelementptr inbounds i8, ptr %860, i64 1
  store ptr %865, ptr %855, align 8, !tbaa !33
  store i8 %864, ptr %860, align 1, !tbaa !3
  %866 = load i32, ptr %821, align 8, !tbaa !162
  %867 = load i32, ptr %818, align 4, !tbaa !161
  br label %868

868:                                              ; preds = %863, %857
  %869 = phi i32 [ %867, %863 ], [ %858, %857 ]
  %870 = phi i32 [ %866, %863 ], [ %859, %857 ]
  %871 = lshr i32 %870, 8
  store i32 %871, ptr %821, align 8, !tbaa !162
  %872 = add i32 %869, -8
  store i32 %872, ptr %818, align 4, !tbaa !161
  %873 = icmp ugt i32 %872, 7
  br i1 %873, label %857, label %874, !llvm.loop !380

874:                                              ; preds = %868, %846
  %875 = phi i32 [ %851, %846 ], [ %871, %868 ]
  %876 = phi i32 [ %852, %846 ], [ %872, %868 ]
  %877 = add nsw i32 %602, -1
  %878 = shl nuw nsw i32 %877, %876
  %879 = or i32 %878, %875
  store i32 %879, ptr %821, align 8, !tbaa !162
  %880 = add nuw nsw i32 %876, 5
  store i32 %880, ptr %818, align 4, !tbaa !161
  %881 = icmp ugt i32 %876, 2
  br i1 %881, label %882, label %885

882:                                              ; preds = %874
  %883 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  %884 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  br label %891

885:                                              ; preds = %902, %874
  %886 = phi i32 [ %879, %874 ], [ %905, %902 ]
  %887 = phi i32 [ %880, %874 ], [ %906, %902 ]
  %888 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 15
  %889 = load i8, ptr %888, align 1, !tbaa !3
  %890 = icmp eq i8 %889, 0
  br i1 %890, label %908, label %981

891:                                              ; preds = %902, %882
  %892 = phi i32 [ %880, %882 ], [ %906, %902 ]
  %893 = phi i32 [ %879, %882 ], [ %905, %902 ]
  %894 = load ptr, ptr %883, align 8, !tbaa !33
  %895 = load ptr, ptr %884, align 8, !tbaa !34
  %896 = icmp ult ptr %894, %895
  br i1 %896, label %897, label %902

897:                                              ; preds = %891
  %898 = trunc i32 %893 to i8
  %899 = getelementptr inbounds i8, ptr %894, i64 1
  store ptr %899, ptr %883, align 8, !tbaa !33
  store i8 %898, ptr %894, align 1, !tbaa !3
  %900 = load i32, ptr %821, align 8, !tbaa !162
  %901 = load i32, ptr %818, align 4, !tbaa !161
  br label %902

902:                                              ; preds = %897, %891
  %903 = phi i32 [ %901, %897 ], [ %892, %891 ]
  %904 = phi i32 [ %900, %897 ], [ %893, %891 ]
  %905 = lshr i32 %904, 8
  store i32 %905, ptr %821, align 8, !tbaa !162
  %906 = add i32 %903, -8
  store i32 %906, ptr %818, align 4, !tbaa !161
  %907 = icmp ugt i32 %906, 7
  br i1 %907, label %891, label %885, !llvm.loop !381

908:                                              ; preds = %885
  %909 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 1
  %910 = load i8, ptr %909, align 1, !tbaa !3
  %911 = icmp eq i8 %910, 0
  br i1 %911, label %912, label %981

912:                                              ; preds = %908
  %913 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 14
  %914 = load i8, ptr %913, align 1, !tbaa !3
  %915 = icmp eq i8 %914, 0
  br i1 %915, label %916, label %981

916:                                              ; preds = %912
  %917 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 2
  %918 = load i8, ptr %917, align 1, !tbaa !3
  %919 = icmp eq i8 %918, 0
  br i1 %919, label %920, label %981

920:                                              ; preds = %916
  %921 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 13
  %922 = load i8, ptr %921, align 1, !tbaa !3
  %923 = icmp eq i8 %922, 0
  br i1 %923, label %924, label %981

924:                                              ; preds = %920
  %925 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 3
  %926 = load i8, ptr %925, align 1, !tbaa !3
  %927 = icmp eq i8 %926, 0
  br i1 %927, label %928, label %981

928:                                              ; preds = %924
  %929 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 12
  %930 = load i8, ptr %929, align 1, !tbaa !3
  %931 = icmp eq i8 %930, 0
  br i1 %931, label %932, label %981

932:                                              ; preds = %928
  %933 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 4
  %934 = load i8, ptr %933, align 1, !tbaa !3
  %935 = icmp eq i8 %934, 0
  br i1 %935, label %936, label %981

936:                                              ; preds = %932
  %937 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 11
  %938 = load i8, ptr %937, align 1, !tbaa !3
  %939 = icmp eq i8 %938, 0
  br i1 %939, label %940, label %981

940:                                              ; preds = %936
  %941 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 5
  %942 = load i8, ptr %941, align 1, !tbaa !3
  %943 = icmp eq i8 %942, 0
  br i1 %943, label %944, label %981

944:                                              ; preds = %940
  %945 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 10
  %946 = load i8, ptr %945, align 1, !tbaa !3
  %947 = icmp eq i8 %946, 0
  br i1 %947, label %948, label %981

948:                                              ; preds = %944
  %949 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 6
  %950 = load i8, ptr %949, align 1, !tbaa !3
  %951 = icmp eq i8 %950, 0
  br i1 %951, label %952, label %981

952:                                              ; preds = %948
  %953 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 9
  %954 = load i8, ptr %953, align 1, !tbaa !3
  %955 = icmp eq i8 %954, 0
  br i1 %955, label %956, label %981

956:                                              ; preds = %952
  %957 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 7
  %958 = load i8, ptr %957, align 1, !tbaa !3
  %959 = icmp eq i8 %958, 0
  br i1 %959, label %960, label %981

960:                                              ; preds = %956
  %961 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 8
  %962 = load i8, ptr %961, align 1, !tbaa !3
  %963 = icmp eq i8 %962, 0
  br i1 %963, label %964, label %981

964:                                              ; preds = %960
  %965 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 0
  %966 = load i8, ptr %965, align 1, !tbaa !3
  %967 = icmp eq i8 %966, 0
  br i1 %967, label %968, label %981

968:                                              ; preds = %964
  %969 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 18
  %970 = load i8, ptr %969, align 1, !tbaa !3
  %971 = icmp eq i8 %970, 0
  br i1 %971, label %972, label %981

972:                                              ; preds = %968
  %973 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 17
  %974 = load i8, ptr %973, align 1, !tbaa !3
  %975 = icmp eq i8 %974, 0
  br i1 %975, label %976, label %981

976:                                              ; preds = %972
  %977 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 16
  %978 = load i8, ptr %977, align 1, !tbaa !3
  %979 = icmp eq i8 %978, 0
  %980 = sext i1 %979 to i32
  br label %981

981:                                              ; preds = %976, %972, %968, %964, %960, %956, %952, %948, %944, %940, %936, %932, %928, %924, %920, %916, %912, %908, %885
  %982 = phi i32 [ 18, %885 ], [ 17, %908 ], [ 16, %912 ], [ 15, %916 ], [ 14, %920 ], [ 13, %924 ], [ 12, %928 ], [ 11, %932 ], [ 10, %936 ], [ 9, %940 ], [ 8, %944 ], [ 7, %948 ], [ 6, %952 ], [ 5, %956 ], [ 4, %960 ], [ 3, %964 ], [ 2, %968 ], [ 1, %972 ], [ %980, %976 ]
  %983 = tail call i32 @llvm.smax.i32(i32 %982, i32 3)
  %984 = add nsw i32 %983, -3
  %985 = shl nuw nsw i32 %984, %887
  %986 = or i32 %985, %886
  store i32 %986, ptr %821, align 8, !tbaa !162
  %987 = add nuw nsw i32 %887, 4
  store i32 %987, ptr %818, align 4, !tbaa !161
  %988 = icmp ugt i32 %887, 3
  br i1 %988, label %989, label %992

989:                                              ; preds = %981
  %990 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  %991 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  br label %998

992:                                              ; preds = %1009, %981
  %993 = phi i32 [ %986, %981 ], [ %1012, %1009 ]
  %994 = phi i32 [ %987, %981 ], [ %1013, %1009 ]
  %995 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  %996 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  %997 = zext i32 %983 to i64
  br label %1017

998:                                              ; preds = %1009, %989
  %999 = phi i32 [ %987, %989 ], [ %1013, %1009 ]
  %1000 = phi i32 [ %986, %989 ], [ %1012, %1009 ]
  %1001 = load ptr, ptr %990, align 8, !tbaa !33
  %1002 = load ptr, ptr %991, align 8, !tbaa !34
  %1003 = icmp ult ptr %1001, %1002
  br i1 %1003, label %1004, label %1009

1004:                                             ; preds = %998
  %1005 = trunc i32 %1000 to i8
  %1006 = getelementptr inbounds i8, ptr %1001, i64 1
  store ptr %1006, ptr %990, align 8, !tbaa !33
  store i8 %1005, ptr %1001, align 1, !tbaa !3
  %1007 = load i32, ptr %821, align 8, !tbaa !162
  %1008 = load i32, ptr %818, align 4, !tbaa !161
  br label %1009

1009:                                             ; preds = %1004, %998
  %1010 = phi i32 [ %1008, %1004 ], [ %999, %998 ]
  %1011 = phi i32 [ %1007, %1004 ], [ %1000, %998 ]
  %1012 = lshr i32 %1011, 8
  store i32 %1012, ptr %821, align 8, !tbaa !162
  %1013 = add i32 %1010, -8
  store i32 %1013, ptr %818, align 4, !tbaa !161
  %1014 = icmp ugt i32 %1013, 7
  br i1 %1014, label %998, label %992, !llvm.loop !382

1015:                                             ; preds = %1051
  %1016 = icmp eq i32 %817, 0
  br i1 %1016, label %1144, label %1056

1017:                                             ; preds = %1051, %992
  %1018 = phi i64 [ %1054, %1051 ], [ 0, %992 ]
  %1019 = phi i32 [ %1052, %1051 ], [ %993, %992 ]
  %1020 = phi i32 [ %1053, %1051 ], [ %994, %992 ]
  %1021 = getelementptr inbounds [19 x i8], ptr @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %1018
  %1022 = load i8, ptr %1021, align 1, !tbaa !3
  %1023 = zext i8 %1022 to i64
  %1024 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 %1023
  %1025 = load i8, ptr %1024, align 1, !tbaa !3
  %1026 = icmp ult i8 %1025, 8
  br i1 %1026, label %1028, label %1027

1027:                                             ; preds = %1017
  tail call void @__assert_fail(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.12, i32 noundef 2925, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_start_dynamic_block) #41
  unreachable

1028:                                             ; preds = %1017
  %1029 = zext i8 %1025 to i32
  %1030 = shl i32 %1029, %1020
  %1031 = or i32 %1030, %1019
  store i32 %1031, ptr %821, align 8, !tbaa !162
  %1032 = add i32 %1020, 3
  store i32 %1032, ptr %818, align 4, !tbaa !161
  %1033 = icmp ugt i32 %1032, 7
  br i1 %1033, label %1034, label %1051

1034:                                             ; preds = %1028, %1045
  %1035 = phi i32 [ %1049, %1045 ], [ %1032, %1028 ]
  %1036 = phi i32 [ %1048, %1045 ], [ %1031, %1028 ]
  %1037 = load ptr, ptr %995, align 8, !tbaa !33
  %1038 = load ptr, ptr %996, align 8, !tbaa !34
  %1039 = icmp ult ptr %1037, %1038
  br i1 %1039, label %1040, label %1045

1040:                                             ; preds = %1034
  %1041 = trunc i32 %1036 to i8
  %1042 = getelementptr inbounds i8, ptr %1037, i64 1
  store ptr %1042, ptr %995, align 8, !tbaa !33
  store i8 %1041, ptr %1037, align 1, !tbaa !3
  %1043 = load i32, ptr %821, align 8, !tbaa !162
  %1044 = load i32, ptr %818, align 4, !tbaa !161
  br label %1045

1045:                                             ; preds = %1040, %1034
  %1046 = phi i32 [ %1044, %1040 ], [ %1035, %1034 ]
  %1047 = phi i32 [ %1043, %1040 ], [ %1036, %1034 ]
  %1048 = lshr i32 %1047, 8
  store i32 %1048, ptr %821, align 8, !tbaa !162
  %1049 = add i32 %1046, -8
  store i32 %1049, ptr %818, align 4, !tbaa !161
  %1050 = icmp ugt i32 %1049, 7
  br i1 %1050, label %1034, label %1051, !llvm.loop !383

1051:                                             ; preds = %1045, %1028
  %1052 = phi i32 [ %1031, %1028 ], [ %1048, %1045 ]
  %1053 = phi i32 [ %1032, %1028 ], [ %1049, %1045 ]
  %1054 = add nuw nsw i64 %1018, 1
  %1055 = icmp eq i64 %1018, %997
  br i1 %1055, label %1015, label %1017, !llvm.loop !384

1056:                                             ; preds = %1015, %1139
  %1057 = phi i32 [ %1140, %1139 ], [ %1052, %1015 ]
  %1058 = phi i32 [ %1141, %1139 ], [ %1053, %1015 ]
  %1059 = phi i32 [ %1142, %1139 ], [ 0, %1015 ]
  %1060 = add nuw i32 %1059, 1
  %1061 = zext i32 %1059 to i64
  %1062 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %1061
  %1063 = load i8, ptr %1062, align 1, !tbaa !3
  %1064 = zext i8 %1063 to i64
  %1065 = icmp ult i8 %1063, 19
  br i1 %1065, label %1067, label %1066

1066:                                             ; preds = %1056
  tail call void @__assert_fail(ptr noundef nonnull @.str.65, ptr noundef nonnull @.str.12, i32 noundef 2930, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_start_dynamic_block) #41
  unreachable

1067:                                             ; preds = %1056
  %1068 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 37, i64 2, i64 %1064
  %1069 = load i16, ptr %1068, align 2, !tbaa !103
  %1070 = zext i16 %1069 to i32
  %1071 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 2, i64 %1064
  %1072 = load i8, ptr %1071, align 1, !tbaa !3
  %1073 = zext i8 %1072 to i32
  %1074 = lshr i32 %1070, %1073
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1077, label %1076

1076:                                             ; preds = %1067
  tail call void @__assert_fail(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.12, i32 noundef 2931, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_start_dynamic_block) #41
  unreachable

1077:                                             ; preds = %1067
  %1078 = shl nuw nsw i32 %1070, %1058
  %1079 = or i32 %1078, %1057
  store i32 %1079, ptr %821, align 8, !tbaa !162
  %1080 = add nuw nsw i32 %1058, %1073
  store i32 %1080, ptr %818, align 4, !tbaa !161
  %1081 = icmp ugt i32 %1080, 7
  br i1 %1081, label %1082, label %1099

1082:                                             ; preds = %1077, %1093
  %1083 = phi i32 [ %1097, %1093 ], [ %1080, %1077 ]
  %1084 = phi i32 [ %1096, %1093 ], [ %1079, %1077 ]
  %1085 = load ptr, ptr %995, align 8, !tbaa !33
  %1086 = load ptr, ptr %996, align 8, !tbaa !34
  %1087 = icmp ult ptr %1085, %1086
  br i1 %1087, label %1088, label %1093

1088:                                             ; preds = %1082
  %1089 = trunc i32 %1084 to i8
  %1090 = getelementptr inbounds i8, ptr %1085, i64 1
  store ptr %1090, ptr %995, align 8, !tbaa !33
  store i8 %1089, ptr %1085, align 1, !tbaa !3
  %1091 = load i32, ptr %821, align 8, !tbaa !162
  %1092 = load i32, ptr %818, align 4, !tbaa !161
  br label %1093

1093:                                             ; preds = %1088, %1082
  %1094 = phi i32 [ %1092, %1088 ], [ %1083, %1082 ]
  %1095 = phi i32 [ %1091, %1088 ], [ %1084, %1082 ]
  %1096 = lshr i32 %1095, 8
  store i32 %1096, ptr %821, align 8, !tbaa !162
  %1097 = add i32 %1094, -8
  store i32 %1097, ptr %818, align 4, !tbaa !161
  %1098 = icmp ugt i32 %1097, 7
  br i1 %1098, label %1082, label %1099, !llvm.loop !385

1099:                                             ; preds = %1093, %1077
  %1100 = phi i32 [ %1079, %1077 ], [ %1096, %1093 ]
  %1101 = phi i32 [ %1080, %1077 ], [ %1097, %1093 ]
  %1102 = icmp ugt i8 %1063, 15
  br i1 %1102, label %1103, label %1139

1103:                                             ; preds = %1099
  %1104 = add i32 %1059, 2
  %1105 = zext i32 %1060 to i64
  %1106 = getelementptr inbounds [320 x i8], ptr %4, i64 0, i64 %1105
  %1107 = load i8, ptr %1106, align 1, !tbaa !3
  %1108 = zext i8 %1107 to i32
  %1109 = add nuw nsw i64 %1064, 4294967280
  %1110 = and i64 %1109, 4294967295
  %1111 = getelementptr inbounds [4 x i8], ptr @.str.15, i64 0, i64 %1110
  %1112 = load i8, ptr %1111, align 1, !tbaa !3
  %1113 = sext i8 %1112 to i32
  %1114 = lshr i32 %1108, %1113
  %1115 = icmp eq i32 %1114, 0
  br i1 %1115, label %1117, label %1116

1116:                                             ; preds = %1103
  tail call void @__assert_fail(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.12, i32 noundef 2934, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_start_dynamic_block) #41
  unreachable

1117:                                             ; preds = %1103
  %1118 = shl nuw nsw i32 %1108, %1101
  %1119 = or i32 %1118, %1100
  store i32 %1119, ptr %821, align 8, !tbaa !162
  %1120 = add nsw i32 %1101, %1113
  store i32 %1120, ptr %818, align 4, !tbaa !161
  %1121 = icmp ugt i32 %1120, 7
  br i1 %1121, label %1122, label %1139

1122:                                             ; preds = %1117, %1133
  %1123 = phi i32 [ %1137, %1133 ], [ %1120, %1117 ]
  %1124 = phi i32 [ %1136, %1133 ], [ %1119, %1117 ]
  %1125 = load ptr, ptr %995, align 8, !tbaa !33
  %1126 = load ptr, ptr %996, align 8, !tbaa !34
  %1127 = icmp ult ptr %1125, %1126
  br i1 %1127, label %1128, label %1133

1128:                                             ; preds = %1122
  %1129 = trunc i32 %1124 to i8
  %1130 = getelementptr inbounds i8, ptr %1125, i64 1
  store ptr %1130, ptr %995, align 8, !tbaa !33
  store i8 %1129, ptr %1125, align 1, !tbaa !3
  %1131 = load i32, ptr %821, align 8, !tbaa !162
  %1132 = load i32, ptr %818, align 4, !tbaa !161
  br label %1133

1133:                                             ; preds = %1128, %1122
  %1134 = phi i32 [ %1132, %1128 ], [ %1123, %1122 ]
  %1135 = phi i32 [ %1131, %1128 ], [ %1124, %1122 ]
  %1136 = lshr i32 %1135, 8
  store i32 %1136, ptr %821, align 8, !tbaa !162
  %1137 = add i32 %1134, -8
  store i32 %1137, ptr %818, align 4, !tbaa !161
  %1138 = icmp ugt i32 %1137, 7
  br i1 %1138, label %1122, label %1139, !llvm.loop !386

1139:                                             ; preds = %1133, %1117, %1099
  %1140 = phi i32 [ %1100, %1099 ], [ %1119, %1117 ], [ %1136, %1133 ]
  %1141 = phi i32 [ %1101, %1099 ], [ %1120, %1117 ], [ %1137, %1133 ]
  %1142 = phi i32 [ %1060, %1099 ], [ %1104, %1117 ], [ %1104, %1133 ]
  %1143 = icmp ult i32 %1142, %817
  br i1 %1143, label %1056, label %1144, !llvm.loop !387

1144:                                             ; preds = %1139, %1015
  %1145 = phi i32 [ %1052, %1015 ], [ %1140, %1139 ]
  %1146 = phi i32 [ %1053, %1015 ], [ %1141, %1139 ]
  call void @llvm.lifetime.end.p0(i64 320, ptr nonnull %4) #38
  call void @llvm.lifetime.end.p0(i64 320, ptr nonnull %3) #38
  br label %1147

1147:                                             ; preds = %358, %335, %1144
  %1148 = phi i32 [ %341, %335 ], [ %1145, %1144 ], [ %361, %358 ]
  %1149 = phi i32 [ %342, %335 ], [ %1146, %1144 ], [ %362, %358 ]
  %1150 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 39
  %1151 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 9
  %1152 = load ptr, ptr %1151, align 8, !tbaa !30
  %1153 = icmp ult ptr %1150, %1152
  br i1 %1153, label %1154, label %1389

1154:                                             ; preds = %1147
  %1155 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38
  %1156 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 37
  %1157 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 16
  %1158 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 17
  %1159 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  %1160 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  br label %1161

1161:                                             ; preds = %1382, %1154
  %1162 = phi i32 [ %1148, %1154 ], [ %1383, %1382 ]
  %1163 = phi i32 [ %1149, %1154 ], [ %1384, %1382 ]
  %1164 = phi i32 [ 1, %1154 ], [ %1386, %1382 ]
  %1165 = phi ptr [ %1150, %1154 ], [ %1385, %1382 ]
  %1166 = icmp eq i32 %1164, 1
  br i1 %1166, label %1167, label %1172

1167:                                             ; preds = %1161
  %1168 = getelementptr inbounds i8, ptr %1165, i64 1
  %1169 = load i8, ptr %1165, align 1, !tbaa !3
  %1170 = zext i8 %1169 to i32
  %1171 = or i32 %1170, 256
  br label %1172

1172:                                             ; preds = %1167, %1161
  %1173 = phi ptr [ %1168, %1167 ], [ %1165, %1161 ]
  %1174 = phi i32 [ %1171, %1167 ], [ %1164, %1161 ]
  %1175 = and i32 %1174, 1
  %1176 = icmp eq i32 %1175, 0
  br i1 %1176, label %1344, label %1177

1177:                                             ; preds = %1172
  %1178 = load i8, ptr %1173, align 1, !tbaa !3
  %1179 = zext i8 %1178 to i32
  %1180 = getelementptr inbounds i8, ptr %1173, i64 1
  %1181 = load i8, ptr %1180, align 1, !tbaa !3
  %1182 = zext i8 %1181 to i32
  %1183 = getelementptr inbounds i8, ptr %1173, i64 2
  %1184 = load i8, ptr %1183, align 1, !tbaa !3
  %1185 = zext i8 %1184 to i32
  %1186 = shl nuw nsw i32 %1185, 8
  %1187 = or i32 %1186, %1182
  %1188 = getelementptr inbounds i8, ptr %1173, i64 3
  %1189 = zext i8 %1178 to i64
  %1190 = getelementptr inbounds [256 x i16], ptr @s_tdefl_len_sym, i64 0, i64 %1189
  %1191 = load i16, ptr %1190, align 2, !tbaa !103
  %1192 = zext i16 %1191 to i64
  %1193 = getelementptr inbounds [288 x i8], ptr %1155, i64 0, i64 %1192
  %1194 = load i8, ptr %1193, align 1, !tbaa !3
  %1195 = icmp eq i8 %1194, 0
  br i1 %1195, label %1196, label %1197

1196:                                             ; preds = %1177
  tail call void @__assert_fail(ptr noundef nonnull @.str.66, ptr noundef nonnull @.str.12, i32 noundef 3075, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_lz_codes) #41
  unreachable

1197:                                             ; preds = %1177
  %1198 = getelementptr inbounds [288 x i16], ptr %1156, i64 0, i64 %1192
  %1199 = load i16, ptr %1198, align 2, !tbaa !103
  %1200 = zext i16 %1199 to i32
  %1201 = zext i8 %1194 to i32
  %1202 = lshr i32 %1200, %1201
  %1203 = icmp eq i32 %1202, 0
  br i1 %1203, label %1205, label %1204

1204:                                             ; preds = %1197
  tail call void @__assert_fail(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.12, i32 noundef 3077, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_lz_codes) #41
  unreachable

1205:                                             ; preds = %1197
  %1206 = shl nuw nsw i32 %1200, %1163
  %1207 = or i32 %1162, %1206
  store i32 %1207, ptr %1158, align 8, !tbaa !162
  %1208 = add nuw nsw i32 %1163, %1201
  store i32 %1208, ptr %1157, align 4, !tbaa !161
  %1209 = icmp ugt i32 %1208, 7
  br i1 %1209, label %1210, label %1227

1210:                                             ; preds = %1205, %1221
  %1211 = phi i32 [ %1225, %1221 ], [ %1208, %1205 ]
  %1212 = phi i32 [ %1224, %1221 ], [ %1207, %1205 ]
  %1213 = load ptr, ptr %1159, align 8, !tbaa !33
  %1214 = load ptr, ptr %1160, align 8, !tbaa !34
  %1215 = icmp ult ptr %1213, %1214
  br i1 %1215, label %1216, label %1221

1216:                                             ; preds = %1210
  %1217 = trunc i32 %1212 to i8
  %1218 = getelementptr inbounds i8, ptr %1213, i64 1
  store ptr %1218, ptr %1159, align 8, !tbaa !33
  store i8 %1217, ptr %1213, align 1, !tbaa !3
  %1219 = load i32, ptr %1158, align 8, !tbaa !162
  %1220 = load i32, ptr %1157, align 4, !tbaa !161
  br label %1221

1221:                                             ; preds = %1216, %1210
  %1222 = phi i32 [ %1220, %1216 ], [ %1211, %1210 ]
  %1223 = phi i32 [ %1219, %1216 ], [ %1212, %1210 ]
  %1224 = lshr i32 %1223, 8
  store i32 %1224, ptr %1158, align 8, !tbaa !162
  %1225 = add i32 %1222, -8
  store i32 %1225, ptr %1157, align 4, !tbaa !161
  %1226 = icmp ugt i32 %1225, 7
  br i1 %1226, label %1210, label %1227, !llvm.loop !388

1227:                                             ; preds = %1221, %1205
  %1228 = phi i32 [ %1207, %1205 ], [ %1224, %1221 ]
  %1229 = phi i32 [ %1208, %1205 ], [ %1225, %1221 ]
  %1230 = getelementptr inbounds [256 x i8], ptr @s_tdefl_len_extra, i64 0, i64 %1189
  %1231 = load i8, ptr %1230, align 1, !tbaa !3
  %1232 = zext i8 %1231 to i64
  %1233 = getelementptr inbounds [17 x i32], ptr @mz_bitmasks, i64 0, i64 %1232
  %1234 = load i32, ptr %1233, align 4, !tbaa !12
  %1235 = and i32 %1234, %1179
  %1236 = zext i8 %1231 to i32
  %1237 = lshr i32 %1235, %1236
  %1238 = icmp eq i32 %1237, 0
  br i1 %1238, label %1240, label %1239

1239:                                             ; preds = %1227
  tail call void @__assert_fail(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.12, i32 noundef 3079, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_lz_codes) #41
  unreachable

1240:                                             ; preds = %1227
  %1241 = shl i32 %1235, %1229
  %1242 = or i32 %1241, %1228
  store i32 %1242, ptr %1158, align 8, !tbaa !162
  %1243 = add nuw nsw i32 %1229, %1236
  store i32 %1243, ptr %1157, align 4, !tbaa !161
  %1244 = icmp ugt i32 %1243, 7
  br i1 %1244, label %1245, label %1262

1245:                                             ; preds = %1240, %1256
  %1246 = phi i32 [ %1260, %1256 ], [ %1243, %1240 ]
  %1247 = phi i32 [ %1259, %1256 ], [ %1242, %1240 ]
  %1248 = load ptr, ptr %1159, align 8, !tbaa !33
  %1249 = load ptr, ptr %1160, align 8, !tbaa !34
  %1250 = icmp ult ptr %1248, %1249
  br i1 %1250, label %1251, label %1256

1251:                                             ; preds = %1245
  %1252 = trunc i32 %1247 to i8
  %1253 = getelementptr inbounds i8, ptr %1248, i64 1
  store ptr %1253, ptr %1159, align 8, !tbaa !33
  store i8 %1252, ptr %1248, align 1, !tbaa !3
  %1254 = load i32, ptr %1158, align 8, !tbaa !162
  %1255 = load i32, ptr %1157, align 4, !tbaa !161
  br label %1256

1256:                                             ; preds = %1251, %1245
  %1257 = phi i32 [ %1255, %1251 ], [ %1246, %1245 ]
  %1258 = phi i32 [ %1254, %1251 ], [ %1247, %1245 ]
  %1259 = lshr i32 %1258, 8
  store i32 %1259, ptr %1158, align 8, !tbaa !162
  %1260 = add i32 %1257, -8
  store i32 %1260, ptr %1157, align 4, !tbaa !161
  %1261 = icmp ugt i32 %1260, 7
  br i1 %1261, label %1245, label %1262, !llvm.loop !389

1262:                                             ; preds = %1256, %1240
  %1263 = phi i32 [ %1242, %1240 ], [ %1259, %1256 ]
  %1264 = phi i32 [ %1243, %1240 ], [ %1260, %1256 ]
  %1265 = icmp ult i32 %1187, 512
  %1266 = zext i32 %1187 to i64
  %1267 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_sym, i64 0, i64 %1266
  %1268 = getelementptr inbounds [512 x i8], ptr @s_tdefl_small_dist_extra, i64 0, i64 %1266
  %1269 = zext i8 %1184 to i64
  %1270 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_sym, i64 0, i64 %1269
  %1271 = getelementptr inbounds [128 x i8], ptr @s_tdefl_large_dist_extra, i64 0, i64 %1269
  %1272 = select i1 %1265, ptr %1268, ptr %1271
  %1273 = select i1 %1265, ptr %1267, ptr %1270
  %1274 = load i8, ptr %1273, align 1, !tbaa !3
  %1275 = load i8, ptr %1272, align 1, !tbaa !3
  %1276 = zext i8 %1275 to i32
  %1277 = zext i8 %1274 to i64
  %1278 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 1, i64 %1277
  %1279 = load i8, ptr %1278, align 1, !tbaa !3
  %1280 = icmp eq i8 %1279, 0
  br i1 %1280, label %1281, label %1282

1281:                                             ; preds = %1262
  tail call void @__assert_fail(ptr noundef nonnull @.str.67, ptr noundef nonnull @.str.12, i32 noundef 3088, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_lz_codes) #41
  unreachable

1282:                                             ; preds = %1262
  %1283 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 37, i64 1, i64 %1277
  %1284 = load i16, ptr %1283, align 2, !tbaa !103
  %1285 = zext i16 %1284 to i32
  %1286 = zext i8 %1279 to i32
  %1287 = lshr i32 %1285, %1286
  %1288 = icmp eq i32 %1287, 0
  br i1 %1288, label %1290, label %1289

1289:                                             ; preds = %1282
  tail call void @__assert_fail(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.12, i32 noundef 3089, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_lz_codes) #41
  unreachable

1290:                                             ; preds = %1282
  %1291 = shl nuw nsw i32 %1285, %1264
  %1292 = or i32 %1291, %1263
  store i32 %1292, ptr %1158, align 8, !tbaa !162
  %1293 = add nuw nsw i32 %1264, %1286
  store i32 %1293, ptr %1157, align 4, !tbaa !161
  %1294 = icmp ugt i32 %1293, 7
  br i1 %1294, label %1295, label %1312

1295:                                             ; preds = %1290, %1306
  %1296 = phi i32 [ %1310, %1306 ], [ %1293, %1290 ]
  %1297 = phi i32 [ %1309, %1306 ], [ %1292, %1290 ]
  %1298 = load ptr, ptr %1159, align 8, !tbaa !33
  %1299 = load ptr, ptr %1160, align 8, !tbaa !34
  %1300 = icmp ult ptr %1298, %1299
  br i1 %1300, label %1301, label %1306

1301:                                             ; preds = %1295
  %1302 = trunc i32 %1297 to i8
  %1303 = getelementptr inbounds i8, ptr %1298, i64 1
  store ptr %1303, ptr %1159, align 8, !tbaa !33
  store i8 %1302, ptr %1298, align 1, !tbaa !3
  %1304 = load i32, ptr %1158, align 8, !tbaa !162
  %1305 = load i32, ptr %1157, align 4, !tbaa !161
  br label %1306

1306:                                             ; preds = %1301, %1295
  %1307 = phi i32 [ %1305, %1301 ], [ %1296, %1295 ]
  %1308 = phi i32 [ %1304, %1301 ], [ %1297, %1295 ]
  %1309 = lshr i32 %1308, 8
  store i32 %1309, ptr %1158, align 8, !tbaa !162
  %1310 = add i32 %1307, -8
  store i32 %1310, ptr %1157, align 4, !tbaa !161
  %1311 = icmp ugt i32 %1310, 7
  br i1 %1311, label %1295, label %1312, !llvm.loop !390

1312:                                             ; preds = %1306, %1290
  %1313 = phi i32 [ %1292, %1290 ], [ %1309, %1306 ]
  %1314 = phi i32 [ %1293, %1290 ], [ %1310, %1306 ]
  %1315 = zext i8 %1275 to i64
  %1316 = getelementptr inbounds [17 x i32], ptr @mz_bitmasks, i64 0, i64 %1315
  %1317 = load i32, ptr %1316, align 4, !tbaa !12
  %1318 = and i32 %1317, %1187
  %1319 = lshr i32 %1318, %1276
  %1320 = icmp eq i32 %1319, 0
  br i1 %1320, label %1322, label %1321

1321:                                             ; preds = %1312
  tail call void @__assert_fail(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.12, i32 noundef 3090, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_lz_codes) #41
  unreachable

1322:                                             ; preds = %1312
  %1323 = shl i32 %1318, %1314
  %1324 = or i32 %1323, %1313
  store i32 %1324, ptr %1158, align 8, !tbaa !162
  %1325 = add nuw nsw i32 %1314, %1276
  store i32 %1325, ptr %1157, align 4, !tbaa !161
  %1326 = icmp ugt i32 %1325, 7
  br i1 %1326, label %1327, label %1382

1327:                                             ; preds = %1322, %1338
  %1328 = phi i32 [ %1342, %1338 ], [ %1325, %1322 ]
  %1329 = phi i32 [ %1341, %1338 ], [ %1324, %1322 ]
  %1330 = load ptr, ptr %1159, align 8, !tbaa !33
  %1331 = load ptr, ptr %1160, align 8, !tbaa !34
  %1332 = icmp ult ptr %1330, %1331
  br i1 %1332, label %1333, label %1338

1333:                                             ; preds = %1327
  %1334 = trunc i32 %1329 to i8
  %1335 = getelementptr inbounds i8, ptr %1330, i64 1
  store ptr %1335, ptr %1159, align 8, !tbaa !33
  store i8 %1334, ptr %1330, align 1, !tbaa !3
  %1336 = load i32, ptr %1158, align 8, !tbaa !162
  %1337 = load i32, ptr %1157, align 4, !tbaa !161
  br label %1338

1338:                                             ; preds = %1333, %1327
  %1339 = phi i32 [ %1337, %1333 ], [ %1328, %1327 ]
  %1340 = phi i32 [ %1336, %1333 ], [ %1329, %1327 ]
  %1341 = lshr i32 %1340, 8
  store i32 %1341, ptr %1158, align 8, !tbaa !162
  %1342 = add i32 %1339, -8
  store i32 %1342, ptr %1157, align 4, !tbaa !161
  %1343 = icmp ugt i32 %1342, 7
  br i1 %1343, label %1327, label %1382, !llvm.loop !391

1344:                                             ; preds = %1172
  %1345 = getelementptr inbounds i8, ptr %1173, i64 1
  %1346 = load i8, ptr %1173, align 1, !tbaa !3
  %1347 = zext i8 %1346 to i64
  %1348 = getelementptr inbounds [288 x i8], ptr %1155, i64 0, i64 %1347
  %1349 = load i8, ptr %1348, align 1, !tbaa !3
  %1350 = icmp eq i8 %1349, 0
  br i1 %1350, label %1351, label %1352

1351:                                             ; preds = %1344
  tail call void @__assert_fail(ptr noundef nonnull @.str.68, ptr noundef nonnull @.str.12, i32 noundef 3093, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_lz_codes) #41
  unreachable

1352:                                             ; preds = %1344
  %1353 = getelementptr inbounds [288 x i16], ptr %1156, i64 0, i64 %1347
  %1354 = load i16, ptr %1353, align 2, !tbaa !103
  %1355 = zext i16 %1354 to i32
  %1356 = zext i8 %1349 to i32
  %1357 = lshr i32 %1355, %1356
  %1358 = icmp eq i32 %1357, 0
  br i1 %1358, label %1360, label %1359

1359:                                             ; preds = %1352
  tail call void @__assert_fail(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.12, i32 noundef 3094, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_lz_codes) #41
  unreachable

1360:                                             ; preds = %1352
  %1361 = shl i32 %1355, %1163
  %1362 = or i32 %1162, %1361
  store i32 %1362, ptr %1158, align 8, !tbaa !162
  %1363 = add i32 %1163, %1356
  store i32 %1363, ptr %1157, align 4, !tbaa !161
  %1364 = icmp ugt i32 %1363, 7
  br i1 %1364, label %1365, label %1382

1365:                                             ; preds = %1360, %1376
  %1366 = phi i32 [ %1380, %1376 ], [ %1363, %1360 ]
  %1367 = phi i32 [ %1379, %1376 ], [ %1362, %1360 ]
  %1368 = load ptr, ptr %1159, align 8, !tbaa !33
  %1369 = load ptr, ptr %1160, align 8, !tbaa !34
  %1370 = icmp ult ptr %1368, %1369
  br i1 %1370, label %1371, label %1376

1371:                                             ; preds = %1365
  %1372 = trunc i32 %1367 to i8
  %1373 = getelementptr inbounds i8, ptr %1368, i64 1
  store ptr %1373, ptr %1159, align 8, !tbaa !33
  store i8 %1372, ptr %1368, align 1, !tbaa !3
  %1374 = load i32, ptr %1158, align 8, !tbaa !162
  %1375 = load i32, ptr %1157, align 4, !tbaa !161
  br label %1376

1376:                                             ; preds = %1371, %1365
  %1377 = phi i32 [ %1375, %1371 ], [ %1366, %1365 ]
  %1378 = phi i32 [ %1374, %1371 ], [ %1367, %1365 ]
  %1379 = lshr i32 %1378, 8
  store i32 %1379, ptr %1158, align 8, !tbaa !162
  %1380 = add i32 %1377, -8
  store i32 %1380, ptr %1157, align 4, !tbaa !161
  %1381 = icmp ugt i32 %1380, 7
  br i1 %1381, label %1365, label %1382, !llvm.loop !392

1382:                                             ; preds = %1338, %1376, %1360, %1322
  %1383 = phi i32 [ %1362, %1360 ], [ %1324, %1322 ], [ %1379, %1376 ], [ %1341, %1338 ]
  %1384 = phi i32 [ %1363, %1360 ], [ %1325, %1322 ], [ %1380, %1376 ], [ %1342, %1338 ]
  %1385 = phi ptr [ %1345, %1360 ], [ %1188, %1322 ], [ %1345, %1376 ], [ %1188, %1338 ]
  %1386 = lshr i32 %1174, 1
  %1387 = load ptr, ptr %1151, align 8, !tbaa !30
  %1388 = icmp ult ptr %1385, %1387
  br i1 %1388, label %1161, label %1389, !llvm.loop !393

1389:                                             ; preds = %1382, %1147
  %1390 = phi i32 [ %1148, %1147 ], [ %1383, %1382 ]
  %1391 = phi i32 [ %1149, %1147 ], [ %1384, %1382 ]
  %1392 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 37, i64 0, i64 256
  %1393 = load i16, ptr %1392, align 2, !tbaa !103
  %1394 = zext i16 %1393 to i32
  %1395 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 0, i64 256
  %1396 = load i8, ptr %1395, align 2, !tbaa !3
  %1397 = zext i8 %1396 to i32
  %1398 = lshr i32 %1394, %1397
  %1399 = icmp eq i32 %1398, 0
  br i1 %1399, label %1401, label %1400

1400:                                             ; preds = %1389
  tail call void @__assert_fail(ptr noundef nonnull @.str.63, ptr noundef nonnull @.str.12, i32 noundef 3098, ptr noundef nonnull @__PRETTY_FUNCTION__.tdefl_compress_lz_codes) #41
  unreachable

1401:                                             ; preds = %1389
  %1402 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 16
  %1403 = shl nuw nsw i32 %1394, %1391
  %1404 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 17
  %1405 = or i32 %1390, %1403
  store i32 %1405, ptr %1404, align 8, !tbaa !162
  %1406 = add nuw nsw i32 %1391, %1397
  store i32 %1406, ptr %1402, align 4, !tbaa !161
  %1407 = icmp ugt i32 %1406, 7
  br i1 %1407, label %1408, label %1428

1408:                                             ; preds = %1401
  %1409 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  %1410 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  br label %1411

1411:                                             ; preds = %1422, %1408
  %1412 = phi i32 [ %1406, %1408 ], [ %1426, %1422 ]
  %1413 = phi i32 [ %1405, %1408 ], [ %1425, %1422 ]
  %1414 = load ptr, ptr %1409, align 8, !tbaa !33
  %1415 = load ptr, ptr %1410, align 8, !tbaa !34
  %1416 = icmp ult ptr %1414, %1415
  br i1 %1416, label %1417, label %1422

1417:                                             ; preds = %1411
  %1418 = trunc i32 %1413 to i8
  %1419 = getelementptr inbounds i8, ptr %1414, i64 1
  store ptr %1419, ptr %1409, align 8, !tbaa !33
  store i8 %1418, ptr %1414, align 1, !tbaa !3
  %1420 = load i32, ptr %1404, align 8, !tbaa !162
  %1421 = load i32, ptr %1402, align 4, !tbaa !161
  br label %1422

1422:                                             ; preds = %1417, %1411
  %1423 = phi i32 [ %1421, %1417 ], [ %1412, %1411 ]
  %1424 = phi i32 [ %1420, %1417 ], [ %1413, %1411 ]
  %1425 = lshr i32 %1424, 8
  store i32 %1425, ptr %1404, align 8, !tbaa !162
  %1426 = add i32 %1423, -8
  store i32 %1426, ptr %1402, align 4, !tbaa !161
  %1427 = icmp ugt i32 %1426, 7
  br i1 %1427, label %1411, label %1428, !llvm.loop !394

1428:                                             ; preds = %1422, %1401
  %1429 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 11
  %1430 = load ptr, ptr %1429, align 8, !tbaa !33
  %1431 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 12
  %1432 = load ptr, ptr %1431, align 8, !tbaa !34
  %1433 = icmp ult ptr %1430, %1432
  %1434 = zext i1 %1433 to i32
  ret i32 %1434
}

; Function Attrs: nofree nosync nounwind memory(argmem: readwrite) uwtable
define internal fastcc void @tdefl_optimize_huffman_table(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #31 {
  %6 = alloca [512 x i32], align 16
  %7 = alloca [256 x i32], align 16
  %8 = alloca [33 x i32], align 16
  %9 = alloca [33 x i32], align 16
  %10 = alloca [288 x %struct.tdefl_sym_freq], align 16
  %11 = alloca [288 x %struct.tdefl_sym_freq], align 16
  call void @llvm.lifetime.start.p0(i64 132, ptr nonnull %8) #38
  call void @llvm.lifetime.start.p0(i64 132, ptr nonnull %9) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(132) %8, i8 0, i64 132, i1 false)
  %12 = icmp eq i32 %4, 0
  br i1 %12, label %41, label %13

13:                                               ; preds = %5
  %14 = icmp sgt i32 %2, 0
  br i1 %14, label %15, label %684

15:                                               ; preds = %13
  %16 = zext i32 %1 to i64
  %17 = zext i32 %2 to i64
  %18 = and i64 %17, 1
  %19 = icmp eq i32 %2, 1
  br i1 %19, label %674, label %20

20:                                               ; preds = %15
  %21 = and i64 %17, 4294967294
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ 0, %20 ], [ %38, %22 ]
  %24 = phi i64 [ 0, %20 ], [ %39, %22 ]
  %25 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %16, i64 %23
  %26 = load i8, ptr %25, align 1, !tbaa !3
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !12
  %30 = add nsw i32 %29, 1
  store i32 %30, ptr %28, align 4, !tbaa !12
  %31 = or i64 %23, 1
  %32 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %16, i64 %31
  %33 = load i8, ptr %32, align 1, !tbaa !3
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !12
  %37 = add nsw i32 %36, 1
  store i32 %37, ptr %35, align 4, !tbaa !12
  %38 = add nuw nsw i64 %23, 2
  %39 = add i64 %24, 2
  %40 = icmp eq i64 %39, %21
  br i1 %40, label %674, label %22, !llvm.loop !365

41:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 1152, ptr nonnull %10) #38
  call void @llvm.lifetime.start.p0(i64 1152, ptr nonnull %11) #38
  %42 = zext i32 %1 to i64
  %43 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 36, i64 %42
  %44 = icmp sgt i32 %2, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  call void @llvm.lifetime.start.p0(i64 2048, ptr nonnull %6) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(2048) %6, i8 0, i64 2048, i1 false)
  br label %127

46:                                               ; preds = %41
  %47 = zext i32 %2 to i64
  %48 = and i64 %47, 1
  %49 = icmp eq i32 %2, 1
  br i1 %49, label %82, label %50

50:                                               ; preds = %46
  %51 = and i64 %47, 4294967294
  br label %52

52:                                               ; preds = %77, %50
  %53 = phi i64 [ 0, %50 ], [ %79, %77 ]
  %54 = phi i32 [ 0, %50 ], [ %78, %77 ]
  %55 = phi i64 [ 0, %50 ], [ %80, %77 ]
  %56 = getelementptr inbounds i16, ptr %43, i64 %53
  %57 = load i16, ptr %56, align 2, !tbaa !103
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %52
  %60 = sext i32 %54 to i64
  %61 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %10, i64 0, i64 %60
  store i16 %57, ptr %61, align 4, !tbaa !395
  %62 = trunc i64 %53 to i16
  %63 = add nsw i32 %54, 1
  %64 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %10, i64 0, i64 %60, i32 1
  store i16 %62, ptr %64, align 2, !tbaa !397
  br label %65

65:                                               ; preds = %52, %59
  %66 = phi i32 [ %63, %59 ], [ %54, %52 ]
  %67 = or i64 %53, 1
  %68 = getelementptr inbounds i16, ptr %43, i64 %67
  %69 = load i16, ptr %68, align 2, !tbaa !103
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = sext i32 %66 to i64
  %73 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %10, i64 0, i64 %72
  store i16 %69, ptr %73, align 4, !tbaa !395
  %74 = trunc i64 %67 to i16
  %75 = add nsw i32 %66, 1
  %76 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %10, i64 0, i64 %72, i32 1
  store i16 %74, ptr %76, align 2, !tbaa !397
  br label %77

77:                                               ; preds = %71, %65
  %78 = phi i32 [ %75, %71 ], [ %66, %65 ]
  %79 = add nuw nsw i64 %53, 2
  %80 = add i64 %55, 2
  %81 = icmp eq i64 %80, %51
  br i1 %81, label %82, label %52, !llvm.loop !398

82:                                               ; preds = %77, %46
  %83 = phi i32 [ undef, %46 ], [ %78, %77 ]
  %84 = phi i64 [ 0, %46 ], [ %79, %77 ]
  %85 = phi i32 [ 0, %46 ], [ %78, %77 ]
  %86 = icmp eq i64 %48, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds i16, ptr %43, i64 %84
  %89 = load i16, ptr %88, align 2, !tbaa !103
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = sext i32 %85 to i64
  %93 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %10, i64 0, i64 %92
  store i16 %89, ptr %93, align 4, !tbaa !395
  %94 = trunc i64 %84 to i16
  %95 = add nsw i32 %85, 1
  %96 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], ptr %10, i64 0, i64 %92, i32 1
  store i16 %94, ptr %96, align 2, !tbaa !397
  br label %97

97:                                               ; preds = %87, %91, %82
  %98 = phi i32 [ %83, %82 ], [ %95, %91 ], [ %85, %87 ]
  call void @llvm.lifetime.start.p0(i64 2048, ptr nonnull %6) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(2048) %6, i8 0, i64 2048, i1 false)
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %127, label %100

100:                                              ; preds = %97
  %101 = zext i32 %98 to i64
  %102 = and i64 %101, 1
  %103 = icmp eq i32 %98, 1
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = and i64 %101, 4294967294
  br label %139

106:                                              ; preds = %139, %100
  %107 = phi i64 [ 0, %100 ], [ %171, %139 ]
  %108 = icmp eq i64 %102, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %10, i64 %107
  %111 = load i16, ptr %110, align 4, !tbaa !395
  %112 = zext i16 %111 to i32
  %113 = and i32 %112, 255
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds [512 x i32], ptr %6, i64 0, i64 %114
  %116 = load i32, ptr %115, align 4, !tbaa !12
  %117 = add i32 %116, 1
  store i32 %117, ptr %115, align 4, !tbaa !12
  %118 = lshr i32 %112, 8
  %119 = or i32 %118, 256
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds [512 x i32], ptr %6, i64 0, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !12
  %123 = add i32 %122, 1
  store i32 %123, ptr %121, align 4, !tbaa !12
  br label %124

124:                                              ; preds = %106, %109
  %125 = getelementptr inbounds [512 x i32], ptr %6, i64 0, i64 256
  %126 = load i32, ptr %125, align 16
  br label %127

127:                                              ; preds = %97, %45, %124
  %128 = phi i1 [ %99, %124 ], [ true, %45 ], [ true, %97 ]
  %129 = phi i32 [ %98, %124 ], [ 0, %45 ], [ 0, %97 ]
  %130 = phi i64 [ %101, %124 ], [ 0, %45 ], [ 0, %97 ]
  %131 = phi i32 [ %126, %124 ], [ 0, %45 ], [ 0, %97 ]
  %132 = icmp eq i32 %131, %129
  %133 = select i1 %132, i64 1, i64 2
  %134 = add nsw i64 %130, -1
  %135 = and i64 %130, 1
  %136 = icmp eq i64 %134, 0
  %137 = and i64 %130, 4294967294
  %138 = icmp eq i64 %135, 0
  br label %174

139:                                              ; preds = %139, %104
  %140 = phi i64 [ 0, %104 ], [ %171, %139 ]
  %141 = phi i64 [ 0, %104 ], [ %172, %139 ]
  %142 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %10, i64 %140
  %143 = load i16, ptr %142, align 8, !tbaa !395
  %144 = zext i16 %143 to i32
  %145 = and i32 %144, 255
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds [512 x i32], ptr %6, i64 0, i64 %146
  %148 = load i32, ptr %147, align 4, !tbaa !12
  %149 = add i32 %148, 1
  store i32 %149, ptr %147, align 4, !tbaa !12
  %150 = lshr i32 %144, 8
  %151 = or i32 %150, 256
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds [512 x i32], ptr %6, i64 0, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !12
  %155 = add i32 %154, 1
  store i32 %155, ptr %153, align 4, !tbaa !12
  %156 = or i64 %140, 1
  %157 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %10, i64 %156
  %158 = load i16, ptr %157, align 4, !tbaa !395
  %159 = zext i16 %158 to i32
  %160 = and i32 %159, 255
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [512 x i32], ptr %6, i64 0, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !12
  %164 = add i32 %163, 1
  store i32 %164, ptr %162, align 4, !tbaa !12
  %165 = lshr i32 %159, 8
  %166 = or i32 %165, 256
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds [512 x i32], ptr %6, i64 0, i64 %167
  %169 = load i32, ptr %168, align 4, !tbaa !12
  %170 = add i32 %169, 1
  store i32 %170, ptr %168, align 4, !tbaa !12
  %171 = add nuw nsw i64 %140, 2
  %172 = add i64 %141, 2
  %173 = icmp eq i64 %172, %105
  br i1 %173, label %106, label %139, !llvm.loop !399

174:                                              ; preds = %253, %127
  %175 = phi i64 [ 0, %127 ], [ %254, %253 ]
  %176 = phi i32 [ 0, %127 ], [ %255, %253 ]
  %177 = phi ptr [ %11, %127 ], [ %178, %253 ]
  %178 = phi ptr [ %10, %127 ], [ %177, %253 ]
  %179 = shl i64 %175, 8
  %180 = getelementptr inbounds [512 x i32], ptr %6, i64 0, i64 %179
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %7) #38
  br label %183

181:                                              ; preds = %183
  br i1 %128, label %253, label %182

182:                                              ; preds = %181
  br i1 %136, label %238, label %207

183:                                              ; preds = %183, %174
  %184 = phi i64 [ 0, %174 ], [ %205, %183 ]
  %185 = phi i32 [ 0, %174 ], [ %204, %183 ]
  %186 = getelementptr inbounds [256 x i32], ptr %7, i64 0, i64 %184
  store i32 %185, ptr %186, align 16, !tbaa !12
  %187 = getelementptr inbounds i32, ptr %180, i64 %184
  %188 = load i32, ptr %187, align 16, !tbaa !12
  %189 = add i32 %188, %185
  %190 = or i64 %184, 1
  %191 = getelementptr inbounds [256 x i32], ptr %7, i64 0, i64 %190
  store i32 %189, ptr %191, align 4, !tbaa !12
  %192 = getelementptr inbounds i32, ptr %180, i64 %190
  %193 = load i32, ptr %192, align 4, !tbaa !12
  %194 = add i32 %193, %189
  %195 = or i64 %184, 2
  %196 = getelementptr inbounds [256 x i32], ptr %7, i64 0, i64 %195
  store i32 %194, ptr %196, align 8, !tbaa !12
  %197 = getelementptr inbounds i32, ptr %180, i64 %195
  %198 = load i32, ptr %197, align 8, !tbaa !12
  %199 = add i32 %198, %194
  %200 = or i64 %184, 3
  %201 = getelementptr inbounds [256 x i32], ptr %7, i64 0, i64 %200
  store i32 %199, ptr %201, align 4, !tbaa !12
  %202 = getelementptr inbounds i32, ptr %180, i64 %200
  %203 = load i32, ptr %202, align 4, !tbaa !12
  %204 = add i32 %203, %199
  %205 = add nuw nsw i64 %184, 4
  %206 = icmp eq i64 %205, 256
  br i1 %206, label %181, label %183, !llvm.loop !400

207:                                              ; preds = %182, %207
  %208 = phi i64 [ %235, %207 ], [ 0, %182 ]
  %209 = phi i64 [ %236, %207 ], [ 0, %182 ]
  %210 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %178, i64 %208
  %211 = load i16, ptr %210, align 2, !tbaa !395
  %212 = zext i16 %211 to i32
  %213 = lshr i32 %212, %176
  %214 = and i32 %213, 255
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds [256 x i32], ptr %7, i64 0, i64 %215
  %217 = load i32, ptr %216, align 4, !tbaa !12
  %218 = add i32 %217, 1
  store i32 %218, ptr %216, align 4, !tbaa !12
  %219 = zext i32 %217 to i64
  %220 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %219
  %221 = load i32, ptr %210, align 2
  store i32 %221, ptr %220, align 2
  %222 = or i64 %208, 1
  %223 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %178, i64 %222
  %224 = load i16, ptr %223, align 2, !tbaa !395
  %225 = zext i16 %224 to i32
  %226 = lshr i32 %225, %176
  %227 = and i32 %226, 255
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds [256 x i32], ptr %7, i64 0, i64 %228
  %230 = load i32, ptr %229, align 4, !tbaa !12
  %231 = add i32 %230, 1
  store i32 %231, ptr %229, align 4, !tbaa !12
  %232 = zext i32 %230 to i64
  %233 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %232
  %234 = load i32, ptr %223, align 2
  store i32 %234, ptr %233, align 2
  %235 = add nuw nsw i64 %208, 2
  %236 = add i64 %209, 2
  %237 = icmp eq i64 %236, %137
  br i1 %237, label %238, label %207, !llvm.loop !401

238:                                              ; preds = %207, %182
  %239 = phi i64 [ 0, %182 ], [ %235, %207 ]
  br i1 %138, label %253, label %240

240:                                              ; preds = %238
  %241 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %178, i64 %239
  %242 = load i16, ptr %241, align 2, !tbaa !395
  %243 = zext i16 %242 to i32
  %244 = lshr i32 %243, %176
  %245 = and i32 %244, 255
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds [256 x i32], ptr %7, i64 0, i64 %246
  %248 = load i32, ptr %247, align 4, !tbaa !12
  %249 = add i32 %248, 1
  store i32 %249, ptr %247, align 4, !tbaa !12
  %250 = zext i32 %248 to i64
  %251 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %250
  %252 = load i32, ptr %241, align 2
  store i32 %252, ptr %251, align 2
  br label %253

253:                                              ; preds = %240, %238, %181
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %7) #38
  %254 = add nuw nsw i64 %175, 1
  %255 = add nuw nsw i32 %176, 8
  %256 = icmp eq i64 %254, %133
  br i1 %256, label %257, label %174, !llvm.loop !402

257:                                              ; preds = %253
  call void @llvm.lifetime.end.p0(i64 2048, ptr nonnull %6) #38
  switch i32 %129, label %259 [
    i32 0, label %605
    i32 1, label %258
  ]

258:                                              ; preds = %257
  store i16 1, ptr %177, align 2, !tbaa !395
  br label %459

259:                                              ; preds = %257
  %260 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 1
  %261 = load i16, ptr %260, align 2, !tbaa !395
  %262 = load i16, ptr %177, align 2, !tbaa !395
  %263 = add i16 %262, %261
  store i16 %263, ptr %177, align 2, !tbaa !395
  %264 = add i32 %129, -1
  %265 = icmp sgt i32 %129, 2
  br i1 %265, label %270, label %266

266:                                              ; preds = %259
  %267 = add nsw i32 %129, -2
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %268
  store i16 0, ptr %269, align 2, !tbaa !395
  br label %388

270:                                              ; preds = %259
  %271 = zext i32 %264 to i64
  br label %272

272:                                              ; preds = %328, %270
  %273 = phi i64 [ 1, %270 ], [ %331, %328 ]
  %274 = phi i32 [ 2, %270 ], [ %330, %328 ]
  %275 = phi i32 [ 0, %270 ], [ %329, %328 ]
  %276 = icmp slt i32 %274, %129
  %277 = sext i32 %275 to i64
  %278 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %277
  %279 = load i16, ptr %278, align 2, !tbaa !395
  br i1 %276, label %280, label %285

280:                                              ; preds = %272
  %281 = sext i32 %274 to i64
  %282 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %281
  %283 = load i16, ptr %282, align 2, !tbaa !395
  %284 = icmp ult i16 %279, %283
  br i1 %284, label %285, label %290

285:                                              ; preds = %280, %272
  %286 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %273
  store i16 %279, ptr %286, align 2, !tbaa !395
  %287 = trunc i64 %273 to i16
  %288 = add nsw i32 %275, 1
  store i16 %287, ptr %278, align 2, !tbaa !395
  %289 = sext i32 %288 to i64
  br label %293

290:                                              ; preds = %280
  %291 = add nsw i32 %274, 1
  %292 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %273
  store i16 %283, ptr %292, align 2, !tbaa !395
  br label %293

293:                                              ; preds = %290, %285
  %294 = phi i64 [ %277, %290 ], [ %289, %285 ]
  %295 = phi i32 [ %275, %290 ], [ %288, %285 ]
  %296 = phi i32 [ %291, %290 ], [ %274, %285 ]
  %297 = icmp slt i32 %296, %129
  br i1 %297, label %301, label %298

298:                                              ; preds = %293
  %299 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %294
  %300 = load i16, ptr %299, align 2, !tbaa !395
  br label %314

301:                                              ; preds = %293
  %302 = icmp sgt i64 %273, %294
  br i1 %302, label %307, label %303

303:                                              ; preds = %301
  %304 = sext i32 %296 to i64
  %305 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %304
  %306 = load i16, ptr %305, align 2, !tbaa !395
  br label %322

307:                                              ; preds = %301
  %308 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %294
  %309 = load i16, ptr %308, align 2, !tbaa !395
  %310 = sext i32 %296 to i64
  %311 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %310
  %312 = load i16, ptr %311, align 2, !tbaa !395
  %313 = icmp ult i16 %309, %312
  br i1 %313, label %314, label %322

314:                                              ; preds = %307, %298
  %315 = phi i16 [ %300, %298 ], [ %309, %307 ]
  %316 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %273
  %317 = load i16, ptr %316, align 2, !tbaa !395
  %318 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %294
  %319 = add i16 %317, %315
  store i16 %319, ptr %316, align 2, !tbaa !395
  %320 = trunc i64 %273 to i16
  %321 = add nsw i32 %295, 1
  store i16 %320, ptr %318, align 2, !tbaa !395
  br label %328

322:                                              ; preds = %307, %303
  %323 = phi i16 [ %306, %303 ], [ %312, %307 ]
  %324 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %273
  %325 = load i16, ptr %324, align 2, !tbaa !395
  %326 = add nsw i32 %296, 1
  %327 = add i16 %325, %323
  store i16 %327, ptr %324, align 2, !tbaa !395
  br label %328

328:                                              ; preds = %322, %314
  %329 = phi i32 [ %321, %314 ], [ %295, %322 ]
  %330 = phi i32 [ %296, %314 ], [ %326, %322 ]
  %331 = add nuw nsw i64 %273, 1
  %332 = icmp eq i64 %331, %271
  br i1 %332, label %333, label %272, !llvm.loop !403

333:                                              ; preds = %328
  %334 = add nsw i32 %129, -2
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %335
  store i16 0, ptr %336, align 2, !tbaa !395
  %337 = add nsw i32 %129, -3
  %338 = zext i32 %337 to i64
  %339 = add nuw nsw i64 %338, 1
  %340 = and i64 %339, 3
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %354, label %342

342:                                              ; preds = %333, %342
  %343 = phi i64 [ %351, %342 ], [ %338, %333 ]
  %344 = phi i64 [ %352, %342 ], [ 0, %333 ]
  %345 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %343
  %346 = load i16, ptr %345, align 2, !tbaa !395
  %347 = zext i16 %346 to i64
  %348 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %347
  %349 = load i16, ptr %348, align 2, !tbaa !395
  %350 = add i16 %349, 1
  store i16 %350, ptr %345, align 2, !tbaa !395
  %351 = add nsw i64 %343, -1
  %352 = add i64 %344, 1
  %353 = icmp eq i64 %352, %340
  br i1 %353, label %354, label %342, !llvm.loop !404

354:                                              ; preds = %342, %333
  %355 = phi i64 [ %338, %333 ], [ %351, %342 ]
  %356 = icmp ult i32 %337, 3
  br i1 %356, label %388, label %357

357:                                              ; preds = %354, %357
  %358 = phi i64 [ %386, %357 ], [ %355, %354 ]
  %359 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %358
  %360 = load i16, ptr %359, align 2, !tbaa !395
  %361 = zext i16 %360 to i64
  %362 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %361
  %363 = load i16, ptr %362, align 2, !tbaa !395
  %364 = add i16 %363, 1
  store i16 %364, ptr %359, align 2, !tbaa !395
  %365 = add nsw i64 %358, -1
  %366 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %365
  %367 = load i16, ptr %366, align 2, !tbaa !395
  %368 = zext i16 %367 to i64
  %369 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %368
  %370 = load i16, ptr %369, align 2, !tbaa !395
  %371 = add i16 %370, 1
  store i16 %371, ptr %366, align 2, !tbaa !395
  %372 = add nsw i64 %358, -2
  %373 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %372
  %374 = load i16, ptr %373, align 2, !tbaa !395
  %375 = zext i16 %374 to i64
  %376 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %375
  %377 = load i16, ptr %376, align 2, !tbaa !395
  %378 = add i16 %377, 1
  store i16 %378, ptr %373, align 2, !tbaa !395
  %379 = add nsw i64 %358, -3
  %380 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %379
  %381 = load i16, ptr %380, align 2, !tbaa !395
  %382 = zext i16 %381 to i64
  %383 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %382
  %384 = load i16, ptr %383, align 2, !tbaa !395
  %385 = add i16 %384, 1
  store i16 %385, ptr %380, align 2, !tbaa !395
  %386 = add nsw i64 %358, -4
  %387 = icmp eq i64 %379, 0
  br i1 %387, label %388, label %357, !llvm.loop !405

388:                                              ; preds = %354, %357, %266
  %389 = phi i32 [ %267, %266 ], [ %334, %357 ], [ %334, %354 ]
  br label %390

390:                                              ; preds = %388, %452
  %391 = phi i32 [ %455, %452 ], [ 0, %388 ]
  %392 = phi i32 [ %454, %452 ], [ 1, %388 ]
  %393 = phi i32 [ %453, %452 ], [ %264, %388 ]
  %394 = phi i32 [ %411, %452 ], [ %389, %388 ]
  %395 = icmp sgt i32 %394, -1
  br i1 %395, label %396, label %410

396:                                              ; preds = %390
  %397 = add nuw i32 %394, 1
  br label %398

398:                                              ; preds = %406, %396
  %399 = phi i32 [ %407, %406 ], [ 0, %396 ]
  %400 = phi i32 [ %408, %406 ], [ %394, %396 ]
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %401
  %403 = load i16, ptr %402, align 2, !tbaa !395
  %404 = zext i16 %403 to i32
  %405 = icmp eq i32 %391, %404
  br i1 %405, label %406, label %410

406:                                              ; preds = %398
  %407 = add nuw i32 %399, 1
  %408 = add nsw i32 %400, -1
  %409 = icmp eq i32 %399, %394
  br i1 %409, label %410, label %398, !llvm.loop !406

410:                                              ; preds = %406, %398, %390
  %411 = phi i32 [ %394, %390 ], [ %400, %398 ], [ -1, %406 ]
  %412 = phi i32 [ 0, %390 ], [ %399, %398 ], [ %397, %406 ]
  %413 = icmp sgt i32 %392, %412
  br i1 %413, label %414, label %452

414:                                              ; preds = %410
  %415 = trunc i32 %391 to i16
  %416 = sext i32 %393 to i64
  %417 = sub i32 %392, %412
  %418 = xor i32 %412, -1
  %419 = add i32 %392, %418
  %420 = and i32 %417, 3
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %431, label %422

422:                                              ; preds = %414, %422
  %423 = phi i64 [ %426, %422 ], [ %416, %414 ]
  %424 = phi i32 [ %428, %422 ], [ %392, %414 ]
  %425 = phi i32 [ %429, %422 ], [ 0, %414 ]
  %426 = add nsw i64 %423, -1
  %427 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %423
  store i16 %415, ptr %427, align 2, !tbaa !395
  %428 = add nsw i32 %424, -1
  %429 = add i32 %425, 1
  %430 = icmp eq i32 %429, %420
  br i1 %430, label %431, label %422, !llvm.loop !407

431:                                              ; preds = %422, %414
  %432 = phi i64 [ %416, %414 ], [ %426, %422 ]
  %433 = phi i32 [ %392, %414 ], [ %428, %422 ]
  %434 = phi i64 [ undef, %414 ], [ %426, %422 ]
  %435 = icmp ult i32 %419, 3
  br i1 %435, label %449, label %436

436:                                              ; preds = %431, %436
  %437 = phi i64 [ %445, %436 ], [ %432, %431 ]
  %438 = phi i32 [ %447, %436 ], [ %433, %431 ]
  %439 = add nsw i64 %437, -1
  %440 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %437
  store i16 %415, ptr %440, align 2, !tbaa !395
  %441 = add nsw i64 %437, -2
  %442 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %439
  store i16 %415, ptr %442, align 2, !tbaa !395
  %443 = add nsw i64 %437, -3
  %444 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %441
  store i16 %415, ptr %444, align 2, !tbaa !395
  %445 = add nsw i64 %437, -4
  %446 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %443
  store i16 %415, ptr %446, align 2, !tbaa !395
  %447 = add nsw i32 %438, -4
  %448 = icmp sgt i32 %447, %412
  br i1 %448, label %436, label %449, !llvm.loop !408

449:                                              ; preds = %436, %431
  %450 = phi i64 [ %434, %431 ], [ %445, %436 ]
  %451 = trunc i64 %450 to i32
  br label %452

452:                                              ; preds = %449, %410
  %453 = phi i32 [ %393, %410 ], [ %451, %449 ]
  %454 = shl nuw nsw i32 %412, 1
  %455 = add nuw nsw i32 %391, 1
  %456 = icmp sgt i32 %412, 0
  br i1 %456, label %390, label %457, !llvm.loop !409

457:                                              ; preds = %452
  %458 = icmp sgt i32 %129, 0
  br i1 %458, label %459, label %605

459:                                              ; preds = %258, %457
  %460 = and i64 %130, 3
  %461 = icmp ult i64 %134, 3
  br i1 %461, label %497, label %462

462:                                              ; preds = %459
  %463 = and i64 %130, 4294967292
  br label %464

464:                                              ; preds = %464, %462
  %465 = phi i64 [ 0, %462 ], [ %494, %464 ]
  %466 = phi i64 [ 0, %462 ], [ %495, %464 ]
  %467 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %465
  %468 = load i16, ptr %467, align 2, !tbaa !395
  %469 = zext i16 %468 to i64
  %470 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %469
  %471 = load i32, ptr %470, align 4, !tbaa !12
  %472 = add nsw i32 %471, 1
  store i32 %472, ptr %470, align 4, !tbaa !12
  %473 = or i64 %465, 1
  %474 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %473
  %475 = load i16, ptr %474, align 2, !tbaa !395
  %476 = zext i16 %475 to i64
  %477 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %476
  %478 = load i32, ptr %477, align 4, !tbaa !12
  %479 = add nsw i32 %478, 1
  store i32 %479, ptr %477, align 4, !tbaa !12
  %480 = or i64 %465, 2
  %481 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %480
  %482 = load i16, ptr %481, align 2, !tbaa !395
  %483 = zext i16 %482 to i64
  %484 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %483
  %485 = load i32, ptr %484, align 4, !tbaa !12
  %486 = add nsw i32 %485, 1
  store i32 %486, ptr %484, align 4, !tbaa !12
  %487 = or i64 %465, 3
  %488 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %487
  %489 = load i16, ptr %488, align 2, !tbaa !395
  %490 = zext i16 %489 to i64
  %491 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %490
  %492 = load i32, ptr %491, align 4, !tbaa !12
  %493 = add nsw i32 %492, 1
  store i32 %493, ptr %491, align 4, !tbaa !12
  %494 = add nuw nsw i64 %465, 4
  %495 = add i64 %466, 4
  %496 = icmp eq i64 %495, %463
  br i1 %496, label %497, label %464, !llvm.loop !410

497:                                              ; preds = %464, %459
  %498 = phi i64 [ 0, %459 ], [ %494, %464 ]
  %499 = icmp eq i64 %460, 0
  br i1 %499, label %512, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %509, %500 ], [ %498, %497 ]
  %502 = phi i64 [ %510, %500 ], [ 0, %497 ]
  %503 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %501
  %504 = load i16, ptr %503, align 2, !tbaa !395
  %505 = zext i16 %504 to i64
  %506 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %505
  %507 = load i32, ptr %506, align 4, !tbaa !12
  %508 = add nsw i32 %507, 1
  store i32 %508, ptr %506, align 4, !tbaa !12
  %509 = add nuw nsw i64 %501, 1
  %510 = add i64 %502, 1
  %511 = icmp eq i64 %510, %460
  br i1 %511, label %512, label %500, !llvm.loop !411

512:                                              ; preds = %500, %497
  %513 = icmp slt i32 %129, 2
  br i1 %513, label %605, label %514

514:                                              ; preds = %512
  %515 = icmp slt i32 %3, 32
  %516 = zext i32 %3 to i64
  br i1 %515, label %517, label %541

517:                                              ; preds = %514
  %518 = getelementptr inbounds i32, ptr %8, i64 %516
  %519 = load i32, ptr %518, align 4, !tbaa !12
  %520 = sext i32 %3 to i64
  %521 = sub nsw i64 0, %520
  %522 = and i64 %521, 3
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %534, label %524

524:                                              ; preds = %517, %524
  %525 = phi i64 [ %528, %524 ], [ %520, %517 ]
  %526 = phi i32 [ %531, %524 ], [ %519, %517 ]
  %527 = phi i64 [ %532, %524 ], [ 0, %517 ]
  %528 = add nsw i64 %525, 1
  %529 = getelementptr inbounds i32, ptr %8, i64 %528
  %530 = load i32, ptr %529, align 4, !tbaa !12
  %531 = add nsw i32 %530, %526
  store i32 %531, ptr %518, align 4, !tbaa !12
  %532 = add i64 %527, 1
  %533 = icmp eq i64 %532, %522
  br i1 %533, label %534, label %524, !llvm.loop !412

534:                                              ; preds = %524, %517
  %535 = phi i64 [ %520, %517 ], [ %528, %524 ]
  %536 = phi i32 [ %519, %517 ], [ %531, %524 ]
  %537 = add nsw i64 %520, -29
  %538 = icmp ult i64 %537, 3
  br i1 %538, label %539, label %542

539:                                              ; preds = %542, %534
  %540 = icmp sgt i32 %3, 0
  br i1 %540, label %541, label %562

541:                                              ; preds = %514, %539
  br label %569

542:                                              ; preds = %534, %542
  %543 = phi i64 [ %557, %542 ], [ %535, %534 ]
  %544 = phi i32 [ %560, %542 ], [ %536, %534 ]
  %545 = add nsw i64 %543, 1
  %546 = getelementptr inbounds i32, ptr %8, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !12
  %548 = add nsw i32 %547, %544
  store i32 %548, ptr %518, align 4, !tbaa !12
  %549 = add nsw i64 %543, 2
  %550 = getelementptr inbounds i32, ptr %8, i64 %549
  %551 = load i32, ptr %550, align 4, !tbaa !12
  %552 = add nsw i32 %551, %548
  store i32 %552, ptr %518, align 4, !tbaa !12
  %553 = add nsw i64 %543, 3
  %554 = getelementptr inbounds i32, ptr %8, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !12
  %556 = add nsw i32 %555, %552
  store i32 %556, ptr %518, align 4, !tbaa !12
  %557 = add nsw i64 %543, 4
  %558 = getelementptr inbounds i32, ptr %8, i64 %557
  %559 = load i32, ptr %558, align 4, !tbaa !12
  %560 = add nsw i32 %559, %556
  store i32 %560, ptr %518, align 4, !tbaa !12
  %561 = icmp eq i64 %557, 32
  br i1 %561, label %539, label %542, !llvm.loop !413

562:                                              ; preds = %569, %539
  %563 = phi i32 [ 0, %539 ], [ %577, %569 ]
  %564 = shl nuw i64 1, %516
  %565 = zext i32 %563 to i64
  %566 = icmp eq i64 %564, %565
  br i1 %566, label %605, label %567

567:                                              ; preds = %562
  %568 = getelementptr inbounds i32, ptr %8, i64 %516
  br label %580

569:                                              ; preds = %541, %569
  %570 = phi i64 [ %578, %569 ], [ %516, %541 ]
  %571 = phi i32 [ %577, %569 ], [ 0, %541 ]
  %572 = getelementptr inbounds i32, ptr %8, i64 %570
  %573 = load i32, ptr %572, align 4, !tbaa !12
  %574 = trunc i64 %570 to i32
  %575 = sub i32 %3, %574
  %576 = shl i32 %573, %575
  %577 = add i32 %576, %571
  %578 = add nsw i64 %570, -1
  %579 = icmp ugt i64 %570, 1
  br i1 %579, label %569, label %562, !llvm.loop !414

580:                                              ; preds = %601, %567
  %581 = phi i32 [ %563, %567 ], [ %602, %601 ]
  %582 = load i32, ptr %568, align 4, !tbaa !12
  %583 = add nsw i32 %582, -1
  store i32 %583, ptr %568, align 4, !tbaa !12
  br label %584

584:                                              ; preds = %588, %580
  %585 = phi i64 [ %589, %588 ], [ %516, %580 ]
  %586 = trunc i64 %585 to i32
  %587 = icmp sgt i32 %586, 1
  br i1 %587, label %588, label %601

588:                                              ; preds = %584
  %589 = add nsw i64 %585, -1
  %590 = getelementptr inbounds i32, ptr %8, i64 %589
  %591 = load i32, ptr %590, align 4, !tbaa !12
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %584, label %593, !llvm.loop !415

593:                                              ; preds = %588
  %594 = and i64 %589, 4294967295
  %595 = getelementptr inbounds i32, ptr %8, i64 %594
  %596 = add nsw i32 %591, -1
  store i32 %596, ptr %595, align 4, !tbaa !12
  %597 = and i64 %585, 4294967295
  %598 = getelementptr inbounds i32, ptr %8, i64 %597
  %599 = load i32, ptr %598, align 4, !tbaa !12
  %600 = add nsw i32 %599, 2
  store i32 %600, ptr %598, align 4, !tbaa !12
  br label %601

601:                                              ; preds = %584, %593
  %602 = add i32 %581, -1
  %603 = zext i32 %602 to i64
  %604 = icmp eq i64 %564, %603
  br i1 %604, label %605, label %580, !llvm.loop !416

605:                                              ; preds = %601, %257, %457, %512, %562
  %606 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %42
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(288) %606, i8 0, i64 288, i1 false)
  %607 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 37, i64 %42
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(576) %607, i8 0, i64 576, i1 false)
  %608 = icmp slt i32 %3, 1
  br i1 %608, label %673, label %609

609:                                              ; preds = %605
  %610 = add nuw i32 %3, 1
  %611 = zext i32 %610 to i64
  br label %612

612:                                              ; preds = %609, %669
  %613 = phi i64 [ 1, %609 ], [ %671, %669 ]
  %614 = phi i32 [ %129, %609 ], [ %670, %669 ]
  %615 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %613
  %616 = load i32, ptr %615, align 4, !tbaa !12
  %617 = icmp sgt i32 %616, 0
  br i1 %617, label %618, label %669

618:                                              ; preds = %612
  %619 = trunc i64 %613 to i8
  %620 = sext i32 %614 to i64
  %621 = and i32 %616, 3
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %635, label %623

623:                                              ; preds = %618, %623
  %624 = phi i64 [ %627, %623 ], [ %620, %618 ]
  %625 = phi i32 [ %632, %623 ], [ %616, %618 ]
  %626 = phi i32 [ %633, %623 ], [ 0, %618 ]
  %627 = add nsw i64 %624, -1
  %628 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %627, i32 1
  %629 = load i16, ptr %628, align 2, !tbaa !397
  %630 = zext i16 %629 to i64
  %631 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %42, i64 %630
  store i8 %619, ptr %631, align 1, !tbaa !3
  %632 = add nsw i32 %625, -1
  %633 = add i32 %626, 1
  %634 = icmp eq i32 %633, %621
  br i1 %634, label %635, label %623, !llvm.loop !417

635:                                              ; preds = %623, %618
  %636 = phi i64 [ %620, %618 ], [ %627, %623 ]
  %637 = phi i32 [ %616, %618 ], [ %632, %623 ]
  %638 = phi i64 [ undef, %618 ], [ %627, %623 ]
  %639 = icmp ult i32 %616, 4
  br i1 %639, label %666, label %640

640:                                              ; preds = %635, %640
  %641 = phi i64 [ %658, %640 ], [ %636, %635 ]
  %642 = phi i32 [ %663, %640 ], [ %637, %635 ]
  %643 = add nsw i64 %641, -1
  %644 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %643, i32 1
  %645 = load i16, ptr %644, align 2, !tbaa !397
  %646 = zext i16 %645 to i64
  %647 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %42, i64 %646
  store i8 %619, ptr %647, align 1, !tbaa !3
  %648 = add nsw i64 %641, -2
  %649 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %648, i32 1
  %650 = load i16, ptr %649, align 2, !tbaa !397
  %651 = zext i16 %650 to i64
  %652 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %42, i64 %651
  store i8 %619, ptr %652, align 1, !tbaa !3
  %653 = add nsw i64 %641, -3
  %654 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %653, i32 1
  %655 = load i16, ptr %654, align 2, !tbaa !397
  %656 = zext i16 %655 to i64
  %657 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %42, i64 %656
  store i8 %619, ptr %657, align 1, !tbaa !3
  %658 = add nsw i64 %641, -4
  %659 = getelementptr inbounds %struct.tdefl_sym_freq, ptr %177, i64 %658, i32 1
  %660 = load i16, ptr %659, align 2, !tbaa !397
  %661 = zext i16 %660 to i64
  %662 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %42, i64 %661
  store i8 %619, ptr %662, align 1, !tbaa !3
  %663 = add nsw i32 %642, -4
  %664 = add i32 %642, -5
  %665 = icmp ult i32 %664, -2
  br i1 %665, label %640, label %666, !llvm.loop !418

666:                                              ; preds = %640, %635
  %667 = phi i64 [ %638, %635 ], [ %658, %640 ]
  %668 = trunc i64 %667 to i32
  br label %669

669:                                              ; preds = %666, %612
  %670 = phi i32 [ %614, %612 ], [ %668, %666 ]
  %671 = add nuw nsw i64 %613, 1
  %672 = icmp eq i64 %671, %611
  br i1 %672, label %673, label %612, !llvm.loop !419

673:                                              ; preds = %669, %605
  call void @llvm.lifetime.end.p0(i64 1152, ptr nonnull %11) #38
  call void @llvm.lifetime.end.p0(i64 1152, ptr nonnull %10) #38
  br label %684

674:                                              ; preds = %22, %15
  %675 = phi i64 [ 0, %15 ], [ %38, %22 ]
  %676 = icmp eq i64 %18, 0
  br i1 %676, label %684, label %677

677:                                              ; preds = %674
  %678 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %16, i64 %675
  %679 = load i8, ptr %678, align 1, !tbaa !3
  %680 = zext i8 %679 to i64
  %681 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %680
  %682 = load i32, ptr %681, align 4, !tbaa !12
  %683 = add nsw i32 %682, 1
  store i32 %683, ptr %681, align 4, !tbaa !12
  br label %684

684:                                              ; preds = %677, %674, %13, %673
  %685 = getelementptr inbounds [33 x i32], ptr %9, i64 0, i64 1
  store i32 0, ptr %685, align 4, !tbaa !12
  %686 = icmp slt i32 %3, 2
  br i1 %686, label %706, label %687

687:                                              ; preds = %684
  %688 = add nuw i32 %3, 1
  %689 = zext i32 %688 to i64
  %690 = and i64 %689, 1
  %691 = icmp eq i32 %688, 3
  br i1 %691, label %695, label %692

692:                                              ; preds = %687
  %693 = and i64 %689, 4294967294
  %694 = add nsw i64 %693, -4
  br label %711

695:                                              ; preds = %711, %687
  %696 = phi i64 [ 2, %687 ], [ %727, %711 ]
  %697 = phi i32 [ 0, %687 ], [ %725, %711 ]
  %698 = icmp eq i64 %690, 0
  br i1 %698, label %706, label %699

699:                                              ; preds = %695
  %700 = add nsw i64 %696, -1
  %701 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %700
  %702 = load i32, ptr %701, align 4, !tbaa !12
  %703 = add nsw i32 %702, %697
  %704 = shl i32 %703, 1
  %705 = getelementptr inbounds [33 x i32], ptr %9, i64 0, i64 %696
  store i32 %704, ptr %705, align 4, !tbaa !12
  br label %706

706:                                              ; preds = %699, %695, %684
  %707 = icmp sgt i32 %2, 0
  br i1 %707, label %708, label %787

708:                                              ; preds = %706
  %709 = zext i32 %1 to i64
  %710 = zext i32 %2 to i64
  br label %730

711:                                              ; preds = %711, %692
  %712 = phi i64 [ 2, %692 ], [ %727, %711 ]
  %713 = phi i32 [ 0, %692 ], [ %725, %711 ]
  %714 = phi i64 [ 0, %692 ], [ %728, %711 ]
  %715 = add nsw i64 %712, -1
  %716 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %715
  %717 = load i32, ptr %716, align 4, !tbaa !12
  %718 = add nsw i32 %717, %713
  %719 = shl i32 %718, 1
  %720 = getelementptr inbounds [33 x i32], ptr %9, i64 0, i64 %712
  store i32 %719, ptr %720, align 8, !tbaa !12
  %721 = or i64 %712, 1
  %722 = getelementptr inbounds [33 x i32], ptr %8, i64 0, i64 %712
  %723 = load i32, ptr %722, align 8, !tbaa !12
  %724 = add nsw i32 %723, %719
  %725 = shl i32 %724, 1
  %726 = getelementptr inbounds [33 x i32], ptr %9, i64 0, i64 %721
  store i32 %725, ptr %726, align 4, !tbaa !12
  %727 = add nuw nsw i64 %712, 2
  %728 = add i64 %714, 2
  %729 = icmp eq i64 %714, %694
  br i1 %729, label %695, label %711, !llvm.loop !420

730:                                              ; preds = %708, %784
  %731 = phi i64 [ 0, %708 ], [ %785, %784 ]
  %732 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 38, i64 %709, i64 %731
  %733 = load i8, ptr %732, align 1, !tbaa !3
  %734 = icmp eq i8 %733, 0
  br i1 %734, label %784, label %735

735:                                              ; preds = %730
  %736 = zext i8 %733 to i32
  %737 = zext i8 %733 to i64
  %738 = getelementptr inbounds [33 x i32], ptr %9, i64 0, i64 %737
  %739 = load i32, ptr %738, align 4, !tbaa !12
  %740 = add i32 %739, 1
  store i32 %740, ptr %738, align 4, !tbaa !12
  %741 = and i32 %736, 3
  %742 = icmp ult i8 %733, 4
  br i1 %742, label %765, label %743

743:                                              ; preds = %735
  %744 = and i32 %736, 252
  br label %745

745:                                              ; preds = %745, %743
  %746 = phi i32 [ %739, %743 ], [ %762, %745 ]
  %747 = phi i32 [ 0, %743 ], [ %761, %745 ]
  %748 = phi i32 [ 0, %743 ], [ %763, %745 ]
  %749 = shl i32 %747, 3
  %750 = shl i32 %746, 2
  %751 = and i32 %750, 4
  %752 = or i32 %749, %751
  %753 = and i32 %746, 2
  %754 = or i32 %753, %752
  %755 = lshr i32 %746, 2
  %756 = and i32 %755, 1
  %757 = or i32 %756, %754
  %758 = lshr i32 %746, 3
  %759 = shl i32 %757, 1
  %760 = and i32 %758, 1
  %761 = or i32 %760, %759
  %762 = lshr i32 %746, 4
  %763 = add i32 %748, 4
  %764 = icmp eq i32 %763, %744
  br i1 %764, label %765, label %745, !llvm.loop !366

765:                                              ; preds = %745, %735
  %766 = phi i32 [ undef, %735 ], [ %761, %745 ]
  %767 = phi i32 [ %739, %735 ], [ %762, %745 ]
  %768 = phi i32 [ 0, %735 ], [ %761, %745 ]
  %769 = icmp eq i32 %741, 0
  br i1 %769, label %780, label %770

770:                                              ; preds = %765, %770
  %771 = phi i32 [ %777, %770 ], [ %767, %765 ]
  %772 = phi i32 [ %776, %770 ], [ %768, %765 ]
  %773 = phi i32 [ %778, %770 ], [ 0, %765 ]
  %774 = shl i32 %772, 1
  %775 = and i32 %771, 1
  %776 = or i32 %775, %774
  %777 = lshr i32 %771, 1
  %778 = add i32 %773, 1
  %779 = icmp eq i32 %778, %741
  br i1 %779, label %780, label %770, !llvm.loop !421

780:                                              ; preds = %770, %765
  %781 = phi i32 [ %766, %765 ], [ %776, %770 ]
  %782 = trunc i32 %781 to i16
  %783 = getelementptr inbounds %struct.tdefl_compressor, ptr %0, i64 0, i32 37, i64 %709, i64 %731
  store i16 %782, ptr %783, align 2, !tbaa !103
  br label %784

784:                                              ; preds = %730, %780
  %785 = add nuw nsw i64 %731, 1
  %786 = icmp eq i64 %785, %710
  br i1 %786, label %787, label %730, !llvm.loop !368

787:                                              ; preds = %784, %706
  call void @llvm.lifetime.end.p0(i64 132, ptr nonnull %9) #38
  call void @llvm.lifetime.end.p0(i64 132, ptr nonnull %8) #38
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @mz_zip_reader_sort_central_dir_offsets_by_filename(ptr nocapture noundef readonly %0) unnamed_addr #32 {
  %2 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 15
  %3 = load ptr, ptr %2, align 8, !tbaa !184
  %4 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %3, i64 0, i32 1
  %5 = getelementptr inbounds %struct.mz_zip_archive, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 8, !tbaa !207
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %361, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.mz_zip_internal_state_tag, ptr %3, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !214
  %11 = add i32 %6, -2
  %12 = zext i32 %6 to i64
  %13 = lshr i32 %11, 1
  %14 = zext i32 %13 to i64
  br label %15

15:                                               ; preds = %182, %8
  %16 = phi i64 [ %184, %182 ], [ %14, %8 ]
  %17 = shl nuw nsw i64 %16, 1
  %18 = or i64 %17, 1
  %19 = icmp ult i64 %18, %12
  br i1 %19, label %20, label %182

20:                                               ; preds = %15
  %21 = load ptr, ptr %3, align 8, !tbaa !191
  %22 = load ptr, ptr %4, align 8, !tbaa !191
  br label %23

23:                                               ; preds = %20, %178
  %24 = phi i64 [ %18, %20 ], [ %180, %178 ]
  %25 = phi i64 [ %17, %20 ], [ %179, %178 ]
  %26 = phi i64 [ %16, %20 ], [ %105, %178 ]
  %27 = add i64 %25, 2
  %28 = icmp ult i64 %27, %12
  br i1 %28, label %29, label %102

29:                                               ; preds = %23
  %30 = getelementptr inbounds i32, ptr %10, i64 %24
  %31 = load i32, ptr %30, align 4, !tbaa !12
  %32 = getelementptr inbounds i32, ptr %10, i64 %27
  %33 = load i32, ptr %32, align 4, !tbaa !12
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds i32, ptr %22, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !12
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, ptr %21, i64 %37
  %39 = zext i32 %33 to i64
  %40 = getelementptr inbounds i32, ptr %22, i64 %39
  %41 = load i32, ptr %40, align 4, !tbaa !12
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, ptr %21, i64 %42
  %44 = getelementptr inbounds i8, ptr %38, i64 28
  %45 = load i8, ptr %44, align 1, !tbaa !3
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i8, ptr %44, i64 1
  %48 = load i8, ptr %47, align 1, !tbaa !3
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 8
  %51 = or i32 %50, %46
  %52 = getelementptr inbounds i8, ptr %43, i64 28
  %53 = load i8, ptr %52, align 1, !tbaa !3
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds i8, ptr %52, i64 1
  %56 = load i8, ptr %55, align 1, !tbaa !3
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 8
  %59 = or i32 %58, %54
  %60 = getelementptr inbounds i8, ptr %38, i64 46
  %61 = tail call i32 @llvm.umin.i32(i32 %51, i32 %59)
  %62 = add nuw nsw i32 %61, 46
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, ptr %38, i64 %63
  %65 = icmp eq i32 %61, 0
  br i1 %65, label %94, label %66

66:                                               ; preds = %29
  %67 = getelementptr inbounds i8, ptr %43, i64 46
  br label %68

68:                                               ; preds = %86, %66
  %69 = phi ptr [ %87, %86 ], [ %60, %66 ]
  %70 = phi ptr [ %88, %86 ], [ %67, %66 ]
  %71 = load i8, ptr %69, align 1, !tbaa !3
  %72 = zext i8 %71 to i32
  %73 = add i8 %71, -65
  %74 = icmp ult i8 %73, 26
  %75 = add nuw nsw i32 %72, 32
  %76 = select i1 %74, i32 %75, i32 %72
  %77 = load i8, ptr %70, align 1, !tbaa !3
  %78 = zext i8 %77 to i32
  %79 = add i8 %77, -65
  %80 = icmp ult i8 %79, 26
  %81 = add nuw nsw i32 %78, 32
  %82 = select i1 %80, i32 %81, i32 %78
  %83 = xor i32 %82, %76
  %84 = and i32 %83, 255
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %68
  %87 = getelementptr inbounds i8, ptr %69, i64 1
  %88 = getelementptr inbounds i8, ptr %70, i64 1
  %89 = icmp ult ptr %87, %64
  br i1 %89, label %68, label %90, !llvm.loop !422

90:                                               ; preds = %86, %68
  %91 = phi ptr [ %87, %86 ], [ %69, %68 ]
  %92 = and i32 %76, 255
  %93 = and i32 %82, 255
  br label %94

94:                                               ; preds = %29, %90
  %95 = phi ptr [ %60, %29 ], [ %91, %90 ]
  %96 = phi i32 [ 0, %29 ], [ %92, %90 ]
  %97 = phi i32 [ 0, %29 ], [ %93, %90 ]
  %98 = icmp ult i32 %51, %59
  %99 = icmp eq ptr %95, %64
  %100 = icmp ult i32 %96, %97
  %101 = select i1 %99, i1 %98, i1 %100
  br label %102

102:                                              ; preds = %94, %23
  %103 = phi i1 [ false, %23 ], [ %101, %94 ]
  %104 = zext i1 %103 to i64
  %105 = add i64 %24, %104
  %106 = getelementptr inbounds i32, ptr %10, i64 %26
  %107 = load i32, ptr %106, align 4, !tbaa !12
  %108 = getelementptr inbounds i32, ptr %10, i64 %105
  %109 = load i32, ptr %108, align 4, !tbaa !12
  %110 = zext i32 %107 to i64
  %111 = getelementptr inbounds i32, ptr %22, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !12
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i8, ptr %21, i64 %113
  %115 = zext i32 %109 to i64
  %116 = getelementptr inbounds i32, ptr %22, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !12
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i8, ptr %21, i64 %118
  %120 = getelementptr inbounds i8, ptr %114, i64 28
  %121 = load i8, ptr %120, align 1, !tbaa !3
  %122 = zext i8 %121 to i32
  %123 = getelementptr inbounds i8, ptr %120, i64 1
  %124 = load i8, ptr %123, align 1, !tbaa !3
  %125 = zext i8 %124 to i32
  %126 = shl nuw nsw i32 %125, 8
  %127 = or i32 %126, %122
  %128 = getelementptr inbounds i8, ptr %119, i64 28
  %129 = load i8, ptr %128, align 1, !tbaa !3
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds i8, ptr %128, i64 1
  %132 = load i8, ptr %131, align 1, !tbaa !3
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 8
  %135 = or i32 %134, %130
  %136 = getelementptr inbounds i8, ptr %114, i64 46
  %137 = tail call i32 @llvm.umin.i32(i32 %127, i32 %135)
  %138 = add nuw nsw i32 %137, 46
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds i8, ptr %114, i64 %139
  %141 = icmp eq i32 %137, 0
  br i1 %141, label %170, label %142

142:                                              ; preds = %102
  %143 = getelementptr inbounds i8, ptr %119, i64 46
  br label %144

144:                                              ; preds = %162, %142
  %145 = phi ptr [ %163, %162 ], [ %136, %142 ]
  %146 = phi ptr [ %164, %162 ], [ %143, %142 ]
  %147 = load i8, ptr %145, align 1, !tbaa !3
  %148 = zext i8 %147 to i32
  %149 = add i8 %147, -65
  %150 = icmp ult i8 %149, 26
  %151 = add nuw nsw i32 %148, 32
  %152 = select i1 %150, i32 %151, i32 %148
  %153 = load i8, ptr %146, align 1, !tbaa !3
  %154 = zext i8 %153 to i32
  %155 = add i8 %153, -65
  %156 = icmp ult i8 %155, 26
  %157 = add nuw nsw i32 %154, 32
  %158 = select i1 %156, i32 %157, i32 %154
  %159 = xor i32 %158, %152
  %160 = and i32 %159, 255
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %144
  %163 = getelementptr inbounds i8, ptr %145, i64 1
  %164 = getelementptr inbounds i8, ptr %146, i64 1
  %165 = icmp ult ptr %163, %140
  br i1 %165, label %144, label %166, !llvm.loop !422

166:                                              ; preds = %162, %144
  %167 = phi ptr [ %163, %162 ], [ %145, %144 ]
  %168 = and i32 %152, 255
  %169 = and i32 %158, 255
  br label %170

170:                                              ; preds = %102, %166
  %171 = phi ptr [ %136, %102 ], [ %167, %166 ]
  %172 = phi i32 [ 0, %102 ], [ %168, %166 ]
  %173 = phi i32 [ 0, %102 ], [ %169, %166 ]
  %174 = icmp uge i32 %127, %135
  %175 = icmp eq ptr %171, %140
  %176 = icmp uge i32 %172, %173
  %177 = select i1 %175, i1 %174, i1 %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %170
  store i32 %109, ptr %106, align 4, !tbaa !12
  store i32 %107, ptr %108, align 4, !tbaa !12
  %179 = shl i64 %105, 1
  %180 = or i64 %179, 1
  %181 = icmp ult i64 %180, %12
  br i1 %181, label %23, label %182

182:                                              ; preds = %178, %170, %15
  %183 = icmp eq i64 %16, 0
  %184 = add nsw i64 %16, -1
  br i1 %183, label %185, label %15

185:                                              ; preds = %182
  %186 = add i32 %6, -1
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %361, label %188

188:                                              ; preds = %185
  %189 = zext i32 %186 to i64
  br label %190

190:                                              ; preds = %188, %357
  %191 = phi i64 [ %189, %188 ], [ %358, %357 ]
  %192 = getelementptr inbounds i32, ptr %10, i64 %191
  %193 = load i32, ptr %192, align 4, !tbaa !12
  %194 = load i32, ptr %10, align 4, !tbaa !12
  store i32 %194, ptr %192, align 4, !tbaa !12
  store i32 %193, ptr %10, align 4, !tbaa !12
  %195 = icmp ugt i64 %191, 1
  br i1 %195, label %196, label %357

196:                                              ; preds = %190
  %197 = load ptr, ptr %3, align 8, !tbaa !191
  %198 = load ptr, ptr %4, align 8, !tbaa !191
  %199 = zext i32 %193 to i64
  %200 = getelementptr inbounds i32, ptr %198, i64 %199
  br label %201

201:                                              ; preds = %196, %353
  %202 = phi i64 [ 1, %196 ], [ %355, %353 ]
  %203 = phi i64 [ 0, %196 ], [ %354, %353 ]
  %204 = phi i64 [ 0, %196 ], [ %283, %353 ]
  %205 = add i64 %203, 2
  %206 = icmp ult i64 %205, %191
  br i1 %206, label %207, label %280

207:                                              ; preds = %201
  %208 = getelementptr inbounds i32, ptr %10, i64 %202
  %209 = load i32, ptr %208, align 4, !tbaa !12
  %210 = getelementptr inbounds i32, ptr %10, i64 %205
  %211 = load i32, ptr %210, align 4, !tbaa !12
  %212 = zext i32 %209 to i64
  %213 = getelementptr inbounds i32, ptr %198, i64 %212
  %214 = load i32, ptr %213, align 4, !tbaa !12
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds i8, ptr %197, i64 %215
  %217 = zext i32 %211 to i64
  %218 = getelementptr inbounds i32, ptr %198, i64 %217
  %219 = load i32, ptr %218, align 4, !tbaa !12
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds i8, ptr %197, i64 %220
  %222 = getelementptr inbounds i8, ptr %216, i64 28
  %223 = load i8, ptr %222, align 1, !tbaa !3
  %224 = zext i8 %223 to i32
  %225 = getelementptr inbounds i8, ptr %222, i64 1
  %226 = load i8, ptr %225, align 1, !tbaa !3
  %227 = zext i8 %226 to i32
  %228 = shl nuw nsw i32 %227, 8
  %229 = or i32 %228, %224
  %230 = getelementptr inbounds i8, ptr %221, i64 28
  %231 = load i8, ptr %230, align 1, !tbaa !3
  %232 = zext i8 %231 to i32
  %233 = getelementptr inbounds i8, ptr %230, i64 1
  %234 = load i8, ptr %233, align 1, !tbaa !3
  %235 = zext i8 %234 to i32
  %236 = shl nuw nsw i32 %235, 8
  %237 = or i32 %236, %232
  %238 = getelementptr inbounds i8, ptr %216, i64 46
  %239 = tail call i32 @llvm.umin.i32(i32 %229, i32 %237)
  %240 = add nuw nsw i32 %239, 46
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i8, ptr %216, i64 %241
  %243 = icmp eq i32 %239, 0
  br i1 %243, label %272, label %244

244:                                              ; preds = %207
  %245 = getelementptr inbounds i8, ptr %221, i64 46
  br label %246

246:                                              ; preds = %264, %244
  %247 = phi ptr [ %265, %264 ], [ %238, %244 ]
  %248 = phi ptr [ %266, %264 ], [ %245, %244 ]
  %249 = load i8, ptr %247, align 1, !tbaa !3
  %250 = zext i8 %249 to i32
  %251 = add i8 %249, -65
  %252 = icmp ult i8 %251, 26
  %253 = add nuw nsw i32 %250, 32
  %254 = select i1 %252, i32 %253, i32 %250
  %255 = load i8, ptr %248, align 1, !tbaa !3
  %256 = zext i8 %255 to i32
  %257 = add i8 %255, -65
  %258 = icmp ult i8 %257, 26
  %259 = add nuw nsw i32 %256, 32
  %260 = select i1 %258, i32 %259, i32 %256
  %261 = xor i32 %260, %254
  %262 = and i32 %261, 255
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %268

264:                                              ; preds = %246
  %265 = getelementptr inbounds i8, ptr %247, i64 1
  %266 = getelementptr inbounds i8, ptr %248, i64 1
  %267 = icmp ult ptr %265, %242
  br i1 %267, label %246, label %268, !llvm.loop !422

268:                                              ; preds = %264, %246
  %269 = phi ptr [ %265, %264 ], [ %247, %246 ]
  %270 = and i32 %254, 255
  %271 = and i32 %260, 255
  br label %272

272:                                              ; preds = %207, %268
  %273 = phi ptr [ %238, %207 ], [ %269, %268 ]
  %274 = phi i32 [ 0, %207 ], [ %270, %268 ]
  %275 = phi i32 [ 0, %207 ], [ %271, %268 ]
  %276 = icmp ult i32 %229, %237
  %277 = icmp eq ptr %273, %242
  %278 = icmp ult i32 %274, %275
  %279 = select i1 %277, i1 %276, i1 %278
  br label %280

280:                                              ; preds = %272, %201
  %281 = phi i1 [ false, %201 ], [ %279, %272 ]
  %282 = zext i1 %281 to i64
  %283 = add i64 %202, %282
  %284 = getelementptr inbounds i32, ptr %10, i64 %204
  %285 = getelementptr inbounds i32, ptr %10, i64 %283
  %286 = load i32, ptr %285, align 4, !tbaa !12
  %287 = load i32, ptr %200, align 4, !tbaa !12
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds i8, ptr %197, i64 %288
  %290 = zext i32 %286 to i64
  %291 = getelementptr inbounds i32, ptr %198, i64 %290
  %292 = load i32, ptr %291, align 4, !tbaa !12
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds i8, ptr %197, i64 %293
  %295 = getelementptr inbounds i8, ptr %289, i64 28
  %296 = load i8, ptr %295, align 1, !tbaa !3
  %297 = zext i8 %296 to i32
  %298 = getelementptr inbounds i8, ptr %295, i64 1
  %299 = load i8, ptr %298, align 1, !tbaa !3
  %300 = zext i8 %299 to i32
  %301 = shl nuw nsw i32 %300, 8
  %302 = or i32 %301, %297
  %303 = getelementptr inbounds i8, ptr %294, i64 28
  %304 = load i8, ptr %303, align 1, !tbaa !3
  %305 = zext i8 %304 to i32
  %306 = getelementptr inbounds i8, ptr %303, i64 1
  %307 = load i8, ptr %306, align 1, !tbaa !3
  %308 = zext i8 %307 to i32
  %309 = shl nuw nsw i32 %308, 8
  %310 = or i32 %309, %305
  %311 = getelementptr inbounds i8, ptr %289, i64 46
  %312 = tail call i32 @llvm.umin.i32(i32 %302, i32 %310)
  %313 = add nuw nsw i32 %312, 46
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds i8, ptr %289, i64 %314
  %316 = icmp eq i32 %312, 0
  br i1 %316, label %345, label %317

317:                                              ; preds = %280
  %318 = getelementptr inbounds i8, ptr %294, i64 46
  br label %319

319:                                              ; preds = %337, %317
  %320 = phi ptr [ %338, %337 ], [ %311, %317 ]
  %321 = phi ptr [ %339, %337 ], [ %318, %317 ]
  %322 = load i8, ptr %320, align 1, !tbaa !3
  %323 = zext i8 %322 to i32
  %324 = add i8 %322, -65
  %325 = icmp ult i8 %324, 26
  %326 = add nuw nsw i32 %323, 32
  %327 = select i1 %325, i32 %326, i32 %323
  %328 = load i8, ptr %321, align 1, !tbaa !3
  %329 = zext i8 %328 to i32
  %330 = add i8 %328, -65
  %331 = icmp ult i8 %330, 26
  %332 = add nuw nsw i32 %329, 32
  %333 = select i1 %331, i32 %332, i32 %329
  %334 = xor i32 %333, %327
  %335 = and i32 %334, 255
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %341

337:                                              ; preds = %319
  %338 = getelementptr inbounds i8, ptr %320, i64 1
  %339 = getelementptr inbounds i8, ptr %321, i64 1
  %340 = icmp ult ptr %338, %315
  br i1 %340, label %319, label %341, !llvm.loop !422

341:                                              ; preds = %337, %319
  %342 = phi ptr [ %338, %337 ], [ %320, %319 ]
  %343 = and i32 %327, 255
  %344 = and i32 %333, 255
  br label %345

345:                                              ; preds = %280, %341
  %346 = phi ptr [ %311, %280 ], [ %342, %341 ]
  %347 = phi i32 [ 0, %280 ], [ %343, %341 ]
  %348 = phi i32 [ 0, %280 ], [ %344, %341 ]
  %349 = icmp uge i32 %302, %310
  %350 = icmp eq ptr %346, %315
  %351 = icmp uge i32 %347, %348
  %352 = select i1 %350, i1 %349, i1 %351
  br i1 %352, label %357, label %353

353:                                              ; preds = %345
  store i32 %286, ptr %284, align 4, !tbaa !12
  store i32 %193, ptr %285, align 4, !tbaa !12
  %354 = shl i64 %283, 1
  %355 = or i64 %354, 1
  %356 = icmp ult i64 %355, %191
  br i1 %356, label %201, label %357

357:                                              ; preds = %353, %345, %190
  %358 = add nsw i64 %191, -1
  %359 = and i64 %358, 4294967295
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %361, label %190, !llvm.loop !423

361:                                              ; preds = %357, %185, %1
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @utime(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #19

; Function Attrs: mustprogress nofree nounwind willreturn
declare dso_local noundef i64 @mktime(ptr nocapture noundef) local_unnamed_addr #33

; Function Attrs: nounwind
declare dso_local ptr @localtime(ptr noundef) local_unnamed_addr #26

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fileno(ptr nocapture noundef) local_unnamed_addr #19

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32 noundef, i64 noundef) local_unnamed_addr #26

; Function Attrs: nounwind uwtable
define internal fastcc i32 @zip_entry_finalize(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i64 noundef %2) unnamed_addr #8 {
  %4 = tail call noalias ptr @calloc(i64 noundef %2, i64 noundef 8) #43
  %5 = icmp eq ptr %4, null
  br i1 %5, label %188, label %6

6:                                                ; preds = %3
  %7 = icmp sgt i64 %2, 0
  br i1 %7, label %8, label %105

8:                                                ; preds = %6, %102
  %9 = phi i64 [ %103, %102 ], [ 0, %6 ]
  %10 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %9
  %11 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %9, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !328
  %13 = getelementptr inbounds i64, ptr %4, i64 %9
  store i64 %12, ptr %13, align 8, !tbaa !46
  br label %14

14:                                               ; preds = %17, %8
  %15 = phi i64 [ %9, %8 ], [ %18, %17 ]
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %14
  %18 = add nsw i64 %15, -1
  %19 = getelementptr inbounds i64, ptr %4, i64 %18
  %20 = load i64, ptr %19, align 8, !tbaa !46
  %21 = icmp ugt i64 %12, %20
  br i1 %21, label %22, label %14, !llvm.loop !424

22:                                               ; preds = %17, %14
  %23 = phi i64 [ %15, %17 ], [ 0, %14 ]
  %24 = icmp eq i64 %9, %23
  br i1 %24, label %102, label %25

25:                                               ; preds = %22
  %26 = icmp sgt i64 %9, %23
  br i1 %26, label %27, label %64

27:                                               ; preds = %25
  %28 = sub i64 %9, %23
  %29 = xor i64 %23, -1
  %30 = add i64 %9, %29
  %31 = and i64 %28, 3
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %27, %33
  %34 = phi i64 [ %36, %33 ], [ %9, %27 ]
  %35 = phi i64 [ %40, %33 ], [ 0, %27 ]
  %36 = add nsw i64 %34, -1
  %37 = getelementptr inbounds i64, ptr %4, i64 %36
  %38 = load i64, ptr %37, align 8, !tbaa !46
  %39 = getelementptr inbounds i64, ptr %4, i64 %34
  store i64 %38, ptr %39, align 8, !tbaa !46
  %40 = add i64 %35, 1
  %41 = icmp eq i64 %40, %31
  br i1 %41, label %42, label %33, !llvm.loop !425

42:                                               ; preds = %33, %27
  %43 = phi i64 [ %9, %27 ], [ %36, %33 ]
  %44 = icmp ult i64 %30, 3
  br i1 %44, label %64, label %45

45:                                               ; preds = %42, %45
  %46 = phi i64 [ %59, %45 ], [ %43, %42 ]
  %47 = add nsw i64 %46, -1
  %48 = getelementptr inbounds i64, ptr %4, i64 %47
  %49 = load i64, ptr %48, align 8, !tbaa !46
  %50 = getelementptr inbounds i64, ptr %4, i64 %46
  store i64 %49, ptr %50, align 8, !tbaa !46
  %51 = add nsw i64 %46, -2
  %52 = getelementptr inbounds i64, ptr %4, i64 %51
  %53 = load i64, ptr %52, align 8, !tbaa !46
  %54 = getelementptr inbounds i64, ptr %4, i64 %47
  store i64 %53, ptr %54, align 8, !tbaa !46
  %55 = add nsw i64 %46, -3
  %56 = getelementptr inbounds i64, ptr %4, i64 %55
  %57 = load i64, ptr %56, align 8, !tbaa !46
  %58 = getelementptr inbounds i64, ptr %4, i64 %51
  store i64 %57, ptr %58, align 8, !tbaa !46
  %59 = add nsw i64 %46, -4
  %60 = getelementptr inbounds i64, ptr %4, i64 %59
  %61 = load i64, ptr %60, align 8, !tbaa !46
  %62 = getelementptr inbounds i64, ptr %4, i64 %55
  store i64 %61, ptr %62, align 8, !tbaa !46
  %63 = icmp sgt i64 %59, %23
  br i1 %63, label %45, label %64, !llvm.loop !426

64:                                               ; preds = %42, %45, %25
  %65 = getelementptr inbounds i64, ptr %4, i64 %23
  store i64 %12, ptr %65, align 8, !tbaa !46
  %66 = icmp eq i64 %9, 0
  br i1 %66, label %100, label %67

67:                                               ; preds = %64
  %68 = and i64 %9, 1
  %69 = icmp eq i64 %9, 1
  br i1 %69, label %91, label %70

70:                                               ; preds = %67
  %71 = and i64 %9, 9223372036854775806
  br label %72

72:                                               ; preds = %87, %70
  %73 = phi i64 [ 0, %70 ], [ %88, %87 ]
  %74 = phi i64 [ 0, %70 ], [ %89, %87 ]
  %75 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %73
  %76 = load i64, ptr %75, align 8, !tbaa !329
  %77 = icmp slt i64 %76, %23
  br i1 %77, label %80, label %78

78:                                               ; preds = %72
  %79 = add nsw i64 %76, 1
  store i64 %79, ptr %75, align 8, !tbaa !329
  br label %80

80:                                               ; preds = %78, %72
  %81 = or i64 %73, 1
  %82 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %81
  %83 = load i64, ptr %82, align 8, !tbaa !329
  %84 = icmp slt i64 %83, %23
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = add nsw i64 %83, 1
  store i64 %86, ptr %82, align 8, !tbaa !329
  br label %87

87:                                               ; preds = %85, %80
  %88 = add nuw nsw i64 %73, 2
  %89 = add i64 %74, 2
  %90 = icmp eq i64 %89, %71
  br i1 %90, label %91, label %72, !llvm.loop !427

91:                                               ; preds = %87, %67
  %92 = phi i64 [ 0, %67 ], [ %88, %87 ]
  %93 = icmp eq i64 %68, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %92
  %96 = load i64, ptr %95, align 8, !tbaa !329
  %97 = icmp slt i64 %96, %23
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = add nsw i64 %96, 1
  store i64 %99, ptr %95, align 8, !tbaa !329
  br label %100

100:                                              ; preds = %91, %98, %94, %64
  %101 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %23
  store i64 %9, ptr %101, align 8, !tbaa !329
  br label %102

102:                                              ; preds = %22, %100
  store i64 %23, ptr %10, align 8, !tbaa !329
  %103 = add nuw nsw i64 %9, 1
  %104 = icmp eq i64 %103, %2
  br i1 %104, label %105, label %8, !llvm.loop !428

105:                                              ; preds = %102, %6
  %106 = tail call noalias ptr @calloc(i64 noundef %2, i64 noundef 8) #43
  %107 = icmp eq ptr %106, null
  br i1 %107, label %186, label %108

108:                                              ; preds = %105
  %109 = add i64 %2, -1
  %110 = icmp sgt i64 %2, 1
  br i1 %110, label %111, label %148

111:                                              ; preds = %108
  %112 = load i64, ptr %4, align 8, !tbaa !46
  %113 = icmp ult i64 %2, 5
  br i1 %113, label %136, label %114

114:                                              ; preds = %111
  %115 = and i64 %109, -4
  %116 = insertelement <2 x i64> poison, i64 %112, i64 1
  br label %117

117:                                              ; preds = %117, %114
  %118 = phi i64 [ 0, %114 ], [ %131, %117 ]
  %119 = phi <2 x i64> [ %116, %114 ], [ %124, %117 ]
  %120 = or i64 %118, 1
  %121 = getelementptr inbounds i64, ptr %4, i64 %120
  %122 = load <2 x i64>, ptr %121, align 8, !tbaa !46
  %123 = getelementptr inbounds i64, ptr %121, i64 2
  %124 = load <2 x i64>, ptr %123, align 8, !tbaa !46
  %125 = shufflevector <2 x i64> %119, <2 x i64> %122, <2 x i32> <i32 1, i32 2>
  %126 = shufflevector <2 x i64> %122, <2 x i64> %124, <2 x i32> <i32 1, i32 2>
  %127 = sub <2 x i64> %122, %125
  %128 = sub <2 x i64> %124, %126
  %129 = getelementptr inbounds i64, ptr %106, i64 %118
  store <2 x i64> %127, ptr %129, align 8, !tbaa !46
  %130 = getelementptr inbounds i64, ptr %129, i64 2
  store <2 x i64> %128, ptr %130, align 8, !tbaa !46
  %131 = add nuw i64 %118, 4
  %132 = icmp eq i64 %131, %115
  br i1 %132, label %133, label %117, !llvm.loop !429

133:                                              ; preds = %117
  %134 = icmp eq i64 %109, %115
  %135 = extractelement <2 x i64> %124, i64 1
  br i1 %134, label %148, label %136

136:                                              ; preds = %111, %133
  %137 = phi i64 [ %135, %133 ], [ %112, %111 ]
  %138 = phi i64 [ %115, %133 ], [ 0, %111 ]
  br label %139

139:                                              ; preds = %136, %139
  %140 = phi i64 [ %144, %139 ], [ %137, %136 ]
  %141 = phi i64 [ %142, %139 ], [ %138, %136 ]
  %142 = add nuw nsw i64 %141, 1
  %143 = getelementptr inbounds i64, ptr %4, i64 %142
  %144 = load i64, ptr %143, align 8, !tbaa !46
  %145 = sub i64 %144, %140
  %146 = getelementptr inbounds i64, ptr %106, i64 %141
  store i64 %145, ptr %146, align 8, !tbaa !46
  %147 = icmp eq i64 %142, %109
  br i1 %147, label %148, label %139, !llvm.loop !430

148:                                              ; preds = %139, %133, %108
  %149 = load i64, ptr %0, align 8, !tbaa !306
  %150 = getelementptr inbounds i64, ptr %4, i64 %109
  %151 = load i64, ptr %150, align 8, !tbaa !46
  %152 = sub i64 %149, %151
  %153 = getelementptr inbounds i64, ptr %106, i64 %109
  store i64 %152, ptr %153, align 8, !tbaa !46
  br i1 %7, label %154, label %185

154:                                              ; preds = %148
  %155 = and i64 %2, 1
  %156 = icmp eq i64 %109, 0
  br i1 %156, label %176, label %157

157:                                              ; preds = %154
  %158 = and i64 %2, -2
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i64 [ 0, %157 ], [ %173, %159 ]
  %161 = phi i64 [ 0, %157 ], [ %174, %159 ]
  %162 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %160
  %163 = load i64, ptr %162, align 8, !tbaa !329
  %164 = getelementptr inbounds i64, ptr %106, i64 %163
  %165 = load i64, ptr %164, align 8, !tbaa !46
  %166 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %160, i32 3
  store i64 %165, ptr %166, align 8, !tbaa !330
  %167 = or i64 %160, 1
  %168 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %167
  %169 = load i64, ptr %168, align 8, !tbaa !329
  %170 = getelementptr inbounds i64, ptr %106, i64 %169
  %171 = load i64, ptr %170, align 8, !tbaa !46
  %172 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %167, i32 3
  store i64 %171, ptr %172, align 8, !tbaa !330
  %173 = add nuw nsw i64 %160, 2
  %174 = add i64 %161, 2
  %175 = icmp eq i64 %174, %158
  br i1 %175, label %176, label %159, !llvm.loop !431

176:                                              ; preds = %159, %154
  %177 = phi i64 [ 0, %154 ], [ %173, %159 ]
  %178 = icmp eq i64 %155, 0
  br i1 %178, label %185, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %177
  %181 = load i64, ptr %180, align 8, !tbaa !329
  %182 = getelementptr inbounds i64, ptr %106, i64 %181
  %183 = load i64, ptr %182, align 8, !tbaa !46
  %184 = getelementptr inbounds %struct.zip_entry_mark_t, ptr %1, i64 %177, i32 3
  store i64 %183, ptr %184, align 8, !tbaa !330
  br label %185

185:                                              ; preds = %179, %176, %148
  tail call void @free(ptr noundef nonnull %106) #38
  br label %186

186:                                              ; preds = %105, %185
  %187 = phi i32 [ 0, %185 ], [ -21, %105 ]
  tail call void @free(ptr noundef %4) #38
  br label %188

188:                                              ; preds = %186, %3
  %189 = phi i32 [ -21, %3 ], [ %187, %186 ]
  ret i32 %189
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #23

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #15

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i64 noundef) local_unnamed_addr #34

; Function Attrs: nounwind
declare dso_local i32 @symlink(ptr noundef, ptr noundef) local_unnamed_addr #26

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @mkdir(ptr nocapture noundef readonly, i32 noundef) local_unnamed_addr #19

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare dso_local ptr @__errno_location() local_unnamed_addr #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #36

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #36

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #36

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #36

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #37

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #36

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #36

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #36

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #36

attributes #0 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nounwind willreturn memory(inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nofree nosync nounwind willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #14 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #16 = { nofree norecurse nosync nounwind memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress nofree nounwind willreturn memory(write, argmem: none, inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { nofree nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #29 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { mustprogress nofree nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { nofree nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #32 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #33 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #34 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #35 = { mustprogress nofree nosync nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #36 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #37 = { nofree nounwind willreturn memory(argmem: read) }
attributes #38 = { nounwind }
attributes #39 = { nounwind allocsize(0) }
attributes #40 = { nounwind allocsize(1) }
attributes #41 = { noreturn nounwind }
attributes #42 = { nounwind willreturn memory(read) }
attributes #43 = { nounwind allocsize(0,1) }
attributes #44 = { nounwind willreturn memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
!2 = !{!"clang version 16.0.6 (Fedora 16.0.6-4.fc38)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
!12 = !{!13, !13, i64 0}
!13 = !{!"int", !4, i64 0}
!14 = distinct !{!14, !9}
!15 = distinct !{!15, !9}
!16 = !{!17, !13, i64 88}
!17 = !{!"mz_stream_s", !18, i64 0, !13, i64 8, !19, i64 16, !18, i64 24, !13, i64 32, !19, i64 40, !18, i64 48, !18, i64 56, !18, i64 64, !18, i64 72, !18, i64 80, !13, i64 88, !19, i64 96, !19, i64 104}
!18 = !{!"any pointer", !4, i64 0}
!19 = !{!"long", !4, i64 0}
!20 = !{!17, !19, i64 96}
!21 = !{!17, !19, i64 104}
!22 = !{!17, !19, i64 16}
!23 = !{!17, !18, i64 64}
!24 = !{!17, !18, i64 72}
!25 = !{!17, !18, i64 80}
!26 = !{!17, !18, i64 56}
!27 = !{!28, !13, i64 16}
!28 = !{!"", !18, i64 0, !18, i64 8, !13, i64 16, !4, i64 20, !13, i64 28, !13, i64 32, !13, i64 36, !13, i64 40, !13, i64 44, !18, i64 48, !18, i64 56, !18, i64 64, !18, i64 72, !13, i64 80, !13, i64 84, !13, i64 88, !13, i64 92, !13, i64 96, !13, i64 100, !13, i64 104, !13, i64 108, !13, i64 112, !13, i64 116, !13, i64 120, !13, i64 124, !13, i64 128, !4, i64 132, !18, i64 136, !18, i64 144, !18, i64 152, !18, i64 160, !4, i64 168, !18, i64 176, !19, i64 184, !19, i64 192, !4, i64 200, !4, i64 33226, !4, i64 34954, !4, i64 36682, !4, i64 37546, !4, i64 103082, !4, i64 168618, !4, i64 234154}
!29 = !{!28, !13, i64 28}
!30 = !{!28, !18, i64 48}
!31 = !{!28, !18, i64 56}
!32 = !{!28, !13, i64 80}
!33 = !{!28, !18, i64 64}
!34 = !{!28, !18, i64 72}
!35 = !{!28, !4, i64 132}
!36 = !{!28, !13, i64 108}
!37 = !{!28, !13, i64 104}
!38 = !{!28, !13, i64 100}
!39 = !{!28, !18, i64 0}
!40 = !{!28, !18, i64 8}
!41 = !{!17, !19, i64 40}
!42 = !{!17, !18, i64 24}
!43 = !{!17, !13, i64 32}
!44 = !{!17, !13, i64 8}
!45 = !{!17, !18, i64 0}
!46 = !{!19, !19, i64 0}
!47 = !{!28, !13, i64 32}
!48 = !{!28, !18, i64 136}
!49 = !{!28, !18, i64 152}
!50 = !{!28, !18, i64 144}
!51 = !{!28, !18, i64 160}
!52 = !{!28, !18, i64 176}
!53 = !{!28, !19, i64 184}
!54 = !{!28, !19, i64 192}
!55 = !{!28, !4, i64 168}
!56 = !{!28, !13, i64 128}
!57 = !{!28, !13, i64 116}
!58 = !{!28, !13, i64 120}
!59 = !{!28, !13, i64 112}
!60 = !{!28, !13, i64 40}
!61 = !{!28, !13, i64 44}
!62 = !{!63, !13, i64 0}
!63 = !{!"", !64, i64 0, !13, i64 8376, !13, i64 8380, !13, i64 8384, !13, i64 8388, !13, i64 8392, !4, i64 8396, !4, i64 41164}
!64 = !{!"tinfl_decompressor_tag", !13, i64 0, !13, i64 4, !13, i64 8, !13, i64 12, !13, i64 16, !13, i64 20, !13, i64 24, !13, i64 28, !13, i64 32, !13, i64 36, !13, i64 40, !4, i64 44, !19, i64 56, !19, i64 64, !4, i64 72, !4, i64 6216, !4, i64 7368, !4, i64 7496, !4, i64 7572, !4, i64 7860, !4, i64 7892, !4, i64 7911, !4, i64 7915}
!65 = !{!63, !4, i64 41164}
!66 = !{!63, !13, i64 8392}
!67 = !{!63, !13, i64 8384}
!68 = !{!63, !13, i64 8388}
!69 = !{!63, !13, i64 28}
!70 = !{!63, !13, i64 8380}
!71 = !{!63, !13, i64 8376}
!72 = !{!18, !18, i64 0}
!73 = !{!64, !13, i64 4}
!74 = !{!64, !19, i64 56}
!75 = !{!64, !13, i64 32}
!76 = !{!64, !13, i64 36}
!77 = !{!64, !13, i64 40}
!78 = !{!64, !19, i64 64}
!79 = !{!64, !13, i64 0}
!80 = distinct !{!80, !9}
!81 = !{!64, !13, i64 12}
!82 = !{!64, !13, i64 8}
!83 = !{!64, !13, i64 28}
!84 = !{!64, !13, i64 16}
!85 = distinct !{!85, !9}
!86 = distinct !{!86, !9}
!87 = distinct !{!87, !9}
!88 = !{!64, !13, i64 20}
!89 = !{!64, !13, i64 24}
!90 = distinct !{!90, !9}
!91 = distinct !{!91, !9}
!92 = distinct !{!92, !9}
!93 = distinct !{!93, !9}
!94 = distinct !{!94, !9}
!95 = distinct !{!95, !9}
!96 = distinct !{!96, !9}
!97 = distinct !{!97, !9}
!98 = distinct !{!98, !9}
!99 = distinct !{!99, !9}
!100 = distinct !{!100, !9}
!101 = distinct !{!101, !9}
!102 = distinct !{!102, !9}
!103 = !{!104, !104, i64 0}
!104 = !{!"short", !4, i64 0}
!105 = distinct !{!105, !9}
!106 = distinct !{!106, !9}
!107 = distinct !{!107, !9}
!108 = distinct !{!108, !9}
!109 = distinct !{!109, !9}
!110 = distinct !{!110, !7}
!111 = distinct !{!111, !9}
!112 = distinct !{!112, !7}
!113 = distinct !{!113, !9}
!114 = distinct !{!114, !9}
!115 = distinct !{!115, !9}
!116 = distinct !{!116, !9}
!117 = distinct !{!117, !9}
!118 = distinct !{!118, !9}
!119 = distinct !{!119, !9}
!120 = distinct !{!120, !9}
!121 = distinct !{!121, !9}
!122 = distinct !{!122, !9}
!123 = distinct !{!123, !9}
!124 = distinct !{!124, !9}
!125 = distinct !{!125, !9}
!126 = distinct !{!126, !9}
!127 = distinct !{!127, !9}
!128 = distinct !{!128, !9}
!129 = distinct !{!129, !9}
!130 = distinct !{!130, !9}
!131 = distinct !{!131, !9}
!132 = distinct !{!132, !9}
!133 = distinct !{!133, !9}
!134 = distinct !{!134, !9}
!135 = distinct !{!135, !9}
!136 = distinct !{!136, !9}
!137 = distinct !{!137, !9}
!138 = distinct !{!138, !9}
!139 = distinct !{!139, !9}
!140 = distinct !{!140, !9}
!141 = distinct !{!141, !9}
!142 = distinct !{!142, !9}
!143 = distinct !{!143, !9}
!144 = distinct !{!144, !9}
!145 = distinct !{!145, !9}
!146 = distinct !{!146, !9}
!147 = distinct !{!147, !7}
!148 = distinct !{!148, !9}
!149 = distinct !{!149, !9}
!150 = distinct !{!150, !9}
!151 = !{!152, !18, i64 8}
!152 = !{!"", !13, i64 0, !18, i64 8}
!153 = !{!28, !13, i64 36}
!154 = distinct !{!154, !9}
!155 = distinct !{!155, !9}
!156 = distinct !{!156, !9}
!157 = distinct !{!157, !9}
!158 = !{!28, !13, i64 84}
!159 = !{!28, !13, i64 88}
!160 = !{!28, !13, i64 124}
!161 = !{!28, !13, i64 92}
!162 = !{!28, !13, i64 96}
!163 = distinct !{!163, !9}
!164 = distinct !{!164, !9}
!165 = distinct !{!165, !9}
!166 = distinct !{!166, !9}
!167 = distinct !{!167, !9}
!168 = distinct !{!168, !9}
!169 = distinct !{!169, !9}
!170 = distinct !{!170, !9}
!171 = distinct !{!171, !9}
!172 = distinct !{!172, !9}
!173 = distinct !{!173, !9}
!174 = distinct !{!174, !9}
!175 = distinct !{!175, !9}
!176 = !{!177, !13, i64 24}
!177 = !{!"", !19, i64 0, !19, i64 8, !18, i64 16, !13, i64 24}
!178 = !{!177, !19, i64 0}
!179 = !{!177, !18, i64 16}
!180 = !{!177, !19, i64 8}
!181 = distinct !{!181, !9}
!182 = distinct !{!182, !9}
!183 = distinct !{!183, !9}
!184 = !{!185, !18, i64 104}
!185 = !{!"", !19, i64 0, !19, i64 8, !13, i64 16, !4, i64 20, !4, i64 24, !4, i64 28, !19, i64 32, !18, i64 40, !18, i64 48, !18, i64 56, !18, i64 64, !18, i64 72, !18, i64 80, !18, i64 88, !18, i64 96, !18, i64 104}
!186 = !{!185, !18, i64 40}
!187 = !{!185, !18, i64 48}
!188 = !{!185, !4, i64 20}
!189 = !{!185, !4, i64 28}
!190 = !{!185, !18, i64 64}
!191 = !{!192, !18, i64 0}
!192 = !{!"", !18, i64 0, !19, i64 8, !19, i64 16, !13, i64 24}
!193 = !{!194, !18, i64 112}
!194 = !{!"mz_zip_internal_state_tag", !192, i64 0, !192, i64 32, !192, i64 64, !13, i64 96, !13, i64 100, !13, i64 104, !18, i64 112, !19, i64 120, !18, i64 128, !19, i64 136, !19, i64 144}
!195 = !{!185, !4, i64 24}
!196 = !{!185, !18, i64 72}
!197 = !{!185, !18, i64 56}
!198 = !{!194, !13, i64 24}
!199 = !{!194, !13, i64 56}
!200 = !{!194, !13, i64 88}
!201 = !{!194, !13, i64 96}
!202 = !{!194, !13, i64 100}
!203 = !{!194, !13, i64 104}
!204 = !{!185, !19, i64 0}
!205 = !{!185, !18, i64 96}
!206 = distinct !{!206, !9}
!207 = !{!185, !13, i64 16}
!208 = !{!185, !19, i64 8}
!209 = !{!192, !19, i64 16}
!210 = !{!192, !13, i64 24}
!211 = !{!192, !19, i64 8}
!212 = !{!194, !18, i64 0}
!213 = !{!194, !18, i64 32}
!214 = !{!194, !18, i64 64}
!215 = distinct !{!215, !9}
!216 = distinct !{!216, !9}
!217 = !{!185, !18, i64 88}
!218 = !{!194, !18, i64 128}
!219 = !{!194, !19, i64 136}
!220 = !{!194, !19, i64 120}
!221 = !{!194, !19, i64 72}
!222 = distinct !{!222, !9}
!223 = distinct !{!223, !9}
!224 = distinct !{!224, !9}
!225 = distinct !{!225, !9}
!226 = distinct !{!226, !9}
!227 = !{i64 0, i64 4, !12, i64 8, i64 8, !46, i64 16, i64 2, !103, i64 18, i64 2, !103, i64 20, i64 2, !103, i64 22, i64 2, !103, i64 24, i64 4, !12, i64 32, i64 8, !46, i64 40, i64 8, !46, i64 48, i64 2, !103, i64 52, i64 4, !12, i64 56, i64 8, !46, i64 64, i64 4, !12, i64 68, i64 4, !12, i64 72, i64 4, !12, i64 76, i64 4, !12, i64 80, i64 512, !3, i64 592, i64 512, !3, i64 1104, i64 8, !46}
!228 = !{!229, !13, i64 68}
!229 = !{!"", !13, i64 0, !19, i64 8, !104, i64 16, !104, i64 18, !104, i64 20, !104, i64 22, !13, i64 24, !19, i64 32, !19, i64 40, !104, i64 48, !13, i64 52, !19, i64 56, !13, i64 64, !13, i64 68, !13, i64 72, !13, i64 76, !4, i64 80, !4, i64 592, !19, i64 1104}
!230 = !{!229, !104, i64 20}
!231 = !{!229, !19, i64 56}
!232 = !{!229, !19, i64 32}
!233 = !{!229, !19, i64 40}
!234 = !{!229, !13, i64 24}
!235 = distinct !{!235, !9}
!236 = distinct !{!236, !9}
!237 = !{!238, !104, i64 84}
!238 = !{!"", !18, i64 0, !13, i64 8, !13, i64 12, !19, i64 16, !19, i64 24, !19, i64 32, !19, i64 40, !19, i64 48, !19, i64 56, !229, i64 64, !18, i64 1176, !18, i64 1184, !19, i64 1192, !64, i64 1200, !13, i64 9576}
!239 = !{!238, !104, i64 86}
!240 = !{!238, !18, i64 0}
!241 = !{!238, !13, i64 8}
!242 = !{!238, !13, i64 12}
!243 = !{!238, !13, i64 9576}
!244 = !{!238, !19, i64 24}
!245 = !{!238, !19, i64 48}
!246 = !{!238, !19, i64 120}
!247 = !{!238, !19, i64 56}
!248 = !{!238, !19, i64 96}
!249 = !{!238, !18, i64 1176}
!250 = !{!238, !19, i64 32}
!251 = !{!238, !19, i64 16}
!252 = !{!238, !19, i64 40}
!253 = !{!238, !13, i64 1200}
!254 = !{!238, !18, i64 1184}
!255 = !{!238, !19, i64 1192}
!256 = !{!238, !19, i64 104}
!257 = !{!238, !13, i64 88}
!258 = !{!229, !19, i64 1104}
!259 = !{!260, !19, i64 0}
!260 = !{!"utimbuf", !19, i64 0, !19, i64 8}
!261 = !{!260, !19, i64 8}
!262 = !{!229, !13, i64 72}
!263 = !{!229, !104, i64 22}
!264 = !{!229, !13, i64 76}
!265 = distinct !{!265, !9}
!266 = !{!229, !13, i64 0}
!267 = !{!229, !19, i64 8}
!268 = !{!229, !104, i64 16}
!269 = !{!229, !104, i64 18}
!270 = !{!271, !13, i64 32}
!271 = !{!"tm", !13, i64 0, !13, i64 4, !13, i64 8, !13, i64 12, !13, i64 16, !13, i64 20, !13, i64 24, !13, i64 28, !13, i64 32, !19, i64 40, !18, i64 48}
!272 = !{!271, !13, i64 20}
!273 = !{!271, !13, i64 16}
!274 = !{!271, !13, i64 12}
!275 = !{!271, !13, i64 8}
!276 = !{!271, !13, i64 4}
!277 = !{!271, !13, i64 0}
!278 = !{!229, !104, i64 48}
!279 = !{!229, !13, i64 52}
!280 = !{!229, !13, i64 64}
!281 = distinct !{!281, !9}
!282 = !{!194, !19, i64 8}
!283 = distinct !{!283, !9}
!284 = !{!185, !18, i64 80}
!285 = !{!185, !19, i64 32}
!286 = !{i64 0, i64 65}
!287 = !{!194, !19, i64 144}
!288 = distinct !{!288, !9}
!289 = distinct !{!289, !9}
!290 = distinct !{!290, !9}
!291 = !{!292, !18, i64 0}
!292 = !{!"", !18, i64 0, !19, i64 8, !19, i64 16}
!293 = !{!292, !19, i64 8}
!294 = !{!292, !19, i64 16}
!295 = !{!296, !19, i64 88}
!296 = !{!"stat", !19, i64 0, !19, i64 8, !19, i64 16, !13, i64 24, !13, i64 28, !13, i64 32, !13, i64 36, !19, i64 40, !19, i64 48, !19, i64 56, !19, i64 64, !297, i64 72, !297, i64 88, !297, i64 104, !4, i64 120}
!297 = !{!"timespec", !19, i64 0, !19, i64 8}
!298 = distinct !{!298, !9}
!299 = distinct !{!299, !9}
!300 = distinct !{!300, !9}
!301 = !{!302, !13, i64 112}
!302 = !{!"zip_t", !185, i64 0, !13, i64 112, !303, i64 120}
!303 = !{!"zip_entry_t", !19, i64 0, !18, i64 8, !19, i64 16, !19, i64 24, !13, i64 32, !19, i64 40, !4, i64 48, !19, i64 80, !104, i64 88, !292, i64 96, !28, i64 120, !13, i64 319472, !19, i64 319480}
!304 = !{!302, !19, i64 120}
!305 = !{!302, !18, i64 104}
!306 = !{!302, !19, i64 0}
!307 = !{!302, !18, i64 128}
!308 = distinct !{!308, !9}
!309 = !{!302, !13, i64 152}
!310 = !{!302, !19, i64 160}
!311 = !{!302, !19, i64 200}
!312 = !{!302, !104, i64 208}
!313 = !{!302, !13, i64 319592}
!314 = !{!302, !19, i64 319600}
!315 = distinct !{!315, !9}
!316 = !{!302, !13, i64 16}
!317 = !{!302, !18, i64 216}
!318 = !{!302, !19, i64 224}
!319 = !{!302, !19, i64 232}
!320 = !{!302, !19, i64 144}
!321 = !{!302, !19, i64 136}
!322 = !{!296, !13, i64 24}
!323 = distinct !{!323, !9}
!324 = !{!302, !4, i64 20}
!325 = distinct !{!325, !9}
!326 = !{!327, !4, i64 8}
!327 = !{!"zip_entry_mark_t", !19, i64 0, !4, i64 8, !19, i64 16, !19, i64 24}
!328 = !{!327, !19, i64 16}
!329 = !{!327, !19, i64 0}
!330 = !{!327, !19, i64 24}
!331 = distinct !{!331, !9}
!332 = distinct !{!332, !9}
!333 = distinct !{!333, !9}
!334 = distinct !{!334, !9}
!335 = distinct !{!335, !9}
!336 = distinct !{!336, !9}
!337 = distinct !{!337, !9}
!338 = distinct !{!338, !9}
!339 = distinct !{!339, !9}
!340 = distinct !{!340, !9, !341, !342}
!341 = !{!"llvm.loop.isvectorized", i32 1}
!342 = !{!"llvm.loop.unroll.runtime.disable"}
!343 = distinct !{!343, !9, !342, !341}
!344 = distinct !{!344, !9, !341, !342}
!345 = distinct !{!345, !9, !342, !341}
!346 = distinct !{!346, !9}
!347 = distinct !{!347, !9}
!348 = distinct !{!348, !9}
!349 = distinct !{!349, !9, !341, !342}
!350 = distinct !{!350, !7}
!351 = distinct !{!351, !9, !341}
!352 = distinct !{!352, !9}
!353 = !{!194, !19, i64 40}
!354 = distinct !{!354, !9}
!355 = distinct !{!355, !9}
!356 = distinct !{!356, !9}
!357 = distinct !{!357, !9}
!358 = distinct !{!358, !9}
!359 = distinct !{!359, !9}
!360 = distinct !{!360, !9, !361}
!361 = !{!"llvm.loop.peeled.count", i32 1}
!362 = distinct !{!362, !9}
!363 = distinct !{!363, !9}
!364 = distinct !{!364, !9}
!365 = distinct !{!365, !9}
!366 = distinct !{!366, !9}
!367 = distinct !{!367, !7}
!368 = distinct !{!368, !9}
!369 = distinct !{!369, !7}
!370 = distinct !{!370, !9}
!371 = distinct !{!371, !9}
!372 = distinct !{!372, !9}
!373 = distinct !{!373, !9}
!374 = distinct !{!374, !9}
!375 = distinct !{!375, !9}
!376 = distinct !{!376, !9}
!377 = distinct !{!377, !9}
!378 = distinct !{!378, !9}
!379 = distinct !{!379, !9}
!380 = distinct !{!380, !9}
!381 = distinct !{!381, !9}
!382 = distinct !{!382, !9}
!383 = distinct !{!383, !9}
!384 = distinct !{!384, !9}
!385 = distinct !{!385, !9}
!386 = distinct !{!386, !9}
!387 = distinct !{!387, !9}
!388 = distinct !{!388, !9}
!389 = distinct !{!389, !9}
!390 = distinct !{!390, !9}
!391 = distinct !{!391, !9}
!392 = distinct !{!392, !9}
!393 = distinct !{!393, !9}
!394 = distinct !{!394, !9}
!395 = !{!396, !104, i64 0}
!396 = !{!"", !104, i64 0, !104, i64 2}
!397 = !{!396, !104, i64 2}
!398 = distinct !{!398, !9}
!399 = distinct !{!399, !9}
!400 = distinct !{!400, !9}
!401 = distinct !{!401, !9}
!402 = distinct !{!402, !9}
!403 = distinct !{!403, !9}
!404 = distinct !{!404, !7}
!405 = distinct !{!405, !9}
!406 = distinct !{!406, !9}
!407 = distinct !{!407, !7}
!408 = distinct !{!408, !9}
!409 = distinct !{!409, !9}
!410 = distinct !{!410, !9}
!411 = distinct !{!411, !7}
!412 = distinct !{!412, !7}
!413 = distinct !{!413, !9}
!414 = distinct !{!414, !9}
!415 = distinct !{!415, !9}
!416 = distinct !{!416, !9}
!417 = distinct !{!417, !7}
!418 = distinct !{!418, !9}
!419 = distinct !{!419, !9}
!420 = distinct !{!420, !9}
!421 = distinct !{!421, !7}
!422 = distinct !{!422, !9}
!423 = distinct !{!423, !9}
!424 = distinct !{!424, !9}
!425 = distinct !{!425, !7}
!426 = distinct !{!426, !9}
!427 = distinct !{!427, !9}
!428 = distinct !{!428, !9}
!429 = distinct !{!429, !9, !341, !342}
!430 = distinct !{!430, !9, !342, !341}
!431 = distinct !{!431, !9}
